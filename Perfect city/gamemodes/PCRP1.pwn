
				//INICIO DE LA GAMEMODE.
/*___________________________________________________________
	 .d8888b.  888                       888
	d88P  Y88b 888                       888
	Y88b.      888                       888
	 "Y888b.   888888  .d88b.  88888b.   888
    	"Y88b. 888    d88""88b 888 "88b  888
    	  "888 888    888  888 888  888  Y8P
	Y88b  d88P Y88b.  Y88..88P 888 d88P
	 "Y8888P"   "Y888  "Y88P"  88888P"   888
    	                       888
        	                   888
            	               888
  ********************INCLUDES*******************************/
#include <a_samp>
#include <a_actor>
#include <RobosGR>
#include <sscanf2>
#include <progress>
#include <streamer>
#include <foreach>
#include <YSI\y_ini>
#include <djson>
#include <zcmd>
#include <a_zones>
#include <string>
#include <YSI\y_timers>
#include <yom_buttons>
#include <mxINI2>
#include <mSelection>
#include <CleoFuck>
//********************FIN DE INCLUDES**************************
//Version Actual Del Servidor
#define SERVER_GM_TEXT "1.5"

//**************************************
static gTeam[MAX_PLAYERS];
#pragma 			tabsize 					(0)
//*******************tazer quitar armas*******************
//static qArmas[MAX_PLAYERS][13][2];
//*******************Limites*******************
#define 			REMOVE_BULLET_TIME 			(30)
#define 			USE_STREAMER
#define 			MAX_BULLETS					(500)
#define 			OBJECT_BULLET				(3101)
#if defined 		USE_STREAMER
#tryinclude 		<streamer>
#endif
#define 			AntiBot			 			0 // Para desactivar el Anti Bot,f simplemente coloque "0" en la línea.
#define 			AntiJoin 					1 // Para desactivar el Anti Join Flood, simplemente coloque "0" en la línea.
#define 			AntiCrash 					1 // Para desactivar el Anti Car Crash, simplemente coloque "0" en la línea.
#define 			AntiArmas 					0 // Para desactivar el Anti Armas prohibidas, simplemente coloque "0" en la línea.
#define 			AntiCleo 					1 // Para desactivar el Anti Cleo Hack, simplemente coloque "0" en la línea.
#define 			AntiScore 					1 // Para desactivar el Anti Score Hack, simplemente coloque "0" en la línea.
//#define             ACEPTAR_TER                 21
#define 			LIMITE_INTENTOS_INGRESO 	3
#define 			VV 							(175)
#undef 				MAX_PLAYERS
#define 			MAX_PLAYERS 				(500)
#define 			MAX_FACTION 				(30)
#define 			MAX_AD 						(40)
#define 			MAX_PING 					(1500)
#define 			MAX_FAMILY 					(6)
#define             MENU_AUTO                   (12099)
#define 			MAX_HOUSES  				(800)
#define             AplicaAnim                  ApplyAnimation
#define				MAX_BARRICADES 				(30)
#define 			MAX_vCAMERAS  				(40)
#define             MAX_BUSINESS              	(35)
#define 			MAX_POINTS 					(9)
#define 			NEW_VULNERABLE 				(24)
#define 			MAX_DDOORS 					(500)
#define 			MAX_PLAYERTOYS 				(10)
#define 			MAX_TIMERS 					(11)
#define 			MAX_PLAYERVEHICLES 			(15)
#define 			MAX_MODS 					(15)
#define 			MAX_GANG_VEHICLES 			(6)
#define 			MAX_DEALERSHIPVEHICLES 		(15)
#define             Message 					SendClientMessage
#define 			MAX_CARDEALERSHIPS 			(7)
#define 			TIME_RESPAWN 				(7200)
#define             BUSINESS_VIRTUAL_WORLD     	(30000)
#define 			TIME_TO_TAKEOVER			(5)
#define 			INVALID_HOUSE_ID 			(-1)
#define 			INVALID_PLAYER_VEHICLE_ID 	(0)
#define 			CHECKPOINT_NONE 			(0)
#define 			CHECKPOINT_LOADTRUCK 		(97651)
#define 			CHECKPOINT_RETURNTRUCK 		(97652)
#define				TYPE_GIVEWEAPONTIMER 		(0)
#define 			TYPE_FLOODPROTECTION 		(1)
#define 			TYPE_PAYTIMER        		(2)
#define				TYPE_ARMSTIMER 		 		(3)
#define 			TYPE_TPPIZZARUNTIMER 		(4)
#define 			TYPE_PIZZATIMER      		(5)
#define				TYPE_TPTRUCKRUNTIMER   		(6)
#define				TYPE_TPDRUGRUNTIMER 		(11)
#define 			TYPE_TPMATRUNTIMER 			(12)
#define 			TYPE_GUARDTIMER				(13)
#define				TYPE_REANIMAR 		 		(14)
#define				TYPE_GUARDARCUENTA		 	(15)
#define				TYPE_OOC		 			(16)
#define  			D_SPEEDCAMRANGE				(31)
#define  			D_SPEEDCAMLIMIT				(32)
#define  			D_SPEEDCAMSTATUS			(33)
#define				D_SPEEDCAMFINE              (34)
#define 		    MAX_ARMAS                    200
#define 			MenorTiempo   				10000
#define 			Logueos       				2
//***sistema de fire***
#define 			TIEMPOFIRE					60// Tiempo en aparecer incendio (en segundos).
#define 			APAGARFIRE 					240 // Tiempo dado al bombero para apagar el incendio (en segundos).
#define 			USERFILE 					"accounts/%s.ini"
#define 			BUSINESS_FILE 				"negocios/Negocio%d.ini"
#define 			USERFILEOLD 				"users/%s.ini"
#define 			INFINITY_HEALTH 			Float:0x7F800000
//*******************Defines FaceAngles*******************
#define 			SUR 						(180)
#define				NORTE 						(0)
#define 			OESTE 						(90)
#define 			ESTE 						(270)
//*******************Defines / Macros*******************
#define 			function%0(%1) 							forward %0(%1); public %0(%1)
#define 			PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define 			SendFormattedMessage(%0,%1,%2) do{new _str[128]; format(_str,128,%2); SendClientMessageEx(%0,%1,_str);}while(FALSE)
#define 			def(%0,%1)							    (format(text,sizeof(text),%0,%1),text)
#define 			GetVehicleName(%0) 						VehicleName[GetVehicleModel(%0)-400]
#define 			GetPlayerCash(%0) 						GetPVarInt(%0, "Cash")
#define 			SetPVarInt(%0,%1,0); 					DeletePVar(%0,%1);
#define 			PlayerToPoint(%1,%2,%3,%4,%5)  			IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define 			Skin        						    SetPlayerSkin
#define 			SpeedCheck(%0,%1,%2,%3,%4)  			floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)
#define 			SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) 	SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define 			StopPlayerHoldingObject(%1) 			RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define 			IsPlayerHoldingObject(%1) 				IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define 			SendRequest(%1,%2)  					SafeDialogEx(%1, PETITION_DIALOG, DIALOG_STYLE_MSGBOX, "Petición", %2, "Aceptar", "Rechazar")+

//***sistema de fire***
#define HOLDING(%0) \
    ((newkeys & (%0)) == (%0))

#define RELEASED(%0) \
    (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
//*******************Colores*******************
#define 			COLOR_ADMIN 				0xFFC60000
#define 			COLOR_ADMIN2				0x00FF00FF
#define 			COLOR_ADMIN3 				0x5858FAFF
#define 			COLOR_ADMIN4				0xBFFF00FF
#define 			COLOR_ADMIN5 				0x01DFD7FF
#define 			COLOR_ADMIN6 				0xF4FA58FF
#define 			COLOR_ADMIN1338 			0x00FF80FF
#define 			COLOR_ADMIN4000 			0x0000FFFF
#define 			COLOR_ADMIN4001 			0x0000FFFF
#define 			COLOR_ADMIN4002 			0x0000FFFF
#define 			COLOR_ADMIN5000             0xFF0000FF
#define 			COLOR_ADMIN6000      		0x3104B4FF
#define 			COLOR_ADMIN89648    		0x00e4ffFF
#define 			COLOR_ADMIN89649    		0x9300ffFF
#define 			COLOR_ADMIN89650    		0xFF7300FF
#define 			COLOR_ADMIN89651      		0xFF0080FF
#define 			Gris 						0xC0C0C0AA
#define             COLOR_DIALOGO1              0x960707FF
#define             COLOR_AZULL                 0xFF0000FF
#define 			c1_color 					0xFFFFFFFF
#define 			c2_color 					0xFFFFC7FF
#define 			c3_color 					0xFFFF72FF
#define 			c4_color 					0xFFFF00FF
#define 			c5_color 					0xFFA600FF
#define 			c6_color 					0xFF0000FF
#define             NEGATIVO                    0xFF0000FF
#define             POSITIVO                    0x00FF00FF
#define             COLOR_ORANGE                0xFFA500FF
#define             COLOR_SYSTEM                0xFFFFFFFF
#define             COLOR_YELLOW3d              0xFFFF00FF
#define 			FIND_COLOR					0xB90000FF
#define 			COLOR_GENERAL 				0xFF8409FF
#define             COLOR_MAGENTA               0xFF00FFFF
#define 			COLOR_LIYELLOW 				0xFFFF80FF
#define 			COLOR_POINTGEN 				0xF5CB38FF
#define 			COLOR_BLUED 				0x23A9D6FF
#define 			COLOR_VIP 					0xC93CCE00
#define 			TEAM_FBI_COLOR 				0x8D8DFF00
#define 			TEAM_NEWS_COLOR 			0x049C7100
#define 			TEAM_MED_COLOR 				0xFF828200
#define 			COLOR_NG 					0x9ACD3200
#define 			TEAM_GOBIERNO_COLOR	        0xFFB72AFF
#define 			TEAM_SISTEMAJUDICIAL_COLOR	0xB7CD8FFF
#define 			TEAM_BOMBEROS_COLOR	        0xFF0000FF
#define 			TEAM_TAXI_COLOR 			0xF2FF0000
#define 			COLOR_NEWBIE 				0x7DAEFFFF
#define 			COLOR_TWWHITE 				0xFFFFFFAA
#define 			COLOR_TWYELLOW 				0xFFFF00AA
#define 			COLOR_TWPINK 				0xE75480AA
#define 			COLOR_TWRED 				0xFF0000AA
#define 			COLOR_TWBROWN 				0x654321AA
#define 			COLOR_TWGRAY 				0x808080AA
#define 			COLOR_TWOLIVE 				0x808000AA
#define 			COLOR_TWPURPLE 				0x800080AA
#define 			COLOR_TWTAN 				0xD2B48CAA
#define 			COLOR_TWAQUA 				0x00FFFFAA
#define 			COLOR_TWORANGE 				0xFF8C00AA
#define 			COLOR_TWAZURE 				0x007FFFAA
#define 			COLOR_TWGREEN 				0x008000AA
#define 			COLOR_TWBLUE 				0x0000FFAA
#define 			COLOR_TWBLACK 				0x000000AA
#define 			TEAM_APRISON_COLOR 			0x9C791200
#define 			PUBLICRADIO_COLOR 			0x6DFB6DFF
#define				COLOR_REPORT				0xFFFF91FF
#define 			COLOR_HELPERCHAT  			0x0BBD5FEC8
#define 			COLOR_COMBINEDCHAT 			0x6CEFF0FF
#define 			COLOR_TITLE 				0xFCCA03FF
#define 			COLOR_TEORY     			0xFFFF91FF
#define 			COLOR_QUESTION  			0xFFB18CFF
#define 			COLOR_YES       			0x00CC00FF
#define 			COLOR_DUDA      			0xD86356FF
#define 			COLOR_NO        			0xFF8080FF
#define 			COLOR_ASKQ 					0xFF0000FF
#define 			COLOR_DUTY 					0x00CA00FF
#define 			COLOR_NEGATIVE 				0xFF6A6AFF
#define 			WANTED_COLOR 				0xBF6000FF
#define 			COLOR_MEGAPHONE 			0xFF9B6AFF
#define 			COLOR_GRAD1 				0xB4B5B7FF
#define 			COLOR_GRAD2 				0xBFC0C2FF
#define 			COLOR_GRAD3 				0xCBCCCEFF
#define 			COLOR_GRAD4 				0xD8D8D8FF
#define 			COLOR_GRAD5 				0xE3E3E3FF
#define 			COLOR_GRAD6 				0xF0F0F0FF
#define 			COLOR_GREY 					0xAFAFAFAA
#define 			COLOR_GREEN 				0x9EC73DAA
#define 			COLOR_GREEN2 				0x9EC73DAA
#define 			COLOR_GROVE 				0x00FF00FF
#define 			COLOR_RED 					0xAA3333AA
#define             COLOR_CMDAA                 0x6B8CFA00
#define 			COLOR_REALRED 				0xFF0606FF
#define 			COLOR_RED2 					0xFF6F6FFF
#define 			COLOR_LIGHTRED 				0xFF6347AA
#define 			COLOR_LIGHTBLUE 			0x33CCFFAA
#define 			COLOR_LIGHTGREEN			0x9ACD32AA
#define 			COLOR_CMDA 					0xFFFF00AA
#define 			COLOR_YELLOW 				0xFFFF00AA
#define 			COLOR_YELLOW2 				0xF5DEB3AA
#define 			COLOR_WHITE 				0xFFFFFFAA
#define 			COLOR_FADE 					0xE6E6E6E6
#define 			COLOR_FADE1 				0xE6E6E6E6
#define 			COLOR_FADE2 				0xC8C8C8C8
#define 			COLOR_FADE3 				0xAAAAAAAA
#define 			COLOR_FADE4 				0x8C8C8C8C
#define 			COLOR_FADE5 				0x6E6E6E6E
#define 			COLOR_PURPLE 				0xC2A2DAAA
#define 			COLOR_DBLUE 				0x2641FEAA
#define				COLOR_ALLDEPT 				0xFF8282AA
#define 			COLOR_NEWS 					0x458E1DAA
#define             Color_Rojo	                0xE60000FF
#define 			COLOR_NEWS2 				0xFFA500AA
#define 			COLOR_OOC 					0x66FFFFFF
#define 			OBJECTIVE_COLOR 			0x64000064
#define 			TEAM_GREEN_COLOR 			0xFFFFFFAA
#define 			TEAM_JOB_COLOR 				0xFFB6C1AA
#define 			TEAM_HIT_COLOR 				0xFFFFFF00
#define 			TEAM_BLUE_COLOR 			0x8D8DFF00
#define 			TEAM_RADIO_COLOR2 			0xF2D068FF
#define 			TEAM_RADIO_COLOR 			0x9B9BFFFF
#define 			COLOR_ADD 					0x63FF60AA
#define 			TEAM_GROVE_COLOR 			0x00D900C8
#define 			TEAM_VAGOS_COLOR 			0xFFC801C8
#define 			TEAM_BALLAS_COLOR 			0xD900D3C8
#define 			TEAM_AZTECAS_COLOR 			0x01FCFFC8
#define 			TEAM_CYAN_COLOR 			0xFF8282AA
#define 			TEAM_ORANGE_COLOR 			0xFF830000
#define 			TEAM_COR_COLOR 				0x39393900
#define 			TEAM_BAR_COLOR 				0x00D90000
#define 			TEAM_TAT_COLOR 				0xBDCB9200
#define 			TEAM_CUN_COLOR 				0xD900D300
#define 			TEAM_STR_COLOR 				0x01FCFF00
#define 			TEAM_ADMIN_COLOR 			0x00808000
#define 			COLOR_INVIS 				0xAFAFAF00
#define 			COLOR_SPEC 					0xBFC0C200
#define 			COLOR_BLUE 					0x2641FEAA
#define 			COLOR_DARKNICERED 			0x9D000096
#define 			COLOR_LIGHT_BLUE 			0x9FB1EEAA
#define 			TRY_GREEN   				0x00BF60FF
#define 			ROJO_ADMIN 					0xDC092FFF
#define 			COLOR_SHOP 					0xE7E784FF
#define 			VERDE_ADMIN 				0x41FF2FFF
#define 			CELESTE_ADMIN 				0x41FFECFF
#define 			AMARILLO_ADMIN 				0xFFFF00FF
#define 			CREMA_ADMIN 				0xFFFFD4D4
#define 			ROSADO_ADMIN 				0xFF4FD4D4
#define 			MORADO_ADMIN 				0x9600FF2E
#define 			ORANGE_ADMIN 				0xFF7617FF
#define 			PAINTBALL_TEAM_RED 			0xFF000000
#define 			PAINTBALL_TEAM_BLUE 		0x2641FE00

//*******************Dialogos*******************
//Muebles
#define 			WEAPON_TYPE_NONE 			(0)
#define 			WEAPON_TYPE_HEAVY   		(1)
#define 			WEAPON_TYPE_LIGHT   		(2)
#define 			WEAPON_TYPE_MELEE   		(3)
#define             BAR_MENU 					578
#define             BAR_MENU_TAPAS 				579
#define             BAR_MENU_BEBIDAS    		580
#define             TimerTextDrawLocX           547
#define             TimerTextDrawLocY           2
#define             TimeOfHorseRaceHours        1
#define             TimeOfHorseRaceMinutes      20
#define             CashLowerBounds             100
#define             CashHigherBounds            5000
#define             RealMilisecondsPerIGMinute  2000
#define 			ResetMoneyBar 				ResetPlayerMoney
#define 			UpdateMoneyBar 				GivePlayerMoney
#define 			INVALID_DIALOG      		(500)
#define 			SPEEDGUN					(43)
#define 			EQUIPO_DOC  				(6)
#define 			EQUIPO_HITMAN  				(7)
#define             EQUIPO_BOMBEROS             (9)
#define 			CPASS 						 14
#define 			DIALOGUNDI   				(15)
#define 			DIALOG_HIT     				(25)
#define 			RENT_BIKE 					(44)
#define 			EQUIPO_GOB 					(50)
#define 			IPAD 						(51)
#define 			EQUIPO_CNN 					(53)
#define 			TELEPORTS_FACCIONES 		(54)
#define 			EQUIPO_SistemaJ 			(56)
#define             EQUIPO_MECANICO             (64)
#define             BANCO_MENU                  68
#define             BANCO_SACAR                 69
#define             BANCO_DEPOSITAR             70
#define             BANCO_TRANSFERIR            71
#define             BANCO_TRANSFERIR2           72
#define             MAPINTERES                  90
#define             GOOGLE                      (73)
#define 			PB_MENU 					(4000)
#define             INVENTARIO 					(3499)
//***sistema Muebles***
#define				COLOCAR_M          			3510
#define 			COLOCAR_M1 					3511
#define 			COLOCAR_M2 					3512
#define 			COLOCAR_M3 					5513
#define 			MENU_CASA 					5514
#define 			MENU_CASA1      			5515
#define 			MENU_CASA2 					5516
#define 			MENU_CASA3 					5517
#define 			MENU_CASA4 					5518
#define 			MENU_CASA5 					5519
#define 			MENU_CASA6 					5520
#define 			MENU_CASA7          		5521
//*********************
#define 			PB_SARENA 					(4001)
#define 			PB_BUYFI 					(4002)
#define				PB_SCORE 					(4003)
#define 			PB_FICHAS 					(4004)
#define 			DUTY_OPTIONS 				(4412)
#define 			Rojo						5877
#define 			Azul						5878
#define 			Verde						5879
#define 			Amarillo					5880
#define 			Cyan						5881
#define 			Rosado						5882
#define 			Blanco						5883
#define 			Negro						5884
#define 			DUTYMENU2 					(4413)
#define 			DUTYMENU3 					(4414)
#define 			DUTYMENU4 					(4415)
#define 			DUTYMENU5 					(4416)
#define 			TRAFICDRUGS 				(4417)
#define 			ADMUTE 						(4418)
#define 			DOORLOCK 					(4419)
#define 			CARSPAWN 					(4420)
#define 			DIALOG_AYUNTA 				(4421)
#define 			PLANM 						(4422)
#define 			DIALOG_SERVICIOS 			(4423)
#define 			DIALOG_CDEDIT 				(1329)
#define 			DIALOG_CDUPGRADE 			(1328)
#define 			DIALOG_CDTILL 				(1327)
#define 			DIALOG_CDEDITCARS 			(1326)
#define 			DIALOG_CDEDITONE 			(1325)
#define 			DIALOG_CDEDITMODEL 			(1324)
#define 			DIALOG_CDEDITCOST 			(1323)
#define 			DIALOG_CDEDITPARK 			(1322)
#define 			DIALOG_CDDELVEH 			(1321)
#define 			DIALOG_CDNEWVEH 			(1320)
#define 			DIALOG_CDRADIUS 			(1319)
#define             DIALOG_CDNAME 		(1318)
#define             DIALOG_CDPRICE 		(1317)
#define             DIALOG_CDBUY 		(1316)
#define             DIALOG_CDWITHDRAW 	(1315)
#define             DIALOG_CDDEPOSIT 	(1314)
#define             DIALOG_CDSELL 		(1313)
#define             DIALOG_ADMAIN		(32700)
#define             DIALOG_ADPLACE		(32701)
#define             DIALOG_ADPLACEP		(32702)
#define 			DIALOG_ADPLACEP2	(32703)
#define 			DIALOG_ADPLACEP3	(32704)
#define 			DIALOG_ADPLACEP4	(32705)
#define             PB_CHOOSE 			4005
#define             PBJOINTEAM 			4006
#define             PB_ARMAS 			4007
#define             PB_CANJE1 			4008
#define             PBARENASCORES 		4009
#define	            MPSPAYTICKETS 		4010
#define             REMOVEKEYS 			4395
#define             GIVEKEYS 			4394
#define             GOTOPLAYERCAR 		4396
#define             TRACKCAR 			19101
#define             GTRACKCAR 			19102
#define             SELLCAR 			19103
#define             DIALOG_CDLOCKBUY 	1312
#define             DIALOG_CDLOCKMENU 	1311
#define             DIALOG_CDGLOCKBUY 	1310
#define             DIALOG_CDGLOCKMENU 	1309
#define             DIALOG_NUMBER_PLATE 8221
#define             DIALOG_NUMBERPLATE 	8220
#define             UNMODCARMENU 		8222
#define             HQENTRANCE 			4397
#define             HQEXIT 				4398
#define             HQCUSTOMINT 		4399
#define             HQDELETE 			4400
#define             PAYDAY1 			4403
#define             DIALOG_LICENSE_BUY 	4404
#define             JOBFINDMENU 		4405
#define             FINDCONCE           4406
#define             DIALOG_HITMAN 		4407
#define             FDUTYMENU 			4408
#define             FDUTYMENU2 			4409
#define             FDUTYMENU3 			4410
#define             DUTYMENU 			4411
#define             WELCOME 			522
#define             REG_AGE 			505
#define             REG_SEX 			506
#define             REG_RAZ			    5666
#define             DIALOG_REG_MSN 		507
#define             DIALOG_REG_MSNC 	508
#define             DIALOG_REG_TUT 		509
#define             REG_NAC		 		510
#define             DINFO   			530
#define             STOREMENU 			550
#define 			DIALOG_CORREO       280
#define 			DIALOG_CORREO2      281
#define             SALDO 				552
#define 			TEST_1              553
#define 			TEST_2              554
#define 			TEST_3              555
#define 			TEST_4              556
#define 			TEST_5              557
#define             SEXMENU             22220
#define             TIENDA_ELEC 		551
#define             GASMENU             570
#define             ASCENMENU           560
#define             LOTTO_BUY       	559
#define             FSTYLE_DIALOG   	563
#define             DIALOG_AMMU     	566
#define             ELEVATOR 			18456
#define             ELEVATOR2 			18455
#define             ELEVATOR3 			18457
#define             ELEVATOR4 			18460
#define             ELEVATOR5 			18458
#define             ELEVATOR7 			18459
#define             DLOGIN 				501
#define             DREGISTER       	504
#define             MECANICO_MENU   	584
#define             MMENU_REPARACION    585
#define             MMENUTUNING_G 		586
#define             TUNING_WAA  		587
#define             TUNING_LOC  		588
#define             TUNING_MENU_RUEDAS 	589
#define             REQF_ACCEPT 		910
#define             PETITION_DIALOG 	911
#define             ENTER_LSTV 			916
#define 			MENUAYUDA 		   (1000)
#define 			MENUMC 			   (1001)
#define 			MENUF 			   (1002)
#define             MAX_REPORTS  		50
#define             INVALID_REPORT_ID 	-1
#define             REPORTSMENU  		48
#define             TIPRE 				7955
#define             REBUG 				7956
#define             DIALOG_LOADTRUCK	18301
#define             DIALOG_LOADTRUCKL 	18302
#define             DIALOG_LOADTRUCKI 	18303
#define             TOYS        		10131
#define             DELETETOY       	10132
#define             WEARTOY         	10133
#define             BUYTOYS         	10134
#define             BUYTOYS2       		10135
#define             BUYTOYS3        	10136
#define             BUYTOYSGOLD     	10137
#define             BUYTOYSGOLD2    	10138
#define             BUYTOYSGOLD3    	10139
#define             EDITTOYS        	10140
#define             EDITTOYS2       	10141
#define             EDITTOYSBONE    	10142
#define             BUYTOYSCOP      	10149
#define             BUYTOYSCOP2     	10150
#define             BUYTOYSCOP3     	10151
#define          	NGMENU              10202
#define             NGMENUWEP       	10203
#define             NGMENUSKIN      	10204
#define             FDUTYMENU4 			10205
#define             DIALOG_SHOPFISH 	10160
#define             DIALOG_VIPLOCKER	7483
#define             DIALOG_VIPJOB    	7484
#define             DIALOG_VIPJOB2    	7485
#define             DIALOG_VIPCOLOR		7486
#define             DIALOG_VIPCLOTHES	3496
#define             DIALOG_CREATEGUN    3497
#define 			Tienda_OOC 	 		15634
#pragma             dynamic 			5000000
#define 			MAX_OBJ 			100 //Maximo de armas en suelo.
#define             DIALOG_MYBUSINESS           (224)
#define             DIALOG_MYBUSINESS_RET       (225)
#define             DIALOG_MYBUSINESS_DEP       (226)
#define             DIALOG_MYBUSINESS_STO       (227)
#define             DIALOG_MYBUSINESS_PSTO      (228)
#define             DIALOG_MYBUSINESS_PSTO2     (231)
#define 			DIALOG_BOOMBOX  	3650
#define				DIALOG_BOOMBOX1 	3651
#define 			DIALOG_BOOMBOX2 	3652
#define 			DIALOG_BOOMBOX3 	3653
#define 			DIALOG_BOOMBOX4 	3654
#define 			DIALOG_BOOMBOX5 	3655
#define 			DIALOG_BOOMBOX6		3656
#define		 		DIALOG_BOOMBOX7 	3657
//comando fsociety
//Anti-flood
new CommandCount[MAX_PLAYERS], AntiCmdSpamTimer[MAX_PLAYERS];
//Textura
new comisaria;
new Ayunta1, Ayunta2;
//Callsign
new Text3D:Texto_NombrarP[MAX_VEHICLES];
new Vehiculo_Nombrarp_Estado[MAX_VEHICLES];
// Camaras de Seguridad
#define Camarasss 3480
new Camara[MAX_PLAYERS];
new Text:cam1;
new Text:cam2;
new Text:cam3;
new Text:cam4;
//Choque
new Macro[MAX_PLAYERS];
//Test
new Correctas[MAX_PLAYERS];
//Peajes cerrados.
new PeajeCerrado[MAX_PLAYERS];
//Coche bomba
new Bomba[MAX_PLAYERS];
//Primera persona
new camaraon[MAX_PLAYERS];
new FPS[MAX_PLAYERS];
//Estado
new Text3D:LabelYo[MAX_PLAYERS];
//Balas de goma
new BalasDeGoma[MAX_PLAYERS];
new Paralizado[MAX_PLAYERS];
//Textdraw cajero
//Textdraw logueando
new Text:Drawlogueando0;
new Text:Drawlogueando1;
//************TEXTDRAW INGAME BY BENJAMIN ALASTRE***************
new Text:Textgame0;
//*************************Textdraw al logueo*******
//*****************GangZone de pandillas************
//*******************velocimetro*******************
//new Text:Tacho_Box0;
//new Text:Tacho_Box1;
//new Text:Tacho_Box2;
new Text:Tacho_KMH[MAX_PLAYERS];
new Text:Tacho_Tank[MAX_PLAYERS];
//*******************Sistema afk*******************
new Text:Messageafk;
new Afk[MAX_PLAYERS];
new Timer[MAX_PLAYERS];
//*******************Armas en espalda*******************
new OldWeapon[MAX_PLAYERS];
new HoldingWeapon[MAX_PLAYERS];
//***** Estado text ************
//new Text3D:giPlayerStatus[ MAX_PLAYERS ];
//*******************************
new BigEar[MAX_PLAYERS];
//Negocio
//*******************cargos*******************
new cargos[MAX_PLAYER_NAME];
new cargos2[MAX_PLAYER_NAME];
//bombox
new BoomBox[MAX_PLAYERS];
new BoomOn[MAX_PLAYERS];
//*******************Sistema de Reparacion de Auto con latas*******************
new autorepara[MAX_PLAYERS];
//Choque
forward ChoqueFunc();
//Primera persona
forward CamaraFPS();
//Clima aleatorio
new const RandomClima[9][1] =
{
    {0},{1},{2},{3},{4},{7},{8},{9},{19} //Ids
};

forward Clima();

forward ColocarMascara(playerid);
forward QuitarMascara(playerid);
//************MENSAJES ALEATORIOS**********+
//forward MensajesAleatorios();
//*******************Solucion 0.3z*******************
forward SafeSetPlayerInterior(playerid, interiorid);
forward TimerKICK(playerid);
forward TimerBAN(playerid);
forward TimerBANIP(playerid);
forward Detect(playerid); //security
//forward Camara();
forward qhistorial(playerid);
forward qlicencia(playerid);//***licencia por textdraw***
forward Apagarfire();//sistema de fire
forward Checkfire(playerid);//sistema de fire
forward Fuegoo();//sistema de fire
//*******************Security*******************
new Barra[MAX_PLAYERS] = {-1,...}, Advertencias[MAX_PLAYERS] = {0,...}, bool:BotServidor[MAX_PLAYERS] = {false, ...}, Jugadores = MAX_PLAYERS;
new Muertes[MAX_PLAYERS];
new MuerteReciente[MAX_PLAYERS];
new EntrarIP[10][20];
new EntrarCuenta[10];
//*******************RobarTienda*******************
new LoadMonTimee[MAX_PLAYERS];
new Bar:LoadMoneyy[MAX_PLAYERS] = INVALID_BAR_ID;
forward TimerROB(playerid);
//*******************arreglo bug /dararma y /garma /fgarma*******************
new manubrio[MAX_PLAYERS];
forward Timermanubrio(playerid);
//*******************seleccion skin 0.3z*******************
new skinlist = mS_INVALID_LISTID;
//*******************
new MoneyBet[MAX_PLAYERS], BetOnHorse[MAX_PLAYERS],  Watching[MAX_PLAYERS];
//*******************Arreglo cmd /venderarma*******************
new VentaDeArmaCon[MAX_PLAYERS][2];
//*******************barra*******************
new barras[MAX_PLAYERS];
//*******************Adminduty*******************
new papilla[MAX_PLAYERS];
//Helper duty
new papillah[MAX_PLAYERS];
//*******************Sistema de Tazer Arreglado*******************
forward TimerGCRP(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GetClosestPlayer(p1);
new HaveTaser[MAX_PLAYERS];
//*******************pickups*******************
new ganja; //vendercosecha
new Bankito; //banco
//*******************comando refuerzos*******************
new refuer[MAX_PLAYERS];
	//Historial  policial
	new PlayerText:HISLSPD0[MAX_PLAYERS];
	new PlayerText:HISLSPD1[MAX_PLAYERS];
	new PlayerText:HISLSPD2[MAX_PLAYERS];
	new PlayerText:HISLSPD3[MAX_PLAYERS];
	new PlayerText:HISLSPD4[MAX_PLAYERS];
	new PlayerText:HISLSPD5[MAX_PLAYERS];
	new PlayerText:HISLSPD6[MAX_PLAYERS];
	new PlayerText:HISLSPD7[MAX_PLAYERS];
	new PlayerText:HISLSPD8[MAX_PLAYERS];
	new PlayerText:HISLSPD9[MAX_PLAYERS];
	new PlayerText:HISLSPD10[MAX_PLAYERS];
	new PlayerText:HISLSPD11[MAX_PLAYERS];
	new PlayerText:HISLSPD12[MAX_PLAYERS];
//*******************licencia por textdraw*******************
new PlayerText:LICENCIA0[MAX_PLAYERS];
new PlayerText:LICENCIA1[MAX_PLAYERS];
new PlayerText:LICENCIA2[MAX_PLAYERS];
new PlayerText:LICENCIA3[MAX_PLAYERS];
new PlayerText:LICENCIA4[MAX_PLAYERS];
new PlayerText:LICENCIA5[MAX_PLAYERS];
new PlayerText:LICENCIA6[MAX_PLAYERS];
new PlayerText:LICENCIA7[MAX_PLAYERS];
new PlayerText:LICENCIA8[MAX_PLAYERS];
//*******************Sistema de Negocios*******************
//*******************Sistema de DNI Falso*******************
#define DNI_MENU        964
#define DNI_CONFIRM     965
new DNIName[MAX_PLAYERS][32];
//*******************motos*******************
new LoadMonTimeeee[MAX_PLAYERS];
new Bar:LoadMoneyyyy[MAX_PLAYERS] = INVALID_BAR_ID;
//*******************Sistema de Robar Banco*******************
new LoadMonTime[MAX_PLAYERS];
new Bar:LoadMoney[MAX_PLAYERS] = INVALID_BAR_ID;
new robobanco[MAX_PLAYERS];
forward Tiempo(playerid);
forward TimerBANCO(playerid);
forward TimerESCAPE(playerid);
//*******************Sistema de Ticket de carros chocones*******************
new Vortex[MAX_PLAYERS];
forward TimerTICKET(playerid);
new ticketR;
//*******************Sistema de Bomba*******************
new bombap[MAX_PLAYERS];
new pbomba[MAX_PLAYERS];
new BOMBA[MAX_PLAYERS];
new bombita;
forward TimerBANK(playerid);
new Pbankazo;
//*******************Job Leñador*******************
new talar[MAX_PLAYERS];
new CorteY;
new CorteX;
new gcorte[MAX_PLAYERS];
new Azar1;
new Maderaazar[][1] = {
	{60},{55},{45},{49},{65},{46},{50},{52},{53},{45}
};
new lena1[MAX_PLAYERS];
new lena;
new bool:TrabajoL[MAX_PLAYERS];
forward Tiempoarbol0(playerid);
forward Tiempoarbolx(playerid);
forward Tiempoarbolxx(playerid);
forward Tiempoarbolxxx(playerid);
new Arbolvivo[4]; new Arbolmuerto[4];  new Talararbol[4];
new Tiempotalar[MAX_PLAYERS];
forward espera(playerid);
forward arbol1(playerid);
forward arbol2(playerid);
forward arbol3(playerid);
forward arbol4(playerid);
//*******************Tienda de Robos*******************
new roboV;
new roboD;
new YaRobo[MAX_PLAYERS];
//*******************CORTACESPED*******************
new OldskinJ[MAX_PLAYERS];
new Koson1[MAX_PLAYERS];
new Kosonrob[MAX_PLAYERS];
new cesped;
new koson;
new koscar[11];
new JobAmmounts2[MAX_PLAYERS];
new pKosonrob[MAX_PLAYERS];
new recojercesped[MAX_PLAYERS];
new acobrarcesped[MAX_PLAYERS];
new armaRecibir[MAX_PLAYERS];
new idarma[] =
{
1,
2,
5,
7,
6,
14,
41,
43,
10,
11,
12,
23
};

enum vCoords
{
	getID,
	Float:vvvX,
	Float:vvvY,
	Float:vvvZ,
};

new Offsets[9][vCoords] = {
	{560, 0.398071289,0.75390625,0.43879509}, // Tablero Sultan
	{415, 0.409729004, 0.526367188, 0.206963539}, // Tablero Cheetah
	{421, 0.421691895, 0.804931641, 0.256482124}, // Tablero Washington
	{426, 0.575378418, 0.786132812, 0.361483574}, // Tablero Premier
	{579, 0.454345703, 0.575683594, 0.645122528}, // Tablero Huntley
	{402, 0.53515625, 0.562988281, 0.278743744}, // Tablero Buffalo
	{461, 0.00000000, -0.932861328, 0.494509697}, // PCJ 600
	{521, 0.00000000, -0.928955078, 0.558652878},  // FCR 900
	{506, 0.541137695, 0.282714844, 0.272130013} // Super Gt
};

enum ddInfo
{
	ddDescription[128],
	ddPickupID,
	Text3D: ddTextID,
	ddCustomInterior,
	ddExteriorVW,
	ddExteriorInt,
	ddInteriorVW,
	ddInteriorInt,
	Float: ddExteriorX,
	Float: ddExteriorY,
	Float: ddExteriorZ,
	Float: ddExteriorA,
	Float: ddInteriorX,
	Float: ddInteriorY,
	Float: ddInteriorZ,
	Float: ddInteriorA,
	ddCustomExterior,
	ddVIP,
	ddFamily,
	ddFaction,
	ddAdmin,
	ddWanted,
	ddVehicleAble,
	ddColor,
	ddPickupModel,
	dPass[24],
	dLocked,
	dMusic,
};
new DDoorsInfo[MAX_DDOORS][ddInfo];

/* Sistema de Choque */

#define MAX_ACE 45 // Valor maximo de aceleración...es decir, después de pasar X m/s el jugador empezará a perder salud
#define PROPORCION 25 //Mientras mayor el valor menor será la cantidad de vida que se le quite al jugador a X velocidad (25 = -4/25 == -1.8)
//new Float:salglo[MAX_VEHICLES] = 999.9; // Evitar Falsos Positivos por velocidad
new MareOff[MAX_PLAYERS];
new Float:Veloc[MAX_PLAYERS][2]; // slot 0 para la velocidad inicial y slot 1 para la final.

enum cdInfo
{
	cdOwned,
	cdOwner[MAX_PLAYER_NAME],
	Float: cdEntranceX,
	Float: cdEntranceY,
	Float: cdEntranceZ,
	Float: cdExitX,
	Float: cdExitY,
	Float: cdExitZ,
	cdMessage[128],
	cdTill,
	cdInterior,
	Float: cdRadius,
	cdPrice,
	cdPickupID,
	Text3D:cdTextLabel,
	Text3D:cdVehicleLabel[MAX_DEALERSHIPVEHICLES],
	cdVehicleModel[MAX_DEALERSHIPVEHICLES],
	cdVehicleCost[MAX_DEALERSHIPVEHICLES],
	cdVehicleId[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnX[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnY[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnZ[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnAngle[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawn[4],
};
new CDSInfo[MAX_CARDEALERSHIPS][cdInfo];

enum hInfo
{
	hOwned,
	hLevel,
	hHInteriorWorld,
	hCustomInterior,
	hOwner[ MAX_PLAYER_NAME ],
	Float: hExteriorX,
	Float: hExteriorY,
	Float: hExteriorZ,
	Float: hExteriorR,
	Float: hExteriorA,
	Float: hInteriorX,
	Float: hInteriorY,
	Float: hInteriorZ,
	Float: hInteriorR,
	Float: hInteriorA,
	hLock,
	hRentable,
	hRentFee,
	hValue,
	hSafeMoney,
	hPot,
	hCrack,
	hMaterials,
	hWeapons[5],
	hGLUpgrade,
	hPickupID,
	Text3D: hTextID,
	hCustomExterior,
	//***sistema muebles***
	hMuebleId[11],
	hMuebles[11],
	Float:hMueblesPOSX[11],
	Float:hMueblesPOSY[11],
	Float:hMueblesPOSZ[11],
 	Float:hMueblesPOSRx[11],
 	Float:hMueblesPOSRy[11],
 	Float:hMueblesPOSRz[11],
 	hMuebleVW[11],
 	hMuebleINT[11],
 	//*********************
};

new HouseInfo[MAX_HOUSES][hInfo];
//Negocios
enum businessE
{
	bType,
	bOwner[MAX_PLAYER_NAME],
	bName[48],
	Float: bExteriorPos[3],
	Float: bInteriorPos[3],
	bInterior,
	bLocked,
	Float: bMiscPos[3],
	bVault,
	bPrice,
	Text3D: bLabelID,
	bPickupID,
	bStock,
}
new businessVariables[MAX_BUSINESS][businessE];
//*******************Evento*******************
enum EventInfoEnum
{
	EventAdvisor,
	EventStatus,
	EventType,
	EventoInfo[128],
	Float: EventHealth,
	Float: EventArmor,
	Float: EventPositionX,
	Float: EventPositionY,
	Float: EventPositionZ,
	EventInterior,
	EventWorld,
	EventWeapons[ 5 ],
	EventTeamColor[2],
    EventTeamSkin[2],
    EventLimit,
    EventPlayers,
    EventRequest,
    EventStartRequest,
    EventCreator,
    EventStaff[5],
    EventJoinStaff,
    VipOnly,
    Float: EventTeamPosX1,
    Float: EventTeamPosY1,
    Float: EventTeamPosZ1,
    Float: EventTeamPosX2,
    Float: EventTeamPosY2,
    Float: EventTeamPosZ2
}

new InfoEvento[ EventInfoEnum ];

enum vCamera
{
	Float: vCameraPos[3],
	Float: vCameraRot,
	vCameraStatus, // 0: ON 1: OFF futere reference
	vCameraRange,
	vCameraLimit,
	vCameraTicket,
	Text3D:vCameraLabel,
	vCameraObject,
}
new vCameraInfo[MAX_vCAMERAS][vCamera];
//*******************Sistema de familia*******************
enum fInfo
{
	FamilyTaken,
	FamilyName[42],
	FamilyMOTD[65],
	FamilyColor,
	FamilyTurfTokens,
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
	FamilyCash,
	FamilyBank,
	FamilyMats,
	FamilyPot,
	FamilyCrack,
	Float:FamilySafe[3],
	FamilyUSafe,
	FamilyRank1[20],
	FamilyRank2[20],
	FamilyRank3[20],
	FamilyRank4[20],
	FamilyRank5[20],
	FamilyRank6[20],
	FamilyPickup,
	FamilyMaxSkins,
	FamilySkins[8],
	Float: FamilyEntrance[4],
	Float: FamilyExit[4],
	FamilyEntrancePickup,
	FamilyExitPickup,
	Text3D:FamilyEntranceText,
	Text3D:FamilyExitText,
	FamilyCustomMap,
	FamilyVirtualWorld,
	FamilyResetSpawns,
	FamilyGuns[10],
};
new fINFO[MAX_FAMILY][fInfo];

enum fvInfo
{
    fvId,
	fvModelId,
	Float: fvSpawnx,
	Float: fvSpawny,
	Float: fvSpawnz,
	Float: fvSpawna,
	Float: fvSpawnxtmp,
	Float: fvSpawnytmp,
	Float: fvSpawnztmp,
	Float: fvSpawnatmp,
	//fvVW,
	fvLock,
	fvLocked,
	fvPaintJob,
	fvColor1,
	fvColor2,
	fvMods[MAX_MODS],
	fvPrice,
	fvImpounded,
	fvFuel,
};

new FVINFO[MAX_FAMILY][MAX_GANG_VEHICLES][fvInfo];

enum fPoint
{
	Float:Pointx,
	Float:Pointy,
	Float:Pointz,
	Type,
	Vulnerable,
	MatPoint,
	CratePoint,
	Announced,
	ClaimerId,
	ClaimerTeam,
	TimeToClaim,
	TimeLeft,
	Owner[32],
	PlayerNameCapping[MAX_PLAYER_NAME],
	CapperName[MAX_PLAYER_NAME],
	Name[32],
	TakeOverTimerStarted,
	TakeOverTimer,
	Text3D:TextLabel,
	CaptureTimerEx2,
	Stock,
	Text3D:CaptureProccess,
	Text3D:CaptureProgress,
	CaptureProccessEx,
	Float: Capturex,
	Float: Capturey,
	Float: Capturez,
	PointPickupID,
	Bar:PointBarID,
}
new Points[MAX_POINTS][fPoint];
//*******************Pago de Facciones*******************
new IDCode[MAX_PLAYERS];
new PayDayCodes[22][6] = {
{"TCKO5"},
{"YDM5G"},
{"MFKC9"},
{"RI1RG"},
{"FMSP6"},
{"PGA46"},
{"KOL7A"},
{"MZAF7"},
{"OBR2C"},
{"58FNM"},
{"ZAKOK"},
{"KAIL3"},
{"ZAHSB"},
{"HSBFQ"},
{"HAJMD"},
{"2FNTY"},
{"ESLI4"},
{"3MS5A"},
{"MSC31"},
{"LKS23"},
{"KLMZA"},
{"JFI5A"}
};


enum ptInfo
{
    ptModelID,
	ptBone,
    Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ,
	Float:ftscaleX,
	Float:ftscaleY,
	Float:ftscaleZ
};

new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];

enum HoldingEnumAll
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

new HoldingObjectsCop[13][HoldingEnumAll] = {
{18642,1000,"Taser"},
{19141,2500,"Casco SWAT"},
{19142,2500,"Chaleco SWAT"},
{18636,1000,"Gorro Policía"},
{19099,1000,"Gorro Policía 2"},
{19100,1000,"Gorro Policía 3"},
{18637,1000,"Escudo Policía"},
{19161,1000,"Sombrero Policía"},
{19162,1000,"Sombrero Policía 2"},
{19200,1000,"Casco Policía"},
{19138,1000,"Lentes"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"}
};
new HoldingObjectsGold[28][HoldingEnumAll] = {
{18643,10000,"Laser Rojo"},
{19080,10000,"Laser Azul"},
{19081,10000,"Laser Rosado"},
{19082,10000,"Laser Naranja"},
{19083,10000,"Laser Verde"},
{19084,10000,"Laser Amarillo"},
{19086,5000,"Dildo Grande"},
{18675,10000,"SmokePuff"},
{18698,10000,"Insectos"},
{19138,1000,"Lentes"},
{18861,1000,"Signo ?"},
{18646,1000,"Luz Azul&Roja"},
{19346,50,"Hotdog"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"},
{19101,2000, "Casco Militar1"},
{19102,2000, "Casco Militar2"},
{19103,2000, "Casco Militar3"},
{19104,2000, "Casco Militar4"},
{19105,2000, "Casco Militar5"},
{19106,2000, "Casco Militar6"},
{19107,4000, "Casco Militar7"},
{19108,4000, "Casco Militar8"},
{19109,4000, "Casco Militar9"},
{19110,4000, "Casco Militar10"},
{19111,4000, "Casco Militar11"},
{19112,4000, "Casco Militar12"},
{19472,3000, "Máscara de Gas"}
};

new HoldingObjectsAll[248][HoldingEnumAll] = {
{18642,78,"Taser"},
{18643,10000,"Laser Rojo"},
{19080,10000,"Laser Azul"},
{19081,10000,"Laser Rosado"},
{19082,10000,"Laser Naranja"},
{19083,10000,"Laser Verde"},
{19084,10000,"Laser Amarillo"},
{19086,5000,"Dildo Grande"},
{18675,10000,"SmokePuff"},
{19701,10000,"Flama Pequeña"},
{18693,10000,"Flama Larga"},
{18698,10000,"Insectos"},
{18708,10000,"Burbujas"},
{19141,2500,"Casco SWAT"},
{19142,2500,"Chaleco SWAT"},
{18636,1000,"Gorro Policía"},
{19099,1000,"Gorro Policía 2"},
{19100,1000,"Gorro Policía 3"},
{18637,1000,"Escudo Policía"},
{19161,1000,"Sombrero Policía"},
{19162,1000,"Sombrero Policía 2"},
{19200,1000,"Casco Policía"},
{19138,1000,"Lentes"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"},
{18632,15,"Caña Pesca"},
{18633,28,"L. Inglesa"},
{18634,20,"Palanca"},
{18635,56,"Martillo"},
{18638,500,"Casco Amarillo"},
{19093,500,"Casco 1"},
{19160,500,"Casco 3"},
{18639,500,"Sombrero N."},
{18640,700,"Cabello"},
{18975,700,"Cabello 2"},
{19136,700,"Cabello 3"},
{19274,700,"Cabello 4"},
{18641,1000,"Linterna"},
{18644,5000,"Desarmador"},
{18865,500,"Telefono1"},
{18866,500,"Telefono2"},
{18867,500,"Telefono3"},
{18868,500,"Telefono4"},
{18869,500,"Telefono5"},
{18870,1000,"Telefono6"},
{18871,1000,"Telefono7"},
{18872,1000,"Telefono8"},
{18873,1000,"Telefono9"},
{18874,1000,"Telefono10"},
{18875,750,"B.Personas"},
{18890,500,"Rastrillo"},
{18891,500,"Bandana1"},
{18892,500,"Bandana2"},
{18893,500,"Bandana3"},
{18894,500,"Bandana4"},
{18895,500,"Bandana5"},
{18896,500,"Bandana6"},
{18897,500,"Bandana7"},
{18898,500,"Bandana8"},
{18899,500,"Bandana9"},
{18900,500,"Bandana10"},
{18901,750,"Bandana11"},
{18902,750,"Bandana12"},
{18903,750,"Bandana13"},
{18904,750,"Bandana14"},
{18905,750,"Bandana15"},
{18906,750,"Bandana16"},
{18907,750,"Bandana17"},
{18908,750,"Bandana18"},
{18909,750,"Bandana19"},
{18910,750,"Bandana20"},
{18911,1000,"Mask1"},
{18912,1000,"Mask2"},
{18913,1000,"Mask3"},
{18914,1000,"Mask4"},
{18915,1000,"Mask5"},
{18916,1000,"Mask6"},
{18917,1000,"Mask7"},
{18918,1000,"Mask8"},
{18919,1000,"Mask9"},
{18920,1000,"Mask10"},
{18921,500,"Boina1"},
{18922,500,"Boina1"},
{18923,750,"Boina3"},
{18924,1000,"Boina4"},
{18925,1000,"Boina5"},
{18926,28,"Sombrero1"},
{18927,28,"Sombrero12"},
{18928,28,"Sombrero13"},
{18929,28,"Sombrero14"},
{18930,28,"Sombrero15"},
{18931,28,"Sombrero16"},
{18932,28,"Sombrero17"},
{18933,28,"Sombrero18"},
{18934,28,"Sombrero19"},
{18935,28,"Sombrero20"},
{18936,500,"Casco1"},
{18937,750,"Casco2"},
{18938,1000,"Casco3"},
{18939,750,"Gorra 1"},
{18940,750,"Gorra 2"},
{18941,750,"Gorra 3"},
{18942,1000,"Gorra 4"},
{18943,1000,"Gorra 5"},
{18944,35,"GorraBoater1"},
{18945,35,"GorraBoater2"},
{18946,35,"GorraBoater3"},
{18947,30,"GorraBoater4"},
{18948,30,"GorraBoater5"},
{18949,30,"GorraBoater6"},
{18950,30,"GorraBoater7"},
{18951,30,"GorraBoater8"},
{18952,1500,"Casco Box"},
{18953,500,"GorraLana1"},
{18954,750,"GorraLana2"},
{18955,750,"GorraIncl1"},
{18956,750,"GorraIncl2"},
{18957,750,"GorraIncl3"},
{18958,750,"GorraIncl4"},
{18959,750,"GorraIncl5"},
{18960,1000,"GorraIncl6"},
{18961,750,"GorraCamionero"},
{18962,750,"Sombrero Vaquero"},
{19469,500,"Bandana Blanca"},
{151,1000,"tele"},
{19330,1250,"sombrerodefuego"},
{18966,1500,"Casquete3"},
{18967,1000,"Sombrero"},
{18968,1000,"Sombrero2"},
{18969,1000,"Sombrero3"},
{18970,2000,"Sombrero Tigre"},
{18971,1000,"GorroCool"},
{18972,1250,"GorroCool2"},
{18973,1500,"GorroCool3"},
{18974,10000,"MaskZorro"},
{18645,1500,"Casco Moto"},
{18976,1000,"Casco Moto 2"},
{18977,1000,"Casco Moto 3"},
{18978,1250,"Casco Moto 4"},
{18979,1500,"Casco Moto 5"},
{19006,70,"Lentes 1"},
{19007,70,"Lentes 2"},
{19008,70,"Lentes 3"},
{19009,70,"Lentes 4"},
{19010,70,"Lentes 4"},
{19011,70,"Lentes 6"},
{19012,70,"Lentes 7"},
{19013,70,"Lentes 8"},
{19014,70,"Lentes 9"},
{19015,70,"Lentes 10"},
{19016,70,"Lentes 11"},
{19017,70,"Lentes 12"},
{19018,70,"Lentes 13"},
{19019,70,"Lentes 14"},
{19020,70,"Lentes 15"},
{19021,70,"Lentes 16"},
{19022,70,"Lentes 17"},
{19023,70,"Lentes 18"},
{19024,70,"Lentes 19"},
{19025,70,"Lentes 20"},
{19026,70,"Lentes 21"},
{19027,70,"Lentes 22"},
{19028,70,"Lentes 23"},
{19029,70,"Lentes 24"},
{19030,70,"Lentes 25"},
{19031,70,"Lentes 26"},
{19032,70,"Lentes 27"},
{19033,70,"Lentes 28"},
{19034,70,"Lentes 29"},
{19035,70,"Lentes 30"},
{19036,120,"HockeyMask1"},
{19037,120,"HockeyMask2"},
{19038,120,"HockeyMask3"},
{19039,60,"Reloj 1"},
{19040,60,"Reloj 2"},
{19041,60,"Reloj 3"},
{19042,60,"Reloj 4"},
{19043,60,"Reloj 5"},
{19044,60,"Reloj 6"},
{19045,60,"Reloj 7"},
{19046,60,"Reloj 8"},
{19047,60,"Reloj 9"},
{19048,60,"Reloj 10"},
{19049,60,"Reloj 11"},
{19050,60,"Reloj 12"},
{19051,60,"Reloj 13"},
{19052,60,"Reloj 14"},
{19053,60,"Reloj 15"},
{19064,10000, "GorraSanta1"},
{19065,20000, "GorraSanta2"},
{19066,30000, "GorraSanta3"},
{19067,1000, "HoodyHat1"},
{19068,1000, "HoodyHat2"},
{19069,1000, "HoodyHat3"},
{19078,7500, "Loro1"},
{19079,7500, "Loro2"},
{19085,5000, "Parche Ojo"},
{19090,1500, "PomPomAzul"},
{19091,1500, "PomPomRejo"},
{19092,1500, "PomPomVerde"},
{19094,2000, "GorroBurgerShot"},
{19095,500, "Sombrero Vaquero 2"},
{19096,500, "Sombrero Vaquero 3"},
{19097,1000, "Sombrero Vaquero 4"},
{19098,1000, "Sombrero Vaquero 5"},
{19113,40, "Casco Tonto1"},
{19114,40, "Casco Tonto2"},
{19115,40, "Casco Tonto3"},
{19116,40, "Casco Aereo1"},
{19117,30, "Casco A. 2"},
{19118,30, "Casco A. 3"},
{19119,30, "Casco A. 4"},
{19120,30, "Casco A. 5"},
{19101,2000, "Casco Militar1"},
{19102,2000, "Casco Militar2"},
{19103,2000, "Casco Militar3"},
{19104,2000, "Casco Militar4"},
{19105,2000, "Casco Militar5"},
{19106,2000, "Casco Militar6"},
{19107,4000, "Casco Militar7"},
{19108,4000, "Casco Militar8"},
{19109,4000, "Casco Militar9"},
{19110,4000, "Casco Militar10"},
{19111,4000, "Casco Militar11"},
{19112,4000, "Casco Militar12"},
{19137,5000, "GorraCluckinBell"},
{19163,1000, "Mascara"},
{19330,1000, "Casco Bomb"},
{19331,1000, "Casco Bomb2"},
{19317,1000, "Guitarra"},
{19318,1000, "GuitarraX"},
{19319,1000, "XFireGuitarra"},
{1210,500, "Maleta"},
{3044,20,"Cigarro"},
{18647,70000,"Neon Rojo"},
{18648,70000,"Neon Azul"},
{18649,70000,"Neon Verde"},
{18650,70000,"Neon Amarillo"},
{18651,70000,"Neon Rosado"},
{18652,70000,"Neon Blanco"},
{18861,1000,"Signo ?"},
{18646,1000,"Luz Azul&Roja"},
{19346,50,"HotDog"},
{19472,3000,"Máscara de Gas"},
{19421,140,"Headphone 1"},
{19422,140,"Headphone 2"},
{19423,140,"Headphone 3"},
{19424,140,"Headphone 4"}
};

enum HoldingEnum
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

new HoldingObjects[212][HoldingEnum] = {
{18632,100,"Caña Pesca"},
{18633,25,"L. Inglesa"},
{18634,70,"Palanca"},
{18635,30,"Martillo"},
{18638,35,"Casco Amarillo"},
{19093,45,"Casco 1"},
{19160,45,"Casco 2"},
{18639,45,"Sombrero N."},
{18640,25,"Cabello"},
{18975,25,"Cabello 2"},
{19136,25,"Cabello 3"},
{19274,25,"Cabello 4"},
{18641,40,"Linterna"},
{18644,60,"Desarmador"},
{18865,340,"Telefono1"},
{18866,340,"Telefono2"},
{18867,340,"Telefono3"},
{18868,340,"Telefono4"},
{18869,340,"Telefono5"},
{18870,340,"Telefono6"},
{18871,340,"Telefono7"},
{18872,340,"Telefono8"},
{18873,340,"Telefono9"},
{18874,340,"Telefono10"},
{18875,750,"B.Personas"},
{18890,300,"Rastrillo"},
{18891,15,"Bandana1"},
{18892,15,"Bandana2"},
{18893,15,"Bandana3"},
{18894,15,"Bandana4"},
{18895,15,"Bandana5"},
{18896,15,"Bandana6"},
{18897,15,"Bandana7"},
{18898,15,"Bandana8"},
{18899,15,"Bandana9"},
{18900,15,"Bandana10"},
{18901,15,"Bandana11"},
{18902,15,"Bandana12"},
{18903,15,"Bandana13"},
{18904,15,"Bandana14"},
{18905,15,"Bandana15"},
{18906,15,"Bandana16"},
{18907,15,"Bandana17"},
{18908,15,"Bandana18"},
{18909,15,"Bandana19"},
{18910,15,"Bandana20"},
{18911,20,"Mask1"},
{18912,20,"Mask2"},
{18913,20,"Mask3"},
{18914,20,"Mask4"},
{18915,20,"Mask5"},
{18916,20,"Mask6"},
{18917,20,"Mask7"},
{18918,20,"Mask8"},
{18919,20,"Mask9"},
{18920,20,"Mask10"},
{18921,15,"Boina1"},
{18922,15,"Boina1"},
{18923,15,"Boina3"},
{18924,15,"Boina4"},
{18925,15,"Boina5"},
{18926,28,"Sombrero1"},
{18927,28,"Sombrero12"},
{18928,28,"Sombrero13"},
{18929,28,"Sombrero14"},
{18930,28,"Sombrero15"},
{18931,28,"Sombrero16"},
{18932,28,"Sombrero17"},
{18933,28,"Sombrero18"},
{18934,28,"Sombrero19"},
{18935,28,"Sombrero20"},
{18936,250,"Casco1"},
{18937,250,"Casco2"},
{18938,250,"Casco3"},
{18939,45,"Gorra 1"},
{18940,45,"Gorra 2"},
{18941,45,"Gorra 3"},
{18942,45,"Gorra 4"},
{18943,45,"Gorra 5"},
{18944,35,"GorraBoater1"},
{18945,35,"GorraBoater2"},
{18946,35,"GorraBoater3"},
{18947,30,"GorraBoater4"},
{18948,30,"GorraBoater5"},
{18949,30,"GorraBoater6"},
{18950,30,"GorraBoater7"},
{18951,30,"GorraBoater8"},
{18952,45,"Casco Box"},
{18953,30,"GorraLana1"},
{18954,30,"GorraLana2"},
{18955,30,"GorraIncl1"},
{18956,30,"GorraIncl2"},
{18957,30,"GorraIncl3"},
{18958,30,"GorraIncl4"},
{18959,30,"GorraIncl5"},
{18960,30,"GorraIncl6"},
{18961,10,"GorraCamionero"},
{18962,45,"Sombrero Vaquero"},
{19469,500,"Bandana Blanca"},
{19330,45,"sombrerodefuego"},
{18966,45,"Casquete3"},
{18967,45,"Sombrero"},
{18968,45,"Sombrero2"},
{18969,45,"Sombrero3"},
{18970,70,"Sombrero Tigre"},
{18971,25,"GorroCool"},
{18972,25,"GorroCool2"},
{18973,25,"GorroCool3"},
{18974,69,"MaskZorro"},
{18645,40,"Casco Moto"},
{18976,40,"Casco Moto 2"},
{18977,40,"Casco Moto 3"},
{18978,40,"Casco Moto 4"},
{18979,40,"Casco Moto 5"},
{19006,70,"Lentes 1"},
{19007,70,"Lentes 2"},
{19008,70,"Lentes 3"},
{19009,70,"Lentes 4"},
{19010,70,"Lentes 4"},
{19011,70,"Lentes 6"},
{19012,70,"Lentes 7"},
{19013,70,"Lentes 8"},
{19014,70,"Lentes 9"},
{19015,70,"Lentes 10"},
{19016,70,"Lentes 11"},
{19017,70,"Lentes 12"},
{19018,70,"Lentes 13"},
{19019,70,"Lentes 14"},
{19020,70,"Lentes 15"},
{19021,70,"Lentes 16"},
{19022,70,"Lentes 17"},
{19023,70,"Lentes 18"},
{19024,70,"Lentes 19"},
{19025,70,"Lentes 20"},
{19026,70,"Lentes 21"},
{19027,70,"Lentes 22"},
{19028,70,"Lentes 23"},
{19029,70,"Lentes 24"},
{19030,70,"Lentes 25"},
{19031,70,"Lentes 26"},
{19032,70,"Lentes 27"},
{19033,70,"Lentes 28"},
{19034,70,"Lentes 29"},
{19035,70,"Lentes 30"},
{19036,120,"HockeyMask1"},
{19037,120,"HockeyMask2"},
{19038,120,"HockeyMask3"},
{19039,60,"Reloj 1"},
{19040,60,"Reloj 2"},
{19041,60,"Reloj 3"},
{19042,60,"Reloj 4"},
{19043,60,"Reloj 5"},
{19044,60,"Reloj 6"},
{19045,60,"Reloj 7"},
{19046,60,"Reloj 8"},
{19047,60,"Reloj 9"},
{19048,60,"Reloj 10"},
{19049,60,"Reloj 11"},
{19050,60,"Reloj 12"},
{19051,60,"Reloj 13"},
{19052,60,"Reloj 14"},
{19053,60,"Reloj 15"},
{19064,45, "GorraSanta1"},
{19065,45, "GorraSanta2"},
{19066,45, "GorraSanta3"},
{19067,60, "HoodyHat1"},
{19068,60, "HoodyHat2"},
{19069,60, "HoodyHat3"},
{19078,700, "Loro1"},
{19079,700, "Loro2"},
{19085,35, "Parche Ojo"},
{19090,30, "PomPomAzul"},
{19091,45, "PomPomRejo"},
{19092,60, "PomPomVerde"},
{19094,100, "GorroBurgerShot"},
{19095,100, "Sombrero Vaquero 2"},
{19096,100, "Sombrero Vaquero 3"},
{19097,100, "Sombrero Vaquero 4"},
{19098,100, "Sombrero Vaquero 5"},
{19101,10, "Casco Militar1"},
{19102,10, "Casco Militar2"},
{19103,10, "Casco Militar3"},
{19104,10, "Casco Militar4"},
{19105,10, "Casco Militar5"},
{19106,10, "Casco Militar6"},
{19107,10, "Casco Militar7"},
{19108,10, "Casco Militar8"},
{19109,10, "Casco Militar9"},
{19110,10, "Casco Militar10"},
{19111,10, "Casco Militar11"},
{19112,10, "Casco Militar12"},
{19113,40, "Casco Tonto1"},
{19114,40, "Casco Tonto2"},
{19115,40, "Casco Tonto3"},
{19116,40, "Casco Aereo1"},
{19117,30, "Casco A. 2"},
{19118,30, "Casco A. 3"},
{19119,30, "Casco A. 4"},
{19120,30, "Casco A. 5"},
{19137,60, "GorraCluckinBell"},
{19163,70, "Mascara"},
{19330,40, "Casco Bomb"},
{19331,40, "Casco Bomb2"},
{19317,1000, "Guitarra"},
{19318,1000, "GuitarraX"},
{19319,1000, "XFireGuitarra"},
{1210,45, "Maleta"},
{3044,20,"Cigarro"},
{19421,140,"Headphone 1"},
{19422,140,"Headphone 2"},
{19423,140,"Headphone 3"},
{19424,140,"Headphone 4"}
};

new HoldingBones[][] = {
	"Nada",
	"Columna",
	"Cabeza",
	"Brazo Izq Sup",
	"Brazo Der Sup",
	"Mano Izq",
	"Mano Derecha",
	"Muslo Izq",
	"Muslo Der",
	"Pie Izq",
	"Pie Der",
	"Right calf",
	"Left calf",
	"AnteBrazo Izq",
	"AnteBrazo Der",
	"Clavicula Izq",
	"Clavicula Der",
	"Cuello",
	"Quijada"
};
//*******************Stats Jugador*******************
enum pInfo
{
	pKey[24],
	pCorreo[64],
    pLevel,
	pAdminZC,
	pLvlAdminZC,
	pBanAppealer,
	pFactionModerator,
	pModStaff,
	pGangModerator,
	pHelper,
	pPublicista,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pExp,
	pCash,
	pTarjetaCredito,
	pAccount,
	pCheques,
	pIP[32],
	pKills,
	pDeaths,
	pArrested,
	pJailAdmin,
	pLottoNr,
	pJob,
	pNMute,
	pNMuteTotal,
	pWarn,
	pWRestricted,
	pJailed,
	pJailTime,
	pMats,
	pPackages,
	pDrugs,
	pCosecha,
	pCrack,
	pPot,
	pCrates,
	pAdiccion,
	pLeader,
	pMember,
	pDivision,
	pFMember,
	pRank,
	pChar,
	Float:pHealth,
	Float:pArmour,
	pInt,
	pTeam,
	pModel,
	pPnumber,
	pSprunk,
	pSpeedo,
	pPhoneBook,
	pPhousekey,
	pPhousekey2,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	Float:pPos_r,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pReanimador,
	pSaldo,
	pPlan,
	pGafas,
	pTut,
	pTestTut,
	pVW,
	pLighter,
	pCigarettes,
	pPapel,
	pMask,
	pGanzuas,
	pMaskuse,
	pUniformeP,
	pPusoChaleco,
	pPusoEscudo,
	pSacoBidon,
	pPusoEstado,
	pHideNumber,
	pSpeaker,
	pBannedZC,
	pDisabledZC,
	pBlockBug,
	pDNI,
 	pArmsSkill,
 	pTruckSkill,
 	pSmugSkill,
    pDrugsSkill,
 	pRequestingBackup,
 	pSIDA,
 	pCancer,
 	pEpilepsia,
 	pDengue,
 	pFStyle,
 	pWantedLevel,
 	pAntiSIDA,
 	pAntiCancer,
 	pAntiEpilepsia,
 	pRenting,
 	p_Pr_Money,
 	pRob,
 	pVIP,
 	pPTR,
 	pCarKey2,
 	pBanDuda,
 	pPasaporte,
	pRMuted,
	pRMutedTotal,
	pRMutedTime,
   	pRadio,
   	pRadioFreq,
   	pIpadMusic,
   	pGiftTime,
	pWeapons[13],
 	pAccent,
 	pUndercover,
 	pHead,
 	pCHits,
 	pFHits,
 	pMarried,
 	pPaintTeam,
 	pPaintTokens,
 	pVehicleKeysFrom,
 	pVehicleKeys,
 	pLockCar,
 	pLock,
 	pSpraycan,
 	pMarriedTo[128],
	pContractBy[32],
	pContractDetail[64],
	pServiceTime,
	pTaxiLicense,
	pHospital,
	pTriageTime,
	pWExists,
	Float:pWX,
	Float:pWY,
	Float:pWZ,
	pWVW,
	pWInt,
	pWValue,
	pWObject,
	pWTimer,
	pWSeeds,
	YaCobre,
	pADMute,
	pADMuteTotal,
	pWarrant[128],
	pJudgeJailTime,
	pJudgeJailType,
	pBeingSentenced,
	pProbationTime,
	pBiggestFish,
	pRHours,
	pADTime,
	pOther,
	pGTokens,
	pDobleExp,
	pAdverID,
	pDPHours,
	pDPTime,
	pDPTotal,
	pOrder,
	pTempVIP,
	pVIPInviteDay,
	pBuddyInvited,
	pVTokens,
	pJob2,
	pVIPCHAT,
	pTypeSpawn,
	pAutoTextReply[64],
	pShopTech,
	pEstado,
	pVIPDateD,
	pVIPDateM,
	pRegalo,
	pSavedTime,
	pScrewdriver,
	pFirstaid,
	pSurveillance,
	pPbizzkey,
	pgskin,
	pAntecedente1[32],
	pAntecedente2[32],
	pAntecedente3[32],
	pAntecedenteID1,
	pAntecedenteID2,
	pAntecedenteID3,
	probita,
	pDNIFalse,
	pDNIName[32],
	pMuebles[11],
	pBoombox,
	pNormalName[MAX_PLAYER_NAME],
};

new Info[MAX_PLAYERS+1][pInfo];

//*******************Sistema de autos dinamicos*******************
enum pvInfo
{
    Float:pvPosX,
	Float:pvPosY,
	Float:pvPosZ,
 	Float:pvPosAngle,
 	pvVW,
	pvId,
	pvModelId,
	pvLock,
	pvLocked,
	pvPaintJob,
	pvColor1,
	pvColor2,
	pvMods[MAX_MODS],
	pvAllowPlayer[MAX_PLAYER_NAME],
	pvAllowedPlayerId,
	pvPark,
	pvPrice,
	pvTicket,
	pvWeapons[8],
	pvWepUpgrade,
	pvImpounded,
	pvFuel,
	Float:pvHealth,
	pvSpawned,
};
//******sistema experiencia********//
//new Text:Experiencia[MAX_PLAYERS];
//*******************************//
new light[MAX_VEHICLES],
	Lamp[MAX_VEHICLES] = 0,
	CurrentDialog[MAX_PLAYERS];
new PlayerVehicleInfo[MAX_PLAYERS+1][MAX_PLAYERVEHICLES][pvInfo];
new Bar:PizzaBar[MAX_PLAYERS];
new estacionveh[MAX_VEHICLES];
new estacionp[MAX_PLAYERS];
new VehicleFuel[MAX_VEHICLES] = 200;
new LockStatus[MAX_VEHICLES];
new Intentar[MAX_PLAYERS];
new Hackeargob;
new Banco_Activo;
new GiveKeysTo[MAX_PLAYERS];
new arr_Engine[MAX_VEHICLES char];
new arr_Towing[MAX_PLAYERS];
new RefuelingVehicle[MAX_PLAYERS];
new RefuelingVehicleTimer[MAX_PLAYERS];
new RefuelingVehiclePrice[MAX_PLAYERS];
new VehicleStatus[MAX_VEHICLES char] = 0;
new Float: fVehSpeed[MAX_PLAYERS];
new Muted[MAX_PLAYERS];
new QFA[MAX_PLAYERS][24]; //Quien te mató
//new Hotdog[MAX_PLAYERS];
//*******************Sistema de fuego*******************
new CreatedBlocks[200];
new CreatedBlock = 0;
//*******************Sistema de armas*******************
//sistema tirararma
/*new ObjectID[MAX_ARMAS][1];
new Float:ObjCoords[MAX_ARMAS][3];
new Object[MAX_ARMAS];
new GunObjects[47][0] = { // By Valentin Carranza
	{0},// Ninguna.
	{331},// Puño Metalico.
	{333},// Palo de golf.
	{334},// Porra policial.
	{335},// Navaja.
	{336},// Bate de béisbol.
	{337},// Pala.
	{338},// Palo de pool.
	{339},// Katana.
	{341},// Motosierra.
	{321},// Consolador violeta.
	{322},// Consolador corto blanco.
	{323},// Consolador largo blanco.
	{324},// Consolador vibrador.
	{325},// Ramo de flores.
	{326},// Bastón.
	{342},// Granada.
	{343},// Grabada de gas lacrimógeno.
	{344},// Cóctel Molotov.
	{0},
	{0},
	{0},
	{346},// 9mm.
	{347},// 9mm con silenciador.
	{348},// Desert eagle.
	{349},// Escopeta normal.
	{350},// Escopeta recortada.
	{351},// Escopeta de combate.
	{352},// UZI
	{353},// MP5
	{355},// AK47
	{356},// M4
	{372},// Tec-9
	{357},// Rifle de caza.
	{358},// Rifle de francotirador (sniper)
	{359},// Lanzaconhetes.
	{360},// Lanzacohetes busca-calor.
	{361},// Lanzallamas.
	{362},// Minigun.
	{363},// Detonador.
	{364},// Botón de detonador.
	{365},// Aerosol de gas pimienta.
	{366},// Extinguidor de fuego.
	{367},// Cámara fotográfica.
	{368},// Gafas de visión nocturna.
	{368},// Gafas de visión infrarroja.
	{371}// Paracaídas.
};*/
//***sistema de fire***
new Float:Fuego[][3] = {
{1916.9470, -1400.9082, 13.5703},
{2330.6628, -1805.5270, 13.5469},
{2382.5210, -1131.2479, 30.2030},
{2164.3052, -1004.4780, 62.7962},
{1282.3912, -817.9395, 84.1406},
{811.7228, -1098.1653, 25.9063},
{649.1138, -1705.1345, 14.5158},
{153.8757, -1941.5243, 3.7734},
{132.7246, -1516.6755, 10.4878},
{262.1424, -1171.0951, 79.4105}
};

new Timerfire;
new lugarfire;
new bool:F;
new bool:llegarf[MAX_PLAYERS];
new Apagandofire[MAX_PLAYERS];
new Float:LugarFuego[3];
new Fire[7];
//*******************Mensaje al loguear*******************
new GlobalMOTD[128];
new FACMOTD[128];
new iGMXTick,iGMXTimer;
new GiftAllowed, VIPGifts = 0, VIPGiftsTimeLeft, VIPGiftsName[MAX_PLAYER_NAME];
new Float:TeleportDest[MAX_PLAYERS][3];
new EventLastInt[MAX_PLAYERS]; new EventLastVW[MAX_PLAYERS];
new Float:EventFloats[MAX_PLAYERS][6];
new nextteam;
new textdrawscount;
new FishCount[MAX_PLAYERS];
new TotalLogin, TotalConnect, TotalAutoBan, TotalRegister,MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,MPMinute,PlayerCars,TotalUptime;
//*******************Sistema de reportes*******************
enum reportinfo
{
	HasBeenUsed,
	Report[128],
	ReportFrom,
	CheckingReport,
 	TimeToExpire,
	BeingUsed,
	ReportExpireTimer,
	ReplyTimerr
}
new Reports[MAX_REPORTS][reportinfo];
new CancelReport[MAX_PLAYERS];
new JustReported[MAX_PLAYERS];
new JustDuda[MAX_PLAYERS];
new JustAfk[MAX_PLAYERS];
new HayDuda[MAX_PLAYERS];
new tarmalimit[MAX_PLAYERS];
new ListItemReportId[MAX_PLAYERS][40];
//new camaraon[MAX_PLAYERS];
//new FPS[MAX_PLAYERS];
//*******************Sistema de ad*******************
enum advertinfo
{
	aAdvert[128],
 	aResume[15],
	aNumber,
	aContact[MAX_PLAYER_NAME],
	aTimer,
	aActive,
	aOther
}

new ADInfo[MAX_AD][advertinfo];
new ListItemTrackId[MAX_PLAYERS][40];
new NewbieTimer[MAX_PLAYERS];
new VIPTimer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new JetPack[MAX_PLAYERS];
new PuedeD[MAX_PLAYERS];
new ShowRules[MAX_PLAYERS];
new RulesTime[MAX_PLAYERS];
new slotselection[MAX_PLAYERS];
new carsforplayer[MAX_PLAYERS];

//*******************Sistema de recoger y tirar arma*******************
new GunNames[48][] = {
    "nada",
    "un puño americano",
    "un palo de golf",
    "una porra policial",
    "una navaja",
    "un bate de baseball",
    "una pala",
    "un palo de pool",
    "una katana",
    "una motosierra",
    "un consolador violeta",
    "un consolador corto blanco",
    "un consolador largo blanco",
    "un consolador",
    "un ramo de flores",
    "un bastón",
    "una granada explosiva",
    "una granada de humo",
    "un cóctel molotov",
    "misil de hunter o hydra",
    "fuego de hydra",
    "un propulsor",
    "una pistola colt .45",
    "una pistola colt .45 con silenciador",
    "una pistola desert eagle",
    "una escopeta normal",
    "una escopeta recortada",
    "una escopeta de combate",
    "un micro subfusil uzi",
    "un subfusil mp5",
    "un rifle automático ak-47",
    "un rifle automático m4",
    "un micro subfusil tec9",
    "un rifle de caza",
    "un rifle de francotirador",
    "un lanzacohetes",
    "un lanzamisiles busca calor",
    "un lanzallamas",
    "una minigun",
    "una carga explosiva",
    "un detonador de carga explosiva",
    "un aerosol de gas pimienta",
    "un extintor de fuego",
    "una cámara fotográfica",
    "unas gafas de visión nocturna",
    "unas gafas de visión infrarroja",
    "un paracaídas",
    "pistola falsa"
};
new WeaponNames[47][] =
{
	"puño","brass knuckles","golf club","nitestick","knife","baseball bat","shovel","palo de billar","katana","chainsaw","purple dildo","small white vibrator","large white vibrator","silver vibrator",
	"bouquet of flowers","cane","grenade","tear gas grenade","molotov cocktail","jetpack"," "," ","Colt .45","silenced Colt .45","Desert Eagle","12-gauge shotgun","sawn-off shotgun","SPAS-12",
	"Micro Uzi","MP5","AK-47","M4A1","TEC-9","rifle","sniper rifle","rocket launcher","heatseeker","flamethrower","minigun","satchel charge","detonator","spray can","fire extinguisher",
	"camera","nightvision goggles", "thermal goggles","parachute"
};
new HasArmor			[MAX_PLAYERS];
new Float:ScriptArmor	[MAX_PLAYERS];
function SetHP(playerid, Float:hp)
{
    Info[playerid][pHealth] =hp;
    SetPlayerHealth(playerid, hp);
    return 1;
}
function ExplodeCar(playerid, carid)
{
	new Float:ECX, Float:ECY, Float:ECZ;
	SetVehicleHealth(carid, 1.0);
	GetVehiclePos(carid, ECX, ECY, ECZ);
	CreateExplosion(ECX, ECY, ECZ, 1, 100);
	SendClientMessageEx(playerid, COLOR_GRAD2, "* La bomba colocada en el auto ha explotado con exito.");
	SendRadioMessage(3, TEAM_RADIO_COLOR, "ATENCION: Ha detonado un coche bomba, posible terrorismo. (Lugar marcado en el mapa)");
    SendRadioMessage(2, TEAM_RADIO_COLOR, "ATENCION: Ha detonado un coche bomba, posible terrorismo. (Lugar marcado en el mapa)");
    SendRadioMessage(1, TEAM_RADIO_COLOR, "ATENCION: Ha detonado un coche bomba, posible terrorismo. (Lugar marcado en el mapa)");
    for(new i = 0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsACop(i))
			{
			    SetPlayerCheckpoint(i, ECX, ECY, ECZ, 6);
  			}
		}
	}
	Bomba[playerid] = 0;
	return 0;
}
function LevantarseP(playerid) //Balas de goma
{
    new string[128];
    ClearAnimations(playerid);
     TogglePlayerControllable(playerid, 1);
      ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);
       format(string, sizeof(string), "* %s apoya ambas manos en el suelo y se sostiene con éstas, acto seguido se levanta.", GetPlayerNameEx(playerid));
    ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    Paralizado[playerid] = 0;
    return 1;
}
function RecogerItem(playerid)
{
SetPlayerCheckpoint(playerid, 2376.2676,-1888.2104,13.5000, 3.0);
return 1;
}

function RecogerItem2(playerid)
{
SetPlayerCheckpoint(playerid, 2262.8792,-1663.0928,13.2382, 3.0);
return 1;
}

function RecogerItem3(playerid)
{
SetPlayerCheckpoint(playerid, 2245.0291,-1665.0726,13.4766, 3.0);
return 1;
}

function RecogerItem4(playerid)
{
SetPlayerCheckpoint(playerid, 2085.4810,-1795.1569,13.4668, 3.0);
return 1;
}

function RecogerItem5(playerid)
{
SetPlayerCheckpoint(playerid, 2103.8171,-1806.8013,13.5547, 3.0);
return 1;
}

function RecogerItem6(playerid)
{
SetPlayerCheckpoint(playerid, 1951.2883,-1786.8141,13.4682, 3.0);
return 1;
}

function RecogerItem7(playerid)
{
SetPlayerCheckpoint(playerid, 1931.0723,-1776.5352,13.5469, 3.0);
return 1;
}
function RecogerItem8(playerid)
{
SetPlayerCheckpoint(playerid, 1835.3311,-1869.4673,13.3828, 3.0);
return 1;
}
function RecogerItem9(playerid)
{
SetPlayerCheckpoint(playerid, 1832.7766,-1842.4673,13.5781, 3.0);
return 1;
}
function RecogerItem10(playerid)
{
SetPlayerCheckpoint(playerid, 1376.9827,-1838.2129,13.6553, 3.0);
return 1;
}
function RecogerItem11(playerid)
{
SetPlayerCheckpoint(playerid, 1362.3383,-1795.5511,13.7141, 3.0);
return 1;
}
function RecogerItem12(playerid)
{
SetPlayerCheckpoint(playerid, 1448.1895,-1151.3889,24.1081, 3.0);
return 1;
}
function RecogerItem13(playerid)
{
SetPlayerCheckpoint(playerid, 1456.5751,-1138.3091,23.9748, 3.0);
return 1;
}
function RecogerItem14(playerid)
{
SetPlayerCheckpoint(playerid, 2096.3450,-1216.3312,23.8047, 3.0);
return 1;
}
function RecogerItem15(playerid)
{
SetPlayerCheckpoint(playerid, 2113.0313,-1211.9625,23.9636, 3.0);
return 1;
}
function RecogerItem16(playerid)
{
SetPlayerCheckpoint(playerid, 1826.5663,-1681.9127,13.5455, 3.0);
return 1;
}
function RecogerItem17(playerid)
{
SetPlayerCheckpoint(playerid, 1835.3750,-1683.0509,13.3924, 3.0);
return 1;
}
function RecogerItem18(playerid)
{
SetPlayerCheckpoint(playerid, 2423.8936,-2091.2354,13.5469, 3.0);
return 1;
}

function A_Info(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (Info[i][pAdminZC] >= 1)
			{
				SendClientMessage(i, 0xFF9562FF, string);
			}
		}
	}
	return 1;
}

function GiveArmorToPlayer(playerid, Float:armour)
{
	SetPlayerArmour(playerid, Float:armour);
	HasArmor[playerid] = 1;
	ScriptArmor[playerid] = armour;
	return 1;
}
timer Anticheat[1000]()
{
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i)){
	        new Float:health, Float:armor;
	        GetPlayerHealth(i, health);
   			if(health > Info[i][pHealth]){
			    SetPlayerHealth(i, Info[i][pHealth]);
	  		}
	        GetPlayerArmour(i, armor);
	  		if(armor > ScriptArmor[i]){
				GiveArmorToPlayer(i, ScriptArmor[i]);
			}
		}
	}
 return 1;
}
#define SetPlayerArmour GiveArmorToPlayer

//*******************Variables*******************
//*******************Trucker Job*******************
new Bar:LoadTruckBar[MAX_PLAYERS] = INVALID_BAR_ID;
new LoadTruckTime[MAX_PLAYERS];
new TruckDeliver[MAX_PLAYERS];
new TruckUsed[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new TruckContents[MAX_VEHICLES] = 0;
new gPlayerCheckpointStatus[MAX_PLAYERS];
new InsideMainMenu[MAX_PLAYERS];
new HelpingNewbie[MAX_PLAYERS];
new Advisors = 0;
new AdvisorCall = 999;
//*******************
new InviteOffer[MAX_PLAYERS];
new InviteFaction[MAX_PLAYERS];
new InviteFamily[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
//*******************Vender Veh*******************
new VehicleOffer[MAX_PLAYERS];
new VehicleId[MAX_PLAYERS];
new VehiclePrice[MAX_PLAYERS];
//*******************Vender Casa*******************
new HouseOffer[MAX_PLAYERS];
new House[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
//*******************Vender ARMA*******************
new GunOffer[MAX_PLAYERS];
new GunId[MAX_PLAYERS];
new GunMats[MAX_PLAYERS];
new Text3D:Camera3D[MAX_PLAYERS];
//*******************EMS*******************
new EMSCallTime[MAX_PLAYERS];
new EMSAccepted[MAX_PLAYERS];
//*******************TextDraw*******************
new Text:MOTD, Text:flash, Text:flashc;
//*******************TUTORIAL*******************
new Text:TutTxt[4];
new Text:TextTut[MAX_PLAYERS];
new TutStep[MAX_PLAYERS];
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];
//*******************Cuenta*******************
//*******************LSPD int*******************
new courtjail[MAX_PLAYERS];
new courtbuttons[5], courtgates[2];
new fen1,fen2,fen3,fen4,fen5,fen6, JDoor1, JDoor2, JDoor3, JDoor4, JDoor5, JDoor6;
//new JDoor1, JDoor2, fen1,fen2;
new eastlobby1, eastlobby2, westlobby1, westlobby2, cctv1, cctv2, locker1, locker2, chief1, chief2;
new eastin, eastout, lockerin, lockerout, cctvin, cctvout, elevator, roofkey, garagekey, chiefout, chiefin, westin, westout;\
//*********************Portones FBI****************
new FBIgate;
//*******************LSPD Portones*******************
new pdgate1,pdgate2, saem1,saem2;
//*********************Facciones ilegales Portones*************
new LCNgate,YAKgate,RUgate,RUgate2,RUgate3,NDRgate;
//************Portones con nombre
new SamuelGate,NicoGate;
//*******************ipod*******************
new Ipadon[MAX_PLAYERS];
//*******************GIFTS*******************
new dynamicgift;
new Text3D:dynamicgift3DText;
//*******************FBI Int*******************
new FBILobbyLeft, FBILobbyLeftBTN[2], FBILobbyRight, FBILobbyRightBTN[2], FBIPrivate[2], FBIPrivateBTN[2];
//*******************CNN Portones*******************
new tvp;
//*****************Porton Mecanicos*************
new portonmeca;
//******************Portón residencia**************
new portonres;
//*******************Gobierno Portones*******************
new gobiernogate, gobiernogate1;
new depgate;
//****************************VIP PORTON****************************
new rejavip;
//****************************Rejas Peaje****************************
new peaje1, peaje2;
//*******************Autos De Facciones*******************
new SAPDVehicles[35];
new SAMDVehicles[8];
new MecanicosVehicle[4];
new FBIVehicle[22];
new SAEMLandVehicles[45];
new CNNVehicle[4];
new GobiernoCar[6];
new Hitman_Vehicle[15];
new SistemaJudicialCar[6];
new BomberosLSVeh[6];
new LCNVeh[8];
new YAKVeh[8];
new RUVeh[8];
new NDRVeh[8];
new GROVeh[10];
new BALVeh[10];
new SURVeh[10];
//*******************Autos de Jobs*******************
new PizzaBike[26];
new TruckerVehicles[10];
new TaxiTrans[8];
//*******************OTROS*******************
new VortexVehicle[5];
new Rentbike[19];
new CarVIP[12];
//*******************Sistema "Rent Bike"*******************
new RentTime[MAX_PLAYERS];
new IsaRent[MAX_PLAYERS];
new HireKey[MAX_PLAYERS];
//*******************
new Carnada[MAX_PLAYERS];
new Lineas[MAX_PLAYERS];
new CreatedCars[100];
new Barricade[MAX_BARRICADES];
//*******************Mats Seller*******************
new MatsOffer[MAX_PLAYERS];
new MatsPrice[MAX_PLAYERS];
new MatsAmount[MAX_PLAYERS];
new GGOffer[MAX_PLAYERS];
new GGPrice[MAX_PLAYERS];
new VIPOffer[MAX_PLAYERS];
new VIPPrice[MAX_PLAYERS];
new GGAmount[MAX_PLAYERS];
new FOffer[MAX_PLAYERS];
new FPrice[MAX_PLAYERS];
new FAmount[MAX_PLAYERS];
//*******************matrimonio*******************
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
//*******************
new JobDuty             [MAX_PLAYERS];
new PuedeP[MAX_PLAYERS];
//*******************Petition*******************
new Petition_ID[MAX_PLAYERS];
new See_MP[MAX_PLAYERS];
new PayDayLeft = 60;
new PaydayOn = 0;
new CraftOffer[MAX_PLAYERS], CraftId[MAX_PLAYERS], CraftMats[MAX_PLAYERS], CraftName[MAX_PLAYERS][50];
new Blinded[MAX_PLAYERS], Tied[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new advisorchat[MAX_PLAYERS];
new DrugFarming[MAX_PLAYERS];
new nod = 0;
new Editing[MAX_PLAYERS];
//*******************Hitman*******************
new HitOffer[MAX_PLAYERS];
new HitToGet[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
//*******************Security comands spam*******************
new CommandSpamTimes[MAX_PLAYERS];
new CommandSpamUnmute[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WhoFind[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new RequestingBackup[MAX_PLAYERS];
new ReqF_Faction[MAX_PLAYERS];
new ReqF_Name[MAX_PLAYERS][32];
new Seatbelt[MAX_PLAYERS];
new FreezeLast[MAX_PLAYERS];
new Misile_Launcher;
new PuertaH1;
new PuertaH2;
new HaciaArriba = 0;
new HaciaAbajo = 0;
new TotalDM, TotalTDM, PlayersRed, PlayersBlue, TotalDM2, TRedKills, TBlueKills;
new Interview = 0;
new Interviewer[32] = "Nadie";
new Tax = 0;
new nonewbie = 0;
new TaxValue = 0;
new Jackpot = 0;
new Blood = 1000;
new Fuel = 200;
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new InLive = 0;
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new RStep[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new Paquetes[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new Situacion[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new TazerTimeout[MAX_PLAYERS];
new pTazer[MAX_PLAYERS];
new pTazerReplace[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS char];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNewbie[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new GettingSpectated[MAX_PLAYERS];
new Spectating[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new noac = 0;
new nofac = 0;
new iAdverTimer;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 16;
new callcost = 2; //20 seconds
new timeshift = -1;
new shifthour;
new gTime;
new gWeather;
new WeatherCalling;
new explevel = 4;
new cchargetime = 30;
new txtcost = 1;
new Text:TiempoD, Text:FechaD;
forward Clock(playerid);
//*******************
new pCurrentWeapon[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new UnidentifedCall[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new BlindFold[MAX_PLAYERS];
new PlayerIsSweeping[MAX_PLAYERS];
//***sistema muebles***
new ObjetoUsar[MAX_PLAYERS];
new IDObjetoUsar[MAX_PLAYERS];
new ObjetoUsarEnCasa[MAX_PLAYERS];
new Objeto_Por_Jugador[MAX_PLAYERS];
new MueblesObj = mS_INVALID_LISTID;
//*******************Drugs System*******************
new CrackOffer[MAX_PLAYERS];
new CrackPrice[MAX_PLAYERS];
new CrackGram[MAX_PLAYERS];
new PotOffer[MAX_PLAYERS];
new PotPrice[MAX_PLAYERS];
new PotGram[MAX_PLAYERS];
//*******************Sell spray*******************
new SprayOffer[MAX_PLAYERS];
new SprayPrice[MAX_PLAYERS];
new SprayGram[MAX_PLAYERS];
//*******************
new UsedWeed[MAX_PLAYERS];
new UsedCrack[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
//*******************Rob Sys.*******************
new TelfRob[MAX_PLAYERS];
//*******************
//******* Estado /estado **********
new Text3D:estado[MAX_PLAYERS];
//********************************
new VehicleWindows[MAX_VEHICLES] = 0;
new AdminDuty[MAX_PLAYERS];
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new PlayerNeedsHelp[MAX_PLAYERS];
new PlayerDuda[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new RegText[MAX_PLAYERS];
new RegConfig[MAX_PLAYERS];
new RadioOn[MAX_PLAYERS];
new gRadio[MAX_PLAYERS];
new NOPTrigger[MAX_PLAYERS];
//*******************Factura*******************
new Facturing[MAX_PLAYERS];
new fPay[MAX_PLAYERS];
new fDest[MAX_PLAYERS];
new fFacturer[MAX_PLAYERS];

new Refueling[MAX_PLAYERS];

stock HorseInfo(Text:horseid)
{
	TextDrawFont(horseid, 4);
	TextDrawColor(horseid,0xFFFFFFFF);
	TextDrawTextSize(horseid,64,64);
}

stock HorseNumInfo(Text:horsenumid)
{
	TextDrawFont(horsenumid, 4);
	TextDrawColor(horsenumid,0xFFFFFFFF);
	TextDrawTextSize(horsenumid,32,32);
}
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}


Float: player_get_speed(playerid) {

	new
		Float: Floats[3];

	GetVehicleVelocity(GetPlayerVehicleID(playerid), Floats[0], Floats[1], Floats[2]);
	return floatsqroot(Floats[0] * Floats[0] + Floats[1] * Floats[1] + Floats[2] * Floats[2]) * 150;
}

Float:GetDistance( Float: x1, Float: y1, Float: z1, Float: x2, Float: y2, Float: z2 )
{
	new Float:d;
	d += floatpower(x1-x2, 2.0 );
	d += floatpower(y1-y2, 2.0 );
	d += floatpower(z1-z2, 2.0 );
	d = floatsqroot(d);
	return d;
}

stock ShowEditMenu(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid]))
	{
 		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
	}
	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);

    new stringg[512];
    format(stringg, sizeof(stringg), "%sParte (%s)\n", stringg, HoldingBones[PlayerToyInfo[playerid][slotselection[playerid]][ptBone]]);
	format(stringg, sizeof(stringg), "%s{4888F7}Editar Posición", stringg);
	SafeDialogEx(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "{008EC1}Toys Menu: {FFFFFF}Editar", stringg, "Seleccionar", "Cancelar");
}

new duda[MAX_PLAYERS];
new NewUsed[MAX_PLAYERS];

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedAt[MAX_ZONE_NAME]
}

new SpikeStrips[10][Spikes];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};


new Float:gDrugFarmVar[7][3] = {
{-189.5612,-72.1524,3.1172},
{-187.5509,172.1319,8.3814},
{-86.6479,158.7402,3.1296},
{55.5825,87.0385,2.3000},
{77.2397,-137.6485,1.2467},
{-2.2900,-82.9280,3.1172},
{-95.9199,-148.0252,3.1172}
};

new Float:OOCJail[4][3] = {
{-3618.4873,-2337.7820,0.1042},
{-3585.2751,-2335.5542,0.2385},
{-3578.6624,-2300.2500,0.1042},
{-3613.5156,-2297.7690,0.1042}
};

new Float:ICPrisonSpawns[4][3] = {
{181.6174,1953.3961,3867.2429},
{190.7607,1951.7330,3867.2358},
{199.2319,1951.4128,3867.2358},
{173.4761,1951.0363,3867.2429}
};

new Float:WarrantJail[3][3] = {
{2136.1924,1297.5011,7699.0610},
{2136.0273,1310.5793,7699.0547},
{2131.5989,1309.8353,7699.0547}
};

new Float:PrisonDillmore[3][3] = {
{263.7959,86.6359,1001.0391},
{263.9120,81.9284,1001.0391},
{263.8538,77.1987,1001.0391}
};

new Float:LSPDPrisonSpawns[4][3] = {
{215.1396,109.7686,999.0156},
{219.9247,110.2860,999.0156},
{223.3054,109.9818,999.0156},
{227.7882,110.7070,999.0156}
};
//**************************************
//*******************Vehicle Names*******************

new OneSeatVehicles[38] =
{
    425, 430, 432, 441, 446, 448, 452, 453,
	454, 464, 465, 472, 473, 476, 481, 484,
	485, 486, 493, 501, 509, 510, 519, 520,
	530, 531, 532, 539, 553, 564, 568, 571,
	572, 574, 583, 592, 594, 595
};

new VehicleName[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perennial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch",
	"Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi",
	"Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee","Predator",
	"Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit", "Romero",
	"Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder","Reefer","Tropic","Flatbed",
	"Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler",
	"ZR-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper",
	"Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring Racer","Sandking","Blista Compact","Police Maverick",
	"Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","Rancher","Super GT",
	"Elegant","Journey","Bike","Mountain Bike","Beagle","Cropduster","Stuntplane","Tanker","Road Train","Nebula","Majestic",
	"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV-1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent",
	"Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility",
	"Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger",
	"Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway",
	"Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor","Wayfarer",
	"Euros","HotDog","Club","Trailer","Trailer","Andromada","Dodo","RCCam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A",
	"Luggage Trailer B","Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};

stock GetVehicleFriendlyName(vehicleid)
{
	new GVFNstring[56];
	format(GVFNstring, sizeof(GVFNstring), VehicleName[GetVehicleModel(vehicleid)-400]);
	return GVFNstring;
}

stock IsPlayerNadando(playerid)
{
        if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
            new animlib[32], animname[32];
            GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);

            if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_GLIDE", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_BREAST", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_CRAWL", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_DIVE_UNDER", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_DIVE_GLIDE", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_UNDER", true)) return 1;
            else if(!strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_TREAD", true)) return 1;

        }
        return 0;
}
forward KickxD(playerid);

new Peds[217][1] = {
{299},
{288},
{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},
{247},
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},
{291},
{292},
{293},
{187},
{296},
{297},
{298},
{299}
};
function LoadUser_data(playerid,name[],value[])
{
    INI_Int("TarjetaCredito",Info[playerid][pTarjetaCredito]);
    INI_Int("Level",Info[playerid][pLevel]);
    INI_Int("AdminNivelZC",Info[playerid][pAdminZC]);
    INI_Int("AdminZC",Info[playerid][pLvlAdminZC]);
    INI_Int("BanAppealer",Info[playerid][pBanAppealer]);
    INI_Int("FactionModerator",Info[playerid][pFactionModerator]);
    INI_Int("ModStaff",Info[playerid][pModStaff]);
    INI_Int("GangModerator",Info[playerid][pGangModerator]);
    INI_Int("Helper",Info[playerid][pHelper]);
    INI_Int("Publicista",Info[playerid][pPublicista]);
    INI_Int("ConnectedTime",Info[playerid][pConnectTime]);
    INI_Int("Registered",Info[playerid][pReg]);
    INI_Int("Sex",Info[playerid][pSex]);
    INI_Int("Age",Info[playerid][pAge]);
    INI_Int("Origin",Info[playerid][pOrigin]);
    INI_Int("Respect",Info[playerid][pExp]);
    INI_Int("Money",Info[playerid][pCash]);
	SetPVarInt(playerid, "Cash",Info[playerid][pCash]);
    INI_Int("Bank",Info[playerid][pAccount]);
    INI_String("IP", Info[playerid][pIP], 32);
    INI_Int("Kills",Info[playerid][pKills]);
    INI_Int("Deaths",Info[playerid][pDeaths]);
    INI_Int("Arrested",Info[playerid][pArrested]);
    INI_Int("JailAdmin",Info[playerid][pJailAdmin]);
    INI_Int("LottoNr",Info[playerid][pLottoNr]);
    INI_Int( "Negocio",Info[playerid][pPbizzkey]);
    INI_Int( "Skinn",Info[playerid][pgskin]);
    INI_Int( "Ganzuas",Info[playerid][pGanzuas]);
    INI_Int( "robita",Info[playerid][probita]);
    INI_String( "DNIName",Info[playerid][pDNIName], 32);
    INI_Int( "DNIFalse",Info[playerid][pDNIFalse]);
    INI_Int("Job",Info[playerid][pJob]);
    INI_Int("NewMuted",Info[playerid][pNMute]);
    INI_Int("NewMutedTotal",Info[playerid][pNMuteTotal]);
    INI_Int("Warn",Info[playerid][pWarn]);
    INI_Int("WRestricted",Info[playerid][pWRestricted]);
    INI_Int("Jailed",Info[playerid][pJailed]);
    INI_Int("JailTime",Info[playerid][pJailTime]);
    INI_Int("Materials",Info[playerid][pMats]);
    INI_Int("Packages",Info[playerid][pPackages]);
    SetPVarInt(playerid, "Packages",Info[playerid][pPackages]);
    INI_Int("Drugs",Info[playerid][pDrugs]);
    INI_Int("Cosecha",Info[playerid][pCosecha]);
    INI_Int("Crack",Info[playerid][pCrack]);
    INI_Int("Pot",Info[playerid][pPot]);
    INI_Int("Crates",Info[playerid][pCrates]);
    INI_Int("Adic",Info[playerid][pAdiccion]);
    INI_Int("Leader",Info[playerid][pLeader]);
    INI_Int("Member",Info[playerid][pMember]);
    INI_Int("FMember",Info[playerid][pFMember]);
    INI_Int("Division",Info[playerid][pDivision]);
    INI_Int("Rank",Info[playerid][pRank]);
    INI_Int("Char",Info[playerid][pChar]);
    INI_Float("pHealth",Info[playerid][pHealth]);
    INI_Float("pArmour",Info[playerid][pArmour]);
    INI_Int("Team",Info[playerid][pTeam]);
    INI_Int("Model",Info[playerid][pModel]);
    INI_Int("PhoneNr",Info[playerid][pPnumber]);
    INI_Int("Sprunk",Info[playerid][pSprunk]);
    INI_Int("Phonebook",Info[playerid][pPhoneBook]);
    INI_Int("House",Info[playerid][pPhousekey]);
    INI_Int("House2",Info[playerid][pPhousekey2]);
    INI_Int("Int", Info[playerid][pInt]);
    INI_Float("Pos_x",Info[playerid][pPos_x]);
    INI_Float("Pos_y",Info[playerid][pPos_y]);
    INI_Float("Pos_z",Info[playerid][pPos_z]);
    INI_Float("SPos_r",Info[playerid][pPos_r]);
    INI_Int("CarLic",Info[playerid][pCarLic]);
    INI_Int("FlyLic",Info[playerid][pFlyLic]);
    INI_Int("BoatLic",Info[playerid][pBoatLic]);
    INI_Int("GunLic",Info[playerid][pGunLic]);
    INI_Int("Reanimador",Info[playerid][pReanimador]);
    INI_Int("Saldo",Info[playerid][pSaldo]);
    INI_Int("Plan",Info[playerid][pPlan]);
    INI_Int("Gafas",Info[playerid][pGafas]);
    INI_Int("Tutorial",Info[playerid][pTut]);
    INI_Int("Test",Info[playerid][pTestTut]);
    INI_Int("VWorld",Info[playerid][pVW]);
    INI_Int("Lighter",Info[playerid][pLighter]);
    INI_Int("Cigarettes",Info[playerid][pCigarettes]);
    INI_Int("BanZC",Info[playerid][pBannedZC]);
    INI_Int("DisabledZC",Info[playerid][pDisabledZC]);
    INI_Int("BlockBug",Info[playerid][pBlockBug]);
    INI_Int("DNI",Info[playerid][pDNI]);
    INI_Int("VSkill",Info[playerid][pArmsSkill]);
    INI_Int("TSkill",Info[playerid][pTruckSkill]);
    INI_Int("SmugglerSkill",Info[playerid][pSmugSkill]);
    INI_Int("DrugsSkill",Info[playerid][pDrugsSkill]);
    INI_Int("SIDA",Info[playerid][pSIDA]);
    INI_Int("Cancer" ,Info[playerid][pCancer]);
    INI_Int("Epilepsia",Info[playerid][pEpilepsia]);
    INI_Int("Dengue",Info[playerid][pDengue]);
    INI_Int("FStyle",Info[playerid][pFStyle]);
    INI_Int("Busqueda",Info[playerid][pWantedLevel]);
    INI_Int("AntiSIDA",Info[playerid][pAntiSIDA]);
    INI_Int("AntiCancer",Info[playerid][pAntiCancer]);
    INI_Int("AntiEpilepsia",Info[playerid][pAntiEpilepsia]);
    INI_Int("Rent",Info[playerid][pRenting]);
    INI_Int("prMoney",Info[playerid][p_Pr_Money]);
    INI_Int("Rob",Info[playerid][pRob]);
    INI_Int("Premium",Info[playerid][pVIP]);
    INI_Int("FichasCash",Info[playerid][pPTR]);
    INI_Int("CarPremium",Info[playerid][pCarKey2]);
    INI_Int("BanDuda",Info[playerid][pBanDuda]);
    INI_Int("ReportMuted",Info[playerid][pRMuted]);
    INI_Int("ReportMutedTotal",Info[playerid][pRMutedTotal]);
    INI_Int("ReportMutedTime",Info[playerid][pRMutedTime]);
    INI_Int("Pasaporte",Info[playerid][pPasaporte]);
    INI_Int("RadioP", Info[playerid][pRadio]);
    INI_Int("KHZ",Info[playerid][pRadioFreq]);
    INI_Int("Ipad",Info[playerid][pIpadMusic]);
    INI_Int("GiftTime",Info[playerid][pGiftTime]);
    INI_Int("Boombox", Info[playerid][pBoombox]);
    INI_String( "Antecedente1",Info[playerid][pAntecedente1], 32);
    INI_String( "Antecedente2",Info[playerid][pAntecedente2], 32);
    INI_String( "Antecedente3",Info[playerid][pAntecedente3], 32);
    INI_Int("AntecedenteID1", Info[playerid][pAntecedenteID1]);
    INI_Int("AntecedenteID2", Info[playerid][pAntecedenteID2]);
    INI_Int("AntecedenteID3", Info[playerid][pAntecedenteID3]);
    for( new m = 0; m < 13; m++ )
	{
	    new mStr[24];
		format( mStr, sizeof( mStr ), "Gun%d", m);
		INI_Int(mStr, Info[playerid][pWeapons][m]);
	}
    INI_Int("Acento",Info[playerid][pAccent]);
    INI_Int("PTokens",Info[playerid][pPaintTokens]);
    INI_Int("Undercover",Info[playerid][pUndercover]);
    INI_Int("Head",Info[playerid][pHead]);
    INI_Int("TaxiLicense", Info[playerid][pTaxiLicense]);
    INI_Int("Hospital",Info[playerid][pHospital]);
    INI_Int("CHits",Info[playerid][pCHits]);
    INI_Int("FHits",Info[playerid][pFHits]);
    INI_Int("Spraycan",Info[playerid][pSpraycan]);
    INI_Int("Married",Info[playerid][pMarried]);
    INI_String("MarriedTo",Info[playerid][pMarriedTo], MAX_PLAYER_NAME);
    INI_String("ContractBy",Info[playerid][pContractBy], MAX_PLAYER_NAME);
    INI_String("ContractDetail",Info[playerid][pContractDetail], 64);
    INI_Int("pWExists",Info[playerid][pWExists]);
    INI_Float("pWX",Info[playerid][pWX]);
    INI_Float("pWY",Info[playerid][pWY]);
    INI_Float("pWZ",Info[playerid][pWZ]);
    INI_Int("pWVW",Info[playerid][pWVW]);
    INI_Int("pWInt",Info[playerid][pWInt]);
    INI_Int("pWValue",Info[playerid][pWValue]);
    INI_Int("pWSeeds",Info[playerid][pWSeeds]);
    INI_Int("PayEx",Info[playerid][YaCobre]);
    INI_Int("AdMuted",Info[playerid][pADMute]);
    INI_Int("AdMutedTotal",Info[playerid][pADMuteTotal]);
    INI_String("Warrants",Info[playerid][pWarrant], 128);
    INI_Int("JudgeJailTime",Info[playerid][pJudgeJailTime]);
    INI_Int("JudgeJailType",Info[playerid][pJudgeJailType]);
    INI_Int("BeingSentenced",Info[playerid][pBeingSentenced]);
    INI_Int("ProbationTime",Info[playerid][pProbationTime]);
    INI_Int("RewardsHours",Info[playerid][pRHours]);
    INI_Int("ADTime",Info[playerid][pADTime]);
    INI_Int("Otros",Info[playerid][pOther]);
    INI_Int("GGTokens",Info[playerid][pGTokens]);
    INI_Int("HDExp",Info[playerid][pDobleExp]);
    INI_Int("DPHoras",Info[playerid][pDPHours]);
    INI_Int("DPTiempo",Info[playerid][pDPTime]);
    INI_Int("DPTotal",Info[playerid][pDPTotal]);
    INI_Int("Order",Info[playerid][pOrder]);
    INI_Int("TempVIP",Info[playerid][pTempVIP]);
    INI_Int("VIPInviteDay",Info[playerid][pVIPInviteDay]);
    INI_Int("BuddyInvite",Info[playerid][pBuddyInvited]);
    INI_Int("VTokens",Info[playerid][pVTokens]);
    INI_Int("Job2",Info[playerid][pJob2]);
    INI_Int("TypeSpawn",Info[playerid][pTypeSpawn]);
    INI_Int("ShopTech",Info[playerid][pShopTech]);
    INI_Int("Status",Info[playerid][pEstado]);
    INI_Int("DayVIP",Info[playerid][pVIPDateD]);
    INI_Int("MonthVIP",Info[playerid][pVIPDateM]);
    INI_Int("IDRegalo",Info[playerid][pRegalo]);
    INI_Int("Screwdrivers", Info[playerid][pScrewdriver]);
    INI_Int("Firstaid", Info[playerid][pFirstaid]);
    INI_Int("CamOculta", Info[playerid][pSurveillance]);
	for( new a = 0; a < 11; a++ )
	{
 	new mStr[24];
		format( mStr, sizeof( mStr ), "Mueble%d", a);
		INI_Int(mStr, Info[playerid][pMuebles][a]);
	}
    for(new v = 0; v < MAX_PLAYERTOYS; v++)
    {
     new string[128];
		format( string, sizeof( string ), "pt%dModelID", v);
		INI_Int(string, PlayerToyInfo[playerid][v][ptModelID]);
		format(string, 128, "pt%dBone",v);
		INI_Int(string, PlayerToyInfo[playerid][v][ptBone]);
		format(string, 128, "pt%dPosX",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosX]);
		format(string, 128, "pt%dPosY",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosY]);
		format(string, 128, "pt%dPosZ",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosZ]);
		format(string, 128, "pt%dRotX",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotX]);
		format(string, 128, "pt%dRotY",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotY]);
		format(string, 128, "pt%dRotZ",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotZ]);
		format(string, 128, "pt%dSizX",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleX]);
		format(string, 128, "pt%dSizY",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleY]);
		format(string, 128, "pt%dSizZ",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleZ]);
    }
    for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        new string[128];
        format(string, 128, "pv%dPosX",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosX]);
        format(string, 128, "pv%dPosY",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosY]);
        format(string, 128, "pv%dPosZ",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosZ]);
        format(string, 128, "pv%dPosAngle",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosAngle]);
		format(string, 128, "pv%dVirtualW",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvVW]);
		format(string, 128, "pv%dModelId",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvModelId]);
		format(string, 128, "pv%dLock",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvLock]);
		format(string, 128, "pv%dLocked",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvLocked]);
		format(string, 128, "pv%dPaintJob",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvPaintJob]);
		format(string, 128, "pv%dColor1",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvColor1]);
		format(string, 128, "pv%dColor2",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvColor2]);
		format(string, 128, "pv%dPrice",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvPrice]);
		format(string, 128, "pv%dTicket",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvTicket]);
		format(string, 128, "pv%dWeapon0",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][0]);
		format(string, 128, "pv%dWeapon1",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][1]);
		format(string, 128, "pv%dWeapon2",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][2]);
		format(string, 128, "pv%dWeapon3",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][3]);
		format(string, 128, "pv%dWeapon4",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][4]);
		format(string, 128, "pv%dWeapon5",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][5]);
		format(string, 128, "pv%dWeapon6",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][6]);
		format(string, 128, "pv%dWeapon7",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][7]);
		format(string, 128, "pv%dWepUpgrade",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWepUpgrade]);
		format(string, 128, "pv%dFuel",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvFuel]);
		format(string, 128, "pv%dImpound",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvImpounded]);
		format(string, 128, "pv%dHealth",v);
		INI_Float(string,PlayerVehicleInfo[playerid][v][pvHealth]);
		for(new m = 0; m < MAX_MODS; m++)
		{
		    format(string, 128, "pv%dMod%d", v, m);
		    INI_Int(string,PlayerVehicleInfo[playerid][v][pvMods][m]);
		}
    }
    return 0;
}

INI_Exist(nickname[])
{
  new tmp[128];
  format(tmp,sizeof(tmp),USERFILE, nickname);
  return fexist(tmp);
}

stock UserPath(playerid)
{
    new string[128],playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid,playername,sizeof(playername));
    format(string,sizeof(string),USERFILE,playername);
    return string;
}

function LoadUser_pass(playerid,name[],value[])
{
    INI_Int("Password",Info[playerid][pKey]);
    return 1;
}

//Negocios
//Negocios
stock SaveVarBusiness(type,id, name[],variable)
{
	switch(type)
	{
	    case 1:
	    {
		    new bfile[64];
			format(bfile, 64, BUSINESS_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteInt(File,name,variable);
			INI_Close(File);
	    }
	    case 2:
	    {
		    new bfile[64];
			format(bfile, 64, BUSINESS_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteFloat(File,name,variable);
			INI_Close(File);
	    }
	}
}

//Credits to Dracoblue*******************
stock udb_hash(buf[])
{
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
	{
        s1 = (s1 + buf[n]) % 65521;
        s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}

RespawnNearbyVehicles(playerid, Float:radi)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i=1; i<MAX_VEHICLES; i++)
    {
        if(GetVehicleModel(i))
        {
            new Float:posx, Float:posy, Float:posz;
            new Float:tempposx, Float:tempposy, Float:tempposz;
            GetVehiclePos(i, posx, posy, posz);
            tempposx = (posx - x);
            tempposy = (posy - y);
            tempposz = (posz - z);
            if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
            {
                SetVehicleToRespawn(i);
            }
        }
    }
}

vehicle_lock_doors(vehicle)
{
	new
		vParamArr[7];
	GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
	return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_ON, vParamArr[4], vParamArr[5], vParamArr[6]);
}

vehicle_unlock_doors(vehicle)
{
	new
		vParamArr[7];
	GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
	return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_OFF, vParamArr[4], vParamArr[5], vParamArr[6]);
}

stock IsSeatAvailable(vehicleid, seat)
{
	new carmodel = GetVehicleModel(vehicleid);
	for (new i = 0; i < sizeof( OneSeatVehicles ); i++ )
	{
	    if( carmodel == OneSeatVehicles[i] ) return 0;
	}
	foreach(Player, i)
	{
	    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seat) return 0;
	}
	return 1;
}

SurfingCheck(vehicleid)
{
	foreach(Player, p)
	{
		if(GetPlayerSurfingVehicleID(p) == vehicleid)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(p, x, y, z);
		    SetPVarFloat(p, "tempPosX", x);
			SetPVarFloat(p, "tempPosY", x);
			SetPVarFloat(p, "tempPosZ", x);

			SetTimerEx("SurfingFix", 2000, 0, "i", p);
		}
	}
}

function SurfingFix(playerid)
{
	SetPlayerPos(playerid, GetPVarFloat(playerid, "tmpPosX"), GetPVarFloat(playerid, "tmpPosY"), GetPVarFloat(playerid, "tmpPosZ"));
	DeletePVar(playerid, "tmpPosX");
	DeletePVar(playerid, "tmpPosY");
	DeletePVar(playerid, "tmpPosZ");

	return 1;
}

main()
{
    repeat severTimers();
    repeat severTimers2();
    repeat Anticheat();
    repeat SyncUp();
    repeat saveAccounts();
    repeat VehicleUpdate();
    repeat ServerMicrobeat();
    repeat Mensajes();
    repeat EMSUpdate();
    repeat SpecUpdate();
	print(" ");
	print(" ");
	print(SERVER_GM_TEXT);
	print("---------------------------------------------------");
	print("---------------------------------------------------");
 	print("PERFECT CITY ROLEPLAY, GAMEMODE INICIADA CON EXITO");
 	print("BASE: AC-RP, SCRIPT BY: BENJAMIN ALASTRE, Jack Williams");
	print("---------------------------------------------------");
	print("---------------------------------------------------");
	print(" ");
}

function DollahScoreUpdate()
{
	foreach(Player, i){
		if(IsPlayerConnected(i)){
			SetPlayerScore(i, Info[i][pLevel]);
		}
	}
	return 1;
}

//*******************
function GetColorCode(clr[]) {
	new color = -1;
	if (isnumeric(clr))
	{
		color = strval(clr);
		return color;
	}
	if(strcmp(clr, "black", true)==0) color=0;
	if(strcmp(clr, "white", true)==0) color=1;
	if(strcmp(clr, "blue", true)==0) color=2;
	if(strcmp(clr, "red", true)==0) color=3;
	if(strcmp(clr, "green", true)==0) color=16;
	if(strcmp(clr, "purple", true)==0) color=5;
	if(strcmp(clr, "yellow", true)==0) color=6;
	if(strcmp(clr, "lightblue", true)==0) color=7;
	if(strcmp(clr, "navy", true)==0) color=94;
	if(strcmp(clr, "beige", true)==0) color=102;
	if(strcmp(clr, "darkgreen", true)==0) color=51;
	if(strcmp(clr, "darkblue", true)==0) color=103;
	if(strcmp(clr, "darkgrey", true)==0) color=13;
	if(strcmp(clr, "gold", true)==0) color=99;
	if(strcmp(clr, "brown", true)==0 || strcmp(clr, "dennell", true)==0) color=55;
	if(strcmp(clr, "darkbrown", true)==0) color=84;
	if(strcmp(clr, "darkred", true)==0) color=74;
	if(strcmp(clr, "maroon", true)==0) color=115;
	if(strcmp(clr, "pink", true)==0) color=126;
	return color;
}

public ChoqueFunc()
{
        foreach(Player, i)
        {
                if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
                {
                        new Float:x, Float:y, Float:z, Float:Aceleracion;
                        GetVehicleVelocity(GetPlayerVehicleID(i), x, y, z);
                        Veloc[i][1] = floatdiv(floatsqroot(x*x + y*y + z*z)*200000, 3600);
                        Aceleracion = floatdiv(Veloc[i][1] - Veloc[i][0], floatdiv(200, 1000));
            			Veloc[i][0] = Veloc[i][1];

                        if(Aceleracion < -MAX_ACE)
                        {
                                if(Macro[i] == 1) return 1;
                                new Float:acthealth, Float:result = (-1 * floatdiv(Aceleracion, PROPORCION));
                                GetPlayerHealth(i, acthealth);
                                if(Seatbelt[i] == 1) SetPlayerHealth(i, acthealth - (-1 * floatdiv(Aceleracion, PROPORCION) /2));
                                else SetPlayerHealth(i, acthealth - (-1 * floatdiv(Aceleracion, PROPORCION)));

                                if(result < 6)
                                {
                                MareOff[i] = SetTimerEx("Camarac", 1500, 1, "i", i);
                                //Message(i, COLOR_RED, "Has chocado levemente y tu coche queda con algunas abolladuras en la carrocería.");
                                SetPlayerDrunkLevel(i, 250000);
                                TextDrawShowForPlayer(i,flashc);
                                SetTimerEx("RemoveFlashc",1000,false,"i",i);
                                SetPVarInt(i,"PlayerHasBeenFlashed",1);
                                }
                                if(result > 6 && result < 9)
                                {
                                MareOff[i] = SetTimerEx("Camarac", 2000, 1, "i", i);
                                //Message(i, COLOR_RED, "Has chocado y la carrocería de tu coche quedó destruída.");
                                SetPlayerDrunkLevel(i, 500000);
                                TextDrawShowForPlayer(i,flashc);
                                SetTimerEx("RemoveFlashc",1000,false,"i",i);
                                SetPVarInt(i,"PlayerHasBeenFlashed",1);
                                }
                                if(result > 9)
                                {
                                SetTimerEx("Inconciente",5000,0,"d",i);
                                TextDrawShowForPlayer(i,flashc);
                                SetPVarInt(i,"PlayerHasBeenFlashed",1);
                                SetTimerEx("RemoveFlashc",1000,false,"i",i);
                                SetPlayerDrunkLevel(i, 1000000);
                                Message(i, COLOR_RED, "Sufriste un grán impacto, quedaste inconciente y tú motor se apagó.");
								//Accion(i, "choca fuertemente y queda inconsciente, su coche sufre un gran impacto y se apaga");
								new engine,lights,alarm,doors,bonnet,boot,objective;
    							GetVehicleParamsEx(GetPlayerVehicleID(i),engine,lights,alarm,doors,bonnet,boot,objective);
    							SetVehicleParamsEx(GetPlayerVehicleID(i),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
								arr_Engine{GetPlayerVehicleID(i)} = 0;
								TogglePlayerControllable(i, 0);
                                }
                                SetTimerEx("Reactivar",3000,0,"d",i);
                                Macro[i] = 1;
                        }
                }
        }
        return 1;
}

function Reactivar(playerid)
{
Macro[playerid] = 0;
}

function Inconciente(playerid)
{
	new resultado = random(2)+1, string[128];
	if(resultado == 1){
	    TogglePlayerControllable(playerid, 1);
		format(string, sizeof(string), "* %s logra recuperarse del choque.", GetPlayerNameEx(playerid));
		ProxDetector(20.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
		SetPlayerDrunkLevel(playerid, 0);
	}
	else {
		format(string, sizeof(string), "* %s no logra recuperarse del choque y continúa inconsciente.", GetPlayerNameEx(playerid));
		ProxDetector(20.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
		SetTimerEx("Inconciente",3000,0,"d",playerid);
	}
	return 1;
}

function Camarac(playerid)
{
	KillTimer(MareOff[playerid]);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}

public ColocarMascara(playerid)
{
	new string[128];
    Info[playerid][pMaskuse] = 1;
	SetPlayerAttachedObject( playerid, 0, 19036, 2, 0.090156, 0.045901, -0.005574, 90.110733, 81.638343, 4.973568, 0.887882, 1.139873, 1.000000 );
	format(string, sizeof(string), "* %s se pone una máscara en su rostro.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

public QuitarMascara(playerid)
{
    new string[128];
    Info[playerid][pMaskuse] = 0;
	RemovePlayerAttachedObject(playerid,0);
	format(string, sizeof(string), "* %s se quita la máscara de su rostro.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    if(GetPlayerVehicle(playerid, vehicleid) > -1)
	{
 		PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvPaintJob] = paintjobid;
	}
    return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    if(GetPlayerVehicle(playerid, vehicleid) > -1)
	{
		PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvColor1] = color1;
		PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvColor2] = color2;
	}
    return 1;
}

/*public OnEnterExitModShop( playerid, enterexit, interiorid ){
	if( enterexit == 0 ){
		if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1) {
			UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
		}
		SetPlayerInterior( playerid, 0);
	}
	return 1;
}*/
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(enterexit == 1)
	{
		SendClientMessage(playerid, -1, "Entraste al Transfender");
		TogglePlayerControllable(playerid,0);
	}
	if(enterexit == 0)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		gLastCar[playerid] = vehicleid;
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, -1, "Saliste del Transfender");
		SendClientMessage(playerid, -1, "Recuerda usar /estacionar para no perder tu tuneado!.");
		TogglePlayerControllable(playerid,1);
	}
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(!(1 <= GetPlayerInterior(playerid) <= 3))
	{
		new szMessage[128];
		format(szMessage, sizeof(szMessage), "Perfect City: %s tal vez esté usando hacks de modificaciones de autos (aplicando: %s %s en un %s).", GetPlayerNameEx(playerid), partName(componentid), partType(GetVehicleComponentType(componentid)), GetVehicleName(vehicleid));
		ABroadCast(COLOR_GENERAL, szMessage, 2);
	}
	//**security**
	#if defined AntiCrash 1
if((IsPlayerInRangeOfPoint(playerid,2,617.5303,-1.9900,1000.651) && GetPlayerInterior(playerid) == 1) ||
(IsPlayerInRangeOfPoint(playerid,2,616.7830,-74.8150,997.772) && GetPlayerInterior(playerid) == 2) ||
(IsPlayerInRangeOfPoint(playerid,2,615.2862,-124.2390,997.697) && GetPlayerInterior(playerid) == 3)) return 1;
new Menu[1024];
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
switch(componentid)
{
case 1008..1010: if(AutoProhibido(playerid)) RemoveVehicleComponent(vehicleid, componentid);
}
if(!AutoCrash(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Usted ha sido expulsado por posible cheat de Car Crasher.  \n", 1024);
strcat(Menu, "{FFFFFF} Si es un error, evite tunear su auto con lo último que le puso.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado por FireSecurity. Razón: Posible Crasher.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
#endif
	//************
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
new model = GetVehicleModel( vehicleid );
    if (model == 400)
    {
        GameTextForPlayer(playerid,"~g~Landstalker",3000,1);
	}
    if (model == 401)
    {
        GameTextForPlayer(playerid,"~g~Bravura",3000,1);
    }
    if (model == 402)
    {
        GameTextForPlayer(playerid,"~g~Buffalo",3000,1);
    }
    if (model == 403)
    {
        GameTextForPlayer(playerid,"~g~Linerunner",3000,1);
    }
    if (model == 404)
    {
        GameTextForPlayer(playerid,"~g~Perenniel",3000,1);
    }
    if (model == 405)
    {
        GameTextForPlayer(playerid,"~g~Sentinel",3000,1);
    }
    if (model == 406)
    {
        GameTextForPlayer(playerid,"~g~Dumper",3000,1);
    }
    if (model == 407)
    {
        GameTextForPlayer(playerid,"~g~Firetruck",3000,1);
    }
    if (model == 408)
    {
        GameTextForPlayer(playerid,"~g~Trashmaster",3000,1);
    }
    if (model == 409)
    {
        GameTextForPlayer(playerid,"~g~Stretch",3000,1);
    }
    if (model == 410)
    {
        GameTextForPlayer(playerid,"~g~Manana",3000,1);
    }
    if (model == 411)
    {
        GameTextForPlayer(playerid,"~g~Infernus",3000,1);
    }
    if (model == 412)
    {
        GameTextForPlayer(playerid,"~g~Voodoo",3000,1);
    }
    if (model == 413)
    {
        GameTextForPlayer(playerid,"~g~Pony",3000,1);
    }
    if (model == 414)
    {
        GameTextForPlayer(playerid,"~g~Mule",3000,1);
    }
    if (model == 415)
    {
        GameTextForPlayer(playerid,"~g~Cheetah",3000,1);
    }
    if (model == 416)
    {
        GameTextForPlayer(playerid,"~g~Ambulance",3000,1);
    }
    if (model == 417)
    {
        GameTextForPlayer(playerid,"~g~Leviathan",3000,1);
    }
    if (model == 418)
    {
        GameTextForPlayer(playerid,"~g~Moonbeam",3000,1);
    }
    if (model == 419)
    {
        GameTextForPlayer(playerid,"~g~Esperanto",3000,1);
    }
    if (model == 420)
    {
        GameTextForPlayer(playerid,"~g~Taxi",3000,1);
    }
    if (model == 421)
    {
        GameTextForPlayer(playerid,"~g~Washington",3000,1);
    }
    if (model == 422)
    {
        GameTextForPlayer(playerid,"~g~Bobcat",3000,1);
    }
    if (model == 423)
    {
        GameTextForPlayer(playerid,"~g~Mr Whoopee",3000,1);
    }
    if (model == 424)
    {
        GameTextForPlayer(playerid,"~g~BF Injection",3000,1);
    }
    if (model == 425)
    {
        GameTextForPlayer(playerid,"~g~Hunter",3000,1);
    }
    if (model == 426)
    {
        GameTextForPlayer(playerid,"~g~Premier",3000,1);
    }
    if (model == 427)
    {
        GameTextForPlayer(playerid,"~g~Enforcer",3000,1);
    }
    if (model == 428)
    {
        GameTextForPlayer(playerid,"~g~Securicar",3000,1);
    }
    if (model == 429)
    {
        GameTextForPlayer(playerid,"~g~Banshee",3000,1);
    }
    if (model == 430)
    {
        GameTextForPlayer(playerid,"~g~Predator",3000,1);
    }
    if (model == 431)
    {
        GameTextForPlayer(playerid,"~g~Bus",3000,1);
    }
    if (model == 432)
    {
        GameTextForPlayer(playerid,"~g~Rhino",3000,1);
    }
    if (model == 433)
    {
        GameTextForPlayer(playerid,"~g~Barracks",3000,1);
    }
    if (model == 434)
    {
        GameTextForPlayer(playerid,"~g~Hotknife",3000,1);
    }
    if (model == 435)
    {
        GameTextForPlayer(playerid,"~g~Article Trailer",3000,1);
    }
    if (model == 436)
    {
        GameTextForPlayer(playerid,"~g~Previon",3000,1);
    }
    if (model == 437)
    {
        GameTextForPlayer(playerid,"~g~Coach",3000,1);
    }
    if (model == 438)
    {
        GameTextForPlayer(playerid,"~g~Cabbie",3000,1);
    }
    if (model == 439)
    {
        GameTextForPlayer(playerid,"~g~Stallion",3000,1);
    }
    if (model == 440)
    {
        GameTextForPlayer(playerid,"~g~Rumpo",3000,1);
    }
    if (model == 441)
    {
        GameTextForPlayer(playerid,"~g~RC Bandit",3000,1);
    }
    if (model == 442)
    {
        GameTextForPlayer(playerid,"~g~Romero",3000,1);
    }
    if (model == 443)
    {
        GameTextForPlayer(playerid,"~g~Packer",3000,1);
    }
    if (model == 444)
    {
        GameTextForPlayer(playerid,"~g~Monster",3000,1);
    }
    if (model == 445)
    {
        GameTextForPlayer(playerid,"~g~Admiral",3000,1);
    }
    if (model == 446)
    {
        GameTextForPlayer(playerid,"~g~Squallo",3000,1);
	}
	if (model == 447)
    {
        GameTextForPlayer(playerid,"~g~Seasparrow",3000,1);
    }
    if (model == 448)
    {
        GameTextForPlayer(playerid,"~g~Pizzaboy",3000,1);
    }
    if (model == 449)
    {
        GameTextForPlayer(playerid,"~g~Tram",3000,1);
    }
    if (model == 450)
    {
        GameTextForPlayer(playerid,"~g~Article Trailer 2",3000,1);
    }
    if (model == 451)
    {
        GameTextForPlayer(playerid,"~g~Turismo",3000,1);
    }
    if (model == 452)
    {
        GameTextForPlayer(playerid,"~g~Speeder",3000,1);
    }
    if (model == 453)
    {
        GameTextForPlayer(playerid,"~g~Reefer",3000,1);
    }
    if (model == 454)
    {
        GameTextForPlayer(playerid,"~g~Tropic",3000,1);
    }
    if (model == 455)
    {
        GameTextForPlayer(playerid,"~g~Flatbed",3000,1);
    }
    if (model == 456)
    {
        GameTextForPlayer(playerid,"~g~Yankee",3000,1);
    }
	if (model == 457)
    {
        GameTextForPlayer(playerid,"~g~Caddy",3000,1);
    }
	if (model == 458)
    {
        GameTextForPlayer(playerid,"~g~Solair",3000,1);
    }
    if (model == 459)
    {
        GameTextForPlayer(playerid,"~g~Berkley's RC Van",3000,1);
    }
    if (model == 460)
    {
        GameTextForPlayer(playerid,"~g~Skimmer",3000,1);
    }
    if (model == 461)
    {
        GameTextForPlayer(playerid,"~g~PCJ-600",3000,1);
    }
    if (model == 462)
    {
        GameTextForPlayer(playerid,"~g~Faggio",3000,1);
    }
    if (model == 463)
    {
        GameTextForPlayer(playerid,"~g~Freeway",3000,1);
    }
    if (model == 464)
    {
        GameTextForPlayer(playerid,"~g~RC Baron",3000,1);
    }
    if (model == 465)
    {
        GameTextForPlayer(playerid,"~g~RC Raider",3000,1);
    }
    if (model == 466)
    {
        GameTextForPlayer(playerid,"~g~Glendale",3000,1);
    }
    if (model == 467)
    {
        GameTextForPlayer(playerid,"~g~Oceanic",3000,1);
    }
    if (model == 468)
    {
        GameTextForPlayer(playerid,"~g~Sanchez",3000,1);
    }
    if (model == 469)
    {
        GameTextForPlayer(playerid,"~g~Sparrow",3000,1);
    }
    if (model == 470)
    {
        GameTextForPlayer(playerid,"~g~Patriot",3000,1);
    }
    if (model == 471)
    {
        GameTextForPlayer(playerid,"~g~Quad",3000,1);
    }
    if (model == 472)
    {
        GameTextForPlayer(playerid,"~g~Coastguard",3000,1);
    }
    if (model == 473)
    {
        GameTextForPlayer(playerid,"~g~Dinghy",3000,1);
    }
    if (model == 474)
    {
        GameTextForPlayer(playerid,"~g~Hermes",3000,1);
    }
    if (model == 475)
    {
        GameTextForPlayer(playerid,"~g~Sabre",3000,1);
    }
    if (model == 476)
    {
        GameTextForPlayer(playerid,"~g~Rustler",3000,1);
    }
    if (model == 477)
    {
        GameTextForPlayer(playerid,"~g~ZR-350",3000,1);
    }
    if (model == 478)
    {
        GameTextForPlayer(playerid,"~g~Walton",3000,1);
    }
    if (model == 479)
    {
        GameTextForPlayer(playerid,"~g~Regina",3000,1);
    }
    if (model == 480)
    {
        GameTextForPlayer(playerid,"~g~Comet",3000,1);
    }
    if (model == 481)
    {
        GameTextForPlayer(playerid,"~g~BMX",3000,1);
    }
    if (model == 482)
    {
        GameTextForPlayer(playerid,"~g~Burrito",3000,1);
    }
    if (model == 483)
    {
        GameTextForPlayer(playerid,"~g~Camper",3000,1);
    }
    if (model == 484)
    {
        GameTextForPlayer(playerid,"~g~Marquis",3000,1);
    }
    if (model == 485)
    {
        GameTextForPlayer(playerid,"~g~Baggage",3000,1);
    }
    if (model == 486)
    {
        GameTextForPlayer(playerid,"~g~Dozer",3000,1);
    }
    if (model == 487)
    {
        GameTextForPlayer(playerid,"~g~Maverick",3000,1);
    }
    if (model == 488)
    {
        GameTextForPlayer(playerid,"~g~SAN News Maverick",3000,1);
    }
    if (model == 489)
    {
        GameTextForPlayer(playerid,"~g~Rancher",3000,1);
    }
    if (model == 490)
    {
        GameTextForPlayer(playerid,"~g~FBI Rancher",3000,1);
    }
    if (model == 491)
    {
        GameTextForPlayer(playerid,"~g~Virgo",3000,1);
    }
    if (model == 492)
    {
        GameTextForPlayer(playerid,"~g~Greenwood",3000,1);
    }
    if (model == 493)
    {
        GameTextForPlayer(playerid,"~g~Jetmax",3000,1);
    }
    if (model == 494)
    {
        GameTextForPlayer(playerid,"~g~Hotring Racer",3000,1);
    }
    if (model == 495)
    {
        GameTextForPlayer(playerid,"~g~Sandking",3000,1);
    }
    if (model == 496)
    {
        GameTextForPlayer(playerid,"~g~Blista Compact",3000,1);
    }
    if (model == 497)
    {
        GameTextForPlayer(playerid,"~g~Police Maverick",3000,1);
    }
    if (model == 498)
    {
        GameTextForPlayer(playerid,"~g~Boxville",3000,1);
    }
    if (model == 499)
    {
        GameTextForPlayer(playerid,"~g~Benson",3000,1);
    }
    if (model == 500)
    {
        GameTextForPlayer(playerid,"~g~Mesa",3000,1);
    }
    if (model == 501)
    {
        GameTextForPlayer(playerid,"~g~RC Goblin",3000,1);
    }
    if (model == 502)
    {
        GameTextForPlayer(playerid,"~g~Hotring Racer",3000,1);
    }
    if (model == 503)
    {
        GameTextForPlayer(playerid,"~g~Hotring Racer",3000,1);
    }
    if (model == 504)
    {
        GameTextForPlayer(playerid,"~g~Bloodring Banger",3000,1);
    }
    if (model == 505)
    {
        GameTextForPlayer(playerid,"~g~Rancher",3000,1);
    }
    if (model == 506)
    {
        GameTextForPlayer(playerid,"~g~Super GT",3000,1);
    }
    if (model == 507)
    {
        GameTextForPlayer(playerid,"~g~Elegant",3000,1);
    }
    if (model == 508)
    {
        GameTextForPlayer(playerid,"~g~Journey",3000,1);
    }
    if (model == 509)
    {
        GameTextForPlayer(playerid,"~g~Bike",3000,1);
    }
    if (model == 510)
    {
        GameTextForPlayer(playerid,"~g~Mountain Bike",3000,1);
    }
    if (model == 511)
    {
        GameTextForPlayer(playerid,"~g~Beagle",3000,1);
    }
    if (model == 512)
    {
        GameTextForPlayer(playerid,"~g~Cropduster",3000,1);
    }
    if (model == 513)
    {
        GameTextForPlayer(playerid,"~g~Stuntplane",3000,1);
    }
    if (model == 514)
    {
        GameTextForPlayer(playerid,"~g~Tanker",3000,1);
    }
    if (model == 515)
    {
        GameTextForPlayer(playerid,"~g~Roadtrain",3000,1);
    }
    if (model == 516)
    {
        GameTextForPlayer(playerid,"~g~Nebula",3000,1);
    }
    if (model == 517)
    {
        GameTextForPlayer(playerid,"~g~Majestic",3000,1);
    }
    if (model == 518)
    {
        GameTextForPlayer(playerid,"~g~Buccaneer",3000,1);
    }
    if (model == 519)
    {
        GameTextForPlayer(playerid,"~g~Shamal",3000,1);
    }
    if (model == 520)
    {
        GameTextForPlayer(playerid,"~g~Hydra",3000,1);
    }
    if (model == 521)
    {
        GameTextForPlayer(playerid,"~g~FCR-900",3000,1);
    }
    if (model == 522)
    {
        GameTextForPlayer(playerid,"~g~NRG-500",3000,1);
    }
    if (model == 523)
    {
        GameTextForPlayer(playerid,"~g~HPV1000",3000,1);
    }
    if (model == 524)
    {
        GameTextForPlayer(playerid,"~g~Cement Truck",3000,1);
    }
    if (model == 525)
    {
        GameTextForPlayer(playerid,"~g~Towtruck",3000,1);
    }
    if (model == 526)
    {
        GameTextForPlayer(playerid,"~g~Fortune",3000,1);
    }
    if (model == 527)
    {
        GameTextForPlayer(playerid,"~g~Cadrona",3000,1);
    }
    if (model == 528)
    {
        GameTextForPlayer(playerid,"~g~FBI Truck",3000,1);
    }
    if (model == 529)
    {
        GameTextForPlayer(playerid,"~g~Willard",3000,1);
    }
    if (model == 530)
    {
        GameTextForPlayer(playerid,"~g~Forklift",3000,1);
    }
    if (model == 531)
    {
        GameTextForPlayer(playerid,"~g~Tractor",3000,1);
    }
    if (model == 532)
    {
        GameTextForPlayer(playerid,"~g~Combine Harvester",3000,1);
    }
    if (model == 533)
    {
        GameTextForPlayer(playerid,"~g~Feltzer",3000,1);
    }
    if (model == 534)
    {
        GameTextForPlayer(playerid,"~g~Remington",3000,1);
    }
    if (model == 535)
    {
        GameTextForPlayer(playerid,"~g~Slamvan",3000,1);
    }
    if (model == 536)
    {
        GameTextForPlayer(playerid,"~g~Blade",3000,1);
    }
    if (model == 537)
    {
        GameTextForPlayer(playerid,"~g~Freight (Train)",3000,1);
    }
    if (model == 538)
    {
        GameTextForPlayer(playerid,"~g~Brownstreak (Train)",3000,1);
    }
    if (model == 539)
    {
        GameTextForPlayer(playerid,"~g~Vortex",3000,1);
    }
    if (model == 540)
    {
        GameTextForPlayer(playerid,"~g~Vincent",3000,1);
    }
    if (model == 541)
    {
        GameTextForPlayer(playerid,"~g~Bullet",3000,1);
    }
    if (model == 542)
    {
        GameTextForPlayer(playerid,"~g~Clover",3000,1);
    }
    if (model == 543)
    {
        GameTextForPlayer(playerid,"~g~Sadler",3000,1);
    }
    if (model == 544)
    {
        GameTextForPlayer(playerid,"~g~Firetruck LA",3000,1);
    }
    if (model == 545)
    {
        GameTextForPlayer(playerid,"~g~Hustler",3000,1);
    }
    if (model == 546)
    {
        GameTextForPlayer(playerid,"~g~Intruder",3000,1);
    }
    if (model == 547)
    {
        GameTextForPlayer(playerid,"~g~Primo",3000,1);
    }
    if (model == 548)
    {
        GameTextForPlayer(playerid,"~g~Cargobob",3000,1);
    }
    if (model == 549)
    {
        GameTextForPlayer(playerid,"~g~Tampa",3000,1);
    }
    if (model == 550)
    {
        GameTextForPlayer(playerid,"~g~Sunrise",3000,1);
    }
    if (model == 551)
    {
        GameTextForPlayer(playerid,"~g~Merit",3000,1);
    }
    if (model == 552)
    {
        GameTextForPlayer(playerid,"~g~Utility Van",3000,1);
    }
    if (model == 553)
    {
        GameTextForPlayer(playerid,"~g~Nevada",3000,1);
    }
    if (model == 554)
    {
        GameTextForPlayer(playerid,"~g~Yosemite",3000,1);
    }
    if (model == 555)
    {
        GameTextForPlayer(playerid,"~g~Windsor",3000,1);
    }
    if (model == 556)
    {
        GameTextForPlayer(playerid,"~g~Monster A",3000,1);
    }
    if (model == 557)
    {
        GameTextForPlayer(playerid,"~g~Monster B",3000,1);
    }
    if (model == 558)
    {
        GameTextForPlayer(playerid,"~g~Uranus",3000,1);
    }
    if (model == 559)
    {
        GameTextForPlayer(playerid,"~g~Jester",3000,1);
    }
    if (model == 560)
    {
        GameTextForPlayer(playerid,"~g~Sultan",3000,1);
    }
    if (model == 561)
    {
        GameTextForPlayer(playerid,"~g~Stratum",3000,1);
    }
    if (model == 562)
    {
        GameTextForPlayer(playerid,"~g~Elegy",3000,1);
    }
	if (model == 563)
    {
        GameTextForPlayer(playerid,"~g~Raindance",3000,1);
    }
    if (model == 564)
    {
        GameTextForPlayer(playerid,"~g~RC Tiger",3000,1);
    }
    if (model == 565)
    {
        GameTextForPlayer(playerid,"~g~Flash",3000,1);
    }
    if (model == 566)
    {
        GameTextForPlayer(playerid,"~g~Tahoma",3000,1);
    }
    if (model == 567)
    {
        GameTextForPlayer(playerid,"~g~Savanna",3000,1);
    }
    if (model == 568)
    {
        GameTextForPlayer(playerid,"~g~Bandito",3000,1);
    }
    if (model == 569)
    {
        GameTextForPlayer(playerid,"~g~Freight Flat Trailer (Train)",3000,1);
    }
    if (model == 570)
    {
        GameTextForPlayer(playerid,"~g~Streak Trailer (Train)",3000,1);
    }
    if (model == 571)
    {
        GameTextForPlayer(playerid,"~g~Kart",3000,1);
    }
    if (model == 572)
    {
        GameTextForPlayer(playerid,"~g~Mower",3000,1);
    }
	if (model == 573)
    {
        GameTextForPlayer(playerid,"~g~Dune",3000,1);
    }
	if (model == 574)
    {
        GameTextForPlayer(playerid,"~g~Sweeper",3000,1);
    }
    if (model == 575)
    {
        GameTextForPlayer(playerid,"~g~Broadway",3000,1);
    }
    if (model == 576)
    {
        GameTextForPlayer(playerid,"~g~Tornado",3000,1);
    }
    if (model == 577)
    {
        GameTextForPlayer(playerid,"~g~AT400",3000,1);
    }
    if (model == 578)
    {
        GameTextForPlayer(playerid,"~g~DFT-30",3000,1);
    }
    if (model == 579)
    {
        GameTextForPlayer(playerid,"~g~Huntley",3000,1);
    }
    if (model == 580)
    {
        GameTextForPlayer(playerid,"~g~Stafford",3000,1);
    }
    if (model == 581)
    {
        GameTextForPlayer(playerid,"~g~BF-400",3000,1);
    }
    if (model == 582)
    {
        GameTextForPlayer(playerid,"~g~Newsvan",3000,1);
    }
    if (model == 583)
    {
        GameTextForPlayer(playerid,"~g~Tug",3000,1);
    }
    if (model == 584)
    {
        GameTextForPlayer(playerid,"~g~Petrol Trailer",3000,1);
    }
    if (model == 585)
    {
        GameTextForPlayer(playerid,"~g~Emperor",3000,1);
    }
    if (model == 586)
    {
        GameTextForPlayer(playerid,"~g~Wayfarer",3000,1);
    }
    if (model == 587)
    {
        GameTextForPlayer(playerid,"~g~Euros",3000,1);
    }
    if (model == 588)
    {
        GameTextForPlayer(playerid,"~g~Hotdog",3000,1);
    }
    if (model == 589)
    {
        GameTextForPlayer(playerid,"~g~Club",3000,1);
    }
    if (model == 590)
    {
        GameTextForPlayer(playerid,"~g~Freight Box Trailer (Train)",3000,1);
    }
    if (model == 591)
    {
        GameTextForPlayer(playerid,"~g~Article Trailer 3",3000,1);
    }
    if (model == 592)
    {
        GameTextForPlayer(playerid,"~g~Andromada",3000,1);
    }
    if (model == 593)
    {
        GameTextForPlayer(playerid,"~g~Dodo",3000,1);
    }
    if (model == 594)
    {
        GameTextForPlayer(playerid,"~g~RC Cam",3000,1);
    }
    if (model == 595)
    {
        GameTextForPlayer(playerid,"~g~Launch",3000,1);
    }
    if (model == 596)
    {
        GameTextForPlayer(playerid,"~g~Police Car (LSPD)",3000,1);
    }
    if (model == 597)
    {
        GameTextForPlayer(playerid,"~g~Police Car (SFPD)",3000,1);
    }
    if (model == 598)
    {
        GameTextForPlayer(playerid,"~g~Police Car (LVPD)",3000,1);
    }
    if (model == 599)
    {
        GameTextForPlayer(playerid,"~g~Police Ranger",3000,1);
    }
    if (model == 600)
    {
        GameTextForPlayer(playerid,"~g~Picador",3000,1);
    }
    if (model == 601)
    {
        GameTextForPlayer(playerid,"~g~S.W.A.T.",3000,1);
    }
    if (model == 602)
    {
        GameTextForPlayer(playerid,"~g~Alpha",3000,1);
    }
    if (model == 603)
    {
        GameTextForPlayer(playerid,"~g~Phoenix",3000,1);
    }
    if (model == 604)
    {
        GameTextForPlayer(playerid,"~g~Glendale Shit",3000,1);
    }
    if (model == 605)
    {
        GameTextForPlayer(playerid,"~g~Sadler Shit",3000,1);
    }
    if (model == 606)
    {
        GameTextForPlayer(playerid,"~g~Baggage Trailer A",3000,1);
    }
    if (model == 607)
    {
        GameTextForPlayer(playerid,"~g~Baggage Trailer B",3000,1);
    }
    if (model == 608)
    {
        GameTextForPlayer(playerid,"~g~Tug Stairs Trailer",3000,1);
    }
    if (model == 609)
    {
        GameTextForPlayer(playerid,"~g~Boxville",3000,1);
    }
    if (model == 610)
    {
        GameTextForPlayer(playerid,"~g~Farm Trailer",3000,1);
    }
    if (model == 611)
    {
        GameTextForPlayer(playerid,"~g~Utility Trailer",3000,1);
    }
    Seatbelt[playerid] = 0;
    if(VehicleFuel[vehicleid] <= 0)
	{
 	SetVehicleEngine(vehicleid, playerid);
 	}
    if(GetPVarInt(playerid, "Injured") == 1) SetPVarInt(playerid, "ToBeEjected", 1);
    if(Info[playerid][pEstado] != 0) SetPVarInt( playerid, "ToBeEjected", 1 );
    SetPVarInt(playerid, "LastWeapon", GetPlayerWeapon(playerid));
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == VEHICLE_PARAMS_UNSET) switch(GetVehicleModel(vehicleid))
	{
		case 509, 481, 510: VehicleFuel[vehicleid] = 200, arr_Engine{vehicleid} = 1, SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective), arr_Engine{vehicleid} = 1;
		default: SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective), arr_Engine{vehicleid} = 0;
	}
	if(!ispassenger)
	{
		if(FBI_Vehicle(vehicleid))
	  	{
  		    if(Team_FBI(playerid)) { return 1; }
		    else
     		{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(SAMD_Vehicle(vehicleid))
  		{
  		    if(Team_SAMD(playerid)) { return 1; }
  		    else
		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(Mecanico_Vehicle(vehicleid))
  		{
  		    if(Team_Mecanicos(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(VIP_Car(vehicleid))
		{
  		    if(Info[playerid][pVIP] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Este vehículo es {FFFF00}VIP{FFFFFF}");
			RemovePlayerFromVehicle(playerid);
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este vehiculo porque no eres un usuario {FFFF00}VIP{FFFFFF}.");
			return 1;
		}
		else if(CNN_Vehicle(vehicleid))
  		{
  		    if(Team_LSTV(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(GobierAuto(vehicleid))
  		{
  		    if(Gobierno(playerid)) { return 1; }
  		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(SistemaJudicialAuto(vehicleid))
  		{
  		    if(Team_Judicial(playerid)) { return 1; }
  		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(IsAnSAEMCar(vehicleid))
  		{
			if(Team_SAEM(playerid)) { return 1; }
  		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if (LSPD_IsACopCar(vehicleid))
		{
			if(Team_LSPD(playerid)) return 1;
  			else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if (IsAnHitmanCar(vehicleid))
		{
		    if (Hitman(playerid)) return 1;
            else
            {
                RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
		    }
		}
        else if(VehiculoBomberosLS(vehicleid))
  		{
			if(Team_BomberosLS(playerid)) { return 1; }
  		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(LCN_Vehicle(vehicleid))
  		{
  		    if(Team_LCN(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(Yakuza_Vehicle(vehicleid))
  		{
  		    if(Team_YAK(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(Rusa_Vehicle(vehicleid))
  		{
  		    if(Team_RUSA(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(NDRA_Vehicle(vehicleid))
  		{
  		    if(Team_NDRA(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(GRO_Vehicle(vehicleid))
  		{
  		    if(Team_GRO(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(BAL_Vehicle(vehicleid))
  		{
  		    if(Team_BAL(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}
		else if(SUR_Vehicle(vehicleid))
  		{
  		    if(Team_SUR(playerid)) { return 1; }
  		    else
  		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar a este vehículo.");
				return 1;
			}
		}


		//*******************Jobs*******************
		else if(IsAPizzabike(vehicleid))
		{
		    if(Info[playerid][pJob] == 4 && Info[playerid][pUniformeP] == 1 || Info[playerid][pJob2] == 4 && Info[playerid][pUniformeP] == 1) { return 1; }
    	    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No eres Pizzero o no tienes tú uniforme puesto.");
				return 1;
			}
		}
  		else if(Taxi_Vehicle(vehicleid))
  		{
		    if(Info[playerid][pJob] == 8 || Info[playerid][pJob2] == 8) { return 1; }
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No eres Taxista.");
				return 1;
			}
		}
  		else if(IsAHarvest(vehicleid))
  		{
		    if(Info[playerid][pJob] == 9 || Info[playerid][pJob2] == 9) { return 1; }
		    else
		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No eres Granjero.");
				return 1;
			}
		}
		else if(Vortex_Vehicle(vehicleid))
  		{
		    if(Vortex[playerid]== 0)
		    {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				NOPCheck(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD2, "No Tienes un ticket.");
				return 1;
			}
		}
		else if(IsATruckerCar(vehicleid))
		{
	    	if(Info[playerid][pJob] == 6 || Info[playerid][pJob2] == 6)
			{
				new string[128];
				new truckcontents = TruckContents[vehicleid];
				new truckcontentname[25];
				if(truckcontents == 0)
				{ format(truckcontentname, sizeof(truckcontentname), "Nada"); }
				else if(truckcontents >= 1 && truckcontents <= 3)
				{ format(truckcontentname, sizeof(truckcontentname), "{008EC1}Alimentos y comida");}
				else if(truckcontents >= 4 && truckcontents <= 6)
				{ format(truckcontentname, sizeof(truckcontentname), "{008EC1}Ropa y Calzado"); }
				else if(truckcontents == 7)
				{ format(truckcontentname, sizeof(truckcontentname), "{008EC1}Materiales Legales"); }
				else if(truckcontents >= 8 && truckcontents <= 10)
				{ format(truckcontentname, sizeof(truckcontentname), "{008EC1}Objetos del 24/7"); }
				else if(truckcontents >= 11 && truckcontents <= 15)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Armas Ilegales"); }
				else if(truckcontents >= 16 && truckcontents <= 20)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Drogas"); }
				else if(truckcontents >= 21 && truckcontents <= 25)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Materiales Ilegales"); }
				format(string, sizeof(string), "{5ABAFF}[JOB]:{FFFFFF} (Registro: %s %d) - (Contenido: %s)", GetVehicleName(vehicleid), vehicleid, truckcontentname);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
				if(IsACop(playerid) && truckcontents >= 11)
				{
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Para remover productos ilegales usa /limpiarcamion cerca del camión.");
				}
				if(truckcontents > 0 && TruckUsed[playerid] == INVALID_VEHICLE_ID)
				{
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Para entregar productos usa /robarcamion como el conductor.");
				}
				else if(TruckUsed[playerid] == INVALID_VEHICLE_ID)
				{
   					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Para obtener productos y entregarlos usa /cargarcamion siendo el conductor.");
				}
				else if(TruckUsed[playerid] == vehicleid && gPlayerCheckpointStatus[playerid] == CHECKPOINT_RETURNTRUCK)
				{
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Este es tu camión, aún no lo has devuelto a Ocean Docks para que te pagen.");
				}
				else if(TruckUsed[playerid] == vehicleid)
				{
   					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Este es tu camión, aún no has entregado los productos.");
   				}
				else if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
				{
   					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[JOB]:{FFFFFF} Ya estás en otra entrega, usa /cancelar camión para cancelar la entrega.");
   				}
			}
	    	else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    SendClientMessageEx(playerid, COLOR_GRAD2, "No eres camionero.");
			}
		}
	}
	else if(!IsPlayerInRangeOfVehicle(playerid, vehicleid, 7.5) || LockStatus[vehicleid] >= 1){
		ClearAnimations(playerid);
	}
	return 1;
}

Team_LSPD(playerid){
	if(IsPlayerConnected(playerid)){
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	1){
		    return 1;
		}
		else if(leader	==	1)
		{
		    return 1;
		}
	}
	return 0;
}

Team_FBI(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	2)
		{
		    return 1;
		}
		else if(leader	==	2)
		{
		    return 1;
		}
	}
	return 0;
}

Team_SAEM(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	3)
		{
		    return 1;
		}
		else if(leader	==	3)
		{
		    return 1;
		}
	}
	return 0;
}

Team_SAMD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	4)
		{
		    return 1;
		}
		else if(leader	==	4)
		{
		    return 1;
		}
	}
	return 0;
}

Team_LSTV(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	5)
		{
		    return 1;
		}
		else if(leader	==	5)
		{
		    return 1;
		}
	}
	return 0;
}

Team_Mecanicos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	6)
		{
		    return 1;
		}
		else if(leader	==	6)
		{
		    return 1;
		}
	}
	return 0;
}

Gobierno(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	7)
		{
		    return 1;
		}
		else if(leader == 7)
		{
		    return 1;
		}
	}
	return 0;
}

Hitman(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	8)
		{
		    return 1;
		}
		else if(leader	==	8)
		{
		    return 1;
		}
	}
	return 0;
}

Team_Judicial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	9)
		{
		    return 1;
		}
		else if(leader == 9)
		{
		    return 1;
		}
	}
	return 0;
}

Team_BomberosLS(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	10)
		{
		    return 1;
		}
		else if(leader	== 10)
		{
		    return 1;
		}
	}
	return 0;
}

Team_LCN(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	11)
		{
		    return 1;
		}
		else if(leader	== 11)
		{
		    return 1;
		}
	}
	return 0;
}

Team_YAK(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	12)
		{
		    return 1;
		}
		else if(leader	== 12)
		{
		    return 1;
		}
	}
	return 0;
}

Team_RUSA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	13)
		{
		    return 1;
		}
		else if(leader	== 13)
		{
		    return 1;
		}
	}
	return 0;
}

Team_NDRA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	14)
		{
		    return 1;
		}
		else if(leader	== 14)
		{
		    return 1;
		}
	}
	return 0;
}

Team_GRO(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	15)
		{
		    return 1;
		}
		else if(leader	== 15)
		{
		    return 1;
		}
	}
	return 0;
}

Team_BAL(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	16)
		{
		    return 1;
		}
		else if(leader	== 16)
		{
		    return 1;
		}
	}
	return 0;
}

Team_SUR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	17)
		{
		    return 1;
		}
		else if(leader	== 17)
		{
		    return 1;
		}
	}
	return 0;
}

Team_FSO(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	18)
		{
		    return 1;
		}
		else if(leader	== 18)
		{
		    return 1;
		}
	}
	return 0;
}

Presidente(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
		if(leader == 7)
		{
		    return 1;
		}
	}
	return 0;
}

IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	1 || member	==	2 || member	==	3)
		{
		    return 1;
		}
		else if(leader	==	1 || leader	==	2 || leader	==	3)
		{
		    return 1;
		}
	}
	return 0;
}

IsAPolice(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member==1)
		{
		    return 1;
		}
		else if(leader==1)
		{
		    return 1;
		}
	}
	return 0;
}

IsANewsCar(carid)
{
	if(GetVehicleModel(carid)== 582 || GetVehicleModel(carid)== 488)
	{
		return 1;
	}
	return 0;
}

Float:GetPizzaDistance(houseid)
{
	new Float: pDistance;
	pDistance = GetDistance(2098.6919,-1789.5027,13.5547, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
    return pDistance;
}

IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,25.0,207.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047))
		{//Binco & Sub urban
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,30.0,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid,50.0,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-2664.3318,1538.4259,907.1797) || IsPlayerInRangeOfPoint(playerid,50.0,1395.0045,-1896.1139,13.3733))
		{// SaC HQ
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,202.6777,-163.0623,1000.5306))
		{//Diedier Sachs
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,997.3839,-1266.6259,15.2554))
		{//Armario de Familias /fropa
		    return 1;
		}
 	}
	return 0;
}

IsAtArrestPoint(playerid){
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0,1559.3228,-1693.7491,5.8970)){return 1;} //LSPD
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 613.3228,-589.1623,17.2266)){ return 1; } //SAPD Dillmore
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 2800.9270,-1105.2594,30.7188)){ return 1; } //FBI
 	}
	return 0;
}

IsAtTruckDeliveryPoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 6, 1025.6554,-1362.6024,13.5649) || IsPlayerInRangeOfPoint(playerid, 6, 455.2845,-1501.5569,31.0434) ||
	IsPlayerInRangeOfPoint(playerid, 6, 793.0801,-1625.8910,13.3906) || IsPlayerInRangeOfPoint(playerid, 6, 2112.7766,-1216.1750,23.8047) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1197.6417,-887.7512,43.0229) || IsPlayerInRangeOfPoint(playerid, 6, -64.5445,-1120.5356,1.0781) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1320.5774,-865.3797,39.7044) || IsPlayerInRangeOfPoint(playerid, 6, -86.3670,-1195.7297,2.1664) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1347.0487,-1752.1692,13.7886) || IsPlayerInRangeOfPoint(playerid, 6, -70.8884,-1549.4922,2.6172) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1925.5968,-1789.5017,13.1459) || IsPlayerInRangeOfPoint(playerid, 6, 1474.4786,-1140.6188,24.0781) ||
	IsPlayerInRangeOfPoint(playerid, 6, 2247.2351,-1661.2406,15.6749))
	{ return true; }
	return false;
}

IsAtCelPublic(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(5.0,playerid,1540.4768,-1722.1370,13.5546)) { return 1; } //SAPD
		else if(PlayerToPoint(5.0,playerid,1828.9257,-1850.9833,13.5781)) { return 1; } // 24/7 UNITY
		else if(PlayerToPoint(5.0,playerid,1710.4623,-1604.9115,13.5469)) { return 1; } //atras sapd
		else if(PlayerToPoint(5.0,playerid,1310.6002,-912.0837,38.5596)) { return 1; } //24/7 vinewood
		else if(PlayerToPoint(5.0,playerid,355.3920,-1365.1967,14.4665)) { return 1; } //cerca a grotti
		else if(PlayerToPoint(5.0,playerid,1803.0021,-1863.0212,13.5756)) { return 1; } //unity
		else if(PlayerToPoint(5.0,playerid,350.2411,-1785.1615,5.3446)) { return 1; } //conce de playa autos
		else if(PlayerToPoint(5.0,playerid,1037.0452,-1937.8800,13.1434)) { return 1; } //Bomberos
	}
	return 0;
}

IsAt247(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(5.0,playerid,-1833.8270,62.3936,1055.1891)) { return 1; } //intaero
		else if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-28.7605,-185.1333,1003.5469)) { return 1; } //LV 1er 24-7
		else if(PlayerToPoint(5.0,playerid,-10.3085,-178.2465,1003.5469)) { return 1; } // LV 1er 24-7 >
		else if(PlayerToPoint(5.0,playerid,2.3437,-29.0118,1003.5494)) { return 1; } //LV 2do 24-7
		else if(PlayerToPoint(5.0,playerid,-28.0818,-89.9434,1003.5469)) { return 1; } //LV 3er 24-7
		else if(PlayerToPoint(5.0,playerid,-29.1318,-184.7204,1003.5469)) { return 1; } //LV 3er 24-7
		else if(PlayerToPoint(5.0,playerid,-25.7885,-183.2835,1003.5469)) { return 1; } //LV 3er 24-7
		else if(PlayerToPoint(5.0,playerid,1200.4298, -1270.8019, -1.5836)) { return 1; } //LS Hospital 24/7
	}
	return 0;
}
MapaInteres(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(5.0,playerid,1544.6503,-1681.0081,13.5588)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1738.1191,-1862.8081,13.5758)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1185.3795,-1339.4580,13.5742)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,981.88, -1157.62, 23.86)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1195.7616,-919.6393,43.1544)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,562.7845,-1250.2927,17.2599)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,805.9656,-1387.7549,13.5602)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,159.1252,-1946.8750,3.7734)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1309.5337,-912.6902,38.6741)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1756.7098,-1147.4298,23.9336)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1829.0646,-1679.4893,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1934.2709,-1761.6580,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1205.8312,-1842.7323,13.5432)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,844.4606,-2059.8254,12.8672)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1355.6024,-1739.5306,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,2047.2003,-1920.9122,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1832.5538,-1845.5059,13.1817)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1719.21936,-1888.48071,13.36670)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1711.10828,-1888.84167,13.36670)) { return 1; }
	}
	return 0;
}

IsAtGasT(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(5.0,playerid,-60.2884,59.0147,1023.5759)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-59.3870,58.2315,1004.8693)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-60.4091,58.8382,1043.5759)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-60.1126,58.8346,1063.5759)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-60.4153,58.8366,1083.5759)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-60.9187,58.8351,1098.5759)) { return 1; }
	}
	return 0;
}

IsAtATM(playerid)
{
    if(IsPlayerConnected(playerid))
	{
 		if(PlayerToPoint(2.0,playerid,1833.24268, -1846.19141, 13.17900)) { return 1; } //24/7 Unity
		else if(PlayerToPoint(2.0,playerid,1837.34595, -1672.31592, 12.94730)) { return 1; } //Albrahama LS
		else if(PlayerToPoint(2.0,playerid,2010.88110, -1451.23486, 13.17634)) { return 1; } //Hospital LS
		else if(PlayerToPoint(2.0,playerid,2118.22583, -1119.08044, 24.91362)) { return 1; } //COncesionario de Motos LS
		else if(PlayerToPoint(2.0,playerid,607.25879, -1233.42444, 17.88725)) { return 1; } //BAnco Exterior LS
		else if(PlayerToPoint(2.0,playerid,562.59302, -1253.75623, 16.82513)) { return 1; } //Concesionario Grotti LS
		else if(PlayerToPoint(2.0,playerid,158.84294, -1949.27344, 3.35796)) { return 1; } //Faro LS
		else if(PlayerToPoint(2.0,playerid,1254.49707, -1695.39844, 13.12211)) { return 1; } //Inicio de SPawn LS
		else if(PlayerToPoint(2.0,playerid,2449.93066, -1998.21167, 13.06436)) { return 1; } //Mercado Negro LS
		else if(PlayerToPoint(2.0,playerid,2379.11353, 1112.15613, 33.88081)) { return 1; } //Vip Interior Los SAntos
		else if(PlayerToPoint(2.0,playerid,24.7601,-2654.2646,40.5045)) { return 1; } //24/7 Camino Hacia San Francisco
		else if(PlayerToPoint(2.0,playerid,1541.30005, -1601.90002, 13.20000)) { return 1; } //LSPD
		else if(PlayerToPoint(2.0,playerid,1356.69995, -1759.19995, 13.30000)) { return 1; } //24/7 Ayuntamiento
		else if(PlayerToPoint(2.0,playerid,1318.59998, -897.79999, 39.20000)) { return 1; } //24/7 Vinewood
		else if(PlayerToPoint(2.0,playerid,536.59998, -1740.69995, 11.90000)) { return 1; }  //Casi En La Playa LS
		else if(PlayerToPoint(2.0,playerid,1415.00000, -1020.79999, 23.50000)) { return 1; } //Por Vinewood LS
		else if(PlayerToPoint(2.0,playerid,1186.19995, -1372.50000, 13.20000)) { return 1; } //Antiguo Hospital LS
		else if(PlayerToPoint(2.0,playerid,2228.38989, -1707.78003, 13.25000)) { return 1; } //GYM LS
		else if(PlayerToPoint(2.0,playerid,665.59003, -577.96997, 15.96000)) { return 1; } //Dilmori LS
		else if(PlayerToPoint(2.0,playerid,1498.7799,-1573.8557,-9.4034)) { return 1; } // Banco interior
		else if(PlayerToPoint(2.0,playerid,1482.9467,-1571.1311,-9.4108)) { return 1; } // banco interior
	}
	return 0;
}

/*IsAtHotDogCar(playerid)
{
    if(IsPlayerConnected(playerid))
	{

		if(PlayerToPoint(2.0,playerid, 379.72690, -2036.61328, 7.75957)) { return 1; } // Muelle LS
		else if(PlayerToPoint(2.0,playerid, 1589.69531, -1287.26563, 17.64063)) { return 1; } // Restaurante Nuevo LS
		else if(PlayerToPoint(2.0,playerid, 412.30917, -1556.65393, 27.59367)) { return 1; } // Cerca de Concierto LS
		else if(PlayerToPoint(2.0,playerid, 657.07080, -1387.41052, 13.63818)) { return 1; } // CNN LS
		else if(PlayerToPoint(2.0,playerid, 1053.92175, -1414.03748, 13.58000)) { return 1; } // Cerca de Ciber LS
		else if(PlayerToPoint(2.0,playerid, 1204.43823, -1413.95471, 13.44048)) { return 1; } // Cerca de Job Vendedor de Telefono LS
		else if(PlayerToPoint(2.0,playerid, 1334.32422, -1272.62451, 13.47882)) { return 1; } // Frente Ammu-Nation LS
		else if(PlayerToPoint(2.0,playerid, 1577.43799, -1740.50183, 13.52822)) { return 1; } // Cerca de LSPD
		else if(PlayerToPoint(2.0,playerid, 1725.09009, -1740.15808, 13.55371)) { return 1; } // Cerca de iglesia LS
		else if(PlayerToPoint(2.0,playerid, 1813.64319, -1843.43286, 13.50493)) { return 1; } // Frente 24/7 Unity LS
		else if(PlayerToPoint(2.0,playerid, 1813.56714, -1687.84387, 13.50828)) { return 1; } // Frente Albrahama LS
		else if(PlayerToPoint(2.0,playerid, 1930.07068, -1764.85486, 13.53237)) { return 1; } // 24/7 cerca de albrahama LS
		else if(PlayerToPoint(2.0,playerid, 2226.69434, -1742.29675, 13.56914)) { return 1; } // GYM LS
		else if(PlayerToPoint(2.0,playerid, 2311.67627, -1161.15344, 26.91376)) { return 1; } // Cerca dE Job Traficante de DRoga LS
		else if(PlayerToPoint(2.0,playerid, 2183.71948, -1129.38525, 24.77682)) { return 1; } // Cerca dE Concesionario de Motos LS
		else if(PlayerToPoint(2.0,playerid, 1859.67822, -1452.47852, 13.46702)) { return 1; } // Cerca de Sistema Judicial LS
		else if(PlayerToPoint(2.0,playerid, 1978.86462, -2174.69995, 13.55896)) { return 1; } // Aeropuerto LS
		else if(PlayerToPoint(2.0,playerid, 2227.92334, -1982.84546, 13.47026)) { return 1; } // Cerca de Basureros LS
		else if(PlayerToPoint(2.0,playerid, 2234.67334, -2649.61182, 13.50276)) { return 1; } // Cerca dE Job Camioneros LS
		else if(PlayerToPoint(2.0,playerid, 1717.09998, -1904.04004, 13.58000)) { return 1; }  // Unity LS
		else if(PlayerToPoint(2.0,playerid, 1713.00000, -1904.03003, 13.58000)) { return 1; }  // Unity LS
		else if(PlayerToPoint(2.0,playerid, 1712.59998, -1920.18005, 13.58000)) { return 1; } //Unity LS
		else if(PlayerToPoint(2.0,playerid, 1716.87000, -1920.26001, 13.58000)) { return 1; } // Unity LS
		else if(PlayerToPoint(2.0,playerid, 1099.31653, -1383.34668, 13.91538)) { return 1; } // Ciber LS
	}
	return 0;
}*/

IsAtDeliverPatientPoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2012.6680,-1409.3304,16.9922))//SAMD
	{
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2684.0684,-2525.4067,13.3136))//SAEM
	{
		return 1;
	}
	return 0;
}

IsAtImpoundingPoint(playerid)
{
	return (IsPlayerInRangeOfPoint(playerid, 5.0,1658.9924,-1807.1152,13.5508));
}

IsAtGasStation(playerid){
    if(IsPlayerConnected(playerid)){
  	if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,1625.0463,-2167.6428,13.4402) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1637.0149,2331.5129,10.8722) || PlayerToPoint(6.0,playerid,1636.6686,2325.8711,10.8722))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1636.6140,2320.6423,10.8722) || PlayerToPoint(6.0,playerid,1595.5337,2198.9404,10.8203)|| PlayerToPoint(6.0,playerid,1839.58, -2522.52, 13.55))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015) || PlayerToPoint(6.0,playerid,2294.2227,-1911.0593,13.5971) )
		{//Dillimore
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1359.0695,-1807.6924,13.6298) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015) || PlayerToPoint(6.0,playerid,2294.2227,-1911.0593,13.5971) )
		{//Dillimore
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1359.6958,-1819.1261,13.6528) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015) || PlayerToPoint(6.0,playerid,2294.2227,-1911.0593,13.5971) )
		{//Dillimore
		    return 1;
		}
	}
	return 0;
}

IsAtTaller(playerid)
{
    if(IsPlayerConnected(playerid))
    {
   		if(PlayerToPoint(45.0,playerid,2516.9041,-2109.1155,13.5469))
   		{
   			return 1;
		}
	}
	return 0;
}

IsAtjob(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(10.0,playerid,-105.9964,-1577.9606,2.6172))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,2102.6831,-1807.8751,13.5547))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,2022.3375,-1274.7028,23.9763))
		{
		    return 1;
		}
	}
	return 0;
}


CancelTruckDelivery(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsATruckerCar(vehicleid)) SetVehicleToRespawn(vehicleid);
	}
 	DestroyProgressBar(LoadTruckBar[playerid]);
	LoadTruckBar[playerid] = INVALID_BAR_ID;
	LoadTruckTime[playerid] = 0;
	DeletePVar(playerid, "TruckDeliver");
	TruckContents[TruckUsed[playerid]] = 0;
	TruckUsed[playerid] = INVALID_VEHICLE_ID;
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 	DisablePlayerCheckpoint(playerid);
	return 1;
}

//*******************CARS*******************
IsATowTruck(carid)
{
	if(GetVehicleModel(carid) == 485 || GetVehicleModel(carid) == 525 || GetVehicleModel(carid) == 583 || GetVehicleModel(carid) == 574)
	{
		return 1;
	}
	return 0;
}
IsAnBus(carid)
{
	if(GetVehicleModel(carid) == 431 || GetVehicleModel(carid) == 437)
	{
		return 1;
	}
	return 0;
}
LSPD_IsACopCar(carid)
{
	for(new v = 0; v < sizeof(SAPDVehicles); v++)
	{
	    if(carid == SAPDVehicles[v]) return 1;
	}
	return 0;
}

IsAnTaxi(carid)
{
	if(GetVehicleModel(carid) == 420 || GetVehicleModel(carid) == 438)
	{
		return 1;
	}
	return 0;
}
Taxi_Vehicle(carid)
{
	for(new v = 0; v < sizeof(TaxiTrans); v++)
	{
	    if(carid == TaxiTrans[v]) return 1;
	}
	return 0;
}
IsATruckerCar(carid)
{
	for(new v = 0; v < sizeof(TruckerVehicles); v++)
	{
	    if(carid == TruckerVehicles[v]) return 1;
	}
	return 0;
}

IsAHarvest(carid)
{
	if(GetVehicleModel(carid) == 532)
	{
		return 1;
	}
	return 0;
}

Vortex_Vehicle(carid)
{
	if(GetVehicleModel(carid) == 539)
	{
		return 1;
	}
	return 0;
}

IsAPizzabike(carid)
{
	for(new v = 0; v < sizeof(PizzaBike); v++)
	{
	    if(carid == PizzaBike[v]) return 1;
	}
	return 0;
}

IsAnAmbulance(carid)
{
	if(GetVehicleModel(carid) == 416)
	{
		return 1;
	}
	return 0;
}

SAMD_Vehicle(carid)
{
	for(new v = 0; v < sizeof(SAMDVehicles); v++)
	{
	    if(carid == SAMDVehicles[v]) return 1;
	}
	return 0;
}

Mecanico_Vehicle(carid)
{
	for(new v = 0; v < sizeof(MecanicosVehicle); v++)
	{
	    if(carid == MecanicosVehicle[v]) return 1;
	}
	return 0;
}
FBI_Vehicle(carid)
{
	for(new v = 0; v < sizeof(FBIVehicle); v++)
	{
	    if(carid == FBIVehicle[v]) return 1;
	}
	return 0;
}
CNN_Vehicle(carid)
{
	for(new v = 0; v < sizeof(CNNVehicle); v++)
	{
	    if(carid == CNNVehicle[v]) return 1;
	}
	return 0;
}
VIP_Car(carid)
{
	for(new v = 0; v < sizeof(CarVIP); v++)
	{
	    if(carid == CarVIP[v]) return 1;
	}
	return 0;
}

IsARentCar(carid)
{
	for(new v = 0; v < sizeof(Rentbike); v++)
	{
	    if(carid == Rentbike[v]) return 1;
	}
	return 0;
}

IsAnSAEMCar(carid)
{
	for(new i = 0; i < sizeof(SAEMLandVehicles); i++)
	{
		if(SAEMLandVehicles[ i ] == carid) return 1;
	}
	return 0;
}

GobierAuto(carid)
{
	for(new v = 0; v < sizeof(GobiernoCar); v++)
	{
	    if(carid == GobiernoCar[v]) return 1;
	}
	return 0;
}

IsAnHitmanCar(carid)
{
   for(new v = 0; v < sizeof(Hitman_Vehicle); v++)
   {
       if(carid == Hitman_Vehicle[v]) return 1;
   }
return 0;
}

SistemaJudicialAuto(carid)
{
	for(new v = 0; v < sizeof(SistemaJudicialCar); v++)
	{
	    if(carid == SistemaJudicialCar[v]) return 1;
	}
	return 0;
}

VehiculoBomberosLS(carid)
{
	for(new i = 0; i < sizeof(BomberosLSVeh); i++)
	{
		if(BomberosLSVeh[ i ] == carid) return 1;
	}
	return 0;
}

LCN_Vehicle(carid)
{
	for(new v = 0; v < sizeof(LCNVeh); v++)
	{
	    if(carid == LCNVeh[v]) return 1;
	}
	return 0;
}

Yakuza_Vehicle(carid)
{
	for(new v = 0; v < sizeof(YAKVeh); v++)
	{
	    if(carid == YAKVeh[v]) return 1;
	}
	return 0;
}

Rusa_Vehicle(carid)
{
	for(new v = 0; v < sizeof(RUVeh); v++)
	{
	    if(carid == RUVeh[v]) return 1;
	}
	return 0;
}

NDRA_Vehicle(carid)
{
	for(new v = 0; v < sizeof(NDRVeh); v++)
	{
	    if(carid == NDRVeh[v]) return 1;
	}
	return 0;
}

GRO_Vehicle(carid)
{
	for(new v = 0; v < sizeof(GROVeh); v++)
	{
	    if(carid == GROVeh[v]) return 1;
	}
	return 0;
}

BAL_Vehicle(carid)
{
	for(new v = 0; v < sizeof(BALVeh); v++)
	{
	    if(carid == BALVeh[v]) return 1;
	}
	return 0;
}

SUR_Vehicle(carid)
{
	for(new v = 0; v < sizeof(SURVeh); v++)
	{
	    if(carid == SURVeh[v]) return 1;
	}
	return 0;
}

FSO_Vehicle(carid)
{
	for(new v = 0; v < sizeof(LCNVeh); v++)
	{
	    if(carid == FSOVeh[v]) return 1;
	}
	return 0;
}


IsABike(carid)
{
	if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) ==  481 || GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}

IsAMBike(fahrzeug)
{
    new Motorads[] = { 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471 };
    for(new i = 0; i < sizeof(Motorads); i++) {
        if(GetVehicleModel(fahrzeug) == Motorads[i]) return 1;
    }
    return 0;
}

IsAPlane(carid)
{
	switch(GetVehicleModel(carid)) {
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469: return 1;
	}
	return 0;
}

GivePlayerValidWeapon(playerid, WeaponID){
    if((Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) && WeaponID != 46 && WeaponID != 43) return 1;
	switch( WeaponID ){
  		case 0, 1:{
			Info[playerid][pWeapons][ 0 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 9999);
		}
		case 2, 3, 4, 5, 6, 7, 8, 9:{
			Info[playerid][pWeapons][ 1 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 9999);
		}
		case 22, 23, 24:{
			Info[playerid][pWeapons][ 2 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 200);
		}
		case 25, 26, 27:{
			Info[playerid][pWeapons][ 3 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 200);
		}
		case 28, 29, 32:{
			Info[playerid][pWeapons][ 4 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 500);
		}
		case 30, 31:{
			Info[playerid][pWeapons][ 5 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 800);
		}
		case 33, 34:{
			Info[playerid][pWeapons][ 6 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 50);
		}
		case 35, 36, 37, 38:{
			Info[playerid][pWeapons][ 7 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 9999);
		}
		case 16, 17, 18, 39:{
			Info[playerid][pWeapons][ 8 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 8);
		}
		case 41, 42, 43:{
			Info[playerid][pWeapons][ 9 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 1200);
		}
		case 10, 11, 12, 13, 14, 15:{
			Info[playerid][pWeapons][ 10 ] = WeaponID;
   			GivePlayerWeapon( playerid, WeaponID, 9999);
		}
		case 44, 45, 46:{
			Info[playerid][pWeapons][ 11 ] = WeaponID;
			GivePlayerWeapon( playerid, WeaponID, 9999);
		}
	    case 40: {
	        Info[playerid][pWeapons][12] = WeaponID;
	        GivePlayerWeapon(playerid, WeaponID, 9999);
	    }
	}
	return 1;
}
stock GetWeaponSlot(weaponid) {
	switch(weaponid) {
		case 0, 1: return 0;
		case 2 .. 9: return 1;
		case 22 .. 24: return 2;
		case 25 .. 27: return 3;
		case 28, 29, 32: return 4;
		case 30, 31: return 5;
		case 33, 34: return 6;
		case 35 .. 38: return 7;
		case 16, 17, 18, 39: return 8;
		case 41 .. 43: return 9;
		case 10 .. 15: return 10;
		case 44 .. 46: return 11;
		case 40: return 12;
	}
	return -1;
}
stock ResetPlayerWeaponsEx( playerid ){
	ResetPlayerWeapons(playerid);
	Info[playerid][pWeapons][0] = 0;
	Info[playerid][pWeapons][1] = 0;
	Info[playerid][pWeapons][2] = 0;
	Info[playerid][pWeapons][3] = 0;
	Info[playerid][pWeapons][4] = 0;
	Info[playerid][pWeapons][5] = 0;
	Info[playerid][pWeapons][6] = 0;
	Info[playerid][pWeapons][7] = 0;
	Info[playerid][pWeapons][8] = 0;
	Info[playerid][pWeapons][9] = 0;
	Info[playerid][pWeapons][10] = 0;
	Info[playerid][pWeapons][11] = 0;
	Info[playerid][pWeapons][12] = 0;
	return 1;
}
stock PlayerPlaySoundEx(soundid, Float:x, Float:y, Float:z) { //Realistic sound playback
	foreach(Player, i) {
		if(IsPlayerInRangeOfPoint(i, 20.0, x, y, z))
			PlayerPlaySound(i, soundid, x, y, z);
	}
	return 1;
}
partType(type)
{
	new name[64];
	switch(type){
	    case 0: name = "Alerón";
        case 1: name = "Capó";
        case 2: name = "Techo";
        case 3: name = "Lados";
        case 4: name = "Lamps";
        case 5: name = "Nitro";
        case 6: name = "Escape";
        case 7: name = "Ruedas";
        case 8: name = "Stereo";
        case 9: name = "Hidráulica";
        case 10: name = "Parachoque D.";
        case 11: name = "Parachoque T.";
        case 12: name = "Ventilacion Izq.";
        case 13: name = "Ventilacion Der.";
        default: name = "Desconocida";
	}
	return name;
}

partName(part){

	new
		name[24];

	switch(part - 1000) {
		case 0:	name = "Pro";
		case 1: name = "Win";
		case 2: name = "Drag";
		case 3: name = "Alpha";
		case 4: name = "Champ Scoop";
		case 5: name = "Fury Scoop";
		case 6: name = "Roof Scoop";
		case 7: name = "Sideskirt";
		case 8: name = "2x";
		case 9: name = "5x";
		case 10: name = "10x";
		case 11: name = "Race Scoop";
		case 12: name = "Worx Scoop";
		case 13: name = "Round Fog";
		case 14: name = "Champ";
		case 15: name = "Race";
		case 16: name = "Worx";
		case 17: name = "Sideskirt";
		case 18: name = "Upswept";
		case 19: name = "Twin";
		case 20: name = "Large";
		case 21: name = "Medium";
		case 22: name = "Small";
		case 23: name = "Fury";
		case 24: name = "Square Fog";
		case 26: name = "Alien";
		case 27: name = "Alien";
		case 28: name = "Alien";
		case 29: name = "X-Flow";
		case 30: name = "X-Flow";
		case 31: name = "X-Flow";
		case 32: name = "Alien Roof Vent";
		case 33: name = "X-Flow Roof Vent";
		case 34: name = "Alien";
		case 35: name = "X-Flow Roof Vent";
		case 36: name = "Alien";
		case 37: name = "X-Flow";
		case 38: name = "Alien Roof Vent";
		case 39: name = "X-Flow";
		case 40: name = "Alien";
		case 41: name = "X-Flow";
		case 42: name = "Chrome";
		case 43: name = "Slamin";
		case 44: name = "Chrome";
		case 45: name = "X-Flow";
		case 46: name = "Alien";
		case 47: name = "Alien";
		case 48: name = "X-Flow";
		case 49: name = "Alien";
		case 50: name = "X-Flow";
		case 51: name = "Alien";
		case 52: name = "X-Flow";
		case 53: name = "X-Flow";
		case 54: name = "Alien";
		case 55: name = "Alien";
		case 56: name = "Alien";
		case 57: name = "X-Flow";
		case 58: name = "Alien";
		case 59: name = "X-Flow";
		case 60: name = "X-Flow";
		case 61: name = "X-Flow";
		case 62: name = "Alien";
		case 63: name = "X-Flow";
		case 64: name = "Alien";
		case 65: name = "Alien";
		case 66: name = "X-Flow";
		case 67: name = "Alien";
		case 68: name = "X-Flow";
		case 69: name = "Alien";
		case 70: name = "X-Flow";
		case 71: name = "Alien";
		case 72: name = "X-Flow";
		case 88: name = "Alien";
		case 89: name = "X-Flow";
		case 90: name = "Alien";
		case 91: name = "X-Flow";
		case 92: name = "Alien";
		case 93: name = "X-Flow";
		case 94: name = "Alien";
		case 95: name = "X-Flow";
		case 99: name = "Chrome";
		case 100: name = "Chrome Grill";
		case 101: name = "Chrome Flames";
		case 102: name = "Chrome Strip";
		case 103: name = "Convertible";
		case 104: name = "Chrome";
		case 105: name = "Slamin";
		case 106: name = "Chrome Arches";
		case 107: name = "Chrome Strip";
		case 108: name = "Chrome Strip";
		case 109: name = "Chrome";
		case 110: name = "Slamin";
		case 113: name = "Chrome";
		case 114: name = "Slamin";
		case 115: name = "Chrome";
		case 116: name = "Slamin";
		case 117: name = "Chrome";
		case 118: name = "Chrome Trim";
		case 119: name = "Wheelcovers";
		case 120: name = "Chrome Trim";
		case 121: name = "Wheelcovers";
		case 122: name = "Chrome Flames";
		case 123: name = "Bullbar Chrome Bars";
		case 124: name = "Chrome Arches";
		case 125: name = "Bullbar Chrome Lights";
		case 126: name = "Chrome";
		case 127: name = "Slamin";
		case 128: name = "Vinyl Hardtop";
		case 129: name = "Chrome";
		case 130: name = "Hardtop";
		case 131: name = "Softtop";
		case 132: name = "Slamin";
		case 133: name = "Chrome Strip";
		case 134: name = "Chrome Strip";
		case 135: name = "Slamin";
		case 136: name = "Chrome";
		case 137: name = "Chrome Strip";
		case 138: name = "Alien";
		case 139: name = "X-Flow";
		case 140: name = "X-Flow";
		case 141: name = "Alien";
		case 142: name = "Left Oval Vents";
		case 143: name = "Right Oval Vents";
		case 144: name = "Left Square Vents";
		case 145: name = "Right Square Vents";
		case 146: name = "X-Flow";
		case 147: name = "Alien";
		case 148: name = "X-Flow";
		case 149: name = "Alien";
		case 150: name = "Alien";
		case 151: name = "X-Flow";
		case 152: name = "X-Flow";
		case 153: name = "Alien";
		case 154: name = "Alien";
		case 155: name = "Alien";
		case 156: name = "X-Flow";
		case 157: name = "X-Flow";
		case 158: name = "X-Flow";
		case 159: name = "Alien";
		case 160: name = "Alien";
		case 161: name = "X-Flow";
		case 162: name = "Alien";
		case 163: name = "X-Flow";
		case 164: name = "Alien";
		case 165: name = "X-Flow";
		case 166: name = "Alien";
		case 167: name = "X-Flow";
		case 168: name = "Alien";
		case 169: name = "Alien";
		case 170: name = "X-Flow";
		case 171: name = "Alien";
		case 172: name = "X-Flow";
		case 173: name = "X-Flow";
		case 174: name = "Chrome";
		case 175: name = "Slamin";
		case 176: name = "Chrome";
		case 177: name = "Slamin";
		case 178: name = "Slamin";
		case 179: name = "Chrome";
		case 180: name = "Chrome";
		case 181: name = "Slamin";
		case 182: name = "Chrome";
		case 183: name = "Slamin";
		case 184: name = "Chrome";
		case 185: name = "Slamin";
		case 186: name = "Slamin";
		case 187: name = "Chrome";
		case 188: name = "Slamin";
		case 189: name = "Chrome";
		case 190: name = "Slamin";
		case 191: name = "Chrome";
		case 192: name = "Chrome";
		case 193: name = "Slamin";
	}
	return name;
}
public Clima()
{
        new rw = random(sizeof RandomClima);
        SetWeather(RandomClima[rw][0]);



new textclima[50];
if(RandomClima[rw][0] == 0)
{
textclima = "a muy soleado";
}
if(RandomClima[rw][0] == 1)
{
textclima = "a soleado";
}
if(RandomClima[rw][0] == 3)
{
textclima = "a soleado con neblina";
}
if(RandomClima[rw][0] == 4)
{
textclima = "a nublado";
}
if(RandomClima[rw][0] == 7)
{
textclima = "a soleado";
}
if(RandomClima[rw][0] == 8)
{
textclima = "a lluvioso";
}
if(RandomClima[rw][0] == 9)
{
textclima = "con neblina";
}
if(RandomClima[rw][0] == 19)
{
textclima = "a una tormenta de arena";
}
new msj[350];
        format(msj, sizeof(msj), "[CNN Noticias] Informe del tiempo: {FFFFFF}El clima se pronostica en las siguientes horas %s", textclima);

SendClientMessageToAll(0xFFA500AA, msj);
}

//*************************************

public OnPlayerConnect(playerid)
{
FPS[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
//***SISTEMA AFK***
Afk[playerid]=0;
//***sistema de fire***
Apagandofire[playerid] = 0;
llegarf[playerid] = false;
//**security**
#if defined AntiJoin 1
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Entradas = 0;
new RegistroIP[20];
new Cuenta = GetTickCount();
new Nick[MAX_PLAYER_NAME];
new Codigo;
new Jugador;
new Menu[1024];
if(DetectarIP(ObtenerIP(playerid)) >= 10) return BanearBots(playerid), 0;
Jugadores = playerid > Jugadores ? playerid : IDMayor(),
BotServidor[playerid] = bool:IsPlayerNPC(playerid),
Advertencias[playerid] = 0;
Muertes[playerid] = 0;
MuerteReciente[playerid] = 0;
GetPlayerIp(playerid, RegistroIP, 19);
GetPlayerName(playerid, Nick, MAX_PLAYER_NAME);
for(Codigo = 0; Codigo < 10; Codigo++)
{
if(strlen(EntrarIP[Codigo]) < 10)  continue;
if(strcmp(RegistroIP, EntrarIP[Codigo], true) == 0)
{
if((Cuenta - MenorTiempo) < EntrarCuenta[Codigo])
{
Entradas++;
}
}
}
if (Entradas >= Logueos)
{
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Expulsado por Hack.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado. Razón: Posible intento de Score Hack.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
}
for (Codigo = 9; Codigo > 0; Codigo--)
{
Jugador = Codigo - 1;
format(EntrarIP[Codigo], 19, "%s", EntrarIP[Jugador]);
EntrarCuenta[Codigo] = EntrarCuenta[Jugador];
}
format(EntrarIP[0], 19, "%s", RegistroIP);
EntrarCuenta[0] = Cuenta;
#endif
	//************
    if(IsPlayerNPC(playerid)) return 1;
	new playerIP[16];
	//FPS[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	GetPlayerIp(playerid, playerIP, sizeof(playerIP));
	SetPlayerColor(playerid,COLOR_GRAD2);
	//PlayAudioStreamForPlayer(playerid, "http://d.mimp3.me/d/921932471_39545944-/skrillex-ft-damian-jr-gong-marley-make-it-bun-dem.mp3", 1, 1, 1, 1, 0);
	PlayAudioStreamForPlayer(playerid, "http://k49.offliberty.com/Qk-QxCOcIbM.mp3", 1, 1, 1, 1, 0);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bienvenido a Perfect City!");
	if (CheckBan(playerIP) == 1)
	{
	    SetPlayerName(playerid, "BannedPlayer");
	    SendClientMessage(playerid, COLOR_RED, "{00B500}Perfect City:{FFFFFF} Lo sentimos, te encuentras baneado de este servidor - Puedes pedir ser Desbaneado en el Foro: perfectcity-rp.com");
		Kick(playerid);
		return 1;
 	}
	TotalConnect++;
	resetPlayerVariables(playerid);
	MapsRemoveForPlayer(playerid);
	ClearMarriage(playerid);
	SyncPlayerTime(playerid);
    ClearChatbox(playerid);
	//SafeLogin(playerid);

	if(Iter_Count(Player) > MaxPlayersConnected)
	{
		MaxPlayersConnected = Iter_Count(Player);
		gettime(MPHour,MPMinute);
		getdate(MPYear,MPMonth,MPDay);
	}
	if(Info[playerid][pPbizzkey] == 0)
	{
	Info[playerid][pPbizzkey] = 9999;
	}
	if(MaxPlayersConnected > 200) MaxPlayersConnected = 200;

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(!INI_Exist(playername))
	{
    	if(doesAccountExist(playername))
    	{
			ConvertAccount(playerid);
			return 1;
		}
	}
	SetTimerEx("SafeLogin", 4000, 0, "d", playerid);
	//GameTextForPlayer(playerid, "~w~Cargando datos de tu cuenta", 1500, 3);
	
	Koson1[playerid] = 0;Kosonrob[playerid] = 1 ;
    recojercesped[playerid]=0;
    papilla[playerid] = 0;
    acobrarcesped[playerid]=0;
    autorepara[playerid] = 0;
    armaRecibir[playerid]=0;
	SetPVarInt(playerid,"PlayerStartDrova",0);
	lena1[playerid] = 0;
	HaveTaser[playerid] = 0;
	RemovePlayerAttachedObject(playerid, 0);
	SetPVarInt(playerid,"Miner", 0);
 	SetPVarInt(playerid,"Start", 0);
 	Vortex[playerid] = 0;
	//*******************texto estado*******************
	textdrawscount++;
 	VentaDeArmaCon[playerid][0] = -1;
    VentaDeArmaCon[playerid][1] = 0;
    Watching[playerid] = 0;
    manubrio[playerid] = 0;
    refuer[playerid] = 0;
    RadioOn[playerid] = 1;
    SetTimerEx("TimerROB",1200000,false,"d",playerid);
    //*************LOGIN MENU************************+++
	//*********************HISTORIAL POLICIAL***********+
		//Textdraw fichas policiales
	HISLSPD0[playerid] = CreatePlayerTextDraw(playerid,496.222137, 121.962211, "usebox");
	PlayerTextDrawLetterSize(playerid, HISLSPD0[playerid], 0.000000, 24.129753);
	PlayerTextDrawTextSize(playerid, HISLSPD0[playerid], 156.222213, 0.000000);
	PlayerTextDrawAlignment(playerid, HISLSPD0[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD0[playerid], 0);
	PlayerTextDrawUseBox(playerid, HISLSPD0[playerid], true);
	PlayerTextDrawBoxColor(playerid, HISLSPD0[playerid], 102);
	PlayerTextDrawSetShadow(playerid, HISLSPD0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD0[playerid], 0);
	PlayerTextDrawFont(playerid, HISLSPD0[playerid], 0);

	HISLSPD2[playerid] = CreatePlayerTextDraw(playerid,278.221954, 143.857894, "NOMBRE");
	PlayerTextDrawLetterSize(playerid, HISLSPD2[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, HISLSPD2[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD2[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, HISLSPD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD2[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD2[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD2[playerid], 1);

	HISLSPD4[playerid] = CreatePlayerTextDraw(playerid,278.222167, 187.164459, "sexo");
	PlayerTextDrawLetterSize(playerid, HISLSPD4[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, HISLSPD4[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD4[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, HISLSPD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD4[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD4[playerid], 1);

	HISLSPD6[playerid] = CreatePlayerTextDraw(playerid,278.666625, 212.551147, "edad");
	PlayerTextDrawLetterSize(playerid, HISLSPD6[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, HISLSPD6[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD6[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, HISLSPD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD6[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD6[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD6[playerid], 1);

	HISLSPD8[playerid] = CreatePlayerTextDraw(playerid,277.333160, 238.933471, "antecedentes");
	PlayerTextDrawLetterSize(playerid, HISLSPD8[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, HISLSPD8[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD8[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, HISLSPD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD8[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD8[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD8[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD8[playerid], 1);

	HISLSPD12[playerid] = CreatePlayerTextDraw(playerid,410.666534, 113.599983, "LSPD");
	PlayerTextDrawLetterSize(playerid, HISLSPD12[playerid], 0.996666, 5.398044);
	PlayerTextDrawAlignment(playerid, HISLSPD12[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD12[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, HISLSPD12[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD12[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD12[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD12[playerid], 3);
	PlayerTextDrawSetProportional(playerid, HISLSPD12[playerid], 1);

	HISLSPD1[playerid] = CreatePlayerTextDraw(playerid,176.888870, 144.853378, "_"); //imagen skin
 	PlayerTextDrawLetterSize(playerid, HISLSPD1[playerid], 0.000000, 0.000000);
 	PlayerTextDrawBackgroundColor(playerid, HISLSPD1[playerid], 0);
	PlayerTextDrawTextSize(playerid, HISLSPD1[playerid], 86.222229, 167.751068);
	PlayerTextDrawUseBox(playerid, HISLSPD1[playerid], 1);
	PlayerTextDrawBoxColor(playerid, HISLSPD1[playerid], 0x00000000);
	PlayerTextDrawColor(playerid, HISLSPD1[playerid], -1);
	PlayerTextDrawFont(playerid, HISLSPD1[playerid], TEXT_DRAW_FONT_MODEL_PREVIEW);

	HISLSPD3[playerid] = CreatePlayerTextDraw(playerid,278.222167, 162.773406, "NOMBRE USER");
	PlayerTextDrawLetterSize(playerid, HISLSPD3[playerid], 0.412222, 1.375998);
	PlayerTextDrawAlignment(playerid, HISLSPD3[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD3[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD3[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD3[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD3[playerid], 1);

	HISLSPD5[playerid] = CreatePlayerTextDraw(playerid,337.777832, 187.662246, "hombre");
	PlayerTextDrawLetterSize(playerid, HISLSPD5[playerid], 0.422889, 1.470577);
	PlayerTextDrawAlignment(playerid, HISLSPD5[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD5[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD5[playerid], 1);

	HISLSPD7[playerid] = CreatePlayerTextDraw(playerid,339.110870, 212.551162, "99");
	PlayerTextDrawLetterSize(playerid, HISLSPD7[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, HISLSPD7[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD7[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD7[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD7[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD7[playerid], 2);
	PlayerTextDrawSetProportional(playerid, HISLSPD7[playerid], 1);

	HISLSPD9[playerid] = CreatePlayerTextDraw(playerid,279.555511, 266.311187, "antecedente 1");
	PlayerTextDrawLetterSize(playerid, HISLSPD9[playerid], 0.227333, 1.151998);
	PlayerTextDrawAlignment(playerid, HISLSPD9[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD9[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD9[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD9[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD9[playerid], 1);
	PlayerTextDrawSetProportional(playerid, HISLSPD9[playerid], 1);

	HISLSPD10[playerid] = CreatePlayerTextDraw(playerid,279.999847, 285.724426, "antecedente 2");
	PlayerTextDrawLetterSize(playerid, HISLSPD10[playerid], 0.227332, 1.151991);
	PlayerTextDrawAlignment(playerid, HISLSPD10[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD10[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD10[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD10[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD10[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD10[playerid], 1);
	PlayerTextDrawSetProportional(playerid, HISLSPD10[playerid], 1);

	HISLSPD11[playerid] = CreatePlayerTextDraw(playerid,280.444366, 306.133453, "antecedente 3");
	PlayerTextDrawLetterSize(playerid, HISLSPD11[playerid], 0.227332, 1.151998);
	PlayerTextDrawAlignment(playerid, HISLSPD11[playerid], 1);
	PlayerTextDrawColor(playerid, HISLSPD11[playerid], -1);
	PlayerTextDrawSetShadow(playerid, HISLSPD11[playerid], 0);
	PlayerTextDrawSetOutline(playerid, HISLSPD1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, HISLSPD1[playerid], 51);
	PlayerTextDrawFont(playerid, HISLSPD11[playerid], 1);
	PlayerTextDrawSetProportional(playerid, HISLSPD11[playerid], 1);
//***licencia por textdraw***
//textdraw licencias
 	LICENCIA0[playerid] = CreatePlayerTextDraw(playerid,423.333221, 146.851150, "usebox");
	PlayerTextDrawLetterSize(playerid, LICENCIA0[playerid], 0.000000, 17.713949);
	PlayerTextDrawTextSize(playerid, LICENCIA0[playerid], 197.111145, 0.000000);
	PlayerTextDrawAlignment(playerid, LICENCIA0[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA0[playerid], 0);
	PlayerTextDrawUseBox(playerid, LICENCIA0[playerid], true);
	PlayerTextDrawBoxColor(playerid, LICENCIA0[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LICENCIA0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA0[playerid], 0);
	PlayerTextDrawFont(playerid, LICENCIA0[playerid], 0);

	LICENCIA5[playerid] = CreatePlayerTextDraw(playerid,290.222015, 229.475631, "nombre");
	PlayerTextDrawLetterSize(playerid, LICENCIA5[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, LICENCIA5[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA5[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, LICENCIA5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA5[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA5[playerid], 1);

	LICENCIA6[playerid] = CreatePlayerTextDraw(playerid,291.110992, 260.337951, "edad");
	PlayerTextDrawLetterSize(playerid, LICENCIA6[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, LICENCIA6[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA6[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, LICENCIA6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA6[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA6[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA6[playerid], 1);

	LICENCIA7[playerid] = CreatePlayerTextDraw(playerid,291.999847, 281.742340, "sexo");
	PlayerTextDrawLetterSize(playerid, LICENCIA7[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, LICENCIA7[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA7[playerid], 869072810);
	PlayerTextDrawSetShadow(playerid, LICENCIA7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA7[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA7[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA7[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA7[playerid], 1);

	LICENCIA1[playerid] = CreatePlayerTextDraw(playerid,204.888900, 155.306671, "_"); //SKIN
	PlayerTextDrawLetterSize(playerid, LICENCIA1[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LICENCIA1[playerid], 80.888839, 144.355529);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA1[playerid], 0);
	PlayerTextDrawUseBox(playerid, LICENCIA1[playerid], 1);
	PlayerTextDrawBoxColor(playerid, LICENCIA1[playerid], 0x00000000);
	PlayerTextDrawColor(playerid, LICENCIA1[playerid], -1);
	PlayerTextDrawFont(playerid, LICENCIA1[playerid], TEXT_DRAW_FONT_MODEL_PREVIEW);

	LICENCIA2[playerid] = CreatePlayerTextDraw(playerid,291.111358, 246.897644, "nombre_apellido");
	PlayerTextDrawLetterSize(playerid, LICENCIA2[playerid], 0.227332, 1.151991);
	PlayerTextDrawAlignment(playerid, LICENCIA2[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LICENCIA2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA2[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA2[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA2[playerid], 1);

	LICENCIA3[playerid] = CreatePlayerTextDraw(playerid,334.666656, 149.333389, "_");//ICONO LICENCIA
	PlayerTextDrawLetterSize(playerid, LICENCIA3[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LICENCIA3[playerid], 82.222198, 80.640014);
	PlayerTextDrawTextSize(playerid, LICENCIA3[playerid], 82.222198, 80.640014);
	PlayerTextDrawAlignment(playerid, LICENCIA3[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LICENCIA3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA3[playerid], 0);
	PlayerTextDrawFont(playerid, LICENCIA3[playerid], 4);

	LICENCIA4[playerid] = CreatePlayerTextDraw(playerid,352.000061, 262.826721, "99");
	PlayerTextDrawLetterSize(playerid, LICENCIA4[playerid], 0.227332, 1.151998);
	PlayerTextDrawAlignment(playerid, LICENCIA4[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LICENCIA4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA4[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA4[playerid], 1);

	LICENCIA8[playerid] = CreatePlayerTextDraw(playerid,351.555389, 284.231170, "hombre");
	PlayerTextDrawLetterSize(playerid, LICENCIA8[playerid], 0.227332, 1.151998);
	PlayerTextDrawAlignment(playerid, LICENCIA8[playerid], 1);
	PlayerTextDrawColor(playerid, LICENCIA8[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LICENCIA8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LICENCIA8[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LICENCIA8[playerid], 51);
	PlayerTextDrawFont(playerid, LICENCIA8[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LICENCIA8[playerid], 1);
//**********************
	return 1;
}

function SafeLogin(playerid)
{
	ClearChatbox(playerid);
	SetPlayerJoinCamera(playerid);
	ClearChatbox(playerid);
	TextDrawShowForPlayer(playerid, Drawlogueando0);
	TextDrawShowForPlayer(playerid, Drawlogueando1);
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	if(INI_Exist(playername))
	{
	    gPlayerAccount[playerid] = 1;
        ShowMainMenuDialog(playerid, 1);
		return 1;
	}
	else
	{
	    if(strfind( playername, "_", true) == -1)
		{
		    SetPlayerName(playerid, "InvalidNick");
			SendClientMessage(playerid, COLOR_GENERAL, "{008EC1}Perfect City:{FFFFFF} Vuelve a entrar con el formato indicado. Ejemplo: Nombre_Apellido");
			Kick(playerid);
		}
		else
		{
			gPlayerAccount[playerid] = 0;
        	ShowMainMenuDialog(playerid, 2);
	    }
 	}
 	return 1;
}
/*new LogeoReglas[10000];
strcat(LogeoReglas, "{0082A8}Bienvenido a {E63022}Perfect City:{FFFFFF} tú mejor opción! \n\n");
strcat(LogeoReglas, "{FFFFFF}Invita a tus amigos y diviertete.\n");
SafeDialogEx(playerid, ACEPTAR_TER, DIALOG_STYLE_MSGBOX, " ", LogeoReglas, "Seguir","");
return 1;
}*/

ShowMainMenuDialog(playerid, frame)
{
	new titlestring[28];
	//new string[128];
	InsideMainMenu[playerid] = true;
	switch(frame)
	{
		case 1:
		{
		    INI_ParseFile(UserPath(playerid), "LoadUser_pass", .bExtra = true, .extra = playerid);
			/*new ip[32];
			GetPlayerIp(playerid, ip, 32);*/
			format(titlestring, sizeof(titlestring), "{008EC1}%s", GetPlayerNameEx(playerid));
			//format(string, sizeof(string), "{FFFFFF}Direccion IP: %s\nBienvenido de nuevo!\n\n{FF0000}Contraseña:", ip);
			//SafeDialogEx(playerid,DLOGIN,DIALOG_STYLE_PASSWORD ,titlestring,string,"Entrar","Salir");
			SafeDialogEx(playerid,DLOGIN,DIALOG_STYLE_PASSWORD ,titlestring,"¡Hola de nuevo!\n\nIngresa tu contraseña, tienes tres intentos:\n","Entrar","Salir");
			SetPlayerVirtualWorld(playerid, 20);
		}
		case 2:
		{
			new ip[32];
			GetPlayerIp(playerid, ip, 32);
			format(titlestring, sizeof(titlestring), "{008EC1}%s", GetPlayerNameEx(playerid));
			//format(string, sizeof(string), "{FFFFFF}Direccion IP: %s\nBienvenido a Perfect City\n\n{FF0000}Contraseña:", ip);
			//SafeDialogEx(playerid,DREGISTER,DIALOG_STYLE_PASSWORD ,titlestring,string,"Registrar","Salir");
			SafeDialogEx(playerid,DREGISTER,DIALOG_STYLE_PASSWORD ,titlestring,"¡Bienvenido al servidor!\n\nPara registrarte ingresa tu contraseña:\n","Registrar","Salir");
	    	SetPlayerVirtualWorld(playerid, 20);
		}
	}
}

function Lotto(number)
{
	new JackpotFallen = 0;
	new string[128];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Noticias - Loteria: {FFFFFF}Hoy en dia el numero ganador es... %d", number);
    OOCNews(COLOR_GREEN, string);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Info[i][pLottoNr] > 0)
			{
			    if(Info[i][pLottoNr] == number)
				{
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "Lotería: {FFFFFF}%s ha ganado el acumulado de $%d .", winner, Jackpot);
					OOCNews(COLOR_GREEN, string);
					format(string, sizeof(string), "SMS: Has ganado $%d con tu boleta de lotería - Felicitaciones. De: 9891 - (Lotería)", Jackpot);
					SendClientMessageEx(i, COLOR_YELLOW, string);
					GivePlayerCash(i, Jackpot);
					PlayerPlayMusic(i);
			    }
			    else
			    {
			        SendClientMessageEx(i, COLOR_WHITE, "* No has ganado la loteria, suerte en la proxima.");
			    }
			}
			Info[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(20000); rand += 5000;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "{A2DC35}Lotería: {FFFFFF}El nuevo premio se ha iniciado con $%d", Jackpot);
		OOCNews(0xFFFFFFFF, string);
	}
	else
	{
	    new rand = random(5000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "{A2DC35}Lotería:{FFFFFF} El premio se ha aumentado a {FFFF00}$%d", Jackpot);
		OOCNews(0xFFFFFFFF, string);
	}
	return 1;

}
//****************************************************************************

resetPlayerVariables(playerid)
{
    Info[playerid][pTarjetaCredito] = 0;
    SetPVarInt(playerid, "IntentosIngreso", 0);
	SetPVarInt(playerid, "shrequest", INVALID_PLAYER_ID);
	SetPVarInt(playerid, "IsInArena", 0);
	SetPVarInt(playerid, "ArenaMode", 0);
	SetPVarInt(playerid, "FirstSpawn", 1);
	SetPVarInt(playerid, "editingfamhq", 255);
	SetPVarInt(playerid, "editingcd", -1);
	SetPVarInt(playerid, "editingcdveh", -1);

   	UsedCrack[playerid] = 0; 					UsedWeed[playerid] = 0;            CurrentDialog[playerid] = -1;
	CrackOffer[playerid] = 999; 				CrackGram[playerid] = 0; 			CrackPrice[playerid] = 0;           PlayerStoned[playerid] = 0;
   	PotPrice[playerid] = 0; 					PotGram[playerid] = 0;              estacionp[playerid] = 0;            PotOffer[playerid] = 999;
	gOoc[playerid] = 0; 						gNews[playerid] = 0; 				BigEar[playerid] = 0; 				gFam[playerid] = 0;
	gPlayerLogged{playerid} = 0;                NewbieTimer[playerid] = 0; 			VIPTimer[playerid] = 0;             gNewbie[playerid] = 1;
	gPlayerSpawned[playerid] = 0; 				gLastCar[playerid] = 0;             gPlayerAccount[playerid] = 0;       gPlayerLogTries[playerid] = 0;
	TicketOffer[playerid] = 999; 				TicketMoney[playerid] = 0;          InsideMainMenu[playerid] = 0;       PlayerTazeTime[playerid] = 0;
	Paquetes[playerid] = 0; 					TutTime[playerid] = 0; 				HireKey[playerid] = 9999;			TaxiAccepted[playerid] = 999;
	ReduceTime[playerid] = 0;           		KnockedDown[playerid] = 0; 			UnidentifedCall[playerid] = 0;      TransportDriver[playerid] = 999;
	TransportValue[playerid] = 0; 				TransportMoney[playerid] = 0; 		TransportTime[playerid] = 0; 		TransportCost[playerid] = 0;
    IDCode[playerid] = -1;                      BoomBox[playerid] = 0;              BoomOn[playerid] = 0;
	OwnableCarOffer[playerid] = 999; 			OwnableCarID[playerid] = 999; 		OwnableCarPrice[playerid] = 0; 		BlindFold[playerid] = 0;
	PlayerIsSweeping[playerid] = 0; 			AdminDuty[playerid] = 0; 			PlayerNeedsHelp[playerid] = 0; 		IsSmoking[playerid] = 0;
	HelpingNewbie[playerid] = 999;              PlayerDuda[playerid] = 0;           Info[playerid][pSacoBidon] = 0;
	NewUsed[playerid] = 0; 						gRadio[playerid] = 1;				slotselection[playerid] = 0;		JobDuty[playerid] = 0;
	PuedeP[playerid] = 0; 						PuedeD[playerid] = 0;				TelfRob[playerid] = 0;      		duda[playerid] = 0;
	Facturing[playerid] = 0; 					fPay[playerid] = 0; 				fDest[playerid] = 0; 				fFacturer[playerid] = 0;
	Refueling[playerid] = -1;					courtjail[playerid] = 0;    		RequestingBackup[playerid] = 0; 	PlayersChannel[playerid] = 999;
    Info[playerid][pMaskuse] = 0;               Info[playerid][pMask] = 0;          Info[playerid][pPusoEstado] = 0;    Info[playerid][pGanzuas] = 0;
    Lineas[playerid] = 0;						Carnada[playerid] = 0;				MedicAccepted[playerid] = 999;		MedicCallTime[playerid] = 0;
 	RegText[playerid] = 0;						RegConfig[playerid] = 0;			HidePM[playerid] = 0; 				PhoneOnline[playerid] = 0;
	FishCount[playerid] = 0;					UsedFind[playerid] = 0;				FreezeLast[playerid] = 0; 			MoneyMessage[playerid] = 0;
	Condom[playerid] = 0; 						LoadTruckTime[playerid] = 0;		TruckDeliver[playerid] = 0; 		TruckUsed[playerid] = INVALID_VEHICLE_ID;
	LiveOffer[playerid] = 999;					TakingLesson[playerid] = 0;         RStep[playerid] = 0;                LoadTruckBar[playerid] = INVALID_BAR_ID;
	LoadMonTimee[playerid] = 0;                 LoadMonTime[playerid] = 0;          LoadMoneyy[playerid] = INVALID_BAR_ID; 	LoadMoney[playerid] = INVALID_BAR_ID;
 	PlayerCuffedTime[playerid] = 0; 			TazerTimeout[playerid] = 0; 		pTazer[playerid] = 0; 				pTazerReplace[playerid] = 0;// tazer
    advisorchat[playerid] = 1;                  carsforplayer[playerid] = 0;        TalkingLive[playerid] = INVALID_PLAYER_ID;
   	Ipadon[playerid] = 0;                       OnDuty[playerid] = 0;               arr_Towing[playerid] = INVALID_VEHICLE_ID;
	Muted[playerid] = 0;                        pCurrentWeapon[playerid] = 0;       DrugFarming[playerid] = 0;          gPlayerCheckpointStatus[playerid] = 0;
	TutStep[playerid] = 0;                      PlayerIsSweeping[playerid] = 0;     TransportDuty[playerid] = 0;        gPlayerAnimLibsPreloaded[playerid] = 0;
	MatsOffer[playerid] = 999;                  MatsPrice[playerid] = 0;            MatsAmount[playerid] = 0;           gPlayerUsingLoopingAnim[playerid] = 0;
	GGOffer[playerid] = 999;                    GGPrice[playerid] = 0;              GGAmount[playerid] = 0;
 	VIPPrice[playerid] = 0;                     VIPOffer[playerid] = 999;       	EventLastInt[playerid] = 0;         EventLastVW[playerid] = 0;
	FOffer[playerid] = 999;						FPrice[playerid] = 0; 				FAmount[playerid] = 0;              Mobile[playerid] = INVALID_PLAYER_ID;
 	GuardOffer[playerid] = 999;                 GuardPrice[playerid] = 0;           JetPack[playerid] = 0;              MechanicCallTime[playerid] = 0;
	CurrentMoney[playerid] = 0;                 EMSAccepted[playerid] = 999;        EMSCallTime[playerid] = 0;          RefillOffer[playerid] = 999;
	RepairCar[playerid] = 0;                    RepairOffer[playerid] = 999;        RepairPrice[playerid] = 0;          tarmalimit[playerid] = -1;
	RefillPrice[playerid] = 0;                  Info[playerid][pPusoEscudo] = 0;    Info[playerid][pPusoChaleco] = 0;   Info[playerid][pUniformeP] = 0;
	InviteOffer[playerid] = 999;                InviteFaction[playerid] = 0;        InviteFamily[playerid] = 255;       JustDuda[playerid] = -1;
	GunOffer[playerid] = 999;                   GunMats[playerid] = 0;              GunId[playerid] = 0;                JustAfk[playerid] = -1;
	VehicleOffer[playerid] = 999;               VehiclePrice[playerid] = 0;         VehicleId[playerid] = -1;
	HouseOffer[playerid] = 999;                 HousePrice[playerid] = 0;           House[playerid] = -1;
	JailPrice[playerid] = 0;                    duda[playerid] = 3;                 JustReported[playerid] = -1;
	Spectating[playerid] = 0;                   GettingSpectated[playerid] = 999;   Spectate[playerid] = 999;           Unspec[playerid][sLocal] = 255;
	PlayerDrunkTime[playerid] = 0;           	PlayerDrunk[playerid] = 0;          Editing[playerid] = 0;
 	Info[playerid][pDNIFalse] = 0;     	        strmid(DNIName[playerid], "Nadie", 0, strlen("Nadie"), 32);
    LoadMonTimeeee[playerid] = 0; 	                                                                                    strmid(Info[playerid][pDNIName], "Ninguno", 0, strlen("Ninguno"), 12);
 	LoadMoneyyyy[playerid] = INVALID_BAR_ID;
 	//Hotdog[playerid] = 0;
	BalasDeGoma[playerid] = 0;
    Blinded[playerid] = 0; 						Tied[playerid] = 0;
	ShowRules[playerid] = 0;                    RulesTime[playerid] = 0;
    CommandSpamTimes[playerid] = 0;				CommandSpamUnmute[playerid] = 0;
	HitOffer[playerid] = 999;					HitToGet[playerid] = 999; 			GoChase[playerid] = 999; 			GetChased[playerid] = 999;
    CraftOffer[playerid] = 999;				    CraftId[playerid] = 0;              CraftMats[playerid] = 0;
	format(QFA[playerid],24,"Nadie");           Correctas[playerid] = 0;

	for(new i = 0; i < 6; i++)
	{
	    EventFloats[playerid][i] = 0.0;
	}

	for(new s = 0; s < 40; s++)
	{
		ListItemReportId[playerid][s] = -1;
		ListItemTrackId[playerid][s] = -1;
	}

	for(new s = 0; s < 13; s++)
	{
		Info[playerid][pWeapons][s] = 0;
	}
    for(new s = 0; s < 11; s++)
	{
		Info[playerid][pMuebles][s] = -1;
	}
	//*******************Player Variables*******************
	Info[playerid][pSaldo] = 0;                 Info[playerid][pPlan] = 0;
	Info[playerid][pCheques] = 0;               Info[playerid][pPublicista] = 0;
	Info[playerid][pTarjetaCredito] = 0;        Info[playerid][pBoombox] = 0;
	Info[playerid][pLevel] = 0;					Info[playerid][pAdminZC] = 0;
	Info[playerid][pFactionModerator] = 0;		Info[playerid][pGangModerator] = 0;
	Info[playerid][pLvlAdminZC] = 0;			Info[playerid][pHelper] = 0;
	Info[playerid][pBanAppealer] = 0;			Info[playerid][pConnectTime] = 0;
	Info[playerid][pReg] = 0;					Info[playerid][pSex] = 0;
	Info[playerid][pAge] = 0;					Info[playerid][pOrigin] = 0;
	Info[playerid][pExp] = 0;					Info[playerid][pAccount] = 0;
	Info[playerid][pDeaths] = 0;				Info[playerid][pArrested] = 0;
	Info[playerid][pJailAdmin] = 0; 			Info[playerid][pOrder] = 0;
	Info[playerid][pTempVIP] = 0; 				Info[playerid][pBuddyInvited] = 0;
	Info[playerid][pVIPInviteDay] = 0;			Info[playerid][pVTokens] = 0;
	Info[playerid][pJob2] = 0;					Info[playerid][pTypeSpawn] = 0;
	Info[playerid][pShopTech] = 0;				Info[playerid][pEstado] = 0;
	Info[playerid][pVIPDateM] = -1;				Info[playerid][pVIPDateD] = -1;
	Info[playerid][pRegalo] = -1;				Info[playerid][pLottoNr] = 0;
	Info[playerid][pJob] = 0;					Info[playerid][pNMute] = 0;
	Info[playerid][pNMuteTotal] = 0;			Info[playerid][pWarn] = 0;
	Info[playerid][pWRestricted] = 0;			Info[playerid][pJailed] = 0;
	Info[playerid][pJailTime] = 0;				Info[playerid][pMats] = 0;
	Info[playerid][pDrugs] = 0;					Info[playerid][pCosecha] = 0;
	Info[playerid][pCrack] = 0;					Info[playerid][pPot] = 0;
	Info[playerid][pAdiccion] = 0;				Info[playerid][pPackages] = 0;
	Info[playerid][pLeader] = 0;				Info[playerid][pMember] = 0;
	Info[playerid][pDivision] = 0;				Info[playerid][pFMember] = 255;
	Info[playerid][pDPHours] = 0;				Info[playerid][pDPTime] = -1;
	Info[playerid][pDPTotal] = 0;				Info[playerid][pRank] = 0;
	Info[playerid][pChar] = 0;					Info[playerid][pHealth] = 50.0;
	Info[playerid][pArmour] = 0.0;				Info[playerid][pPos_x] = 1612.3240;
	Info[playerid][pPos_y] = -2330.1670;		Info[playerid][pPos_z] = 13.5469;
	Info[playerid][pInt] = 0;					Info[playerid][pTeam] = 3;
	Info[playerid][pModel] = 7;					Info[playerid][pSprunk] = 0;
	Info[playerid][pPnumber] = 0;				Info[playerid][pPhoneBook] = 0;
	Info[playerid][pPhousekey]=INVALID_HOUSE_ID;Info[playerid][pPhousekey2] = INVALID_HOUSE_ID;
	Info[playerid][pCarLic] = 0;				Info[playerid][pFlyLic] = 0;
	Info[playerid][pBoatLic] = 0;				Info[playerid][pGunLic] = 0;
	Info[playerid][pReanimador] = 0;            Info[playerid][pGanzuas] = 0;
	Info[playerid][pGafas] = 0;					Info[playerid][pTut] = 0;
	Info[playerid][pTestTut] = 0;				Info[playerid][pLighter] = 0;
	Info[playerid][pCigarettes] = 0;			Info[playerid][pHideNumber] = 0;
	Info[playerid][pSpeaker] = 0;				Info[playerid][pBannedZC] = 0;
	Info[playerid][pDisabledZC] = 0;			Info[playerid][pBlockBug] = 0;
	new dni = 100000 + random(899999);			Info[playerid][pDNI] = dni;
	Info[playerid][pArmsSkill] = 0;				Info[playerid][pTruckSkill] = 0;
    Info[playerid][pSmugSkill] = 0;				Info[playerid][pDrugsSkill] = 0;
	Info[playerid][pRequestingBackup] = 0;		Info[playerid][pSIDA] = 0;
	Info[playerid][pCancer] = 0;				Info[playerid][pEpilepsia] = 0;
	Info[playerid][pDengue] = 0;				Info[playerid][pWantedLevel] = 0;
    Info[playerid][pAntiSIDA] = 0;				Info[playerid][pAntiCancer] = 0;
    Info[playerid][pAntiEpilepsia] = 0;			Info[playerid][pRenting] = INVALID_HOUSE_ID;
    Info[playerid][p_Pr_Money] = 0;             Info[playerid][pRHours] = 0;
    Info[playerid][pRob] = 0;					Info[playerid][pVIP] = 0;
    Info[playerid][pBanDuda] = 0;				Info[playerid][pRMuted] = 0;
 	Info[playerid][pRMutedTotal] = 0;			Info[playerid][pRMutedTime] = 0;
	Info[playerid][pPasaporte] = 0;				Info[playerid][pRadio] = 0;
    Info[playerid][pRadioFreq] = 0;				Info[playerid][pIpadMusic] = 0;
    Info[playerid][pGiftTime] = 0;				Info[playerid][pAccent] = 0;
	Info[playerid][pPaintTeam] = 0; 			Info[playerid][pPaintTokens] = 0;
    Info[playerid][pUndercover] = 0;			Info[playerid][pVehicleKeysFrom] = INVALID_PLAYER_ID;
    Info[playerid][pVIPCHAT] = 0;				Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
    Info[playerid][pSpraycan] = 0;				Info[playerid][pCarKey2]=INVALID_PLAYER_VEHICLE_ID;
    Info[playerid][pServiceTime] = 0; 			Info[playerid][pTriageTime] = 0;
    Info[playerid][pTaxiLicense] = 0;			Info[playerid][pLock] = 0;
    Info[playerid][pHead] = 0; 					Info[playerid][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
    Info[playerid][pCHits] = 0;					Info[playerid][pFHits] = 0;
	Info[playerid][pJudgeJailTime] = 0;			Info[playerid][pJudgeJailType] = 0;
	Info[playerid][pBeingSentenced] = 0;		Info[playerid][pProbationTime] = 0;
	Info[playerid][pWExists] = 0;				Info[playerid][pWX] = 0;
	Info[playerid][pWY] = 0;					Info[playerid][pWZ] = 0;
	Info[playerid][pWVW] = 0;					Info[playerid][pWInt] = 0;
	Info[playerid][pWValue] = -1;				Info[playerid][pWTimer] = -1;
	Info[playerid][pWSeeds] = 0;				Info[playerid][YaCobre] = 0;
 	Info[playerid][pADMute] = 0;				Info[playerid][pADMuteTotal] = 0;
	Info[playerid][pADTime] = 0;				Info[playerid][pOther] = 5;
	Info[playerid][pGTokens] = 0;				Info[playerid][pDobleExp] = 0;
	Info[playerid][pAdverID] = -1;              Info[playerid][pFirstaid] = 0;
	Info[playerid][pScrewdriver] = 0;           Info[playerid][pPTR] = 0;
	Info[playerid][pSurveillance] = 0;
    Info[playerid][pModStaff] = 0;
    
    GetPlayerName(playerid, Info[playerid][pNormalName], MAX_PLAYER_NAME);
	format(Info[playerid][pAutoTextReply], 64, "Nada");
    format(Info[playerid][pContractBy], 32, "");
    format(Info[playerid][pCorreo], 64, "");
	format(Info[playerid][pContractDetail], 64, "");
	format(Info[playerid][pWarrant], 128, "");

    for(new v = 0; v < MAX_PLAYERTOYS; v++)
    {
        PlayerToyInfo[playerid][v][ptModelID] = 0;
        PlayerToyInfo[playerid][v][ptBone] = 0;
        PlayerToyInfo[playerid][v][ptPosX] = 0.0;
        PlayerToyInfo[playerid][v][ptPosY] = 0.0;
        PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
        PlayerToyInfo[playerid][v][ptRotX] = 0.0;
        PlayerToyInfo[playerid][v][ptRotY] = 0.0;
        PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
        PlayerToyInfo[playerid][v][ftscaleX] = 1;
        PlayerToyInfo[playerid][v][ftscaleY] = 1;
        PlayerToyInfo[playerid][v][ftscaleZ] = 1;
	}
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
        PlayerVehicleInfo[playerid][v][pvModelId] = 0;
        PlayerVehicleInfo[playerid][v][pvPosX] = 0.0;
        PlayerVehicleInfo[playerid][v][pvPosY] = 0.0;
        PlayerVehicleInfo[playerid][v][pvPosZ] = 0.0;
        PlayerVehicleInfo[playerid][v][pvPosAngle] = 0.0;
        PlayerVehicleInfo[playerid][v][pvVW] = 0;
        PlayerVehicleInfo[playerid][v][pvLock] = 0;
        PlayerVehicleInfo[playerid][v][pvLocked] = 0;
        PlayerVehicleInfo[playerid][v][pvPaintJob] = -1;
        PlayerVehicleInfo[playerid][v][pvColor1] = 0;
		PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
        PlayerVehicleInfo[playerid][v][pvColor2] = 0;
        PlayerVehicleInfo[playerid][v][pvPrice] = 0;
        PlayerVehicleInfo[playerid][v][pvTicket] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][0] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][1] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][2] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][3] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][4] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][5] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][6] = 0;
        PlayerVehicleInfo[playerid][v][pvWeapons][7] = 0;
		PlayerVehicleInfo[playerid][v][pvWepUpgrade] = -1;
		PlayerVehicleInfo[playerid][v][pvFuel] = 200;
		PlayerVehicleInfo[playerid][v][pvSpawned]= 0;
		PlayerVehicleInfo[playerid][v][pvHealth] = 1000.0;
		strcpy(PlayerVehicleInfo[playerid][v][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
        PlayerVehicleInfo[playerid][v][pvAllowedPlayerId] = INVALID_PLAYER_ID;
        PlayerVehicleInfo[playerid][v][pvPark] = 0;
        for(new m = 0; m < MAX_MODS; m++)
	    {
            PlayerVehicleInfo[playerid][v][pvMods][m] = 0;
		}
	}
	GiveKeysTo[playerid] = INVALID_PLAYER_ID;	CancelReport[playerid] = -1;
	return true;
}

function ConvertAccount(playerid)
{
	new string2[64], string[128];
	new playername2[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername2, sizeof(playername2));
	format(string2, sizeof(string2), USERFILEOLD, playername2);
	new File: UserFile = fopen(string2, io_read);
	if(UserFile)
	{
		new key[ 256 ] , val[ 256 ];
		new Data[ 256 ];
		while ( fread( UserFile , Data , sizeof( Data ) ) )
		{
			key = ini_GetKey( Data );
            if( strcmp( key , "TarjetaCredito" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTarjetaCredito] = strval( val ); }
			if( strcmp( key , "Key" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pKey], val, 0, strlen(val)-1, 24); }
			if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pLevel] = strval( val ); }
			if( strcmp( key , "AdminNivelZC" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAdminZC] = strval( val ); }
            if( strcmp( key , "AdminZC" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pLvlAdminZC] = strval( val ); }
			if( strcmp( key , "BanAppealer" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBanAppealer] = strval( val ); }
			if( strcmp( key , "FactionModerator" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pFactionModerator] = strval( val ); }
			if( strcmp( key , "ModStaff" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pModStaff] = strval( val ); }
            if( strcmp( key , "GangModerator" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pGangModerator] = strval( val ); }
			if( strcmp( key , "Helper" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pHelper] = strval( val ); }
			if( strcmp( key , "Publicista" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPublicista] = strval( val ); }
		 	if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pConnectTime] = strval( val ); }
			if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pReg] = strval( val ); }
			if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pSex] = strval( val ); }
			if( strcmp( key , "Age" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAge] = strval( val ); }
		 	if( strcmp( key , "Origin" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pOrigin] = strval( val ); }
			if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pExp] = strval( val ); }
			if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "Cash", strval( val )); }
			if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAccount] = strval( val ); }
			if( strcmp( key , "IP" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pIP], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pKills] = strval( val ); }
			if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDeaths] = strval( val ); }
           	if( strcmp( key , "Arrested" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pArrested] = strval( val ); }
           	if( strcmp( key , "JailAdmin" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJailAdmin] = strval( val ); }
			if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pLottoNr] = strval( val ); }
			if( strcmp( key , "Job" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJob] = strval( val ); }
           	if( strcmp( key , "NewMuted" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pNMute] = strval( val ); }
           	if( strcmp( key , "NewMutedTotal" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pNMuteTotal] = strval( val ); }
           	if( strcmp( key , "Warn" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWarn] = strval( val ); }
            if( strcmp( key , "WRestricted" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWRestricted] = strval( val ); }
			if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJailed] = strval( val ); }
			if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJailTime] = strval( val ); }
			if( strcmp( key , "Materials" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pMats] = strval( val ); }
            if( strcmp( key , "Packages" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, key, strval( val )); }
			if( strcmp( key , "Drugs" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDrugs] = strval( val ); }
            if( strcmp( key , "Cosecha" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCosecha] = strval( val ); }
			if( strcmp( key , "Crack" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCrack] = strval( val ); }
            if( strcmp( key , "Pot" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPot] = strval( val ); }
            if( strcmp( key , "Crates" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCrates] = strval( val ); }
			if( strcmp( key , "Adic" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAdiccion] = strval( val ); }
			if( strcmp( key , "Leader" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pLeader] = strval( val ); }
			if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pMember] = strval( val ); }
            if( strcmp( key , "FMember" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pFMember] = strval( val ); }
			if( strcmp( key , "Division" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDivision] = strval( val ); }
			if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRank] = strval( val ); }
			if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pChar] = strval( val ); }
			if( strcmp( key , "pHealth" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pHealth] = floatstr( val ); }
			if( strcmp( key , "pArmour" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pArmour] = floatstr( val ); }
			if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTeam] = strval( val ); }
			if( strcmp( key , "Model" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pModel] = strval( val ); }
			if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPnumber] = strval( val ); }
			if( strcmp( key , "Sprunk" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pSprunk] = strval( val ); }
			if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPhoneBook] = strval( val ); }
			if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPhousekey] = strval( val ); }
            if( strcmp( key , "House2" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPhousekey2] = strval( val ); }
			if( strcmp( key , "Int" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pInt] = strval( val ); }
			if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPos_x] = floatstr( val ); }
	        if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPos_y] = floatstr( val ); }
	        if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPos_z] = floatstr( val ); }
            if( strcmp( key , "SPos_r" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPos_r] = floatstr( val ); }
			if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCarLic] = strval( val ); }
            if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pFlyLic] = strval( val ); }
			if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBoatLic] = strval( val ); }
	        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pGunLic] = strval( val ); }
	        if( strcmp( key , "Reanimador" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pReanimador] = strval( val ); }
	        if( strcmp( key , "Gafas" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pGafas] = strval( val ); }
			if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTut] = strval( val ); }
            if( strcmp( key , "Test" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTestTut] = strval( val ); }
			if( strcmp( key , "VWorld" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVW] = strval( val ); }
	        if( strcmp( key , "Lighter" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pLighter] = strval( val ); }
	        if( strcmp( key , "Cigarettes" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCigarettes] = strval( val ); }
	        if( strcmp( key , "BanZC" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBannedZC] = strval( val ); }
	        if( strcmp( key , "Ganzuas" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pGanzuas] = strval( val ); }
	        if( strcmp( key , "DisabledZC" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDisabledZC] = strval( val ); }
			if( strcmp( key , "BlockBug" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBlockBug] = strval( val ); }
			if( strcmp( key , "DNI" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDNI] = strval( val ); }
	        if( strcmp( key , "VSkill" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pArmsSkill] = strval( val ); }
	        if( strcmp( key , "TSkill" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTruckSkill] = strval( val ); }
            if( strcmp( key , "SmugglerSkill" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pSmugSkill] = strval( val ); }
            if( strcmp( key , "DrugsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDrugsSkill] = strval( val ); }
			if( strcmp( key , "SIDA" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pSIDA] = strval( val ); }
			if( strcmp( key , "Cancer" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCancer] = strval( val ); }
	        if( strcmp( key , "Epilepsia" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pEpilepsia] = strval( val ); }
	        if( strcmp( key , "Dengue" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pDengue] = strval( val ); }
	        if( strcmp( key , "FStyle" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pFStyle] = strval( val ); }
	        if( strcmp( key , "Busqueda" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWantedLevel] = strval( val ); }
	        if( strcmp( key , "AntiSIDA" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAntiSIDA] = strval( val ); }
	        if( strcmp( key , "AntiCancer" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAntiCancer] = strval( val ); }
	        if( strcmp( key , "AntiEpilepsia" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAntiEpilepsia] = strval( val ); }
	        if( strcmp( key , "Rent" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRenting] = strval( val ); }
	        if( strcmp( key , "prMoney" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][p_Pr_Money] = strval( val ); }
	        if( strcmp( key , "Rob" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRob] = strval( val ); }
            if( strcmp( key , "Premium" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVIP] = strval( val ); }
            if( strcmp( key , "FichasCash" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPTR] = strval( val ); }
            if( strcmp( key , "CarPremium" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCarKey2] = strval( val ); }
            if( strcmp( key , "BanDuda" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBanDuda] = strval( val ); }
			if( strcmp( key , "ReportMuted" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRMuted] = strval( val ); }
            if( strcmp( key , "ReportMutedTotal" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRMutedTotal] = strval( val ); }
			if( strcmp( key , "ReportMutedTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRMutedTime] = strval( val ); }
		    if( strcmp( key , "Pasaporte" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPasaporte] = strval( val ); }
            if( strcmp( key , "RadioP" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRadio] = strval( val ); }
			if( strcmp( key , "KHZ" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRadioFreq] = strval( val ); }
			if( strcmp( key , "Ipad" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pIpadMusic] = strval( val ); }
   			if( strcmp( key , "GiftTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pGiftTime] = strval( val ); }
   			if( strcmp( key , "Negocio" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPbizzkey] = strval( val ); }
   			if( strcmp( key , "skinn" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pgskin] = strval( val ); }
     	    if( strcmp( key , "robita" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][probita] = strval( val ); }
			for(new s = 0; s < 13; s++)
			{
				format(string, 128, "Gun%d", s);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWeapons][s] = strval( val ); }
			}
			if( strcmp( key , "Acento" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pAccent] = strval( val ); }
			if( strcmp( key , "PTokens" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pPaintTokens] = strval( val ); }
			if( strcmp( key , "Undercover" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pUndercover] = strval( val ); }
            if( strcmp( key , "Head" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pHead] = strval( val ); }
            if( strcmp( key, "TaxiLicense" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTaxiLicense] = strval( val ); }
            if( strcmp( key , "Hospital" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pHospital] = strval( val ); }
			if( strcmp( key , "CHits" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pCHits] = strval( val ); }
			if( strcmp( key , "FHits" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pFHits] = strval( val ); }
           	if( strcmp( key , "Spraycan" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pSpraycan] = strval( val ); }
			if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pMarried] = strval( val ); }
			if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "ContractBy" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pContractBy], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "ContractDetail" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pContractDetail], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "pWExists" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWExists] = strval( val ); }
			if( strcmp( key , "pWX" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWX] = floatstr( val ); }
			if( strcmp( key , "pWY" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWY] = floatstr( val ); }
			if( strcmp( key , "pWZ" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWZ] = floatstr( val ); }
			if( strcmp( key , "pWVW" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWVW] = strval( val ); }
			if( strcmp( key , "pWInt" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWInt] = strval( val ); }
			if( strcmp( key , "pWValue" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWValue] = strval( val ); }
			if( strcmp( key , "pWSeeds" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pWSeeds] = strval( val ); }
			if( strcmp( key , "PayEx" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][YaCobre] = strval( val ); }
            if( strcmp( key , "AdMuted" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pADMute] = strval( val ); }
			if( strcmp( key , "AdMutedTotal" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pADMuteTotal] = strval( val ); }
            if( strcmp( key , "Warrants" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Info[playerid][pWarrant], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "JudgeJailTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJudgeJailTime] = strval( val ); }
			if( strcmp( key , "JudgeJailType" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJudgeJailType] = strval( val ); }
            if( strcmp( key , "BeingSentenced" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBeingSentenced] = strval( val ); }
            if( strcmp( key , "ProbationTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pProbationTime] = strval( val ); }
  	        if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBiggestFish] = strval( val ); }
            if( strcmp( key , "RewardsHours" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRHours] = strval( val ); }
            if( strcmp( key , "ADTime" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pADTime] = strval( val ); }
            if( strcmp( key , "Otros" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pOther] = strval( val ); }
            if( strcmp( key , "GGTokens" , true ) == 0 ){ val = ini_GetValue( Data ); Info[playerid][pGTokens] = strval( val ); }
            if( strcmp( key , "HDExp" , true ) == 0 ){ val = ini_GetValue( Data ); Info[playerid][pDobleExp] = strval( val ); }
            if( strcmp( key , "DPHoras" , true ) == 0 ){ val = ini_GetValue( Data ); Info[playerid][pDPHours] = strval( val ); }
            if( strcmp( key , "DPTiempo" , true ) == 0 ){ val = ini_GetValue( Data ); Info[playerid][pDPTime] = strval( val ); }
            if( strcmp( key , "DPTotal" , true ) == 0 ){ val = ini_GetValue( Data ); Info[playerid][pDPTotal] = strval( val ); }
            if( strcmp( key , "Order" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pOrder] = strval( val ); }
            if( strcmp( key , "TempVIP" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTempVIP] = strval( val ); }
            if( strcmp( key , "VIPInviteDay" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVIPInviteDay] = strval( val ); }
			if( strcmp( key , "BuddyInvite" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pBuddyInvited] = strval( val ); }
            if( strcmp( key , "VTokens" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVTokens] = strval( val ); }
			if( strcmp( key , "Job2" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pJob2] = strval( val ); }
			if( strcmp( key , "TypeSpawn" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pTypeSpawn] = strval( val ); }
   			if( strcmp( key , "ShopTech" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pShopTech] = strval( val ); }
            if( strcmp( key , "Status" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pEstado] = strval( val ); }
            if( strcmp( key , "DayVIP" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVIPDateD] = strval( val ); }
            if( strcmp( key , "MonthVIP" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pVIPDateM] = strval( val ); }
            if( strcmp( key , "IDRegalo" , true ) == 0 ) { val = ini_GetValue( Data ); Info[playerid][pRegalo] = strval( val ); }
			for(new v = 0; v < MAX_PLAYERTOYS; v++)
	        {
	        	format(string, 128, "pt%dModelID",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptModelID] = strval( val ); }
				format(string, 128, "pt%dBone",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptBone] = strval( val ); }
				format(string, 128, "pt%dPosX",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosX] = floatstr( val ); }
				format(string, 128, "pt%dPosY",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosY] = floatstr( val ); }
				format(string, 128, "pt%dPosZ",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosZ] = floatstr( val ); }
				format(string, 128, "pt%dRotX",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotX] = floatstr( val ); }
				format(string, 128, "pt%dRotY",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotY] = floatstr( val ); }
				format(string, 128, "pt%dRotZ",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotZ] = floatstr( val ); }
				format(string, 128, "pt%dSizX",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ftscaleX] = floatstr( val ); }
				format(string, 128, "pt%dSizY",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ftscaleY] = floatstr( val ); }
				format(string, 128, "pt%dSizZ",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ftscaleZ] = floatstr( val ); }
			}
			for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	        {
				format(string, 128, "pv%dPosX",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPosX] = floatstr( val ); }
				format(string, 128, "pv%dPosY",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPosY] = floatstr( val ); }
				format(string, 128, "pv%dPosZ",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPosZ] = floatstr( val ); }
				format(string, 128, "pv%dPosAngle",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPosAngle] = floatstr( val ); }
				format(string, 128, "pv%dVirtualW",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvVW] = strval( val ); }
				format(string, 128, "pv%dModelId",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvModelId] = strval( val ); }
				format(string, 128, "pv%dLock",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvLock] = strval( val ); }
				format(string, 128, "pv%dLocked",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvLocked] = strval( val ); }
				format(string, 128, "pv%dPaintJob",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPaintJob] = strval( val ); }
				format(string, 128, "pv%dColor1",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvColor1] = strval( val ); }
				format(string, 128, "pv%dColor2",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvColor2] = strval( val ); }
				format(string, 128, "pv%dPrice",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvPrice] = strval( val ); }
				format(string, 128, "pv%dTicket",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvTicket] = strval( val ); }
				format(string, 128, "pv%dWeapon0",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][0] = strval( val ); }
				format(string, 128, "pv%dWeapon1",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][1] = strval( val ); }
				format(string, 128, "pv%dWeapon2",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][2] = strval( val ); }
				format(string, 128, "pv%dWeapon3",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][3] = strval( val ); }
				format(string, 128, "pv%dWeapon4",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][4] = strval( val ); }
				format(string, 128, "pv%dWeapon5",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][5] = strval( val ); }
				format(string, 128, "pv%dWeapon6",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][6] = strval( val ); }
				format(string, 128, "pv%dWeapon7",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWeapons][7] = strval( val ); }
				format(string, 128, "pv%dWepUpgrade",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvWepUpgrade] = strval( val ); }
				format(string, 128, "pv%dFuel",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvFuel] = strval( val ); }
				format(string, 128, "pv%dImpound",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvImpounded] = strval( val ); }
				format(string, 128, "pv%dHealth",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvHealth] = floatstr( val ); }
				/*format(string, 128, "pv%dNumPlate",v);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); strcpy(PlayerVehicleInfo[playerid][v][pvNumberPlate], Data, 32); }*/ //PlayerVehicleInfo[playerid][v][pvNumberPlate] = floatstr( val ); }
				for(new m = 0; m < MAX_MODS; m++)
	        	{
            	    format(string, 128, "pv%dMod%d", v, m);
                    if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerVehicleInfo[playerid][v][pvMods][m] = strval( val ); }
	        	}
	        }
		}
    	if(!INI_Exist(playername2))
    	{
	    	new INI:File = INI_Open(UserPath(playerid));
	    	INI_SetTag(File,"data");
     		INI_WriteInt(File,"Password",udb_hash(Info[playerid][pKey]));
	    	INI_WriteInt(File,"Level",Info[playerid][pLevel]);
	    	INI_WriteInt(File,"AdminNivelZC",Info[playerid][pAdminZC]);
	    	INI_WriteInt(File,"AdminZC",Info[playerid][pLvlAdminZC]);
	    	INI_WriteInt(File,"BanAppealer",Info[playerid][pBanAppealer]);
			INI_WriteInt(File,"FactionModerator",Info[playerid][pFactionModerator]);
			INI_WriteInt(File,"ModStaff",Info[playerid][pModStaff]);
			INI_WriteInt(File,"GangModerator",Info[playerid][pGangModerator]);
			INI_WriteInt(File,"Helper",Info[playerid][pHelper]);
			INI_WriteInt(File,"Publicista",Info[playerid][pPublicista]);
			INI_WriteInt(File,"ConnectedTime",Info[playerid][pConnectTime]);
			INI_WriteInt(File,"Registered",Info[playerid][pReg]);
			INI_WriteInt(File,"Sex",Info[playerid][pSex]);
			INI_WriteInt(File,"Age",Info[playerid][pAge]);
			INI_WriteInt(File,"Origin",Info[playerid][pOrigin]);
			INI_WriteInt(File,"Respect",Info[playerid][pExp]);
        	INI_WriteInt(File,"Money",GetPVarInt(playerid, "Cash"));
        	INI_WriteInt(File,"Bank",Info[playerid][pAccount]);
        	INI_WriteString(File,"IP", Info[playerid][pIP]);
        	INI_WriteInt(File,"DNIFalse",Info[playerid][pDNIFalse]);
        	INI_WriteString( File, "DNIName",Info[playerid][pDNIName]);
        	INI_WriteInt(File,"Kills",Info[playerid][pKills]);
        	INI_WriteInt(File,"Ganzuas",Info[playerid][pGanzuas]);
        	INI_WriteInt(File,"Deaths",Info[playerid][pDeaths]);
        	INI_WriteInt(File,"Arrested",Info[playerid][pArrested]);
        	INI_WriteInt(File,"JailAdmin",Info[playerid][pJailAdmin]);
        	INI_WriteInt(File,"LottoNr",Info[playerid][pLottoNr]);
        	INI_WriteInt(File,"Job",Info[playerid][pJob]);
        	INI_WriteInt(File,"NewMuted",Info[playerid][pNMute]);
        	INI_WriteInt(File,"NewMutedTotal",Info[playerid][pNMuteTotal]);
        	INI_WriteInt(File,"Warn",Info[playerid][pWarn]);
        	INI_WriteInt(File,"WRestricted",Info[playerid][pWRestricted]);
        	INI_WriteInt(File,"Jailed",Info[playerid][pJailed]);
        	INI_WriteInt(File,"JailTime",Info[playerid][pJailTime]);
        	INI_WriteInt(File,"Materials",Info[playerid][pMats]);
        	INI_WriteInt(File,"Packages",GetPVarInt(playerid, "Packages"));
        	INI_WriteInt(File,"Drugs",Info[playerid][pDrugs]);
        	INI_WriteInt(File,"Cosecha",Info[playerid][pCosecha]);
        	INI_WriteInt(File,"Crack",Info[playerid][pCrack]);
        	INI_WriteInt(File,"Pot",Info[playerid][pPot]);
        	INI_WriteInt(File,"Crates",Info[playerid][pCrates]);
        	INI_WriteInt(File,"Adic",Info[playerid][pAdiccion]);
        	INI_WriteInt(File,"Leader",Info[playerid][pLeader]);
        	INI_WriteInt(File,"Member",Info[playerid][pMember]);
        	INI_WriteInt(File,"FMember",Info[playerid][pFMember]);
        	INI_WriteInt(File,"Division",Info[playerid][pDivision]);
        	INI_WriteInt(File,"Rank",Info[playerid][pRank]);
        	INI_WriteInt(File,"Char",Info[playerid][pChar]);
        	INI_WriteFloat(File,"pHealth",Info[playerid][pHealth]);
        	INI_WriteFloat(File,"pArmour",Info[playerid][pArmour]);
        	INI_WriteInt(File,"Team",Info[playerid][pTeam]);
        	INI_WriteInt(File,"Model",Info[playerid][pModel]);
        	INI_WriteInt(File,"PhoneNr",Info[playerid][pPnumber]);
        	INI_WriteInt(File,"Sprunk",Info[playerid][pSprunk]);
        	INI_WriteInt(File,"Phonebook",Info[playerid][pPhoneBook]);
        	INI_WriteInt(File,"House",Info[playerid][pPhousekey]);
       		INI_WriteInt(File,"House2",Info[playerid][pPhousekey2]);
        	INI_WriteInt(File,"Int", Info[playerid][pInt]);
        	INI_WriteFloat(File,"Pos_x",Info[playerid][pPos_x]);
        	INI_WriteFloat(File,"Pos_y",Info[playerid][pPos_y]);
        	INI_WriteFloat(File,"Pos_z",Info[playerid][pPos_z]);
   		    INI_WriteFloat(File,"SPos_r",Info[playerid][pPos_r]);
   	        INI_WriteInt(File,"CarLic",Info[playerid][pCarLic]);
	        INI_WriteInt(File,"FlyLic",Info[playerid][pFlyLic]);
	        INI_WriteInt(File,"BoatLic",Info[playerid][pBoatLic]);
	        INI_WriteInt(File,"GunLic",Info[playerid][pGunLic]);
	        INI_WriteInt(File,"Saldo",Info[playerid][pSaldo]);
	        INI_WriteInt(File,"Plan",Info[playerid][pPlan]);
	        INI_WriteInt(File,"Reanimador",Info[playerid][pReanimador]);
	        INI_WriteInt(File,"Gafas",Info[playerid][pGafas]);
	        INI_WriteInt(File,"Tutorial",Info[playerid][pTut]);
	        INI_WriteInt(File,"Test",Info[playerid][pTestTut]);
	        INI_WriteInt(File,"VWorld",Info[playerid][pVW]);
	        INI_WriteInt(File,"Lighter",Info[playerid][pLighter]);
	        INI_WriteInt(File,"Cigarettes",Info[playerid][pCigarettes]);
	        INI_WriteInt(File,"BanZC",Info[playerid][pBannedZC]);
	        INI_WriteInt(File,"DisabledZC",Info[playerid][pDisabledZC]);
	        INI_WriteInt(File,"BlockBug",Info[playerid][pBlockBug]);
	        INI_WriteInt(File,"DNI",Info[playerid][pDNI]);
	        INI_WriteInt(File,"VSkill",Info[playerid][pArmsSkill]);
	        INI_WriteInt(File,"TSkill",Info[playerid][pTruckSkill]);
	        INI_WriteInt(File,"SmugglerSkill",Info[playerid][pSmugSkill]);
	        INI_WriteInt(File,"DrugsSkill",Info[playerid][pDrugsSkill]);
	        INI_WriteInt(File,"SIDA",Info[playerid][pSIDA]);
	        INI_WriteInt(File,"Cancer" ,Info[playerid][pCancer]);
	        INI_WriteInt(File,"Epilepsia",Info[playerid][pEpilepsia]);
	        INI_WriteInt(File,"Dengue",Info[playerid][pDengue]);
	        INI_WriteInt(File,"FStyle",Info[playerid][pFStyle]);
	        INI_WriteInt(File,"Busqueda",Info[playerid][pWantedLevel]);
	        INI_WriteInt(File,"AntiSIDA",Info[playerid][pAntiSIDA]);
	        INI_WriteInt(File,"AntiCancer",Info[playerid][pAntiCancer]);
	        INI_WriteInt(File,"AntiEpilepsia",Info[playerid][pAntiEpilepsia]);
	        INI_WriteInt(File,"Rent",Info[playerid][pRenting]);
	        INI_WriteInt(File,"prMoney",Info[playerid][p_Pr_Money]);
	        INI_WriteInt(File,"Rob",Info[playerid][pRob]);
	        INI_WriteInt(File,"Premium",Info[playerid][pVIP]);
	        INI_WriteInt(File,"FichasCash",Info[playerid][pPTR]);
	        INI_WriteInt(File,"CarPremium",Info[playerid][pCarKey2]);
	        INI_WriteInt(File,"BanDuda",Info[playerid][pBanDuda]);
	        INI_WriteInt(File,"ReportMuted",Info[playerid][pRMuted]);
	        INI_WriteInt(File,"ReportMutedTotal",Info[playerid][pRMutedTotal]);
	        INI_WriteInt(File,"ReportMutedTime",Info[playerid][pRMutedTime]);
	        INI_WriteInt(File,"Pasaporte",Info[playerid][pPasaporte]);
	        INI_WriteInt(File,"RadioP", Info[playerid][pRadio]);
	        INI_WriteInt(File,"KHZ",Info[playerid][pRadioFreq]);
	        INI_WriteInt(File,"Ipad",Info[playerid][pIpadMusic]);
	        INI_WriteInt(File,"GiftTime",Info[playerid][pGiftTime]);
			for( new m = 0; m < 13; m++ )
			{
			    new mStr[24];
			    format(mStr,sizeof(mStr), "Gun%d", m);
			    INI_WriteInt(File,mStr, Info[playerid][pWeapons][m]);
			}
			INI_WriteInt(File,"Acento",Info[playerid][pAccent]);
			INI_WriteInt(File,"PTokens",Info[playerid][pPaintTokens]);
			INI_WriteInt(File,"Undercover",Info[playerid][pUndercover]);
			INI_WriteInt(File,"Head",Info[playerid][pHead]);
			INI_WriteInt(File,"TaxiLicense", Info[playerid][pTaxiLicense]);
			INI_WriteInt(File,"Hospital",Info[playerid][pHospital]);
			INI_WriteInt(File,"CHits",Info[playerid][pCHits]);
			INI_WriteInt(File,"FHits",Info[playerid][pFHits]);
			INI_WriteInt(File,"Spraycan",Info[playerid][pSpraycan]);
			INI_WriteInt(File,"Married",Info[playerid][pMarried]);
			INI_WriteString(File,"MarriedTo",Info[playerid][pMarriedTo]);
			INI_WriteString(File,"ContractBy",Info[playerid][pContractBy]);
			INI_WriteString(File,"ContractDetail",Info[playerid][pContractDetail]);
			INI_WriteString(File,"Correo",Info[playerid][pCorreo]);
			INI_WriteInt(File,"pWExists",Info[playerid][pWExists]);
			INI_WriteFloat(File,"pWX",Info[playerid][pWX]);
			INI_WriteFloat(File,"pWY",Info[playerid][pWY]);
			INI_WriteFloat(File,"pWZ",Info[playerid][pWZ]);
			INI_WriteInt(File,"pWVW",Info[playerid][pWVW]);
			INI_WriteInt(File,"pWInt",Info[playerid][pWInt]);
			INI_WriteInt(File,"pWValue",Info[playerid][pWValue]);
			INI_WriteInt(File,"pWSeeds",Info[playerid][pWSeeds]);
			INI_WriteInt(File,"PayEx",Info[playerid][YaCobre]);
			INI_WriteInt(File,"AdMuted",Info[playerid][pADMute]);
			INI_WriteInt(File,"AdMutedTotal",Info[playerid][pADMuteTotal]);
			INI_WriteString(File,"Warrants",Info[playerid][pWarrant]);
			INI_WriteInt(File,"JudgeJailTime",Info[playerid][pJudgeJailTime]);
			INI_WriteInt(File,"JudgeJailType",Info[playerid][pJudgeJailType]);
			INI_WriteInt(File,"BeingSentenced",Info[playerid][pBeingSentenced]);
			INI_WriteInt(File,"ProbationTime",Info[playerid][pProbationTime]);
			INI_WriteInt(File,"RewardsHours",Info[playerid][pRHours]);
			INI_WriteInt(File,"ADTime",Info[playerid][pADTime]);
			INI_WriteInt(File,"Otros",Info[playerid][pOther]);
			INI_WriteInt(File,"GGTokens",Info[playerid][pGTokens]);
			INI_WriteInt(File,"HDExp",Info[playerid][pDobleExp]);
			INI_WriteInt(File,"DPHoras",Info[playerid][pDPHours]);
			INI_WriteInt(File,"DPTiempo",Info[playerid][pDPTime]);
			INI_WriteInt(File,"DPTotal",Info[playerid][pDPTotal]);
			INI_WriteInt(File,"Order",Info[playerid][pOrder]);
			INI_WriteInt(File,"TempVIP",Info[playerid][pTempVIP]);
			INI_WriteInt(File,"VIPInviteDay",Info[playerid][pVIPInviteDay]);
			INI_WriteInt(File,"BuddyInvite",Info[playerid][pBuddyInvited]);
			INI_WriteInt(File,"VTokens",Info[playerid][pVTokens]);
			INI_WriteInt(File,"Job2",Info[playerid][pJob2]);
			INI_WriteInt(File,"TypeSpawn",Info[playerid][pTypeSpawn]);
			INI_WriteInt(File,"ShopTech",Info[playerid][pShopTech]);
			INI_WriteInt(File,"Status",Info[playerid][pEstado]);
			INI_WriteInt(File,"DayVIP",Info[playerid][pVIPDateD]);
			INI_WriteInt(File,"MonthVIP",Info[playerid][pVIPDateM]);
			INI_WriteInt(File,"IDRegalo",Info[playerid][pRegalo]);
			INI_WriteInt(File,"Negocio",Info[playerid][pPbizzkey]);
			INI_WriteInt(File,"skinn",Info[playerid][pgskin]);
			INI_WriteInt(File,"robita",Info[playerid][probita]);
	    	for(new v = 0; v < MAX_PLAYERTOYS; v++)
    		{
	    		new string3[64];
				format( string3, sizeof( string3 ), "pt%dModelID", v);
				INI_WriteInt(File,string3, PlayerToyInfo[playerid][v][ptModelID]);
				format(string3, 64, "pt%dBone",v);
				INI_WriteInt(File,string3, PlayerToyInfo[playerid][v][ptBone]);
				format(string3, 64, "pt%dPosX",v);
				INI_WriteFloat(File,string3, PlayerToyInfo[playerid][v][ptPosX]);
				format(string3, 64, "pt%dPosY",v);
				INI_WriteFloat(File,string3, PlayerToyInfo[playerid][v][ptPosY]);
				format(string3, 64, "pt%dPosZ",v);
				INI_WriteFloat(File,string3, PlayerToyInfo[playerid][v][ptPosZ]);
				format(string3, 64, "pt%dRotX",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ptRotX]);
				format(string3, 64, "pt%dRotY",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ptRotY]);
				format(string3, 64, "pt%dRotZ",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ptRotZ]);
				format(string3, 64, "pt%dSizX",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ftscaleX]);
				format(string3, 64, "pt%dSizY",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ftscaleY]);
				format(string3, 64, "pt%dSizZ",v);
				INI_WriteFloat(File,string3,PlayerToyInfo[playerid][v][ftscaleZ]);
    		}
    		for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    		{
    	    	new string3[64];
        		format(string3, 64, "pv%dPosX",v);
        		INI_WriteFloat(File,string3,PlayerVehicleInfo[playerid][v][pvPosX]);
        		format(string3, 64, "pv%dPosY",v);
        		INI_WriteFloat(File,string3,PlayerVehicleInfo[playerid][v][pvPosY]);
        		format(string3, 64, "pv%dPosZ",v);
        		INI_WriteFloat(File,string3,PlayerVehicleInfo[playerid][v][pvPosZ]);
        		format(string3, 64, "pv%dPosAngle",v);
        		INI_WriteFloat(File,string3,PlayerVehicleInfo[playerid][v][pvPosAngle]);
				format(string3, 64, "pv%dVirtualW",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvVW]);
				format(string3, 64, "pv%dModelId",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvModelId]);
				format(string3, 64, "pv%dLock",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvLock]);
				format(string3, 64, "pv%dLocked",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvLocked]);
				format(string3, 64, "pv%dPaintJob",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvPaintJob]);
				format(string3, 64, "pv%dColor1",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvColor1]);
				format(string3, 64, "pv%dColor2",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvColor2]);
				format(string3, 64, "pv%dPrice",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvPrice]);
				format(string3, 64, "pv%dTicket",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvTicket]);
				format(string3, 64, "pv%dWeapon0",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][0]);
				format(string3, 64, "pv%dWeapon1",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][1]);
				format(string3, 64, "pv%dWeapon2",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][2]);
				format(string3, 64, "pv%dWeapon3",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][3]);
				format(string3, 64, "pv%dWeapon4",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][4]);
				format(string3, 64, "pv%dWeapon5",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][5]);
				format(string3, 64, "pv%dWeapon6",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][6]);
				format(string3, 64, "pv%dWeapon7",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWeapons][7]);
				format(string3, 64, "pv%dWepUpgrade",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvWepUpgrade]);
				format(string3, 64, "pv%dFuel",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvFuel]);
				format(string3, 64, "pv%dImpound",v);
				INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvImpounded]);
				format(string3, 64, "pv%dHealth",v);
				INI_WriteFloat(File,string3,PlayerVehicleInfo[playerid][v][pvHealth]);

				for(new m = 0; m < MAX_MODS; m++)
				{
				    format(string3, 64, "pv%dMod%d", v, m);
				    INI_WriteInt(File,string3,PlayerVehicleInfo[playerid][v][pvMods][m]);
				}
			}
			INI_Close(File); // Closing Account and finish file
			fclose(UserFile);
			print("DEBUG: CUENTA guardada Y_INI - Archivo .ini cerrado");
			SendClientMessage(playerid, -1, "Administración: Tu cuenta ha sido convertida correctamente a y_ini.");
			SendClientMessage(playerid, -1, "Administración: Para guardarla correctamente por favor vuelve a ingresar.");
			SendClientMessage(playerid, COLOR_GENERAL, "Administración: Has sido expulsado automáticamente de Perfect City.");
			SetPlayerName(playerid, "InvalidNick");
			Kick(playerid);
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
KillTimer(AntiCmdSpamTimer[playerid]);
CommandCount[playerid] = 0;
TextDrawHideForPlayer(playerid, Textgame0);
//****sistema afk***
Afk[playerid]=0;
TextDrawHideForPlayer(playerid,Text:Messageafk);
KillTimer(Timer[playerid]);
//**security**
Jugadores = IDMayor(playerid);
if(BotServidor[playerid]) BotServidor[playerid] = false;
if(Barra[playerid] != -1)
{
KillTimer(Barra[playerid]);
Barra[playerid] = -1;
}
Advertencias[playerid] = 0;
	//************
    if(GetPVarType(playerid, "PlacedBB"))
    {
        DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
        DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
        if(GetPVarType(playerid, "BBArea"))
        {
            foreach(Player,i)
            {
                if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
                {
                    StopAudioStreamForPlayer(i);
                    SendClientMessage(i, COLOR_WHITE, "* La música deja de sonar ((El propietario de la {00AFED}boombox{FFFFFF} se ha desconectado)).");
                }
            }
        }
    }
    //TextDrawHideForPlayer(playerid, Experiencia[playerid]); //sistema experiencia//
	new plname[MAX_PLAYER_NAME];
	Delete3DTextLabel(estado[playerid]);
	GetPlayerName(playerid, plname, sizeof(plname));
	if(!strcmp(plname, "BannedPlayer", true)) return 1;
	if(!strcmp(plname, "InvalidNick", true)) return 1;
	if(playerid == MAX_PLAYERS) return 1;
	if(GetPVarInt(playerid, "TempName") == 1)
	{
	    new name[MAX_PLAYER_NAME];
		GetPVarString(playerid, "TempNameName", name, sizeof(name));
		SetPlayerName(playerid, name);
		SetPVarInt(playerid, "TempName", 0);
	}
	if(Info[playerid][pWExists] == 1)
	{
		WeedLogout(playerid);
	}
	if(pTazer[playerid] == 1) GivePlayerValidWeapon(playerid,pTazerReplace[playerid]);
	if(GetPVarInt(playerid, "SpeedRadar") == 1) GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"));
	if(GetPVarInt(playerid, "Injured") == 1)
	{
	    Info[playerid][pHospital] = 1;
	    KillEMSQueue(playerid);
        ResetPlayerWeaponsEx(playerid);
	}
	if(Info[playerid][pLockCar] != INVALID_VEHICLE_ID)
	{
		vehicle_unlock_doors(Info[playerid][pLockCar]);
	}
	if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
        PlayerVehicleInfo[Info[playerid][pVehicleKeysFrom]][Info[playerid][pVehicleKeys]][pvAllowedPlayerId] = INVALID_PLAYER_ID;
	}
	new string[128];
	switch (reason)
	{
 	   	case 0:
	   	{
		   	format(string, sizeof(string), "%s ha salido del servidor, posible crash.", GetPlayerNameEx(playerid));
		   	ProxDetector(8.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		   	if(Info[playerid][pEstado] == 2)
		   	{
                Info[playerid][pJailed] = 1;
				Info[playerid][pJailTime] += 20*60;
			}
			/*if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
                for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		    	{
					if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
					{
						new Float:x, Float:y, Float:z, Float:angle, vw;
						vw = GetPlayerVirtualWorld(playerid);
						GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
						GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
						PlayerVehicleInfo[playerid][d][pvPosX] = x;
						PlayerVehicleInfo[playerid][d][pvPosY] = y;
						PlayerVehicleInfo[playerid][d][pvPosZ] = z;
		 				PlayerVehicleInfo[playerid][d][pvPosAngle] = angle;
		 				PlayerVehicleInfo[playerid][d][pvVW] = vw;
					}
				}
	   		}*/
	   	}
	   	case 1:
 	  	{
		   	format(string, sizeof(string), "%s ha salido del servidor voluntariamente.", GetPlayerNameEx(playerid));
		   	ProxDetector(8.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		   	if(Info[playerid][pEstado] == 2)
		   	{
                Info[playerid][pJailed] = 1;
				Info[playerid][pJailTime] += 20*60;
			}
		}
		case 2:
	    {
			format(string, sizeof(string), "%s ha salido del servidor, kickeado o baneado.", GetPlayerNameEx(playerid));
			ProxDetector(8.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	   	}
	}
	if(InfoEvento[EventRequest] == playerid)
	{
	    InfoEvento[EventRequest] = 999;
		ABroadCast( COLOR_GENERAL, "Perfect City: El jugador que estaba solicitando un evento se ha desconectado o crasheó.", 4 );
	}
	if(InfoEvento[EventCreator] == playerid)
	{
	    InfoEvento[EventCreator] = 999;
		ABroadCast( COLOR_GENERAL, "Perfect City: El jugador que creó el evento se ha desconectado o crasheó.", 4 );
	}
	if(InfoEvento[EventStaff][0] == playerid)
	{
	    InfoEvento[EventStaff][0] = 999;
	}
	else if(InfoEvento[EventStaff][1] == playerid)
	{
	    InfoEvento[EventStaff][1] = 999;
	}
	else if(InfoEvento[EventStaff][2] == playerid)
	{
	    InfoEvento[EventStaff][2] = 999;
	}
	else if(InfoEvento[EventStaff][3] == playerid)
	{
	    InfoEvento[EventStaff][3] = 999;
	}
	else if(InfoEvento[EventStaff][4] == playerid)
	{
	    InfoEvento[EventStaff][4] = 999;
	}
	if(GetPVarInt(playerid, "IsInArena") == 1)
	{
	    PaintballDisconnect(playerid);
		Info[playerid][pPos_x] = GetPVarFloat(playerid, "pbOldX");
		Info[playerid][pPos_y] = GetPVarFloat(playerid, "pbOldY");
		Info[playerid][pPos_z] = GetPVarFloat(playerid, "pbOldZ");
		Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
		Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
		Info[playerid][pHealth] = GetPVarFloat(playerid, "pbOldHealth");
		Info[playerid][pArmour] = GetPVarFloat(playerid, "pbOldArmor");
		SetHP(playerid,GetPVarFloat(playerid, "pbOldHealth"));
		SetPlayerArmour(playerid,GetPVarFloat(playerid, "pbOldArmor"));
	}
	else if(GetPVarInt(playerid, "EventToken") == 0)
	{
		new Float: x, Float: y, Float: z;
		GetPlayerPos(playerid, x, y, z);
		Info[playerid][pPos_x] = x;
		Info[playerid][pPos_y] = y;
		Info[playerid][pPos_z] = z;
		GetPlayerFacingAngle(playerid, Info[playerid][pPos_r]);
		Info[playerid][pInt] = GetPlayerInterior(playerid);
		Info[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		Info[playerid][pChar] = GetPlayerSkin(playerid);
		if(Info[playerid][pChar] == 0) Info[playerid][pChar] = 299;
	}
	else if(GetPVarInt(playerid, "EventToken") == 1)
	{
	    Info[playerid][pInt] = EventLastInt[playerid];
		Info[playerid][pVW] = EventLastVW[playerid];
		Info[playerid][pChar] = Info[playerid][pChar];
		Info[playerid][pPos_r] = EventFloats[playerid][0];
		Info[playerid][pPos_x] = EventFloats[playerid][1];
		Info[playerid][pPos_y] = EventFloats[playerid][2];
		Info[playerid][pPos_z] = EventFloats[playerid][3];
	}
	else if(ShowRules[playerid] == 1)
	{
		Info[playerid][pVW] = GetPVarInt(playerid, "rOldVW");
		Info[playerid][pInt] = GetPVarInt(playerid, "rOldInt");
        Info[playerid][pPos_x] = GetPVarFloat(playerid, "rOldX");
        Info[playerid][pPos_y] = GetPVarFloat(playerid, "rOldY");
        Info[playerid][pPos_z] = GetPVarFloat(playerid, "rOldZ");
    }
	if(Spectate[playerid] < 553)
	{
        Info[playerid][pInt] = GetPVarInt(playerid, "SpecInt");
		Info[playerid][pVW] = GetPVarInt(playerid, "SpecVW");
		Info[playerid][pPos_x] = GetPVarFloat(playerid, "SpecPosX");
		Info[playerid][pPos_y] = GetPVarFloat(playerid, "SpecPosY");
		Info[playerid][pPos_z] = GetPVarFloat(playerid, "SpecPosZ");
	    GettingSpectated[Spectate[playerid]] = 999;
	    Spectate[playerid] = 999;
	}
	if(Info[playerid][pAdverID] != -1) ClearAd(Info[playerid][pAdverID]);
	if(HireKey[playerid] != 9999)
	{
	    SetVehicleToRespawn(HireKey[playerid]);
	}
    if(Interview != 0)
	{
		if(strcmp(Interviewer,plname,true) == 0 )
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Se canceló tu entrevista.");
		    Interviewer = "Nadie";
		    Interview = 0;
		}
	}
    OnPlayerSavedStats(playerid);
  	UnloadPlayerVehicles(playerid);
	ResetPlayerWeapons(playerid);

	for(new i = 0; i < MAX_REPORTS; i++)
	{
	    if(Reports[i][ReportFrom] == playerid)
	    {
	        Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
			Reports[i][TimeToExpire] = 0;
		}
	}
	foreach(Player, i)
	{
		if(TaxiAccepted[i] == playerid)
		{
			TaxiAccepted[i] = 999;
			GameTextForPlayer(i, "~w~jugador~n~~r~se desconecto", 5000, 1);
			TaxiCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(EMSAccepted[i] == playerid)
		{
			EMSAccepted[i] = 999;
			GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
			EMSCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(MedicAccepted[i] == playerid)
		{
			TaxiAccepted[playerid] = 999; MedicAccepted[playerid] = 999;
			GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
			MedicCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
		if(IsPlayerConnected(TransportDriver[playerid]))
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			format(string, sizeof(string), "~w~Pasajero se fue~n~~g~ganaste $%d",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			TransportDriver[playerid] = 999;
		}
	}
	if(GotHit[playerid] > 0)
	{
		if(GetChased[playerid] < 999)
		{
			if(IsPlayerConnected(GetChased[playerid]))
			{
				SendClientMessageEx(GetChased[playerid], COLOR_YELLOW, "Tu hit salió del servidor.");
				GoChase[GetChased[playerid]] = 999;
			}
		}
	}
 	if(GoChase[playerid] < 999){
      GetChased[GoChase[playerid]] = 999;
      GotHit[GoChase[playerid]] = 999;
 	}
	if(GetPVarInt(playerid, "AdvisorDuty") == 1) { Advisors--; }
	if(Team_Mecanicos(playerid))
	{
		if(OnDuty[playerid] == 1) { Mechanics -= 1; }
	}
	if(TransportDuty[playerid] == 1) { TaxiDrivers -= 1; }
	SetPVarInt(playerid,"Miner", 0);
 	SetPVarInt(playerid,"Start", 0);
 	if(BOMBA[playerid]){DestroyObject(BOMBA[playerid]);}
 	MoneyBet[playerid] = 0;
  	BetOnHorse[playerid] = 0;
  	Watching[playerid] = 0;
 return 1;
}




function MissileLaunchEx(Float:x, Float:y, Float:z, Float:radius, type)
{
    CreateExplosion(x, y, z, type, radius);
    Misile_Launcher --;
    new string[128];
    format(string, sizeof(string), "** Lanzamiento detonado en %0.2f - %0.2f - %0.2f, radio %d",x,y,z,radius);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

function MissileLaunch(vehicleid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid, x, y, z);
    CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);
    Misile_Launcher --;
    new string[64];
    format(string, sizeof(string), "** Lanzamiento detonado en objetivo vehículo %d",vehicleid);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}
//*******************funciones de puertas dinamicas*******************
forward IntentarTimer(playerid);
public IntentarTimer(playerid)
{
	Intentar[playerid] = 0;
}
forward HackearTimer(playerid);
public HackearTimer(playerid)
{
	Hackeargob = 0;
}
function CloseCourtGate1()
{
	MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934,7698.23632812,4);
	return 1;
}
function CloseCourtGate2()
{
	MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719,7698.24169922,4);
	return 1;
}
function GateClose(playerid)
{
      MoveDynamicObject(pdgate1,1584.68250, -1637.97388, 12.53610, 3.0);
      return 1;
}
function CloseFBI(playerid)
{
      MoveDynamicObject(FBIgate,-1412.1141, -1474.1333, 103.0417, 3.0);
      return 1;
}
function SamuelOFF(playerid)
{
      MoveDynamicObject(SamuelGate,1003.2999878,-643.5000000,124.0999985, 3.0);
      return 1;
}
function NicoOFF(playerid)
{
      MoveDynamicObject(NicoGate,268.5060100,-1330.3514400,54.9451600, 3.0);
      return 1;
}
function GateClose5()
{
	  MoveDynamicObject(pdgate2, 1544.63647, -1627.31799, 14.16765, 3.0);
      return 1;
}
function GateCloseCNN(){
       MoveDynamicObject(tvp, 1803.49744, -1721.39587, 14.32406,5.0);
       return 1;
}
function GateCloseLCN(){
       MoveDynamicObject(LCNgate, 1303.3156, -2057.1909, 60.0301,5.0);
       return 1;
}
function GateCloseNDR(){
       MoveDynamicObject(NDRgate, 2972.8317900,-1825.7243700,9.0336300,5.0);
       return 1;
}
function GateCloseYAK(){
       MoveDynamicObject(YAKgate, 321.7926600,-1187.9338400,78.1372800,5.0);
       return 1;
}
function GateCloseRU(){
       MoveDynamicObject(RUgate, 664.9176600,-1309.5562700,15.1891000,5.0);
       return 1;
}
function GateCloseRU2(){
       MoveDynamicObject(RUgate2, 658.7751500,-1226.6846900,17.7822700,5.0);
       return 1;
}
function GateCloseRU3(){
       MoveDynamicObject(RUgate3, 786.4652700,-1152.4625200,25.3604800,5.0);
       return 1;
}
function OpenDoorNG(){
       MoveDynamicObject(saem1, 2457.7949, -2254.7595, 26.8284,5.0);
       return 1;
}
function OpenDoorNG2(){
       MoveDynamicObject(saem2, -1529.0433, 482.4390, 9.0600,5.0);
       return 1;
}
function GateCloseGob(){
       MoveDynamicObject(gobiernogate, 1390.39941406,-1649.69921875,16.29999924,5.0);
       return 1;
}
function GateCloseGob1(){
       MoveDynamicObject(gobiernogate1, 1391.29980469,-1629.89941406,12.52500343,5.0);
       return 1;
}
function GateCloseRes(){
       MoveDynamicObject(portonres, -40.30374, -2507.42505, 34.83630,5.0);
       return 1;
}
function depositogate()
{
       MoveDynamicObject(depgate, 1619.69995117,-1852.59997559,12.50000000, 2.5);
       return 1;
}
/*function CloseCell2()
{
	MoveDynamicObject(fen2,1425.90002441,-1555.00000000,4334.70019531,4);
	return 1;
}*/
function CloseCell3()
{
	MoveDynamicObject(fen3,1429.50000000,-1554.80004883,4334.70019531,4);
	return 1;
}
function CloseCell4()
{
	MoveDynamicObject(fen4,1422.19995117,-1567.00000000,4334.60009766,4);
	return 1;
}
function CloseCell5()
{
	MoveDynamicObject(fen6,1430.19995117,-1566.69995117,4334.70019531,4);
	return 1;
}
function CloseCell6()
{
	MoveDynamicObject(fen5,1414.80004883,-1566.69995117,4334.60009766,4);
	return 1;
}
function GateCloseRejavip(){
       MoveDynamicObject(rejavip, 2909.96484, -666.21680, 12.56295,5.0);
       return 1;
}

function GateClosepeaje1()
{
	MoveDynamicObject(peaje1,35.25729, -1516.96399, 4.24860, 2.5);
	return 1;
}

function GateClosepeaje2()
{
	MoveDynamicObject(peaje2,67.85014, -1545.88879, 4.02450, 2.5);
	return 1;
}
//**************************************
SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerSkin(playerid, Info[playerid][pChar]);
		new Float: x, Float: y, Float: z;
		GetPlayerPos(playerid, x, y, z);
		if(x == 0.0 && y == 0.0 && z == 0.0)
		{
  			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1715.1201,-1903.1711,13.5665);
			SetPlayerFacingAngle(playerid, 359.4621);
			SetCameraBehindPlayer(playerid);
		}
	    if(GetPVarInt(playerid, "IsInArena") == 1)
		{
			SpawnPaintballArena(playerid);
			return 1;
		}
 		if( GetPVarInt(playerid, "SpecOff" ) == 1 )
		{
			SetPlayerPos(playerid, GetPVarFloat(playerid, "SpecPosX"), GetPVarFloat(playerid, "SpecPosY"), GetPVarFloat(playerid, "SpecPosZ"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "SpecInt"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SpecVW"));
			SetPVarInt(playerid, "SpecOff", 0 );
			SetPVarInt(playerid, "SpecState", -1 );
			return 1;
		}
	    if(Info[playerid][pReg] == 0)
	    {
    		SetTimerEx("FreezePlayer", 1000, false, "i", playerid);
			gNewbie[playerid]=1; gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			SetPosEx(playerid,1543.6002,-1352.6063,329.4753,269.3891,0,playerid);
			InterpolateCameraPos(playerid,1750.9696, -1344.6992, 311.3649, 1750.9696, -1344.6992, 311.3649, 20000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid,1750.6149, -1345.6239, 310.1200, 1750.0208, -1344.9828, 311.0901, 20000, CAMERA_MOVE);
			Info[playerid][pAge] = 30; Info[playerid][pSex] = 1;
			new sex[]= "{FFFFFF}En primer lugar, selecciona el género que tendrá tu personaje:\n";
			SafeDialogEx(playerid,REG_SEX,DIALOG_STYLE_MSGBOX, "{008EC1}1.- Seleccionar tu Sexo", sex, "Masculino", "Femenino");
	    }
	    if(Info[playerid][pTut] == 0)
	    {
	        ClearChatbox(playerid);
	        SetPlayerVirtualWorld(playerid, 501);
			Info[playerid][pReg] = 1;
		    /*TutStep[playerid] = 1;
    		TutTime[playerid] = 1;
    		Tutorial_Inside(playerid);*/
			return 1;
		}
		new rand;
		if(Info[playerid][pBeingSentenced] > 0)
		{
		    PhoneOnline[playerid] = 1;
		    rand = random(sizeof(WarrantJail));
			SetPlayerPos(playerid, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2]);
			if(rand != 0) courtjail[playerid] = 2;
			else courtjail[playerid] = 1;
			LoadObjects(playerid);
			SetPlayerInterior(playerid, 0);
			Info[playerid][pInt] = 0;
			return 1;
		}
		if(Info[playerid][pJailed] == 1)
		{
		    Info[playerid][pEstado] = 0;
		    PhoneOnline[playerid] = 1;
		    SetPlayerInterior(playerid, 0);
			rand = random(sizeof(OOCJail));
			LoadObjects(playerid);
			SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerSkin(playerid, 50);
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "Estás en prisión, espera acabar tu condena.");
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		if(Info[playerid][pJailed] == 2)
		{
		    PhoneOnline[playerid] = 1;
		    rand = random(sizeof(LSPDPrisonSpawns));
		    SetPlayerPos(playerid, LSPDPrisonSpawns[rand][0], LSPDPrisonSpawns[rand][1], LSPDPrisonSpawns[rand][2]);
		    LoadObjects(playerid);
			SetPlayerToTeamColor(playerid);
			Info[playerid][pInt] = 10;
			SetPlayerInterior(playerid, 10);
			Info[playerid][pVW] = 500;
			SetPlayerVirtualWorld(playerid, 500);
			return 1;
		}
		if(Info[playerid][pJailed] == 3)
		{
			LoadObjects(playerid);
		    PhoneOnline[playerid] = 1;
			SetPlayerInterior(playerid, 1);
			Info[playerid][pVW] = 600;
			Info[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 600);
			SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid,315.1677,-1451.5564,-33.5292);
			return 1;
		}
		if(Info[playerid][pJailed] == 4)
		{
		    PhoneOnline[playerid] = 1;
		    Info[playerid][pInt] = 0;
			rand = random(sizeof(OOCJail));
			LoadObjects(playerid);
			SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerInterior(playerid, 0);
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "Un administrador te pusó en prisión cuando estabas Offline, razón: Reporte en el Foro o Evasión de ROL.");
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "{A2DC35}[INFO]:{FFFFFF} Si crees que fue un error, solicita a un administrador inmediatamente.");
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		if(Info[playerid][pJailed] == 5)
		{
		    PhoneOnline[playerid] = 1;
      		LoadObjects(playerid);
			SetPlayerInterior(playerid, 0);
			Info[playerid][pInt] = 0;
			rand = random(sizeof(ICPrisonSpawns));
			SetPlayerPos(playerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerSkin(playerid, 50);
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			return 1;
		}
		if(Info[playerid][pJailed] == 6)
		{
		    PhoneOnline[playerid] = 1;
			SetPlayerInterior(playerid, 5);
			Info[playerid][pInt] = 5;
			rand = random(sizeof(PrisonDillmore));
			SetPlayerPos(playerid, PrisonDillmore[rand][0], PrisonDillmore[rand][1], PrisonDillmore[rand][2]);
			SetPlayerVirtualWorld(playerid, 400);
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			return 1;
		}
		if(GetPVarInt(playerid, "EventToken") == 1)
		{
		    DeletePVar(playerid, "EventToken");
		    SetPlayerWeapons(playerid);
		    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
			SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
			SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
			SetPlayerInterior(playerid,EventLastInt[playerid]);
			SetHP(playerid, EventFloats[playerid][4]);
			SetPlayerArmour(playerid, EventFloats[playerid][5]);
			for(new i = 0; i < 6; i++)
			{
			    EventFloats[playerid][i] = 0.0;
			}
			EventLastVW[playerid] = 0;
			EventLastInt[playerid] = 0;
			return 1;
		}
		for(new i; i < 5; i++)
		{
		    if(InfoEvento[EventStaff][i] == playerid)
		    {
		        SetPlayerWeapons(playerid);
			    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
				SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
				SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
				SetPlayerInterior(playerid,EventLastInt[playerid]);
				SetHP(playerid, EventFloats[playerid][4]);
				SetPlayerArmour(playerid, EventFloats[playerid][5]);
				for(new d = 0; d < 6; d++)
				{
				    EventFloats[playerid][d] = 0.0;
				}
				EventLastInt[playerid] = 0;
				EventLastVW[playerid] = 0;
				InfoEvento[EventStaff][i] = 999;
		    }
		}
		if(GetPVarInt(playerid, "FirstSpawn") == 2 && GetPVarInt(playerid, "Injured") == 1)
		{
		    SendEMSQueue(playerid,1);
		    return 1;
		}
		if(GetPVarInt(playerid, "FirstSpawn") == 1 && GetPVarInt(playerid, "Hospital") != 0)
		{
		    DeletePVar(playerid, "Hospital");
 			if(Info[playerid][pTypeSpawn] == 1)
 			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[LSMD]:{FFFFFF} El staff de LSMD confiscó las armas y objetos ilegales que tenias.");
				SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Te llevaron a tu casa por la caracteristica Platinum activada.");
				for(new i = 0; i < sizeof(HouseInfo); i++)
	            {
					if(Info[playerid][pPhousekey] == i || Info[playerid][pPhousekey2] == i)
					{
						Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
						SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
						LoadObjects(playerid);
						SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
						GameTextForPlayer(playerid, "~w~Bienvenido a Casa", 5000, 1);
						Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
						Info[playerid][pVW] = i+6000;
						SetPlayerVirtualWorld(playerid, i+6000);
					}
				}
				ResetPlayerWeaponsEx(playerid);
				Info[playerid][pCrack] = 0;
				Info[playerid][pDrugs] = 0;
				Info[playerid][pPot] = 0;
				return 1;
 			}
		    if(Info[playerid][pWantedLevel] > 0)
		    {
		        Info[playerid][pJailed] = 2; Info[playerid][pJailTime] = 15*60; GivePlayerCash(playerid, -1000);
		    	SendClientMessageEx(playerid, COLOR_WHITE, "Figuras como sospechoso es el sistema del gobierno.");
		    	SendClientMessageEx(playerid, COLOR_WHITE, "Te has recuperado y te pusimos en mano de las fuerzas de la ley.");
		    	SendClientMessageEx(playerid, COLOR_WHITE, "Como te encontramos herido te condenaron sólo unos días.");
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid, 10);
				Info[playerid][pInt] = 10;
		    	rand = random(sizeof(LSPDPrisonSpawns));
		    	SetPlayerPos(playerid, LSPDPrisonSpawns[rand][0], LSPDPrisonSpawns[rand][1], LSPDPrisonSpawns[rand][2]);
		    	LoadObjects(playerid);
				StopAudioStreamForPlayer(playerid);
				ResetPlayerWeaponsEx(playerid);
				Info[playerid][pCrack] = 0;
				Info[playerid][pDrugs] = 0;
				Info[playerid][pPot] = 0;
		    	return 1;
		    }
		    else
		    {
              if(Team_SAEM(playerid))
			  {
			    SetPlayerCameraPos(playerid, -1275.8849, -134.9114, 15.4816);
		        SetPlayerCameraLookAt(playerid, -1274.9304, -134.5995, 15.3813);
				SetPosEx(playerid, -1245.21777, -111.33508, 13.13590,66.4873,0,playerid);
				SendClientMessageEx(playerid, COLOR_WHITE, "Un medico de la Guardia Nacional te ha salvado la vida en el hospital de tu base.");
			  }
			  else if(Info[playerid][pOrigin] == 1)
			  {
				SetPlayerCameraPos(playerid, 1990.3605, -1480.3303, 29.9912);
				SetPlayerCameraLookAt(playerid, 1990.7931, -1479.4319, 29.8462);
				SetPosEx(playerid, 2034.5580,-1412.3188,16.9922,66.4873,0,playerid);
				SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[LSMD]:{FFFFFF} El staff de LSMD confiscó las armas y objetos ilegales que tenias, en breve te dan de alta.");
		      }
      		  SetTimerEx("HospitalFun", 15000, false, "i", playerid); StopAudioStreamForPlayer(playerid);
      		  ResetPlayerWeaponsEx(playerid);
   	  		  return 1;
    	  	}
		}
	    if(GetPVarInt(playerid, "FirstSpawn") == 1 && GetPVarInt(playerid, "Hospital") == 0)
  		{
    		SetPlayerPos(playerid,Info[playerid][pPos_x],Info[playerid][pPos_y],Info[playerid][pPos_z]);
			SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
			SetPlayerFacingAngle(playerid, Info[playerid][pPos_r]);
	    	SetPlayerInterior(playerid,Info[playerid][pInt]);
	    	SetHP(playerid, Info[playerid][pHealth]);
			SetPlayerArmour(playerid, Info[playerid][pArmour]);
			SetCameraBehindPlayer(playerid);
			if(Info[playerid][pInt] > 0 || Info[playerid][pVW] > 0)
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} Te desconectaste en un interior, están cargando los objetos, espera un momento por favor.");
				LoadObjects(playerid);
			}
		    return 1;
		}
		SetPlayerToTeamColor(playerid);
	}
	return 1;
}

function firstaid5(playerid){
	if(GetPVarInt(playerid, "usingfirstaid") == 1){
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health < 100.0){
		    if((health+10.0) <= 100.0) { SetHP(playerid, health+10.0); }
		}
	}
}
function firstaidexpire(playerid)
{
	SendClientMessageEx(playerid, COLOR_GRAD1, "{FF0000}[ATENCION]:{FFFFFF} Tu kit de primeros auxilios ya no te hará efecto.");
 	KillTimer(GetPVarInt(playerid, "firstaid5"));
  	SetPVarInt(playerid, "usingfirstaid", 0);
}
//****************************************************************************
public CamaraFPS()
{
        for(new i; i < MAX_PLAYERS; i++)
        {
        if(camaraon[i] > 0 && IsPlayerInAnyVehicle(i))
        {
                AttachObjectToVehicle(FPS[i], GetPlayerVehicleID(i), 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
        AttachCameraToObject(i, FPS[i]);
        }
        else if(camaraon[i] > 0 && !IsPlayerInAnyVehicle(i))
        {
                AttachObjectToPlayer(FPS[i], i, 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
        AttachCameraToObject(i, FPS[i]);
        }
        }
        return 1;
}
public Detect(playerid)
{
	new Ping = GetPlayerPing(playerid);
	if(Ping <= 0 || Ping >= 100000)
	{
	 if(Advertencias[playerid] >= 1) BanearBots(playerid);
	 else Advertencias[playerid]++, Barra[playerid] = SetTimerEx("Detectar", 1500, false, "Ping", playerid);
	}
	return 0;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(IsPlayerConnected(killerid) && GetPVarInt(playerid, "IsInArena") == 0)
	{
        format(QFA[playerid],24,"%s",GetPlayerNameEx(killerid));
	}
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	pTazer[playerid] = 0;
	Info[playerid][pArmour] = 0.0;
	PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0;
	DeletePVar(playerid, "SpeedRadar");
    DeletePVar(playerid, "UsingSprunk");
    KillTimer(GetPVarInt(playerid, "firstaid5"));
  	DeletePVar(playerid, "usingfirstaid");
	foreach(Player, i)
	{
		if(EMSAccepted[i] < 999)
		{
 			if(EMSAccepted[i] == playerid)
   			{
     			EMSAccepted[i] = 999;
       			GameTextForPlayer(i, "~w~Paciente~n~~r~ha muerto", 5000, 1);
	        	EMSCallTime[i] = 0;
	        	DisablePlayerCheckpoint(i);
			}
		}
	}
	for(new x;x<MAX_PLAYERTOYS;x++) RemovePlayerAttachedObject(playerid, x);
	new Float:px,Float:py,Float:pz;
	if(GetPVarInt(playerid, "EventToken") == 0)
	{
		if(GetPVarInt(playerid, "IsInArena") == 0)
		{
			SetPVarInt(playerid, "Injured", 1);
			SetPVarInt(playerid, "FirstSpawn", 2);
			new Float:mX, Float:mY, Float:mZ;
			GetPlayerPos(playerid, mX, mY, mZ);
			SetPVarFloat(playerid, "MedicX", mX);
			SetPVarFloat(playerid, "MedicY", mY);
			SetPVarFloat(playerid, "MedicZ", mZ);
			SetPVarInt(playerid, "MedicVW", GetPlayerVirtualWorld(playerid));
			SetPVarInt(playerid, "MedicInt", GetPlayerInterior(playerid));
		}
	}
	gPlayerSpawned[playerid] = 0;
	if(GetPVarInt(playerid, "IsInArena") == 1){
	    new string[128];
		if(reason >= 0 && reason <= 46){
		    new weapon[24];
		    Info[killerid][pKills] += 1;
			if(Info[killerid][pPaintTeam] == 1){
			    if(Info[killerid][pPaintTeam] == Info[playerid][pPaintTeam]){
			        TRedKills -= 1;
			        TBlueKills += 1;
			        SetHP(killerid, 0);
			        Info[killerid][pKills] -= 2;
			        Info[killerid][pDeaths] += 1;
		    		Info[playerid][pDeaths] -= 1;
			        SendClientMessageEx(killerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} No mates a los de tu mismo equipo.");
			    }
			    else{
		    		TRedKills += 1;
				}
			}
			if(Info[killerid][pPaintTeam] == 2){
			    if(Info[killerid][pPaintTeam] == Info[playerid][pPaintTeam]){
			        TRedKills += 1;
			        TBlueKills -= 1;
			        SetHP(killerid, 0);
			        Info[killerid][pKills] -= 2;
			        Info[killerid][pDeaths] += 1;
		    		Info[playerid][pDeaths] -= 1;
			        SendClientMessageEx(killerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} No mates a los de tu mismo equipo.");
			    }
	    		TBlueKills += 1;
			}
		    GetWeaponName(reason,weapon,sizeof(weapon));
			if(reason == 0){
   				Info[killerid][pPaintTokens] += 16;
   				Info[playerid][pPaintTokens] -= 16;
   				if(Info[playerid][pPaintTokens] < 0) Info[playerid][pPaintTokens] = 0;
			    format(string,sizeof(string),"[Paintball Arena] %s ganó 16 fichas de bonus por un kill a mano.",GetPlayerNameEx(killerid));
				SendPaintballArenaMessage(GetPVarInt(killerid,"ArenaMode"), COLOR_YELLOW, string);
				GameTextForPlayer(playerid,"-16 fichas", 3000, 1);
				PlayerPlaySound(killerid, 1052, 0.0, 0.0, 0.0);
	    		format(string,sizeof(string),"[Paintball Arena] %s mató a %s con sus propias manos.",GetPlayerNameEx(killerid),GetPlayerNameEx(playerid));
			}
			else{
   				Info[killerid][pPaintTokens] += 8;
   				Info[playerid][pPaintTokens] -= 8;
   				if(Info[playerid][pPaintTokens] < 0) Info[playerid][pPaintTokens] = 0;
			    format(string,sizeof(string),"[Paintball Arena] %s ganó 8 fichas de bonus por un kill.",GetPlayerNameEx(killerid));
				SendPaintballArenaMessage(GetPVarInt(killerid,"ArenaMode"), COLOR_YELLOW, string);
				GameTextForPlayer(playerid,"-8 fichas", 3000, 1);
				PlayerPlaySound(killerid, 1052, 0.0, 0.0, 0.0);
			    format(string,sizeof(string),"[Paintball Arena] %s mató a %s con una %s.",GetPlayerNameEx(killerid),GetPlayerNameEx(playerid),weapon);
			}
		}
		else{
		    Info[playerid][pDeaths] += 1;
			format(string,sizeof(string),"[Paintball Arena] %s ha muerto.",GetPlayerNameEx(playerid));
		}
	    SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_RED, string);
	}
	GetPlayerPos(playerid, px, py, pz);
	if(GetPVarInt(playerid, "Injured") == 0)
	{
		if( GetPVarInt(playerid, "EventToken") >= 1 || GetPVarInt(playerid, "IsInArena") == 1)
		{
			ResetPlayerWeapons(playerid);
		}
		else
		{
			ResetPlayerWeaponsEx(playerid);
		}
	}
	new caller = Mobile[playerid];
	if(caller != INVALID_PLAYER_ID)
	{
		if(caller < INVALID_PLAYER_ID)
		{
			SendClientMessageEx(caller,  COLOR_GRAD2, "La línea se perdió.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = INVALID_PLAYER_ID;
		}
		Mobile[playerid] = INVALID_PLAYER_ID;
		CellTime[playerid] = 0;
	}
	new string[128];
	if(Info[playerid][pHead] >= 1)
	{
		if(IsPlayerConnected(killerid))
		{
			if(GoChase[killerid] == playerid)
			{
			    new asesino[MAX_PLAYER_NAME],
					nombre[MAX_PLAYER_NAME];

				nombre = GetPlayerNameEx(playerid);
				asesino = GetPlayerNameEx(killerid);

				new takemoney = Info[playerid][pHead] / 4 * 2;
				GivePlayerCash(killerid, takemoney);
				format(string,128,"{A2DC35}[INFO]:{FFFFFF} Sicario %s ha cumplido con el contrato de %s y recaudó $%d.",asesino,nombre,Info[playerid][pHead]);
				SendFamilyMessage(17, COLOR_YELLOW, string);
				GivePlayerCash(playerid, -takemoney);
    			format(string,128,"{A2DC35}[INFO]:{FFFFFF} Has sido gravemente herido por un asesino a sueldo y pérdiste $%d.",takemoney);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				ResetPlayerWeaponsEx(playerid);
				Info[playerid][pHead] = 0;
				Info[killerid][pCHits] += 1;
				GotHit[playerid] = 0;
				GetChased[playerid] = 999;
				GoChase[killerid] = 999;
			}
		}
	}
	if(IsPlayerConnected(killerid))
 	{
		if(GoChase[playerid] == killerid)
		{
		    new asesino[MAX_PLAYER_NAME], nombre[MAX_PLAYER_NAME];

		    nombre = GetPlayerNameEx(playerid);
			asesino = GetPlayerNameEx(killerid);

			new takemoney = Info[playerid][pHead];
			GivePlayerCash(killerid, takemoney);
			format(string,128,"{A2DC35}[INFO]:{FFFFFF} Sicario %s ha fallado el contrato de %s y perdió $%d.",nombre,asesino,Info[killerid][pHead]);
			SendFamilyMessage(17, COLOR_YELLOW, string);
		   	format(string,128,"{A2DC35}[INFO]:{FFFFFF} Has matado a un asesino a sueldo y ganaste $%d, fuiste removido de la lista",Info[killerid][pHead]);
			SendClientMessageEx(killerid, COLOR_YELLOW, string);
			Info[killerid][pHead] = 0;
			Info[playerid][pFHits] += 1;
			GotHit[playerid] = 0;
			GetChased[killerid] = 999;
			GoChase[playerid] = 999;
		}
	}
 if(gPlayerUsingLoopingAnim[playerid] == 1)
	{
        gPlayerUsingLoopingAnim[playerid] = 0;
	}
	//**security**
	#if defined AntiScore 1
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Menu[1024];
if(Muertes[playerid] == 0)
{
MuerteReciente[playerid] = gettime();
}
Muertes[playerid]++;
if(Muertes[playerid] == 5)
{
if((gettime() - MuerteReciente[playerid]) <= 5)
{
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Expulsado por Hack.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado. Razón: Posible intento de Score Hack.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
}
else if((gettime() - MuerteReciente[playerid]) > 5)
{
Muertes[playerid] = 0;
}
}
#endif
	//************
	return 1;
}

public OnPlayerSpawn(playerid)
{
    //MensajesTimer = SetTimer("MensajesAleatorios",300000, 1);//edita el 300000 para cmabiar el tiempo con el que salen( 300000 son 5 minutos)
    StopAudioStreamForPlayer(playerid);
	//***********GangZone de pandillas**********

    //********sistema experiencia******//
	/*new string[128];
 	format(string, sizeof(string), "Experiencia: %d/%d", Info[playerid][pExp], (Info[playerid][pLevel]+1)*(explevel));
    TextDrawSetString(Experiencia[playerid], string);
    TextDrawShowForPlayer(playerid, Experiencia[playerid]);*/
    //***********************************************************//
	if(!gPlayerLogged{playerid})
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No has ingresado correctamente al servidor!");
        Kick(playerid);
        return 1;
 	}
	if(IsPlayerNPC(playerid)) return 1;
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
        LoadAnimLibs(playerid);
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	TextDrawShowForPlayer(playerid, Text:FechaD);
    TextDrawShowForPlayer(playerid, Text:TiempoD);
	SetPlayerWantedLevel(playerid, Info[playerid][pWantedLevel]);
	gTeam[playerid] = Info[playerid][pTeam];
	SetPlayerSpawn(playerid);
	SetPlayerWeapons(playerid);
	OnDuty[playerid] = 0;
	SetPlayerToTeamColor(playerid);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
	SyncPlayerTime(playerid);
	if(Info[playerid][pTut] == 1)
	{
	StopAudioStreamForPlayer(playerid);
	}
	return 1;
}

public OnVehicleDeath(vehicleid)
{
	new veh = GetPlayerVehicleID(vehicleid);
	if(Vehiculo_Nombrarp_Estado[veh] == 1)
	{
    	VehicleStatus{vehicleid} = 1;
		arr_Engine{vehicleid} = 0;
		Delete3DTextLabel(Texto_NombrarP[veh]);
		Vehiculo_Nombrarp_Estado[veh] = 0;
	}
    if(Lamp[vehicleid] == 1)
	{
    	DestroyObject(light[vehicleid]);
        Lamp[vehicleid] = 0;
    }
    VehicleStatus{vehicleid} = 1;
    arr_Engine{vehicleid} = 0;
    estacionveh[vehicleid] = 0;
  	return 1;
}

Log(sz_fileName[], sz_input[]) {

	new
		sz_logEntry[156],
		i_dateTime[2][3],
		File: fileHandle = fopen(sz_fileName, io_append);

	gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
	getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);

	format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
	fwrite(fileHandle, sz_logEntry);
	return fclose(fileHandle);
}
//
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
	GameTextForPlayer(playerid, "~w~Comando ~r~incorrecto", 3000, 3);
    SendClientMessage(playerid, 0xFFFFFFFF, "PCRP: ¡Usa {FF122D}/ayuda{FFFFFF} para mas información acerca de los comandos!");
    PlayerPlaySound(playerid, 1009, 0.0, 0.0, 0.0);
    }
    else
	{
	CommandCount[playerid]++;
	}
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    new carid = GetPlayerVehicleID(playerid), string[128];
	if(GetPVarInt(playerid,"FindJob") == 1)
	{
		DeletePVar(playerid, "FindJob");
		DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"FINDHQ") == 1)
	{
		DeletePVar(playerid, "FINDHQ");
		DisablePlayerCheckpoint(playerid);
		SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Llegaste! Usa F para entrar.");
	}
	//***sistema de fire***
	if(llegarf[playerid] == true)
    {
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Has llegado al checkpoint.");
        llegarf[playerid] = false;
    }
	if(MechanicCallTime[playerid] > 0)
	{
	    if(Team_Mecanicos(playerid))
		{
			MechanicCallTime[playerid] = 0;
			GameTextForPlayer(playerid, "~r~Llegaste!", 2500, 1);
			DisablePlayerCheckpoint(playerid);
		}
	}
	if(GetPVarInt(playerid, "Pizza") > 0 && IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorX], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorY], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorZ]))
	{
		if (GetPVarInt(playerid, "tpPizzaTimer") != 0)
		{
			format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport, LUGAR: JobPizzero.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast( COLOR_YELLOW, string, 2 );
    		format(string, sizeof(string), "%s (ID %d)Posible hack teleport, LUGAR: JobPizzero.", GetPlayerNameEx(playerid), playerid);
	    	Log("logs/hack.log", string);
		}
		DestroyProgressBar(PizzaBar[playerid]);
		format(string, sizeof(string), "Has entregado la pizza en su destino! + $%d a tu bolsillo.", (GetPVarInt(playerid, "pizzaTimer") * 8));
		SaveStuff();
  		//Info[playerid][pPayCheck] += floatround((GetPVarInt(playerid, "pizzaTimer") * 50), floatround_round);
  		GivePlayerCash(playerid, floatround((GetPVarInt(playerid, "pizzaTimer") * 3), floatround_round));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		SetPVarInt(playerid, "Pizza", 0);
		DisablePlayerCheckpoint(playerid);
	}
	for(new h = 0; h < MAX_POINTS; h++)
	{
		if(Points[h][Type] == 3 && GetPVarInt(playerid, "CrateDeliver") == 1 && IsPlayerInRangeOfPoint(playerid, 6.0, 2165.8655,-1675.2634,15.0859)) // POT
		{
	    	if(GetPVarInt(playerid, "tpDrugRunTimer") != 0)
	   		{
		   		format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport, LUGAR: Casa de Hierba.", GetPlayerNameEx(playerid), playerid);
		   		ABroadCast( COLOR_YELLOW, string, 2 );
		   		format(string, sizeof(string), "%s (ID %d) Posible hack teleport, LUGAR: Casa de Hierba.", GetPlayerNameEx(playerid), playerid);
		   		Log("logs/hack.log", string);
			}
			DisablePlayerCheckpoint(playerid);
			new level = Info[playerid][pSmugSkill];
   			if(level >= 0 && level <= 20)

			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $3000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 3000);
			}
			else if(level >= 21 && level <= 50)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $3500 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 3500);
			}
			else if(level >= 51 && level <= 100)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $4000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 4000);
			}
			else if(level >= 101 && level <= 200)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $4500 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 4500);
			}
			else if(level >= 201)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $5000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 5000);
			}
			DeletePVar(playerid, "CrateDeliver");
			Info[playerid][pCrates] = 0;
			//Info[playerid][pSmugSkill]++; //CAMBIR
	        if(Info[playerid][pDobleExp] == 0)
			{
              	Info[playerid][pSmugSkill]++;
			}
			else
			{
				Info[playerid][pSmugSkill] += 2;
				SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}JOB:{FFFFFF} Ganaste 2 puntos de habilidad por tener horas de doble experiencia.");
			}
			Points[h][Stock] += 10;
			format(string, sizeof(string), " HIERBA DISPONIBLE: %d/1000.", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			return 1;
		}
		if(Points[h][Type] == 4 && GetPVarInt(playerid, "CrateDeliver") == 2 && IsPlayerInRangeOfPoint(playerid, 6.0, 2348.6213,-1168.0778,27.8631)) // CRACK
		{
		    if(GetPVarInt(playerid, "tpDrugRunTimer") != 0)
		   	{
			   	format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport, LUGAR: Casa de Crack.", GetPlayerNameEx(playerid), playerid);
			   	ABroadCast( COLOR_YELLOW, string, 2 );
			   	format(string, sizeof(string), "%s (ID %d) Posible hack teleport, LUGAR: Casa de Crack.", GetPlayerNameEx(playerid), playerid);
			   	Log("logs/hack.log", string);
			}
			DisablePlayerCheckpoint(playerid);
			new level = Info[playerid][pSmugSkill];
			if(level >= 0 && level <= 20)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $3000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 3000);
			}
			else if(level >= 21 && level <= 50)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $3500 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 3500);
			}
			else if(level >= 51 && level <= 100)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $4000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 4000);
			}
			else if(level >= 101 && level <= 200)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $4500 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 4500);
			}
			else if(level >= 201)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Sumaste $5000 a tu bolsillo por traficar paquetes de droga.");
				GivePlayerCash(playerid, 5000);
			}
			DeletePVar(playerid, "CrateDeliver");
			Info[playerid][pCrates] = 0;
			//Info[playerid][pSmugSkill]++; //CAMBIR
	        if(Info[playerid][pDobleExp] == 0)
			{
              	Info[playerid][pSmugSkill]++;
			}
			else
			{
				Info[playerid][pSmugSkill] += 2;
				SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}JOB:{FFFFFF} Ganaste 2 puntos de habilidad por tener horas de doble experiencia.");
			}
			Points[h][Stock] += 10;
			format(string, sizeof(string), " CRACK DISPONIBLE: %d/1000.", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			return 1;
		}
		else if(Points[h][Type] == 2 && GetPVarInt(playerid, "MatDeliver") == 555 && IsPlayerInRangeOfPoint(playerid, 6.0, 2317.739990,-2303.850830,13.545999)) // Punto de materiales
		{
			if(GetPVarInt(playerid, "Packages") > 0)
			{
				if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
			    {
			    	format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000}: %s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			    	ABroadCast( COLOR_YELLOW, string, 2 );
			    	format(string, sizeof(string), "%s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			    	Log("logs/hack.log", string);
				}
				new payout = (25)*(GetPVarInt(playerid, "Packages"));

				if(Info[playerid][pVIP] == 1)
				{
				    Info[playerid][pMats] += 375;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 375 materiales por tu paquete de 15 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Recibes 1.5x más materiales de lo normal.");

				}
				else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
				{
				    Info[playerid][pMats] += 500;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 500 materiales por tu paquete de 20 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[SILVERGOLDVIP]:{FFFFFF} Recibes 2x más materiales de lo normal.");

				}
				else if(Info[playerid][pVIP] >= 4)
				{
				    Info[playerid][pMats] += 625;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 625 materiales por tu paquete de 25 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[PLATINUMVIP]:{FFFFFF} Recibes 2.5x más materiales de lo normal.");

				}
				else
				{
    				Info[playerid][pMats] += 250;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te dió 250 materiales por tus 10 paquetes.");
				}

				DeletePVar(playerid, "Packages");
				DeletePVar(playerid, "MatDeliver");
				DisablePlayerCheckpoint(playerid);
				for(new p = 0; p < sizeof(fINFO); p++)
				{
     if(strcmp(Points[h][Owner], fINFO[p][FamilyName], true) == 0)
					{
						fINFO[p][FamilyBank] = fINFO[p][FamilyBank]+(payout/3);
					}
				}
				return 1;
			}
		}
		else if(GetPVarInt(playerid, "MatDeliver") == 333 && IsPlayerInRangeOfPoint(playerid, 6.0, 1083.0131,-1226.7869,15.8203))// 2do Punto de materiales
		{
			if(GetPVarInt(playerid, "Packages") > 0)
			{
				if(Info[playerid][pVIP] == 1)
				{
			    	Info[playerid][pMats] += 675;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 675 materiales por tu paquete de 23 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Recibes 1.5x más materiales de lo normal.");
				}
				else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
				{
			    	Info[playerid][pMats] += 900;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 900 materiales por tu paquete de 30 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[SILVERGOLDVIP]:{FFFFFF} Recibes 2x más materiales de lo normal.");
				}
				else if(Info[playerid][pVIP] >= 4)
				{
			    	Info[playerid][pMats] += 625;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 1125 materiales por tu paquete de 38 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[PLATINUMVIP]:{FFFFFF} Recibes 2.5x más materiales de lo normal.");
				}
				else
				{
					Info[playerid][pMats] += 450;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te dió 450 materiales por tus 15 paquetes.");
				}
				DeletePVar(playerid, "Packages");
				DeletePVar(playerid, "MatDeliver");
				DisablePlayerCheckpoint(playerid);
			}
			if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
			{
			   	format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000}: %s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			   	ABroadCast( COLOR_YELLOW, string, 2 );
			   	format(string, sizeof(string), "%s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			   	Log("logs/hack.log", string);
			}
		}
		else if(GetPVarInt(playerid, "MatDeliver") == 444 && IsPlayerInRangeOfPoint(playerid, 6.0, 2534.2683,-1063.3899,69.5655)) // 3er punto de materiales
		{
			if(GetPVarInt(playerid, "Packages") > 0)
			{
				if(Info[playerid][pVIP] == 1)
				{
				    Info[playerid][pMats] += 450;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 450 materiales por tu paquete de 18 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Recibes 1.5x más materiales de lo normal.");

				}
				else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
				{
				    Info[playerid][pMats] += 600;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 600 materiales por tu paquete de 24 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[SILVERGOLDVIP]:{FFFFFF} Recibes 2x más materiales de lo normal.");

				}
				else if(Info[playerid][pVIP] >= 4)
				{
				    Info[playerid][pMats] += 750;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* La fabrica te da 750 materiales por tu paquete de 30 materiales.");
					SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[PLATINUMVIP]:{FFFFFF} Recibes 2.5x más materiales de lo normal.");

				}
				else
				{
			    	Info[playerid][pMats] += 300;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "*La fabrica te dió 300 materiales por tus 12 paquetes.");
				}

				DeletePVar(playerid, "Packages");
				DeletePVar(playerid, "MatDeliver");
				DisablePlayerCheckpoint(playerid);
				if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
			    {
			    	format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			    	ABroadCast( COLOR_YELLOW, string, 2 );
			    	format(string, sizeof(string), "%s (ID %d) Posible hack teleport, LUGAR: Punto de mats.", GetPlayerNameEx(playerid), playerid);
			    	Log("logs/hack.log", string);
				}
				return 1;
			}
		}
	}
	if(GetPVarInt(playerid,"TrackCar") != 0)
	{
	    DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid, "TrackCar");
		return 1;
	}
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
		TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~llegaste!", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "TruckDeliver") > 0 && gPlayerCheckpointStatus[playerid] != CHECKPOINT_RETURNTRUCK)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	    {
	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}JOB:{FFFFFF} Este no es un camión!");
	        return 1;
	    }
	    if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid])
	    {
	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}JOB:{FFFFFF} Este no es tu camión con la mercancía que debes entregar.");
	        return 1;
	    }

		if(!IsAtTruckDeliveryPoint(playerid))
 		{//*****En está condición se usa para que los jugadores no puedan hacer uso de exploit en los checkpoints*****
			CancelTruckDelivery(playerid);
			SendClientMessageEx(playerid, COLOR_REALRED, "{FFFF00}[ERROR]:{FFFFFF} Entraste a un checkpoint erronéo. No se completó la entrega.");
			return 1;
   		}
		if(GetPVarInt(playerid, "tpTruckRunTimer") != 0)
		{
			format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport LUGAR: JobCamioneros.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast( COLOR_YELLOW, string, 2 );
    		format(string, sizeof(string), "%s (ID %d) Posible hack teleport LUGAR: JobCamioneros.", GetPlayerNameEx(playerid), playerid);
	    	Log("logs/hack.log", string);
		}
		new truckdeliver = GetPVarInt(playerid, "d");
		TruckContents[vehicleid] = 0;

		if(truckdeliver >= 1 && truckdeliver <= 3)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado la comida y bebidas, regresa para recolectar tu paga.");
		}
		else if(truckdeliver >= 4 && truckdeliver <= 6)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado la ropa y calzado, regresa para recolectar tu paga.");
		}
		else if(truckdeliver == 7)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado los materiales, regresa para recolectar tu paga.");
		}
		else if(truckdeliver >= 8 && truckdeliver <= 10)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado los objetos del 24/7, regresa para recolectar tu paga.");
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado las armas, regresa para recolectar tu paga.");
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado las drogas, regresa para recolectar tu paga.");
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has entregado los materiales ilegales, regresa para recolectar tu paga.");
		}
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_RETURNTRUCK;
		SetPlayerCheckpoint(playerid, 2185.5232,-2261.8142,13.4319, 5);
		GameTextForPlayer(playerid, "~w~Carga ~g~Entregada", 5000, 1);
		SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Regresa a Ocean Docks para recibir tu paga.");

		SetPVarInt(playerid, "tpTruckRunTimer", 30);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
		return 1;
	}
	else if(EMSCallTime[playerid] > 0 && EMSAccepted[playerid] < 999)
	{
	    if(GetPVarInt(EMSAccepted[playerid], "Injured") == 1)
	    {
	    	SendEMSQueue(EMSAccepted[playerid],2);
	    	EMSAccepted[playerid] = 999;
	    	GameTextForPlayer(playerid, "~w~Llegaste", 5000, 1);
	    	EMSCallTime[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
		else
		{
            EMSAccepted[playerid] = 999;
		    GameTextForPlayer(playerid, "~r~Paciente ha muerto", 5000, 1);
		    EMSCallTime[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
	}
	else if(Info[playerid][pJob] == 10  || Info[playerid][pJob2] == 10)
	{
	    if(DrugFarming[playerid] == 1)
	    {
	        if(IsAHarvest(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	        {
	            if(Info[playerid][pCosecha] < 41)
	            {
	            	new cos = random(6);
         	    	DisablePlayerCheckpoint(playerid);
	            	format(string, sizeof(string), "Has cosechado y has conseguido %i Kg de cosecha!", cos+1);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					Info[playerid][pCosecha] += cos+1;
					new randomize = random(sizeof(gDrugFarmVar));
	      			SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
					return 1;
				}
				else
				{
				    DisablePlayerCheckpoint(playerid);
				    SendClientMessageEx(playerid, COLOR_YELLOW, "Tienes más de 40 Kg, no puedes llevar más.");
					format(string, sizeof(string), "Tienes %d gramos de droga en tu mochila, puedes venderla en el siguiente sitio con (/vendercosecha)", Info[playerid][pCosecha]);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SetPlayerCheckpoint(playerid, -382.1567,-1438.8259,25.7266, 2);
				    DrugFarming[playerid] = 0;
				    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				    return 1;
				}
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_YELLOW, "No estás en el coche de cosechador.");
			    DrugFarming[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			    return 1;
			}
	    }
 }
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_LOADTRUCK:
			{
			    if(IsPlayerInRangeOfPoint(playerid, 6, 2208.8469,-2294.4861,14.7647))
			    {
				    new vehicleid = GetPlayerVehicleID(playerid);
	   				if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    		{
		    		    DisablePlayerCheckpoint(playerid);
				    	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
						TogglePlayerControllable(playerid, 0);
						SetPVarInt(playerid, "IsFrozen", 1);
						//SafeDialogEx(playerid,DIALOG_LOADTRUCK,DIALOG_STYLE_LIST,"¿Que quieres transportar?","{008EC1}Mercancía Legal {FFFFFF}(Ningún riesgo)\n{FF0606}Mercancía Ilegal {FFFFFF}(Riesgo de quedar encarcelado)","Ok","Cancelar");
						SafeDialogEx(playerid, DIALOG_LOADTRUCKL, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FB7319}>>{FFFFFF}Comida y Bebida\n{FB7319}>>{FFFFFF}Ropa\n{FB7319}>>{FFFFFF}Materiales\n{FB7319}>>{FFFFFF}Objetos del 24/7", "Ok", "Cancelar");
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "No estás en un camión para transportar.");
				}
			}
			case CHECKPOINT_RETURNTRUCK:
			{
			    if(!IsPlayerInRangeOfPoint(playerid, 6, 2185.5232,-2261.8142,13.4319))
			    {
                    CancelTruckDelivery(playerid);
                    SendClientMessageEx(playerid, COLOR_REALRED, "{FFFF00}[ERROR]:{FFFFFF} Fuiste a un checkpoint erronéo, la entrega no se completo.");
					return 1;
			    }
 				if(GetPVarInt(playerid, "tpTruckRunTimer") != 0)
				{
					format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s (ID %d) Posible hack teleport.", GetPlayerNameEx(playerid), playerid);
  					ABroadCast( COLOR_YELLOW, string, 2 );
    				format(string, sizeof(string), "%s (ID %d) Posible hack teleport truckrunning.", GetPlayerNameEx(playerid), playerid);
	    			Log("logs/hack.log", string);
				}
   				new vehicleid = GetPlayerVehicleID(playerid);
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	    		{
	        		SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No estás en un camión!");
	        		return 1;
	    		}
	    		if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid])
	    		{
	        		SendClientMessageEx(playerid, COLOR_WHITE, "Este no es el carro que utilizas, devuelve el camión para recibir su pago!");
	        		return 1;
	    		}

			    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			    DisablePlayerCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

			    SetVehicleToRespawn(vehicleid);

   				new payment;
				new level = Info[playerid][pTruckSkill];
				if(level >= 0 && level <= 50) payment = 2000;
				else if(level >= 51 && level <= 100) payment = 2500;
				else if(level >= 101 && level <= 200) payment = 3000;
				else if(level >= 201 && level <= 400) payment = 3500;
				else if(level >= 401) payment = 4000;

				SaveStuff();
				GivePlayerCash(playerid, payment);
    			format(string, sizeof(string), "* Sumaron $%d a tu bolsillo por entregar mercancías y devolver el camión.", payment);
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);

                new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
				if(truckdeliver == 11)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió una 9mm de bonus por entregar armas ilegales.");
				    GivePlayerValidWeapon(playerid, 22);
				}
				else if(truckdeliver == 12)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió un Shotgun de bonus por entregar armas ilegales.");
				    GivePlayerValidWeapon(playerid, 25);
				}
				else if(truckdeliver == 13)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió una MP5 de bonus por entregar armas ilegales.");
				    GivePlayerValidWeapon(playerid, 29);
				}
				else if(truckdeliver == 14)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió una Deagle de bonus por entregar armas ilegales.");
				    GivePlayerValidWeapon(playerid, 24);
				}
				else if(truckdeliver == 15)
				{
   					new randomweapon = Random(1, 3);
    				if(randomweapon == 1)
					{
    					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió una AK-47 de bonus por entregar armas ilegales.");
    					GivePlayerValidWeapon(playerid, 30);
    				}
    				if(randomweapon == 2)
					{
    					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió una M4 de bonus por entregar armas ilegales.");
    					GivePlayerValidWeapon(playerid, 31);
    				}
				}
				else if(truckdeliver == 16)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 3gr de droga por entregar mercancía ilegal.");
				    Info[playerid][pCrack] += 5;
				}
				else if(truckdeliver == 17)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 5gr de droga por entregar mercancía ilegal.");
				    Info[playerid][pCrack] += 5;
				}
				else if(truckdeliver == 18)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 8gr de hierba por entregar mercancía ilegal.");
				    Info[playerid][pPot] += 8;
				}
				else if(truckdeliver == 19)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 10gr de hierba por entregar mercancía ilegal.");
				    Info[playerid][pPot] += 10;
				}
				else if(truckdeliver == 20)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 15gr de droga por entregar mercancía ilegal.");
				    Info[playerid][pCrack] += 15;
				}
				else if(truckdeliver == 21)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 25 Materiales por entregar mercancía ilegal.");
					Info[playerid][pMats] += 25;
				}
				else if(truckdeliver == 22)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 55 Materiales por entregar mercancía ilegal.");
					Info[playerid][pMats] += 50;
				}
				else if(truckdeliver == 23)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 100 Materiales por entregar mercancía ilegal.");
					Info[playerid][pMats] += 100;
				}
				else if(truckdeliver == 24)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 150 Materiales por entregar mercancía ilegal.");
					Info[playerid][pMats] += 150;
				}
				else if(truckdeliver == 25)
				{
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 200 Materiales por entregar mercancía ilegal.");
					Info[playerid][pMats] += 200;
				}
	            if(Info[playerid][pDobleExp] == 0)
				{
                   	Info[playerid][pTruckSkill]++;
				}
				else
				{
					Info[playerid][pTruckSkill] += 2;
					SendClientMessageEx(playerid, COLOR_YELLOW, "* {A2DC35}JOB:{FFFFFF} Ganaste 2 puntos de habilidad por tener horas de doble experiencia.");
				}
				TruckUsed[playerid] = INVALID_VEHICLE_ID;
				DeletePVar(playerid, "TruckDeliver");
			}
		}
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}
//
stock SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num){
	for(new i = 0; i < MAX_PLAYERS; i++)	{
		if(IsPlayerConnected(i))		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
		}
	}

}

SendClientMessageEx(playerid, color, string[]){
	if(InsideMainMenu[playerid] == 1 || TutStep[playerid] == 1)
		return 0;
	else SendClientMessage(playerid, color, string);
	return 1;
}

SendClientMessageToAllEx(color, string[]){
	foreach(Player, i)	{
		if(InsideMainMenu[i] == 1 || TutStep[i] == 1) {}
		else SendClientMessage(i, color, string);
	}
	return 1;
}
//******************SISTEMA DE CHOQUE***************+

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	//***velocimetro***
	if(newstate == PLAYER_STATE_DRIVER)
        {
                //TextDrawShowForPlayer(playerid, Tacho_Box0);
                //TextDrawShowForPlayer(playerid, Tacho_Box1);
                TextDrawShowForPlayer(playerid, Tacho_KMH[playerid]);
                //TextDrawShowForPlayer(playerid, Tacho_Box2);
                TextDrawShowForPlayer(playerid, Tacho_Tank[playerid]);
        }
        if(oldstate == PLAYER_STATE_DRIVER)
        {
                //TextDrawHideForPlayer(playerid, Tacho_Box0);
                //TextDrawHideForPlayer(playerid, Tacho_Box1);
                TextDrawHideForPlayer(playerid, Tacho_KMH[playerid]);
                //TextDrawHideForPlayer(playerid, Tacho_Box2);
                TextDrawHideForPlayer(playerid, Tacho_Tank[playerid]);
        }
	//*****************
	new string[128];
	new engine,lights,alarm,doors,bonnet,boot,objective;
    if(IsPlayerNPC(playerid))
	{
	    if(newstate == PLAYER_STATE_SPECTATING)
	    {
        	TogglePlayerSpectating(playerid, false);
		}
		return 1;
	}
	if(GettingSpectated[playerid] != 999)
	{
	    new spectator = GettingSpectated[playerid];
	    if(!IsPlayerConnected(spectator))
	    {
	        GettingSpectated[playerid] = 999;
	        Spectate[spectator] = 999;
		}
	    if(newstate == PLAYER_STATE_DRIVER && Info[spectator][pAdminZC] >= 2 || newstate == PLAYER_STATE_PASSENGER && Info[spectator][pAdminZC] >= 2)
	    {
	        TogglePlayerSpectating(spectator, true);
			new carid = GetPlayerVehicleID( playerid );
			PlayerSpectateVehicle( spectator, carid );
			SetPVarInt(spectator, "SpecState", newstate);
	    }
	    else if(newstate == PLAYER_STATE_ONFOOT && Info[spectator][pAdminZC] >= 2)
	    {
	        TogglePlayerSpectating(spectator, true);
		   	PlayerSpectatePlayer( spectator, playerid );
		   	SetPlayerInterior( spectator, GetPlayerInterior( playerid ) );
			SetPVarInt(spectator, "SpecState", newstate);
	    }
	}
	//***armas en espalda***
	if(oldstate==PLAYER_STATE_ONFOOT)
	{
		StopPlayerHoldingObject(playerid);
		OldWeapon[playerid]=0;
		HoldingWeapon[playerid]=0;
	}
    //**********************
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		SetPlayerWeaponsEx(playerid);
	}
	else if(oldstate == PLAYER_STATE_PASSENGER) SetPlayerWeaponsEx(playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
 		if(estacionp[playerid] != 0)
		{
			StopAudioStreamForPlayer(playerid);
 			estacionp[playerid] = 0;
		}
        if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Ahora estás fuera de servicio, sumaste $%d.", TransportMoney[playerid]);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			TransportTime[playerid] = 0;
   			TransportCost[playerid] = 0;
		}
		if(TransportDriver[playerid] < 999)
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			format(string, sizeof(string), "~w~Costo del viaje:~n~~r~$%d",TransportCost[playerid]);
			GameTextForPlayer(playerid, string, 5000, 3);
			format(string, sizeof(string), "~w~Pasajero se fue~n~~g~ganaste $%d",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], string, 5000, 3);
			GivePlayerCash(playerid, -TransportCost[playerid]);
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			TransportCost[playerid] = 0;
			TransportTime[playerid] = 0;
			TransportDriver[playerid] = 999;
		}
		if(DrugFarming[playerid] == 1)
	 	{
	 	    DisablePlayerCheckpoint(playerid);
	 	    DrugFarming[playerid] = 0;
	 	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} Dejaste de cosechar.");
		    if(IsAHarvest(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
	}
	if((newstate == 2 || newstate == 3 || newstate == 7 || newstate == 9) && pTazer[playerid] == 1)
	{
		GivePlayerValidWeapon(playerid, pTazerReplace[playerid]);
		pTazer[playerid] = 0;
	}
	if(newstate == PLAYER_STATE_PASSENGER){
 		if(estacionveh[GetPlayerVehicleID(playerid)] != 0){
		    new station[64], name[16];
			switch(estacionveh[GetPlayerVehicleID(playerid)]){
				case 1: format(station, sizeof(station), "http://66.197.247.117:8000/listen.pls") && format(name, sizeof(name), "GCRP FM");
				case 2: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179772") && format(name, sizeof(name), "Jazz");
				case 3: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=86425") && format(name, sizeof(name), "Radio Paradise");
				case 4: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=372869") && format(name, sizeof(name), "Reggaeton 24/7");
				case 5: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=78551") && format(name, sizeof(name), "Energia FM");
				case 6: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=638308") && format(name, sizeof(name), "Tropicana");
				case 7: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=39428") && format(name, sizeof(name), "Dupstep");
				case 8: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616806") && format(name, sizeof(name), "Electronic Radio");
				case 9: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=36692") && format(name, sizeof(name), "Bachata Mix");
				case 10: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99182082") && format(name, sizeof(name), "Baladas");
				case 11: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1630446") && format(name, sizeof(name), "Dream Pop");
				case 12: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=524216") && format(name, sizeof(name), "Rock Radio");
				case 13: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1671321") && format(name, sizeof(name), "Salsa");
				case 14: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181500") && format(name, sizeof(name), "Radio Gansta");
			}
			StopAudioStreamForPlayer(playerid);
			estacionp[playerid] = PlayAudioStreamForPlayer(playerid, station, 1, 1, 1, 1, 0);
			format(string, sizeof(string), "{008EC1}* Estación: {FFFFFF}%s - Puedes cambiar la emisora. {008EC1}(/estacion)", name);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
		}
	    fVehSpeed[playerid] = 0.0;
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(Info[playerid][pWeapons][4] > 0)	SetPlayerArmedWeapon(playerid,Info[playerid][pWeapons][4]);
		else SetPlayerArmedWeapon(playerid,0);
		gLastCar[playerid] = vehicleid;
	    foreach(Player, i)
	    {
     		if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
       		{
				if(GetPlayerCash(playerid) < TransportValue[i])
				{
					format(string, sizeof(string), "* Tu necesitas $%d para entrar al taxi.", TransportValue[i]);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(playerid);
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
					SetPlayerPos(playerid, X, Y, Z+2);
					TogglePlayerControllable(playerid, 1);
				}
				else
				{
					if(TransportDuty[i] == 1)
					{
						format(string, sizeof(string), "* Pagaste $%d al taxista.", TransportValue[i]);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s ha entrado a tu taxi.", GetPlayerNameEx(playerid));
						SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
						TransportTime[i] = 1;
						TransportTime[playerid] = 1;
						TransportCost[playerid] = TransportValue[i];
						TransportCost[i] = TransportValue[i];
						TransportDriver[playerid] = i;
					}
					GivePlayerCash(playerid, - TransportValue[i]);
					TransportMoney[i] += TransportValue[i];
	            }
	        }
	    }
	    if( GetPVarInt( playerid, "ToBeEjected" ) >= 1 )
    	{
	       	SetPVarInt( playerid, "ToBeEjected", 0 );
	       	RemovePlayerFromVehicle( playerid );
	       	new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);

			if(GetPVarInt(playerid, "Injured") == 1)
  			{
  			    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
				SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
   				ClearAnimations(playerid);
				ApplyAnimation(playerid,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
   			}
   		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    NOPCheck(playerid);
 		if(estacionveh[GetPlayerVehicleID(playerid)] != 0){
		    new station[64], name[36];
			switch(estacionveh[GetPlayerVehicleID(playerid)]){
				case 1: format(station, sizeof(station), "http://66.197.247.117:8000/listen.pls") && format(name, sizeof(name), "GCRP FM");
				case 2: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179772") && format(name, sizeof(name), "Jazz");
				case 3: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=86425") && format(name, sizeof(name), "Radio Paradise");
				case 4: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=372869") && format(name, sizeof(name), "Reggaeton 24/7");
				case 5: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=78551") && format(name, sizeof(name), "Energia FM");
				case 6: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=638308") && format(name, sizeof(name), "Tropicana");
				case 7: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=39428") && format(name, sizeof(name), "Dupstep");
				case 8: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616806") && format(name, sizeof(name), "Electronic Radio");
				case 9: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=36692") && format(name, sizeof(name), "Bachata Mix");
				case 10: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99182082") && format(name, sizeof(name), "Baladas");
				case 11: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1630446") && format(name, sizeof(name), "Dream Pop");
				case 12: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=524216") && format(name, sizeof(name), "Rock Radio");
				case 13: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1671321") && format(name, sizeof(name), "Salsa");
				case 14: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181500") && format(name, sizeof(name), "Radio Gansta");
			}
			StopAudioStreamForPlayer(playerid);
			estacionp[playerid] = PlayAudioStreamForPlayer(playerid, station, 1, 1, 1, 1, 0);
			format(string, sizeof(string), "{008EC1}* Estación: {FFFFFF}%s - Puedes cambiar la emisora. {008EC1}(/estacion)", name);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
		}
		SetPlayerArmedWeapon(playerid, 0);
	    fVehSpeed[playerid] = 0.0;
		new newcar = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(newcar,arr_Engine{newcar},lights,alarm,doors,bonnet,boot,objective);
		if(IsABike(newcar) && !IsARentCar(newcar))
		{
		    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
		}
	    if(GetCarDealershipVehicleId(newcar) != -1 && GetCarDealershipVehicleId(newcar) == GetPVarInt(playerid, "editingcdveh")) return 1;
        if(GetCarDealershipVehicleId(newcar) != -1)
        {
			format(string, sizeof(string),"Modelo: %s\n\nPrecio: $%d\n\n¿Desea comprarlo?", GetVehicleName(newcar), CDSInfo[GetCarDealershipId(newcar)][cdVehicleCost][GetCarDealershipVehicleId(newcar)]);
		    SafeDialogEx(playerid,DIALOG_CDBUY,DIALOG_STYLE_MSGBOX,"{FFFFFF}Información:",string,"Comprar","Cancelar");
		    TogglePlayerControllable(playerid, false);
		    return 1;
        }
        GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		if((engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_OFF) && GetVehicleModel(newcar) != 509 && GetVehicleModel(newcar) != 481 && GetVehicleModel(newcar) != 510) {
			SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Este vehiculo tiene el motor apagado - si quieres prenderlo, usa {008EC1}/motor.");
		}
		if(IsARentCar(newcar))
		{
		    if(IsaRent[playerid] == 0)
		    {
				TogglePlayerControllable(playerid,0);
				ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_INPUT,"{008EC1}Renta de motos","{FFFFFF}Ingresa los minutos que quieres tener rentada la moto\n5$ por minuto\n\nEjemplo: 10 minutos = 50$", "Rentar", "Cancelar");
   				return 1;
   			}
   			else
   			{
   			    TogglePlayerControllable(playerid,1);
   			}
		}
	    if( GetPVarInt( playerid, "ToBeEjected" ) >= 1 )
    	{
	       	SetPVarInt( playerid, "ToBeEjected", 0 );
	       	RemovePlayerFromVehicle( playerid );
	       	new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);

			if(GetPVarInt(playerid, "Injured") == 1)
  			{
  			    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
				SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
   				ClearAnimations(playerid);
				ApplyAnimation(playerid,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
   			}
   		}
   		gLastCar[playerid] = newcar;
	 	foreach(Player, i)
		{
      		new v = GetPlayerVehicle(i, newcar);
		    if(v != -1)
			{
				if(i == playerid)
				{
					if(PlayerVehicleInfo[i][v][pvTicket] != 0)
					{
						format(string, sizeof(string),"{FF0000}[ATENCION]:{FFFFFF}Tú vehículo está multado por %d. Usted debe pagar la multa en la central de {5ABAFF}SAPD{FFFFFF}.", PlayerVehicleInfo[i][v][pvTicket]);
						SendClientMessageEx(playerid, COLOR_GREY, string);
					}
				}
				else if(i == Info[playerid][pVehicleKeysFrom]){
					format(string, sizeof(string),"Usted tiene las llaves de este %s del dueño %s.", GetVehicleName(newcar), GetPlayerNameEx(i));
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				else if(PlayerVehicleInfo[i][v][pvLocked] == 1 && PlayerVehicleInfo[i][v][pvLock] == 1)
				{
				    GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(newcar,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
					SetTimerEx("DisableVehicleAlarm", 20000, 0, "d",  newcar);
				}
				return 1;
			}
		}
		for(new f = 0; f < MAX_FAMILY; f++)
		{
		    new v = GetPlayerVehicle(f, newcar);
			v = GetGangVehicle(f, newcar);
			if(v != -1)
			{
				if(Info[playerid][pFMember] == f)
				{
					format(string, sizeof(string), "Estás en la familia propietaria de este %s.", GetVehicleName(newcar));
	    			SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				else if(FVINFO[f][v][fvLocked] == 1 && FVINFO[f][v][fvLock] == 1)
				{
					GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(newcar,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
					SetTimerEx("DisableVehicleAlarm", 20000, 0, "d",  newcar);
				}
				return 1;
			}
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED) gPlayerSpawned[playerid] = 1;


//**************************************
	enum
	{
  CHECKPOINT_1,
	}

    new newcar2 = GetPlayerVehicleID(playerid);
    if(newcar2 >= koscar[0] && newcar2 <= koscar[10])
		{
			if (recojercesped[playerid] == 1)
		 	{
  			    SendClientMessage(playerid,COLOR_WHITE,"{FFFF00}[JOB]:{FFFFFF} Completa la ruta para cobrar!");
  			    GameTextForPlayer(playerid,"~r~No bajes del cortacesped hasta acabar la ruta!",3000,3);
    	        Kosonrob[playerid] = 1;
				pKosonrob[playerid] = CHECKPOINT_1;
				SetPlayerRaceCheckpoint(playerid,2,2046.7584,-1241.9952,22.9092,2040.4469,-1214.4858,22.6067,5.0);
			}
			if(recojercesped[playerid] == 0)
			{
				SendClientMessage(playerid,COLOR_GREY,"{FFFF00}[JOB]:{FFFFFF} Acepta el trabajo antes de comenzar la ruta.");
				RemovePlayerFromVehicle(playerid);
				SetTimerEx("AntiRemovePlayerFromVehicle" , 2800, false, "i", playerid);
			}
		}
 return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	switch(Seatbelt[playerid])
	{
	    case 1:
	    {
			new string[128];
	        if(IsABike(vehicleid))
			{
				format(string, sizeof(string), "* %s pone las manos en su casco, y se lo quita.", GetPlayerNameEx(playerid));
			}
			else
			{
				format(string, sizeof(string), "* %s pone las manos en su cinturón y se lo quita.", GetPlayerNameEx(playerid));
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  			Seatbelt[playerid] = 0;
	    }
	}
	return 1;
}

function SetPlayerWeapons(playerid){
	ResetPlayerWeapons(playerid);
	for(new s = 0; s < 12; s++)
	{
		if(Info[playerid][pWeapons][s] > 0)
		{
			GivePlayerValidWeapon(playerid, Info[playerid][pWeapons][s]);
		}
	}
	return 1;
}

function SetPlayerWeaponsEx(playerid){
	ResetPlayerWeapons(playerid);
	for(new s = 0; s < 12; s++)
	{
		if(Info[playerid][pWeapons][s] > 0)
		{
			GivePlayerValidWeapon(playerid, Info[playerid][pWeapons][s]);
		}
	}
	SetPlayerArmedWeapon(playerid, GetPVarInt(playerid, "LastWeapon"));
}

stock GetPlayerFactionInfo(targetid, rank[64], division[64], employer[64])
{
	switch (Info[targetid][pMember])
	{
	    case 1:
		{
            employer = "LSPD";
			switch(Info[targetid][pRank])
			{
			    case 1: rank = "Cadete";
			    case 2: rank = "Oficial";
			    case 3: rank = "Detective";
			    case 4: rank = "Sargento";
			    case 5: rank = "Teniente";
			    case 6: rank = "Comandante";
			    default: rank = "Cadete";
			}
			switch(Info[targetid][pDivision])
			{
			    case 1: division = "General";
			    case 2: division = "DIVCRI";
			    case 3: division = "DIVOES";
			    case 4: division = "DIVANDRO";
			    case 5: division = "SWAT";
			    case 6: division = "UL";
			    case 7: division = "SHERIFF";
			    default: division = "Ninguna";
			}
		}
  		case 2:
		{
            employer = "FBI";
			switch(Info[targetid][pRank])
			{
			    case 1: rank = "Agente";
			    case 2: rank = "Agente Superior";
			    case 3: rank = "Agente Especial";
			    case 4: rank = "Agente Especializado";
			    case 5: rank = "Sub/Director";
			    case 6: rank = "Director";
			    default: rank = "Agente";
			}
			switch(Info[targetid][pDivision])
			{
			    case 1: division = "General";
			    case 2: division = "DIVHO";
			    case 3: division = "UCO";
			    case 4: division = "UI";
			    case 5: division = "RR.HH";
			    default: division = "DIVHO";
			}
		}
  		case 3:
		{
            employer = "Guardia Nacional";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Cabo";
				case 2: rank = "Soldado";
				case 3: rank = "Sargento";
				case 4: rank = "Capitan";
				case 5: rank = "Mayor";
				case 6: rank = "Coronel";
				default: rank = "Cabo";
			}
			switch(Info[targetid][pDivision])
			{
			    case 1: division = "General";
				case 2: division = "FASA";
			    case 3: division = "EMM";
			    case 4: division = "BO";
			    case 5: division = "FMSA";
			    default: division = "Ninguna";
			}
		}
  		case 4:
		{
            employer = "SAMD";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Prácticante";
				case 2: rank = "Paramédico";
				case 3: rank = "Médico";
				case 4: rank = "Supervisor";
				case 5: rank = "Responsable Técnico";
				case 6: rank = "Director";
				default: rank = "Prácticante";
			}
		}
		case 5:
		{
	        employer = "CNN";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Becario";
				case 2: rank = "Redactor";
				case 3: rank = "Periodista";
				case 4: rank = "Enviado Especial";
				case 5: rank = "Presentador";
				case 6: rank = "Director CNN";
				default: rank = "Becario";
			}
			division = "Ninguna";
		}
  		case 6:
		{
            employer = "Mecánicos";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Ayudante";
				case 2: rank = "Trucker";
				case 3: rank = "Mecánico";
				case 4: rank = "Ingeniero";
				case 5: rank = "Supervisor";
				case 6: rank = "Director";
				default: rank = "Ayudante";
			}
			division = "Ninguna";
		}
  		case 7:
		{
	        employer = "Gobierno";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Staff";
				case 2: rank = "Secretario";
				case 3: rank = "Burócrata";
				case 4: rank = "Ministro de";
				case 5: rank = "Alcalde";
				case 6: rank = "Gobernador";
				default: rank = "Staff";
			}
			switch(Info[targetid][pDivision])
			{
			    case 2: division = "Chofer";
			    case 3: division = "UG";
			    case 4: division = "Defensa";
			    case 5: division = "Justicia";
			    case 6: division = "Economía";
			    default: division = "Ninguna";
			}
			division = "Ninguna";
		}
		case 8:
		{
		    employer = "Sicarios";
		    switch(Info[targetid][pRank])
		    {
    			case 1: rank = "Novato";
				case 2: rank = "Asesino";
				case 3: rank = "Sicario";
				case 4: rank = "Agente Especial";
				case 5: rank = "Vice Director";
				case 6: rank = "Director";
				default: rank = "Novato";
			}
			division = "Ninguna";
		}
		case 9:
		{
		    employer = "Sistema Judicial";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Abogado";
				case 2: rank = "Secretario";
				case 3: rank = "Fiscal";
				case 4: rank = "Juez";
				case 5: rank = "Asociado";
				case 6: rank = "Director General";
				default: rank = "Abogado";
			}
			division = "Ninguna";
		}
        case 10:
		{
            employer = "LSFD";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Practicante";
				case 2: rank = "Ayudante";
				case 3: rank = "Rescatista";
				case 4: rank = "Supervisor";
				case 5: rank = "Bombero";
				case 6: rank = "Director";
				default: rank = "Practicante";
			}
			division = "Ninguna";
		}
		case 11:
		{
            employer = "LCN";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Giovane d' Honore";
				case 2: rank = "Soldati";
				case 3: rank = "Capo";
				case 4: rank = "Consigliere";
				case 5: rank = "Sottocapo";
				case 6: rank = "Capi Di Tutti Capi";
				default: rank = "Giovane d' Honore";
			}
			division = "Ninguna";
		}
		case 12:
		{
            employer = "Yakuza";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Kyodai";
				case 2: rank = "Wakashu";
				case 3: rank = "Senpai Kohai";
				case 4: rank = "Saiko Komon";
				case 5: rank = "Sumiyoshi";
				case 6: rank = "Oyabun";
				default: rank = "Kyodai";
			}
			division = "Ninguna";
		}
		case 13:
		{
            employer = "Mafia Rusa";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Assotsiirovat";
				case 2: rank = "Soldat";
				case 3: rank = "Kapo";
				case 4: rank = "Konsul'tant";
				case 5: rank = "Zamestitel";
				case 6: rank = "Don";
				default: rank = "Assotsiirovat";
			}
			division = "Ninguna";
		}
		case 14:
		{
            employer = "Ndrangheta ";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Giovane d' Honore";
				case 2: rank = "Soldati";
				case 3: rank = "Capo";
				case 4: rank = "Consigliere";
				case 5: rank = "Sottocapo";
				case 6: rank = "Capi Di Tutti Capi";
				default: rank = "Giovane d' Honore";
			}
			division = "Ninguna";
		}
		case 15:
		{
            employer = "Groove Street ";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Novato";
				case 2: rank = "Aprendiz";
				case 3: rank = "Asesino";
				case 4: rank = "Escolta";
				case 5: rank = "Mano derecha";
				case 6: rank = "Lider";
				default: rank = "Novato";
			}
			division = "Ninguna";
		}
		case 16:
		{
            employer = "Ballas ";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Novato";
				case 2: rank = "Aprendiz";
				case 3: rank = "Asesino";
				case 4: rank = "Escolta";
				case 5: rank = "Mano derecha";
				case 6: rank = "Lider";
				default: rank = "Novato";
			}
			division = "Ninguna";
		}
		case 17:
		{
            employer = "Sureños";
			switch(Info[targetid][pRank])
			{
				case 1: rank = "Novato";
				case 2: rank = "Aprendiz";
				case 3: rank = "Asesino";
				case 4: rank = "Escolta";
				case 5: rank = "Mano derecha";
				case 6: rank = "Lider";
				default: rank = "Novato";
			}
			division = "Ninguna";
		}
		case 18:
		{
            employer = "Fsociety";
			switch(Info[targetid][pRank])
			{
                case 1: rank = "Aprendiz";
				case 2: rank = "Hacker novato";
				case 3: rank = "Hacker";
				case 4: rank = "Hacker experimentado";
				case 5: rank = "Hacker lider ";
				case 6: rank = "Mr.Robot";
				default: rank = "Aprendiz";
			}
			division = "Ninguna";
		}


	    default: { employer = "Ninguna"; division = "Ninguna"; rank = "N/A"; }
	}
	return 1;
}
Mostrarcam(playerid)
{
TextDrawShowForPlayer(playerid, cam1);
TextDrawShowForPlayer(playerid, cam2);
TextDrawShowForPlayer(playerid, cam3);
TextDrawShowForPlayer(playerid, cam4);
return 1;
}

Quitarcam(playerid)
{
TextDrawHideForPlayer(playerid, cam1);
TextDrawHideForPlayer(playerid, cam2);
TextDrawHideForPlayer(playerid, cam3);
TextDrawHideForPlayer(playerid, cam4);
return 1;
}
ShowStats(playerid,targetid){
    if(IsPlayerConnected(targetid)){
	    SendClientMessageEx(playerid,-1,"___________________________________________________________________________________________________________________");
		new fMatriz[340], age = Info[targetid][pAge], level = Info[targetid][pLevel], atext[20], cash =  GetPlayerCash(targetid), pnumber[20];
		new account = Info[targetid][pAccount];
		switch(Info[targetid][pSex]){
			case 1: atext = "Hombre";
			case 2: atext = "Mujer";
		}
		switch(Info[targetid][pPnumber]){
			case 0: pnumber = "Ninguno";
			default: format(pnumber, sizeof(pnumber), "%d", Info[targetid][pPnumber]);
		}
		format(fMatriz,sizeof(fMatriz),"%s - (Edad %d) - (Nivel %d) - (Sexo %s) - (Dinero %d$) - (Número Telefónico %s)- (Banco %d$)",GetPlayerNameEx(targetid),age,level,atext,cash,pnumber,account);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, fMatriz);

		new nxtlevel = Info[targetid][pLevel]+1;
		new tokens = Info[targetid][pPaintTokens],exp = Info[targetid][pExp],expamount = nxtlevel*explevel,facfam[20], employer[64],division[64], rank[64], rango = Info[targetid][pRank];
		facfam = "Facción";
		if(Info[targetid][pFMember] < 255){
		    facfam = "Familia"; division = "Ninguna";
			format(employer, sizeof(employer), "%s", fINFO[Info[targetid][pFMember]][FamilyName]);
			switch(Info[targetid][pRank]){
				case 1: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank1]);
				case 2: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank2]);
				case 3: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank3]);
				case 4: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank4]);
				case 5: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank5]);
	  			case 6: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank6]);
				default: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank1]);
			}
		}
		else GetPlayerFactionInfo(targetid, rank, division, employer);
        format(fMatriz,sizeof(fMatriz),"(Fichas %d) - (Experiencia %d/%d) - (%s: %s) - (Rango %s (%d)) - (División %s)",tokens,exp,expamount,facfam,employer,rank,rango,division);
        SendClientMessageEx(playerid, -1, fMatriz);

		new jtext[21], jtext2[21];
		switch(Info[targetid][pJob]){
			case 0: jtext = "Ninguno";
			case 3: jtext = "Leñador";
            case 4: jtext = "Pizzero";
            case 6: jtext = "Camionero";
            case 7: jtext = "Armero";
            case 8: jtext = "Taxista";
            case 9: jtext = "Granjero";
            case 10: jtext = "Traficante de Drogas";
            case 13: jtext = "Jardinero";
            case 14: jtext = "Vendedor de Chalecos";
		}
		switch(Info[targetid][pJob2]){
			case 0: jtext2 = "Ninguno";
			case 3: jtext = "Leñador";
            case 4: jtext2 = "Pizzero";
            case 6: jtext2 = "Camionero";
            case 7: jtext2 = "Armero";
            case 8: jtext2 = "Taxista";
            case 9: jtext2 = "Granjero";
            case 10: jtext = "Traficante de Drogas";
            case 13: jtext2 = "Jardinero";
            case 14: jtext2 = "Vendedor de Chalecos";
		}
		new Float:health, Float:armor,fvip = Info[targetid][pVTokens];
		GetPlayerHealth(targetid,health);
		GetPlayerArmour(targetid,armor);
        format(fMatriz,sizeof(fMatriz),"(Trabajo 1: %s) - (Trabajo 2: %s) - (Vida %.1f) - (Chaleco %.1f) - (Fichas VIP: %d)",jtext,jtext2,health, armor, fvip);
        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, fMatriz);
  		new dotext[16];
		switch(Info[targetid][pVIP]){
			case 1: dotext = "Bronce";
			case 2: dotext = "Silver";
			case 3: dotext = "Gold";
			case 4: dotext = "Platinum";
			case 5: dotext = "Moderador";
			default: dotext = "No";
		}
		new sprunk = Info[targetid][pSprunk],
			arrest = Info[targetid][pArrested],
			housekey = Info[targetid][pPhousekey],
			housekey2 = Info[targetid][pPhousekey2],
			hirekey	= HireKey[targetid],
			adic=Info[targetid][pAdiccion],
			rentc = Info[targetid][pRenting];

		format(fMatriz,sizeof(fMatriz),"(Sprunk %d) - (Arrestos %d) - (VIP %s) - (Casas %d | %d) - (Renta %d) - (Casa Renta %d) - (Adicción %d)",sprunk, arrest, dotext,housekey,housekey2, hirekey, rentc,adic);
        SendClientMessageEx(playerid, -1, fMatriz);

        new pto = Info[targetid][pPbizzkey],
			ptr = Info[targetid][pPTR],
			admutes = Info[targetid][pADMuteTotal],
			xH = Info[targetid][pDobleExp],
			married[20];
		strmid(married, Info[targetid][pMarriedTo], 0, strlen(Info[targetid][pMarriedTo]), 255);
		format(fMatriz,sizeof(fMatriz),"(Negocio: %d) - (Casado(a) con %s) - (Puntos de rol: %d)  - (AD Mutes %d) - (Horas 2x %d)", pto, married, ptr, admutes, xH);
        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, fMatriz);

        new ctime = Info[targetid][pConnectTime],
            rmt = Info[targetid][pRMutedTotal],
			jaadm = Info[targetid][pJailAdmin],
		    tjail = Info[targetid][pJailTime],
   			warn = Info[targetid][pWarn];
		format(fMatriz,sizeof(fMatriz),"(Puntos de Respeto %d) - (Reportes Bloqueados %d) - (Sanciones %d | Tiempo %d) - (Warns %d)", ctime, rmt, jaadm,tjail, warn);
        SendClientMessageEx(playerid, -1, fMatriz);

		if (Info[playerid][pAdminZC] >= 1337 && Info[targetid][pVIP] > 0 && Info[targetid][pBuddyInvited] == 0){
			format(fMatriz, sizeof(fMatriz), "VIP Fin: Día: %d | Mes: %d", Info[targetid][pVIPDateD], Info[targetid][pVIPDateM]);
			SendClientMessageEx(playerid, -1,fMatriz);
		}
		SendClientMessageEx(playerid,COLOR_LIGHTBLUE,"____________________________________________________________________________________________________________________");
	}
}

function SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPVarInt(playerid, "ArenaMode") == 2)
	    {
			switch(Info[playerid][pPaintTeam])
			{
			    case 1:
			    {
			        SetPlayerColor(playerid, PAINTBALL_TEAM_RED);
			    }
			    case 2:
			    {
			        SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE);
			    }
	        }
	        return 1;
	    }
	    if(Info[playerid][pJailed] == 1 || Info[playerid][pJailed] == 4)
	    {
	        SetPlayerColor(playerid,TEAM_APRISON_COLOR);
			return 1;
		}
		else if(Info[playerid][pJailed] == 2 || Info[playerid][pJailed] == 5 || Info[playerid][pJailed] == 6) // Arrestado desde LSPD
		{
		    SetPlayerColor(playerid,TEAM_HIT_COLOR);
			return 1;
		}
		else
		{
            SetPlayerColor(playerid,TEAM_HIT_COLOR);
		}
	    if(IsACop(playerid))
	    {
			if(OnDuty[playerid] == 1)
			{
	    		if(Team_LSPD(playerid))
	        	{
	        		SetPlayerColor(playerid,TEAM_HIT_COLOR);
				}
				else if(Team_FBI(playerid))
	        	{
	        		SetPlayerColor(playerid,TEAM_HIT_COLOR);
				}
				else if(Team_SAEM(playerid))
				{
			    	SetPlayerColor(playerid, TEAM_HIT_COLOR);
				}
				else if(Team_SAMD(playerid))
				{
			    	SetPlayerColor(playerid, TEAM_HIT_COLOR);
				}
				else
				{
				    SetPlayerColor(playerid,TEAM_HIT_COLOR);
				}
			}
			else
			{
			    SetPlayerColor(playerid,TEAM_HIT_COLOR);
			}
		}
		else
		{
		    if((Team_LSTV(playerid)) && OnDuty[playerid] == 1)
	    	{
	    		SetPlayerColor(playerid,TEAM_HIT_COLOR);
			}
			else if((Team_SAMD(playerid)) && OnDuty[playerid] == 1)
			{
			   	SetPlayerColor(playerid, TEAM_HIT_COLOR);
			}
			else if((Info[playerid][pJob] == 8 || Info[playerid][pJob2] == 8 || Info[playerid][pTaxiLicense] == 1) && TransportDuty[playerid] != 0)
			{
  				SetPlayerColor(playerid,TEAM_HIT_COLOR);
	 		}
			else
			{
			    SetPlayerColor(playerid,TEAM_HIT_COLOR);
   			}
		}
	}
	return 1;
}
/*public MensajesAleatorios()
{
    SendClientMessageToAll(COLOR_LIGHTBLUE,Mensajes[random(sizeof(Mensajes))]);
    return 1;
}*/
public OnGameModeExit()
{
    djson_GameModeExit();
    saveAccounts();
    //KillTimer(MensajesTimer);
    //***SISTEMA AFK***
    for(new i = 0; i < MAX_PLAYERS; i++)
   	{
  	 KillTimer(Timer[i]);
  	 TextDrawHideForAll(Text:Messageafk);
  	 TextDrawDestroy(Text:Messageafk);
   	}
   	//***velocimetro***
   	for(new i = 0; i<MAX_PLAYERS; i++)
        {
                //TextDrawHideForAll(Tacho_Box0);
                //TextDrawDestroy(Tacho_Box0);
                //TextDrawHideForAll(Tacho_Box1);
                //TextDrawDestroy(Tacho_Box1);
                TextDrawHideForAll(Tacho_KMH[i]);
                TextDrawDestroy(Tacho_KMH[i]);
                //TextDrawHideForAll(Tacho_Box2);
                //TextDrawDestroy(Tacho_Box2);
                TextDrawHideForAll(Tacho_Tank[i]);
                TextDrawDestroy(Tacho_Tank[i]);
        }
   	//*****************
    return 1;
}
function AddWarrant(playerid,judgeid,crime[])
{
    new string[128];
    new month,day,year;
	getdate(year,month,day);
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    format(string,sizeof(string),"OrdenesJ/%s.ini",playername);
    new File: file = fopen(string, io_write);
	if(file)
	{
	    format(string,sizeof(string),"%s - %s (%d/%d/%d)",crime,GetPlayerNameEx(judgeid),month,day,year);
	    fwrite(file, string);
	    fclose(file);
	}
	return 1;
}

function RemoveWarrant(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(string,sizeof(string),"OrdenesJ/%s.ini",playername);
	if(fexist(string))
	{
		fremove(string);
		return 1;
	}
	else
	{
	    return 0;
	}
}

function OAddWarrant(name[],judgeid,crime[])
{
	new string[128];
	new month,day,year;
	getdate(year,month,day);
	format(string,sizeof(string),"OrdenesJ/%s.ini",name);
	new File: file = fopen(string, io_write);
	if(file)
	{
	    format(string,sizeof(string),"%s - %s (%d/%d/%d)",crime,GetPlayerNameEx(judgeid),month,day,year);
	    fwrite(file, string);
	    fclose(file);
	}
}

function ORemoveWarrant(name[])
{
	new string[128];
	format(string,sizeof(string),"OrdenesJ/%s.ini",name);
	if(fexist(string))
	{
	    fremove(string);
	    return 1;
	}
	else
	{
	    return 0;
	}
}

//****************************************************************************
LoadStuff()
{
	new arrCoords[6][64];
	new strFromFile2[128];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		splits(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		if(Tax < 0) Tax = 0;
		if(TaxValue < 0) TaxValue = 0;
		TaxValue = strval(arrCoords[2]);
		Blood = strval(arrCoords[3]);
		Fuel = strval(arrCoords[4]);
		txtcost = strval(arrCoords[5]);
		fclose(file);
		print("Cargado de objetos correctamente.");
	}
	else
	{
	    GameModeExit();
	}
	return 1;
}

SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d", Jackpot,Tax,TaxValue,Blood,Fuel,txtcost);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

//****************************************************************************

SaveDynamicDoors()
{

	new
		szFileStr[512],
		File: fHandle = fopen("dynamicdoors.cfg", io_write);

	for(new iIndex; iIndex < MAX_DDOORS; iIndex++)
	{
		format(szFileStr, sizeof(szFileStr), "%s|%d|%d|%d|%d|%d|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|%d|%d\r\n",
			DDoorsInfo[iIndex][ddDescription],
			DDoorsInfo[iIndex][ddCustomInterior],
			DDoorsInfo[iIndex][ddExteriorVW],
			DDoorsInfo[iIndex][ddExteriorInt],
			DDoorsInfo[iIndex][ddInteriorVW],
			DDoorsInfo[iIndex][ddInteriorInt],
			DDoorsInfo[iIndex][ddExteriorX],
			DDoorsInfo[iIndex][ddExteriorY],
			DDoorsInfo[iIndex][ddExteriorZ],
			DDoorsInfo[iIndex][ddExteriorA],
			DDoorsInfo[iIndex][ddInteriorX],
			DDoorsInfo[iIndex][ddInteriorY],
			DDoorsInfo[iIndex][ddInteriorZ],
			DDoorsInfo[iIndex][ddInteriorA],
			DDoorsInfo[iIndex][ddCustomExterior],
			DDoorsInfo[iIndex][ddVIP],
	  		DDoorsInfo[iIndex][ddFamily],
	  		DDoorsInfo[iIndex][ddFaction],
	  		DDoorsInfo[iIndex][ddAdmin],
	  		DDoorsInfo[iIndex][ddWanted],
	  		DDoorsInfo[iIndex][ddVehicleAble],
	  		DDoorsInfo[iIndex][ddColor],
	  		DDoorsInfo[iIndex][ddPickupModel],
	  		DDoorsInfo[iIndex][dPass],
	  		DDoorsInfo[iIndex][dLocked],
			DDoorsInfo[iIndex][dMusic]);
			fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}

LoadDynamicDoors()
{
	new arrCoords[26][64];
	new strFromFile2[256];
	new File: file = fopen("dynamicdoors.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(DDoorsInfo))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			strmid(DDoorsInfo[idx][ddDescription], arrCoords[0], 0, strlen(arrCoords[0]), 128);
	  		DDoorsInfo[idx][ddCustomInterior] = strval(arrCoords[1]);
	  		DDoorsInfo[idx][ddExteriorVW] = strval(arrCoords[2]);
	  		DDoorsInfo[idx][ddExteriorInt] = strval(arrCoords[3]);
	  		DDoorsInfo[idx][ddInteriorVW] = strval(arrCoords[4]);
	  		DDoorsInfo[idx][ddInteriorInt] = strval(arrCoords[5]);
	  		DDoorsInfo[idx][ddExteriorX] = floatstr(arrCoords[6]);
	  		DDoorsInfo[idx][ddExteriorY] = floatstr(arrCoords[7]);
	  		DDoorsInfo[idx][ddExteriorZ] = floatstr(arrCoords[8]);
	  		DDoorsInfo[idx][ddExteriorA] = floatstr(arrCoords[9]);
	  		DDoorsInfo[idx][ddInteriorX] = floatstr(arrCoords[10]);
	  		DDoorsInfo[idx][ddInteriorY] = floatstr(arrCoords[11]);
	  		DDoorsInfo[idx][ddInteriorZ] = floatstr(arrCoords[12]);
	  		DDoorsInfo[idx][ddInteriorA] = floatstr(arrCoords[13]);
	  		DDoorsInfo[idx][ddCustomExterior] = strval(arrCoords[14]);
	  		DDoorsInfo[idx][ddVIP] = strval(arrCoords[15]);
	  		DDoorsInfo[idx][ddFamily] = strval(arrCoords[16]);
	  		DDoorsInfo[idx][ddFaction] = strval(arrCoords[17]);
	  		DDoorsInfo[idx][ddAdmin] = strval(arrCoords[18]);
	  		DDoorsInfo[idx][ddWanted] = strval(arrCoords[19]);
	  		DDoorsInfo[idx][ddVehicleAble] = strval(arrCoords[20]);
	  		DDoorsInfo[idx][ddColor] = strval(arrCoords[21]);
	  		DDoorsInfo[idx][ddPickupModel] = strval(arrCoords[22]);
	  		strmid(DDoorsInfo[idx][dPass], arrCoords[23], 0, strlen(arrCoords[23]), 24);
	  		DDoorsInfo[idx][dLocked] = strval(arrCoords[24]);
	  		DDoorsInfo[idx][dMusic] = strval(arrCoords[25]);
	  		if(!isnull(DDoorsInfo[idx][ddDescription]))
	  		{
	  		    CreateDynamicDoor(idx);
			}
			idx++;
		}
		print("Puertas dinamicas cargadas correctamente.");
		fclose(file);
	}
	return 1;
}

LoadcDealerships()
{
	new idx, idx2;
	new string[128];
	new owner[MAX_PLAYER_NAME];
	new message[128];
	djAutocommit(false);
	while (idx < sizeof(CDSInfo))
	{
        format(string, sizeof(string), "%d/owned", idx);
		CDSInfo[idx][cdOwned] = djInt("cardealerships.json", string);
		format(string, sizeof(string), "%d/owner", idx);
		format(owner, sizeof(owner), "%s", dj("cardealerships.json", string));
		strmid(CDSInfo[idx][cdOwner], owner, 0, strlen(owner), 255);
		format(string, sizeof(string), "%d/entrance/x", idx);
		CDSInfo[idx][cdEntranceX] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/entrance/y", idx);
		CDSInfo[idx][cdEntranceY] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/entrance/z", idx);
		CDSInfo[idx][cdEntranceZ] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/exit/x", idx);
		CDSInfo[idx][cdExitX] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/exit/y", idx);
		CDSInfo[idx][cdExitY] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/exit/z", idx);
	    CDSInfo[idx][cdExitZ] = djFloat("cardealerships.json", string);
	    format(string, sizeof(string), "%d/message", idx);
		format(message, sizeof(message), "%s", dj("cardealerships.json", string));
		strmid(CDSInfo[idx][cdMessage], message, 0, strlen(message), 255);
		format(string, sizeof(string), "%d/till", idx);
		CDSInfo[idx][cdTill] = djInt("cardealerships.json", string);
		format(string, sizeof(string), "%d/interior", idx);
		CDSInfo[idx][cdInterior] = djInt("cardealerships.json", string);
		format(string, sizeof(string), "%d/vehiclespawn/x", idx);
		CDSInfo[idx][cdVehicleSpawn][0] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/vehiclespawn/y", idx);
		CDSInfo[idx][cdVehicleSpawn][1] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/vehiclespawn/z", idx);
		CDSInfo[idx][cdVehicleSpawn][2] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/vehiclespawn/a", idx);
		CDSInfo[idx][cdVehicleSpawn][3] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/radius", idx);
		CDSInfo[idx][cdRadius] = djFloat("cardealerships.json", string);
		format(string, sizeof(string), "%d/price", idx);
		CDSInfo[idx][cdPrice] = djInt("cardealerships.json", string);
		while (idx2 < MAX_DEALERSHIPVEHICLES)
		{
            format(string, sizeof(string), "%d/vehicleangle/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleSpawnAngle][idx2] = djFloat("cardealerships.json", string);
		    format(string, sizeof(string), "%d/vehiclespawnx/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleSpawnX][idx2] = djFloat("cardealerships.json", string);
		    format(string, sizeof(string), "%d/vehiclespawny/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleSpawnY][idx2] = djFloat("cardealerships.json", string);
		    format(string, sizeof(string), "%d/vehiclespawnz/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleSpawnZ][idx2] = djFloat("cardealerships.json", string);
		    format(string, sizeof(string), "%d/vehiclecost/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleCost][idx2] = djInt("cardealerships.json", string);
		    format(string, sizeof(string), "%d/vehicletypes/%d", idx, idx2);
		    CDSInfo[idx][cdVehicleModel][idx2] = djInt("cardealerships.json", string);
		    idx2++;
		}
		idx2 = 0;
		idx++;
	}
	djAutocommit(true);
	return 1;
}

SavecDealership(id)
{
	new idx2;
	new string[128];
    format(string, sizeof(string), "%d/owned", id);
	djSetInt("cardealerships.json", string, CDSInfo[id][cdOwned]);
	format(string, sizeof(string), "%d/owner", id);
	djSet("cardealerships.json", string, CDSInfo[id][cdOwner]);
	format(string, sizeof(string), "%d/entrance/x", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdEntranceX]);
	format(string, sizeof(string), "%d/entrance/y", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdEntranceY]);
	format(string, sizeof(string), "%d/entrance/z", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdEntranceZ]);
	format(string, sizeof(string), "%d/exit/x", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdExitX]);
	format(string, sizeof(string), "%d/exit/y", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdExitY]);
	format(string, sizeof(string), "%d/exit/z", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdExitZ]);
	format(string, sizeof(string), "%d/message", id);
	djSet("cardealerships.json", string, CDSInfo[id][cdMessage]);
	format(string, sizeof(string), "%d/till", id);
	djSetInt("cardealerships.json", string, CDSInfo[id][cdTill]);
	format(string, sizeof(string), "%d/interior", id);
	djSetInt("cardealerships.json", string, CDSInfo[id][cdInterior]);
	format(string, sizeof(string), "%d/vehiclespawn/x", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawn][0]);
	format(string, sizeof(string), "%d/vehiclespawn/y", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawn][1]);
	format(string, sizeof(string), "%d/vehiclespawn/z", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawn][2]);
	format(string, sizeof(string), "%d/vehiclespawn/a", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawn][3]);
	format(string, sizeof(string), "%d/radius", id);
	djSetFloat("cardealerships.json", string, CDSInfo[id][cdRadius]);
	format(string, sizeof(string), "%d/price", id);
	djSetInt("cardealerships.json", string, CDSInfo[id][cdPrice]);
	while (idx2 < MAX_DEALERSHIPVEHICLES)
	{
        format(string, sizeof(string), "%d/vehicleangle/%d", id, idx2);
        djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawnAngle][idx2]);
	    format(string, sizeof(string), "%d/vehiclespawnx/%d", id, idx2);
	    djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawnX][idx2]);
	    format(string, sizeof(string), "%d/vehiclespawny/%d", id, idx2);
	    djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawnY][idx2]);
	    format(string, sizeof(string), "%d/vehiclespawnz/%d", id, idx2);
	    djSetFloat("cardealerships.json", string, CDSInfo[id][cdVehicleSpawnZ][idx2]);
	    format(string, sizeof(string), "%d/vehiclecost/%d", id, idx2);
	    djSetInt("cardealerships.json", string, CDSInfo[id][cdVehicleCost][idx2]);
	    format(string, sizeof(string), "%d/vehicletypes/%d", id, idx2);
	    djSetInt("cardealerships.json", string, CDSInfo[id][cdVehicleModel][idx2]);
	    idx2++;
	}
	return 1;
}
loadSpeedCam()
{
	if(!fexist("vCameras.cfg")) return 1;
	new text_info[68],szFileStr[1024],File: iFileHandle = fopen("vCameras.cfg", io_read),iIndex;
	while(iIndex < sizeof(vCameraInfo) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>ffffdddd",
		    vCameraInfo[iIndex][vCameraPos][0],
			vCameraInfo[iIndex][vCameraPos][1],
			vCameraInfo[iIndex][vCameraPos][2],
			vCameraInfo[iIndex][vCameraRot],
			vCameraInfo[iIndex][vCameraStatus],
			vCameraInfo[iIndex][vCameraRange],
			vCameraInfo[iIndex][vCameraLimit],
			vCameraInfo[iIndex][vCameraTicket]);
		if(vCameraInfo[iIndex][vCameraLimit] != 0)
		{
		    vCameraInfo[iIndex][vCameraObject] = CreateDynamicObject(18880, vCameraInfo[iIndex][vCameraPos][0],vCameraInfo[iIndex][vCameraPos][1],vCameraInfo[iIndex][vCameraPos][2],0,0,vCameraInfo[iIndex][vCameraRot]);
			switch(vCameraInfo[iIndex][vCameraStatus])
			{
	    		case 0: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\nLímite: MPH {FFC800}%d", iIndex,vCameraInfo[iIndex][vCameraLimit]);
				case 1: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\n{FF0000}(DESACTIVADA)", iIndex);
			}
	        vCameraInfo[iIndex][vCameraLabel] = CreateDynamic3DTextLabel(text_info,-1,vCameraInfo[iIndex][vCameraPos][0],vCameraInfo[iIndex][vCameraPos][1],vCameraInfo[iIndex][vCameraPos][2]+5,10.0);
		}
		++iIndex;
	}
	print("[script] Velocity Cameras Loaded Successfully . . .");
	return fclose(iFileHandle);
}
saveSpeedCam()
{
	new szFileStr[512],File: fHandle = fopen("vCameras.cfg", io_write);
	for(new iIndex; iIndex < MAX_vCAMERAS; iIndex++)
	{
	    format(szFileStr, sizeof(szFileStr), "%f|%f|%f|%f|%d|%d|%d|%d\r\n",
		    vCameraInfo[iIndex][vCameraPos][0],
			vCameraInfo[iIndex][vCameraPos][1],
			vCameraInfo[iIndex][vCameraPos][2],
			vCameraInfo[iIndex][vCameraRot],
			vCameraInfo[iIndex][vCameraStatus],
			vCameraInfo[iIndex][vCameraRange],
			vCameraInfo[iIndex][vCameraLimit],
			vCameraInfo[iIndex][vCameraTicket]);
	    fwrite(fHandle, szFileStr);
	}
	//print("[script] Speed Cams Saved Successfully . . .");
	return fclose(fHandle);
}
LoadServerStats()
{
	#define SERVER_STATS "serverstat.ini"

	if(!fexist(SERVER_STATS)) return 1;

	new	File: i_FileHandle = fopen("serverstat.ini", io_read), sz_FileStr[256];
    print("Server Stats cargado correctamente");
	fread(i_FileHandle, sz_FileStr);
	sscanf(sz_FileStr, "p<,>iiiiiiiiiii", TotalLogin, TotalConnect, TotalAutoBan, TotalRegister, MaxPlayersConnected, MPDay, MPMonth, MPYear, MPHour, MPMinute, TotalUptime);
	return fclose(i_FileHandle);
}

SaveServerStats()
{
	new sz_FileStr[256], File: i_FileHandle = fopen(SERVER_STATS, io_write);
	format(sz_FileStr, sizeof(sz_FileStr), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", TotalLogin, TotalConnect, TotalAutoBan, TotalRegister,MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,MPMinute,TotalUptime);
	fwrite(i_FileHandle, sz_FileStr);
	#undef SERVER_STATS
	return fclose(i_FileHandle);
}


LoadMOTDs()
{
	new arrCoords[6][128];
	new strFromFile2[512];
	new File: file = fopen("motd.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		splits(strFromFile2, arrCoords, '|');
		//strmid(GlobalMOTD, arrCoords[0], 0, strlen(arrCoords[0]), 255);
		//strmid(FAMMOTD, arrCoords[1], 0, strlen(arrCoords[4]), 255);
		fclose(file);
		print("Mensajes cargados correctamente.");
	}
	else
	{
		fcreate("motd.ini");
		//format(GlobalMOTD, sizeof(GlobalMOTD), "¡Bievenido al servidor!");
		//format(FACMOTD, sizeof(FACMOTD), "A los 3 adv su facción será limpiada");
  		SaveMOTDs();
	}
	return 1;
}

SaveMOTDs()
{
	new coordsstring[512];
	format(coordsstring, sizeof(coordsstring), "%s|%s", GlobalMOTD,FACMOTD);
	new File: file2 = fopen("motd.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

saveBusiness(iIndex)
{
    new bfile[64];
	format(bfile, 64, BUSINESS_FILE,iIndex);
	if(!INI_Exist(bfile)) // If not existing
	{
	    new INI:File = INI_Open(bfile);
	    INI_SetTag(File,"HouseData");
        INI_WriteInt(File,"Tipo", businessVariables[iIndex][bType]);
        INI_WriteString(File,"Nombre", businessVariables[iIndex][bName]);
        INI_WriteString(File,"Dueño", businessVariables[iIndex][bOwner]);
        INI_WriteFloat(File,"ExteriorX", businessVariables[iIndex][bExteriorPos][0]);
        INI_WriteFloat(File,"ExteriorY", businessVariables[iIndex][bExteriorPos][1]);
        INI_WriteFloat(File,"ExteriorZ", businessVariables[iIndex][bExteriorPos][2]);
        INI_WriteFloat(File,"InteriorX", businessVariables[iIndex][bInteriorPos][0]);
        INI_WriteFloat(File,"InteriorY", businessVariables[iIndex][bInteriorPos][1]);
        INI_WriteFloat(File,"InteriorZ", businessVariables[iIndex][bInteriorPos][2]);
        INI_WriteInt(File,"Interior", businessVariables[iIndex][bInterior]);
        INI_WriteFloat(File,"MiscX", businessVariables[iIndex][bMiscPos][0]);
        INI_WriteFloat(File,"MiscY", businessVariables[iIndex][bMiscPos][1]);
        INI_WriteFloat(File,"MiscZ", businessVariables[iIndex][bMiscPos][2]);
        INI_WriteInt(File,"Vault", businessVariables[iIndex][bVault]);
		INI_WriteInt(File,"Precio", businessVariables[iIndex][bPrice]);
		INI_WriteInt(File,"Stock", businessVariables[iIndex][bStock]);
		INI_WriteInt(File,"Locked", businessVariables[iIndex][bLocked]);
        INI_Close(File);
	}
	return 1;
}
loadBusiness()
{
    new bfile[64], szMessage[1024];
	for(new iIndex = 0; iIndex < sizeof(businessVariables); iIndex++)//Creates a loop, that goes through all of the businesses.
	{
		format(bfile, 64, BUSINESS_FILE, iIndex);
		INI_ParseFile(bfile, "loadbusiness_data", .bExtra = true, .extra = iIndex );//This is very hard to explain, but it basically loads the info from the file(More in Y_Less y_ini tutorial.)
		switch(businessVariables[iIndex][bLocked]){
			case 1:{
       			if(strlen(businessVariables[iIndex][bOwner]) == 0){format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{B90000}(Cerrado)", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bPrice]);}
				else{format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{B90000}(Cerrado)", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bOwner]);}
			}
			case 0:{
			    if(strlen(businessVariables[iIndex][bOwner]) == 0){format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{008EC1}Presiona H para entrar", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bPrice]);}
				else{format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bOwner]);}
			}
		}
		businessVariables[iIndex][bLabelID] = CreateDynamic3DTextLabel(szMessage, -1, businessVariables[iIndex][bExteriorPos][0], businessVariables[iIndex][bExteriorPos][1], businessVariables[iIndex][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		businessVariables[iIndex][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[iIndex][bExteriorPos][0], businessVariables[iIndex][bExteriorPos][1], businessVariables[iIndex][bExteriorPos][2], 0, 0, -1, 250);
	}
	print("[script] Business Loaded Successfully . . .");
	return 1;
}
function loadbusiness_data(id, name[], value[])
{
    INI_Int("Tipo", businessVariables[id][bType]);
    INI_String("Nombre", businessVariables[id][bName],48);
    INI_String("Dueño", businessVariables[id][bOwner],MAX_PLAYER_NAME);
    INI_Float("ExteriorX", businessVariables[id][bExteriorPos][0]);
    INI_Float("ExteriorY", businessVariables[id][bExteriorPos][1]);
    INI_Float("ExteriorZ", businessVariables[id][bExteriorPos][2]);
    INI_Float("InteriorX", businessVariables[id][bInteriorPos][0]);
    INI_Float("InteriorY", businessVariables[id][bInteriorPos][1]);
    INI_Float("InteriorZ", businessVariables[id][bInteriorPos][2]);
    INI_Int("Interior", businessVariables[id][bInterior]);
    INI_Float("MiscX", businessVariables[id][bMiscPos][0]);
    INI_Float("MiscY", businessVariables[id][bMiscPos][1]);
    INI_Float("MiscZ", businessVariables[id][bMiscPos][2]);
    INI_Int("Vault", businessVariables[id][bVault]);
    INI_Int("Precio", businessVariables[id][bPrice]);
    INI_Int("Stock", businessVariables[id][bStock]);
    INI_Int("Locked", businessVariables[id][bLocked]);
	return 1;
}

LoadFamilies() {

	if(!fexist("families.cfg")) return 1;

	new
		szFileStr[512],
		iIndex,
		File: iFileHandle = fopen("families.cfg", io_read);

	while (iIndex < sizeof(fINFO) && fread(iFileHandle, szFileStr)) {

		sscanf(szFileStr, "p<|>is[42]s[65]s[24]iiifffiiis[20]s[20]s[20]s[20]s[20]s[20]iiiiiiiiiiiiiiiiiiiiii",
			fINFO[iIndex][FamilyTaken],
			fINFO[iIndex][FamilyName],
			fINFO[iIndex][FamilyMOTD],
			fINFO[iIndex][FamilyLeader],
			fINFO[iIndex][FamilyBank],
			fINFO[iIndex][FamilyCash],
			fINFO[iIndex][FamilyUSafe],
			fINFO[iIndex][FamilySafe][0],
			fINFO[iIndex][FamilySafe][1],
			fINFO[iIndex][FamilySafe][2],
			fINFO[iIndex][FamilyPot],
			fINFO[iIndex][FamilyCrack],
			fINFO[iIndex][FamilyMats],
			fINFO[iIndex][FamilyRank1],
			fINFO[iIndex][FamilyRank2],
			fINFO[iIndex][FamilyRank3],
			fINFO[iIndex][FamilyRank4],
			fINFO[iIndex][FamilyRank5],
			fINFO[iIndex][FamilyRank6],
			fINFO[iIndex][FamilyMembers],
			fINFO[iIndex][FamilyMaxSkins],
			fINFO[iIndex][FamilySkins][0],
			fINFO[iIndex][FamilySkins][1],
			fINFO[iIndex][FamilySkins][2],
			fINFO[iIndex][FamilySkins][3],
			fINFO[iIndex][FamilySkins][4],
			fINFO[iIndex][FamilySkins][5],
			fINFO[iIndex][FamilySkins][6],
			fINFO[iIndex][FamilySkins][7],
			fINFO[iIndex][FamilyColor],
			fINFO[iIndex][FamilyTurfTokens],
			fINFO[iIndex][FamilyGuns][0],
			fINFO[iIndex][FamilyGuns][1],
			fINFO[iIndex][FamilyGuns][2],
			fINFO[iIndex][FamilyGuns][3],
			fINFO[iIndex][FamilyGuns][4],
			fINFO[iIndex][FamilyGuns][5],
			fINFO[iIndex][FamilyGuns][6],
			fINFO[iIndex][FamilyGuns][7],
			fINFO[iIndex][FamilyGuns][8],
			fINFO[iIndex][FamilyGuns][9]
		);
		++iIndex;
	}
	print("Familias cargadas correctamente.");
	return fclose(iFileHandle);
}

LoadHouses() {

	if(!fexist("apartments.cfg")) return 1;

	new
		szFileStr[1024],
		File: iFileHandle = fopen("apartments.cfg", io_read),
		iIndex;

	while(iIndex < sizeof(HouseInfo) && fread(iFileHandle, szFileStr)) {
		sscanf(szFileStr, "p<|>iiis[24]ffffffffiiiiiiiiiiiiiiiiiff",
			HouseInfo[iIndex][hOwned],
			HouseInfo[iIndex][hLevel],
			HouseInfo[iIndex][hHInteriorWorld],
			HouseInfo[iIndex][hOwner],
			HouseInfo[iIndex][hExteriorX],
			HouseInfo[iIndex][hExteriorY],
			HouseInfo[iIndex][hExteriorZ],
			HouseInfo[iIndex][hExteriorR],
			HouseInfo[iIndex][hInteriorX],
			HouseInfo[iIndex][hInteriorY],
			HouseInfo[iIndex][hInteriorZ],
			HouseInfo[iIndex][hInteriorR],
			HouseInfo[iIndex][hLock],
			HouseInfo[iIndex][hRentable],
			HouseInfo[iIndex][hRentFee],
			HouseInfo[iIndex][hValue],
			HouseInfo[iIndex][hSafeMoney],
			HouseInfo[iIndex][hPot],
			HouseInfo[iIndex][hCrack],
			HouseInfo[iIndex][hMaterials],
			HouseInfo[iIndex][hWeapons][0],
			HouseInfo[iIndex][hWeapons][1],
			HouseInfo[iIndex][hWeapons][2],
			HouseInfo[iIndex][hWeapons][3],
			HouseInfo[iIndex][hWeapons][4],
			HouseInfo[iIndex][hGLUpgrade],
			HouseInfo[iIndex][hPickupID],
			HouseInfo[iIndex][hCustomInterior],
			HouseInfo[iIndex][hCustomExterior],
			HouseInfo[iIndex][hExteriorA],
			HouseInfo[iIndex][hInteriorA]
		);

		if(HouseInfo[iIndex][hOwned]) 
		{
			if(HouseInfo[iIndex][hRentable] == 0) format(szFileStr, sizeof(szFileStr), "{DA0000}Propiedad Privada\n{FF1811}Dueño: %s\nNivel: %d\nID: %d",HouseInfo[iIndex][hOwner],HouseInfo[iIndex][hLevel],iIndex);
			else format(szFileStr, sizeof(szFileStr), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[iIndex][hOwner],HouseInfo[iIndex][hLevel],HouseInfo[iIndex][hRentFee]);
		}
		else format(szFileStr, sizeof(szFileStr), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[iIndex][hValue],HouseInfo[iIndex][hLevel]);
		HouseInfo[iIndex][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[iIndex][hExteriorX], HouseInfo[iIndex][hExteriorY], HouseInfo[iIndex][hExteriorZ]);
		HouseInfo[iIndex][hTextID] = CreateDynamic3DTextLabel(szFileStr, COLOR_GREEN2, HouseInfo[iIndex][hExteriorX], HouseInfo[iIndex][hExteriorY], HouseInfo[iIndex][hExteriorZ]+0.5,10.0);
		++iIndex;
	}
	print("Casas cargadas correctamente.");
	return fclose(iFileHandle);
}

SaveHouses() {

	new
		szFileStr[1024],
		File: fHandle = fopen("apartments.cfg", io_write);

	for(new iIndex; iIndex < MAX_HOUSES; iIndex++) {
		format(szFileStr, sizeof(szFileStr), "%d|%d|%d|%s|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%f\r\n",
			HouseInfo[iIndex][hOwned], //1
			HouseInfo[iIndex][hLevel], //2
			HouseInfo[iIndex][hHInteriorWorld], //3
			HouseInfo[iIndex][hOwner], //4
			HouseInfo[iIndex][hExteriorX], //5
			HouseInfo[iIndex][hExteriorY], //6
			HouseInfo[iIndex][hExteriorZ], //7
			HouseInfo[iIndex][hExteriorR], //8
			HouseInfo[iIndex][hInteriorX], //9
			HouseInfo[iIndex][hInteriorY], //10
			HouseInfo[iIndex][hInteriorZ], //11
			HouseInfo[iIndex][hInteriorR], //12
			HouseInfo[iIndex][hLock], //13
			HouseInfo[iIndex][hRentable], //14
			HouseInfo[iIndex][hRentFee], //15
			HouseInfo[iIndex][hValue], //16
   			HouseInfo[iIndex][hSafeMoney], //17
			HouseInfo[iIndex][hPot], //18
			HouseInfo[iIndex][hCrack], //19
			HouseInfo[iIndex][hMaterials], //20
			HouseInfo[iIndex][hWeapons][0], //21
			HouseInfo[iIndex][hWeapons][1], //22
			HouseInfo[iIndex][hWeapons][2], //23
			HouseInfo[iIndex][hWeapons][3], //24
			HouseInfo[iIndex][hWeapons][4], //25
			HouseInfo[iIndex][hGLUpgrade], //26
			HouseInfo[iIndex][hPickupID], //27
			HouseInfo[iIndex][hCustomInterior], //28
			HouseInfo[iIndex][hCustomExterior], //29
			HouseInfo[iIndex][hExteriorA], //30
			HouseInfo[iIndex][hInteriorA] //31
		);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}

UpdatePoints()
{
	new idx;
	new File: file2;
	while (idx < sizeof(Points))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f|%f|%f|%d|%d|%s|%s|%s|%d\n",
		Points[idx][Pointx],
		Points[idx][Pointy],
		Points[idx][Pointz],
		Points[idx][Type],
		Points[idx][Vulnerable],
		Points[idx][Owner],
		Points[idx][CapperName],
		Points[idx][Name],
		Points[idx][MatPoint]);
		if(idx == 0)
		{
			file2 = fopen("points.cfg", io_write);
		}
		else
		{
			file2 = fopen("points.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

LoadPoints(){
	new arrCoords[9][64];
	new strFromFile2[256];
	new File: file = fopen("points.cfg", io_read);
	if (file){
		new idx;
		while (idx < sizeof(Points)){
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			Points[idx][Pointx] = floatstr(arrCoords[0]);
			Points[idx][Pointy] = floatstr(arrCoords[1]);
			Points[idx][Pointz] = floatstr(arrCoords[2]);
			Points[idx][Type] = strval(arrCoords[3]);
			Points[idx][Vulnerable] = strval(arrCoords[4]);
			strmid(Points[idx][Owner], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(Points[idx][CapperName], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(Points[idx][Name], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			Points[idx][MatPoint] = strval(arrCoords[8]);
			Points[idx][CaptureTimerEx2] = -1;
			Points[idx][ClaimerId] = INVALID_PLAYER_ID;
			Points[idx][PointPickupID] = CreateDynamicPickup( 1239, 23, Points[idx][Pointx], Points[idx][Pointy], Points[idx][Pointz]);
			idx++;
		}
		print("Puntos cargados correctamente.");
		fclose(file);
	}
	return 1;
}

saveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(fINFO))
	{
		new coordsstring[512];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%d|%d|%d|%f|%f|%f|%d|%d|%d|%s|%s|%s|%s|%s|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		fINFO[idx][FamilyTaken],
		fINFO[idx][FamilyName],
		fINFO[idx][FamilyMOTD],
		fINFO[idx][FamilyLeader],
		fINFO[idx][FamilyBank],
		fINFO[idx][FamilyCash],
		fINFO[idx][FamilyUSafe],
		fINFO[idx][FamilySafe][0],
		fINFO[idx][FamilySafe][1],
		fINFO[idx][FamilySafe][2],
		fINFO[idx][FamilyPot],
		fINFO[idx][FamilyCrack],
		fINFO[idx][FamilyMats],
		fINFO[idx][FamilyRank1],
		fINFO[idx][FamilyRank2],
		fINFO[idx][FamilyRank3],
		fINFO[idx][FamilyRank4],
		fINFO[idx][FamilyRank5],
		fINFO[idx][FamilyRank6],
		fINFO[idx][FamilyMembers],
		fINFO[idx][FamilyMaxSkins],
		fINFO[idx][FamilySkins][0],
		fINFO[idx][FamilySkins][1],
		fINFO[idx][FamilySkins][2],
		fINFO[idx][FamilySkins][3],
		fINFO[idx][FamilySkins][4],
		fINFO[idx][FamilySkins][5],
		fINFO[idx][FamilySkins][6],
		fINFO[idx][FamilySkins][7],
		fINFO[idx][FamilyColor],
		fINFO[idx][FamilyTurfTokens],
		fINFO[idx][FamilyGuns][0],
		fINFO[idx][FamilyGuns][1],
		fINFO[idx][FamilyGuns][2],
		fINFO[idx][FamilyGuns][3],
		fINFO[idx][FamilyGuns][4],
		fINFO[idx][FamilyGuns][5],
		fINFO[idx][FamilyGuns][6],
		fINFO[idx][FamilyGuns][7],
		fINFO[idx][FamilyGuns][8],
		fINFO[idx][FamilyGuns][9]);
		if(idx == 0)
		{
			file2 = fopen("families.cfg", io_write);
		}
		else
		{
			file2 = fopen("families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

LoadFamiliesHQ()
{
    new string2[64];
	format(string2, sizeof(string2), "familieshq.ini");
	new File: GangFile = fopen(string2, io_read);
	if(GangFile)
	{
		new key[256], val[256], Data[256];
		while(fread(GangFile,Data,sizeof(Data)))
		{
		    new string[128];
		    for(new f = 0; f < MAX_FAMILY; f++)
    		{
				key = ini_GetKey( Data );
				format(string, 128, "Family%dEntranceX",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyEntrance][0] = floatstr( val ); }
				format(string, 128, "Family%dEntranceY",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyEntrance][1] = floatstr( val ); }
				format(string, 128, "Family%dEntranceZ",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyEntrance][2] = floatstr( val ); }
				format(string, 128, "Family%dEntranceA",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyEntrance][3] = floatstr( val ); }
				format(string, 128, "Family%dExitX",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyExit][0] = floatstr( val ); }
				format(string, 128, "Family%dExitY",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyExit][1] = floatstr( val ); }
				format(string, 128, "Family%dExitZ",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyExit][2] = floatstr( val ); }
				format(string, 128, "Family%dExitA",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyExit][3] = floatstr( val ); }
				format(string, 128, "Family%dInterior",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyInterior] = strval( val ); }
				format(string, 128, "Family%dCustomMap",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyCustomMap] = strval( val ); }
				format(string, 128, "Family%dVirtualWorld",f);
				if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); fINFO[f][FamilyVirtualWorld] = strval( val ); }
				for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
    			{
    			    format(string, 128, "Family%dVeh%dModelId",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvModelId] = strval( val ); }
					format(string, 128, "Family%dVeh%dSpawnx",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvSpawnx] = floatstr( val ); }
					format(string, 128, "Family%dVeh%dSpawny",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvSpawny] = floatstr( val ); }
					format(string, 128, "Family%dVeh%dSpawnz",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvSpawnz] = floatstr( val ); }
					format(string, 128, "Family%dVeh%dSpawna",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvSpawna] = floatstr( val ); }
					format(string, 128, "Family%dVeh%dLock",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvLock] = strval( val ); }
					format(string, 128, "Family%dVeh%dLocked",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvLocked] = strval( val ); }
					format(string, 128, "Family%dVeh%dPaintJob",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvPaintJob] = strval( val ); }
					format(string, 128, "Family%dVeh%dColor1",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvColor1] = strval( val ); }
					format(string, 128, "Family%dVeh%dColor2",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvColor2] = strval( val ); }
					format(string, 128, "Family%dVeh%dFuel",f, fv);
					if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); FVINFO[f][fv][fvFuel] = strval( val ); }
    			}
			}
		}
		print("Hq Familias cargadas correctamente.");
		fclose(GangFile);
	}
	return 1;
}

saveFamiliesHQ()
{
	new string3[32];
	format(string3, sizeof(string3), "familieshq.ini");
	new File: hFile = fopen(string3, io_write);
	if (hFile)
	{
		new var[32];
		for(new f = 0; f < MAX_FAMILY; f++)
   		{
			format(var, 32, "Family%dEntranceX=%.1f\n",f, fINFO[f][FamilyEntrance][0]);fwrite(hFile, var);
			format(var, 32, "Family%dEntranceY=%.1f\n",f, fINFO[f][FamilyEntrance][1]); fwrite(hFile, var);
			format(var, 32, "Family%dEntranceZ=%.1f\n",f, fINFO[f][FamilyEntrance][2]); fwrite(hFile, var);
			format(var, 32, "Family%dEntranceA=%.1f\n",f, fINFO[f][FamilyEntrance][3]); fwrite(hFile, var);
			format(var, 32, "Family%dExitX=%.1f\n",f, fINFO[f][FamilyExit][0]); fwrite(hFile, var);
			format(var, 32, "Family%dExitY=%.1f\n",f, fINFO[f][FamilyExit][1]); fwrite(hFile, var);
			format(var, 32, "Family%dExitZ=%.1f\n",f, fINFO[f][FamilyExit][2]); fwrite(hFile, var);
			format(var, 32, "Family%dExitA=%.1f\n",f, fINFO[f][FamilyExit][3]); fwrite(hFile, var);
			format(var, 32, "Family%dInterior=%d\n",f, fINFO[f][FamilyInterior]); fwrite(hFile, var);
			format(var, 32, "Family%dCustomMap=%d\n",f, fINFO[f][FamilyCustomMap]); fwrite(hFile, var);
			format(var, 32, "Family%dVirtualWorld=%d\n",f, fINFO[f][FamilyVirtualWorld]); fwrite(hFile, var);

			for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
   			{
   			    format(var, 32, "Family%dVeh%dModelId=%d\n",f, fv, FVINFO[f][fv][fvModelId]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawnx=%.1f\n",f, fv,FVINFO[f][fv][fvSpawnx]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawny=%.1f\n",f, fv,FVINFO[f][fv][fvSpawny]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawnz=%.1f\n",f, fv,FVINFO[f][fv][fvSpawnz]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawna=%.1f\n",f, fv,FVINFO[f][fv][fvSpawna]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dLock=%d\n",f, fv,FVINFO[f][fv][fvLock]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dLocked=%d\n",f, fv,FVINFO[f][fv][fvLocked]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dPaintJob=%d\n",f, fv,FVINFO[f][fv][fvPaintJob]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dColor1=%d\n",f, fv,FVINFO[f][fv][fvColor1]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dColor2=%d\n",f, fv,FVINFO[f][fv][fvColor2]); fwrite(hFile, var);
				if(FVINFO[f][fv][fvId] != INVALID_VEHICLE_ID) FVINFO[f][fv][fvFuel] = VehicleFuel[FVINFO[f][fv][fvId]];
				format(var, 32, "Family%dVeh%dFuel=%d\n",f, fv,FVINFO[f][fv][fvFuel]); fwrite(hFile, var);
    		}
  		}
		fclose(hFile);
	}
	return 1;
}

function RemoveFlash(playerid)
{
	TextDrawHideForPlayer(playerid,flash);
	SetPVarInt(playerid,"PlayerHasBeenFlashed",2);
}

function RemoveFlashc(playerid)
{
	TextDrawHideForPlayer(playerid,flashc);
	SetPVarInt(playerid,"PlayerHasBeenFlashed",2);
}

CargoTextura()
{
	comisaria = CreateObject(3976, 1571.63, -1675.74, 35.68, 360.00, 0.00, 0.09);
	SetObjectMaterial(comisaria, 6, 4014, "civic01_lan", "crazy paving", 0);
	SetObjectMaterial(comisaria, 4, 4014, "civic01_lan", "crazy paving", 0);
	SetObjectMaterial(comisaria, 8, 4014, "civic01_lan", "crazy paving", 0);
	SetObjectMaterial(comisaria, 5, 4014, "civic01_lan", "crazy paving", 0);
	SetObjectMaterial(comisaria, 7, 4014, "civic01_lan", "crazy paving", 0);
	SetObjectMaterial(comisaria, 12, 4586, "skyscrap3_lan2", "sl_skyscrpr05", 0);
	
	Ayunta1 = CreateObject(3980, 1481.64, -1785.06, 22.33,   0.00, 0.00, 0.00);
	SetObjectMaterial(Ayunta1, 1, 16571, "des_se1", "des_crackeddirt1", 0);
	SetObjectMaterial(Ayunta1, 2, 3942, "bistro", "ahoodfence2", 0);
	SetObjectMaterial(Ayunta1, 3, 11008, "firehouse_sfse", "GB_sandstwall01", 0);
	SetObjectMaterial(Ayunta1, 4, 5016, "ground3_las", "ws_bigstones", 0);
	SetObjectMaterial(Ayunta1, 6, 5033, "union_las", "lasunion98", 0);
	SetObjectMaterial(Ayunta1, 8, 16005, "des_stownmain2", "des_ghotwood1", 0);
	SetObjectMaterial(Ayunta1, 10, 16005, "des_stownmain2", "sanruf", 0);

	Ayunta2 = CreateObject(4002, 1479.96, -1791.31, 56.02,   0.00, 0.00, 0.00);
	SetObjectMaterial(Ayunta2, 0, 13734, "hillcliff_lahills", "cobbles_kb_256", 0);
	SetObjectMaterial(Ayunta2, 1, 16021, "des_geyser", "shingles1", 0);
	SetObjectMaterial(Ayunta2, 2, 16571, "des_se1", "des_crackeddirt1", 0);
	SetObjectMaterial(Ayunta2, 3, 16005, "des_stownmain2", "sanruf", 0);
	SetObjectMaterial(Ayunta2, 5, 9105, "vegaselod1", "luxorwindow02_lod", 0);
}

AntiDeAMX()
{
    new a[][] = {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
//****************************************************************************
//***velocimetro***
forward SpeedoUpdate();
//******************************************************************************
public OnGameModeInit() 
{
    SetTimer("ChecarFlyHackers",1000,1);
    SetTimer("Clima", 1200000, true);
    SetTimer("ChoqueFunc", 200, 1);
    CargoTextura();
    AntiDeAMX();
	SendRconCommand("onfoot_rate 40");
	SendRconCommand("incar_rate 40");
	SendRconCommand("weapon_rate 40");
	SendRconCommand("stream_distance 250.0");
	SendRconCommand("stream_rate 1000");
	Streamer_TickRate(75);
	if(DetectarSpam("190.218.8.452:7777")) print("Hizo SPAM."); 

//Flash
flash =
TextDrawCreate(-20.000000,2.000000,"|");
TextDrawUseBox(flash,1);
TextDrawBoxColor(flash,0xffffff66);
TextDrawTextSize(flash,660.000000,22.000000);
TextDrawAlignment(flash,0);
TextDrawBackgroundColor(flash,0x000000ff);
TextDrawFont(flash,3);
TextDrawLetterSize(flash,1.000000,52.200000);
TextDrawColor(flash,0xffffffff);
TextDrawSetOutline(flash,1);
TextDrawSetProportional(flash,1);
TextDrawSetShadow(flash,1);
textdrawscount++;

flashc =
TextDrawCreate(-20.000000,2.000000,"|");
TextDrawUseBox(flashc,1);
TextDrawBoxColor(flashc,0xFC000095);
TextDrawTextSize(flashc,660.000000,22.000000);
TextDrawAlignment(flashc,0);
TextDrawBackgroundColor(flashc,0x000000ff);
TextDrawFont(flashc,3);
TextDrawLetterSize(flashc,1.000000,52.200000);
TextDrawColor(flashc,0xFC000095);
TextDrawSetOutline(flashc,1);
TextDrawSetProportional(flashc,1);
TextDrawSetShadow(flashc,1);
textdrawscount++;

//Text logueando
Drawlogueando0 = TextDrawCreate(10.000000, 427.000000, "Perfect City Roleplay");
TextDrawBackgroundColor(Drawlogueando0, 255);
TextDrawFont(Drawlogueando0, 1);
TextDrawLetterSize(Drawlogueando0, 0.500000, 2.000000);
TextDrawColor(Drawlogueando0, -1);
TextDrawSetOutline(Drawlogueando0, 0);
TextDrawSetProportional(Drawlogueando0, 1);
TextDrawSetShadow(Drawlogueando0, 1);

Drawlogueando1 = TextDrawCreate(390.000000, 427.000000, "Foro: Perfectcity-rp.com");
TextDrawBackgroundColor(Drawlogueando1, 255);
TextDrawFont(Drawlogueando1, 1);
TextDrawLetterSize(Drawlogueando1, 0.500000, 2.000000);
TextDrawColor(Drawlogueando1, -1);
TextDrawSetOutline(Drawlogueando1, 0);
TextDrawSetProportional(Drawlogueando1, 1);
TextDrawSetShadow(Drawlogueando1, 1);
	//Text en el logueo
	//*****************Textdraw ingame**************
Textgame0 = TextDrawCreate(38.000000, 321.000000, "Perfect City");
TextDrawBackgroundColor(Textgame0, 255);
TextDrawFont(Textgame0, 1);
TextDrawLetterSize(Textgame0, 0.500000, 1.400000);
TextDrawColor(Textgame0, -1);
TextDrawSetOutline(Textgame0, 0);
TextDrawSetProportional(Textgame0, 1);
TextDrawSetShadow(Textgame0, 1);
 //****************velocimetro*****************
		/*Tacho_Box0 = TextDrawCreate(319.000000, 343.000000, "");
        TextDrawBackgroundColor(Tacho_Box0, 255);
        TextDrawFont(Tacho_Box0, 1);
        TextDrawLetterSize(Tacho_Box0, 0.500000, 1.000000);
        TextDrawColor(Tacho_Box0, -1);
        TextDrawSetOutline(Tacho_Box0, 0);
        TextDrawSetProportional(Tacho_Box0, 1);
        TextDrawSetShadow(Tacho_Box0, 1);
        TextDrawUseBox(Tacho_Box0, 1);
        TextDrawBoxColor(Tacho_Box0, 255);
        TextDrawTextSize(Tacho_Box0, 85.000000, 0.000000);

        Tacho_Box1 = TextDrawCreate(319.000000, 345.000000, "");
        TextDrawBackgroundColor(Tacho_Box1, 255);
        TextDrawFont(Tacho_Box1, 1);
        TextDrawLetterSize(Tacho_Box1, 0.500000, 1.400000);
        TextDrawColor(Tacho_Box1, -1);
        TextDrawSetOutline(Tacho_Box1, 0);
        TextDrawSetProportional(Tacho_Box1, 1);
        TextDrawSetShadow(Tacho_Box1, 1);
        TextDrawUseBox(Tacho_Box1, 1);
        TextDrawBoxColor(Tacho_Box1, 255);
        TextDrawTextSize(Tacho_Box1, 309.000000, 0.000000);

        Tacho_Box2 = TextDrawCreate(319.000000, 421.000000, "");
        TextDrawBackgroundColor(Tacho_Box2, 255);
        TextDrawFont(Tacho_Box2, 1);
        TextDrawLetterSize(Tacho_Box2, 0.500000, 1.000000);
        TextDrawColor(Tacho_Box2, -1);
        TextDrawSetOutline(Tacho_Box2, 0);
        TextDrawSetProportional(Tacho_Box2, 1);
        TextDrawSetShadow(Tacho_Box2, 1);
        TextDrawUseBox(Tacho_Box2, 1);
        TextDrawBoxColor(Tacho_Box2, 255);
        TextDrawTextSize(Tacho_Box2, 83.000000, 0.000000);*/

        SetTimer("SpeedoUpdate", 1000, 1);
        for(new i = 0; i<MAX_PLAYERS; i++)
        {
                Tacho_KMH[i] = TextDrawCreate(490.000000, 390.000000, "0");
				TextDrawBackgroundColor(Tacho_KMH[i], 255);
				TextDrawFont(Tacho_KMH[i], 3);
				TextDrawLetterSize(Tacho_KMH[i], 0.790000, 2.199999);
				TextDrawColor(Tacho_KMH[i], -1);
				TextDrawSetOutline(Tacho_KMH[i], 0);
				TextDrawSetProportional(Tacho_KMH[i], 1);
				TextDrawSetShadow(Tacho_KMH[i], 1);

                Tacho_Tank[i] = TextDrawCreate(570.000000, 390.000000, "0");
				TextDrawBackgroundColor(Tacho_Tank[i], 255);
				TextDrawFont(Tacho_Tank[i], 3);
				TextDrawLetterSize(Tacho_Tank[i], 0.790000, 2.199999);
				TextDrawColor(Tacho_Tank[i], -1);
				TextDrawSetOutline(Tacho_Tank[i], 0);
				TextDrawSetProportional(Tacho_Tank[i], 1);
				TextDrawSetShadow(Tacho_Tank[i], 1);

        }
	//****************Sistema AFK*****************
	Messageafk = TextDrawCreate(1.000000,435.000000,"  ");
   	TextDrawAlignment(Messageafk,0);
   	TextDrawBackgroundColor(Messageafk,0x000000ff);
   	TextDrawFont(Messageafk,2);
   	TextDrawLetterSize(Messageafk,0.598999,1.300000);
	TextDrawSetOutline(Messageafk,1);
   	TextDrawSetProportional(Messageafk,1);
   	TextDrawSetShadow(Messageafk,1);
	//****************ADO[K]1NG*****************
    //***********GangZone de pandillas******
	//*********************************
	//***sistema de fire**
	SetTimer("Fuegoo", 1000, true);
    F = false;
    new fire = random(sizeof(Fuego));
    LugarFuego[0] = Fuego[fire][0];
    LugarFuego[1] = Fuego[fire][1];
    LugarFuego[2] = Fuego[fire][2];
	//********************
	//******************* Init gamemode*******************
	djson_GameModeInit();
	SendRconCommand("mapname Los Santos");
	SendRconCommand("perfectcity-rp.com.");
	SendRconCommand("gamemodetext RolePlay");
	SendRconCommand("language Español Latino");
	SendRconCommand("rcon_password pERFECTcITY45");
	new servergmtextstr[64];
	format(servergmtextstr, 64, "hostname ||» Perfect City RP «||", SERVER_GM_TEXT);
	SendRconCommand(servergmtextstr);
	new string[42];
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	EnableStuntBonusForAll(0);
	AllowAdminTeleport(1);
	DisableInteriorEnterExits();
	LoadHouses();
	ColocarMueblesCasas();
	LoadStuff();
	LoadServerStats();
	LoadFamilies();
	LoadPoints();
	LoadDynamicDoors();
	loadBusiness();
	LoadcDealerships();
	LoadMapeos(); //carga los mapeos del servicor
	skinlist = LoadModelSelectionMenu("skins.txt");
	MueblesObj = 	LoadModelSelectionMenu("mSelection/MueblesModelos.txt");
	for(new f = 0; f < sizeof(fINFO); f++)
	{
		for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
		{
		    FVINFO[f][fv][fvModelId] = 0;
			FVINFO[f][fv][fvSpawnx] = 0.0;
			FVINFO[f][fv][fvSpawny] = 0.0;
			FVINFO[f][fv][fvSpawnz] = 0.0;
			FVINFO[f][fv][fvSpawna] = 0.0;
			FVINFO[f][fv][fvPaintJob] = -1;
			FVINFO[f][fv][fvColor1] = 126;
			FVINFO[f][fv][fvColor2] = 126;
			FVINFO[f][fv][fvPrice] = 0;
			FVINFO[f][fv][fvFuel] = 200;
	    	FVINFO[f][fv][fvId] = INVALID_VEHICLE_ID;
		}
	}
	LoadFamiliesHQ();
	LoadMOTDs();
	loadSpeedCam();
	ClearReports();
	SetNameTagDrawDistance(60.0);
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
		gTime = wtime;
	}
	GiftAllowed = 1;
	AllowInteriorWeapons(1);
	UsePlayerPedAnims();
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
		CreatedCars[i] = INVALID_VEHICLE_ID;
	}
	for(new v = 0; v < MAX_VEHICLES; v++)
	{
	    VehicleFuel[v] = 200;
	}
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
Create3DTextLabel("{FFF415}Usa /comprar para comprar productos",0xFFFFFFFF,-22.028297,-138.630065,1003.546875,100.0,0);
Create3DTextLabel("{FFF415}Usa /comprar para comprar productos",0xFFFFFFFF,-30.602615,-28.996482,1003.557250,100.0,0);
//Create3DTextLabel("{FFF415}Usa /comprarsexual para comprar productos sexuales",0xFFFFFFFF,-103.8985, -22.7776, 1000.6025,100.0,0); //texto sexshop

	//*******************TextDraws******************


	MOTD =
	TextDrawCreate(319.000000, 348.000000, "Bienvenidos a Perfect City recuerda rolear al máximo, invita a tus amigos.");
	TextDrawAlignment(MOTD, 2);
	TextDrawBackgroundColor(MOTD, 255);
	TextDrawFont(MOTD, 2);
	TextDrawLetterSize(MOTD, 0.200000, 1.299999);
	TextDrawColor(MOTD, -1);
	TextDrawSetOutline(MOTD, 0);
	TextDrawSetProportional(MOTD, 1);
	TextDrawSetShadow(MOTD, 1);
	textdrawscount++;

    TutTxt[0] =
	TextDrawCreate(479.000000, 125.260002, "_"); // BOX
	TextDrawBackgroundColor(TutTxt[0], 255);
	TextDrawFont(TutTxt[0], 2);
	TextDrawLetterSize(TutTxt[0], 0.000000, 16.094455);
	TextDrawColor(TutTxt[0], -1);
	TextDrawSetOutline(TutTxt[0], 0);
	TextDrawSetProportional(TutTxt[0], 1);
	TextDrawSetShadow(TutTxt[0], 1);
	TextDrawUseBox(TutTxt[0], 1);
	TextDrawBoxColor(TutTxt[0], 75);//0x232323FF
	TextDrawTextSize(TutTxt[0], 166.000000, 0.000000);
	textdrawscount++;

	TutTxt[1] =
	TextDrawCreate(313.500000, 232.960052, "Foro: ~w~Perfectcity-rp.com");
	TextDrawBackgroundColor(TutTxt[1], 255);
	TextDrawFont(TutTxt[1], 1);
	TextDrawLetterSize(TutTxt[1], 0.276499, 1.387199);
	TextDrawAlignment(TutTxt[1], 2);
	TextDrawColor(TutTxt[1], -5963521);
	TextDrawSetOutline(TutTxt[1], 0);
	TextDrawSetProportional(TutTxt[1], 1);
	TextDrawSetShadow(TutTxt[1], 1);
	textdrawscount++;

	TutTxt[2] =
	TextDrawCreate(213.000000, 130.480026, "Perfect City RP - Tutorial");
	TextDrawLetterSize(TutTxt[2], 0.307999, 1.600000);
	TextDrawTextSize(TutTxt[2], 439.000000, -35.840011);
	TextDrawAlignment(TutTxt[2], 1);
	TextDrawColor(TutTxt[2], 0x00C000FF);
	TextDrawUseBox(TutTxt[2], true);
	TextDrawBoxColor(TutTxt[2], 115);
	TextDrawSetShadow(TutTxt[2], 0);
	TextDrawSetOutline(TutTxt[2], 1);
	TextDrawBackgroundColor(TutTxt[2], 51);
	TextDrawFont(TutTxt[2], 2);
	TextDrawSetProportional(TutTxt[2], 1);
	textdrawscount++;

	TutTxt[3] =
	TextDrawCreate(295.000000, 251.999969, "Pulsa Y");
	TextDrawLetterSize(TutTxt[3], 0.261999, 1.247200);
	TextDrawTextSize(TutTxt[3], 342.500000, -63.279994);
	TextDrawAlignment(TutTxt[3], 1);
	TextDrawColor(TutTxt[3], 0xF5DEB3AA);
	TextDrawUseBox(TutTxt[3], true);
	TextDrawBoxColor(TutTxt[3], 255);
	TextDrawSetShadow(TutTxt[3], 0);
	TextDrawSetOutline(TutTxt[3], 1);
	TextDrawBackgroundColor(TutTxt[3], 51);
	TextDrawFont(TutTxt[3], 2);
	TextDrawSetProportional(TutTxt[3], 1);
	textdrawscount++;

	FechaD = TextDrawCreate(493.000000, 3.000000, "12 de diciembre del 2013");
	TextDrawBackgroundColor(FechaD, 255);
	TextDrawFont(FechaD, 3);
	TextDrawLetterSize(FechaD, 0.340000, 1.799999);
	TextDrawColor(FechaD, -1);
	TextDrawSetOutline(FechaD, 0);
	TextDrawSetProportional(FechaD, 1);
	TextDrawSetShadow(FechaD, 1);

	TiempoD = TextDrawCreate(605.0,25.0,"00:00");
	TextDrawUseBox(TiempoD, 0);
	TextDrawFont(TiempoD, 3);
	TextDrawSetShadow(TiempoD,0); // no shadow
    TextDrawSetOutline(TiempoD,2); // thickness 1
    TextDrawBackgroundColor(TiempoD,0x000000FF);
    TextDrawColor(TiempoD,0xFFFFFFFF);
    TextDrawAlignment(TiempoD,3);
	TextDrawLetterSize(TiempoD,0.5,1.5);

	SetTimer("Clock",1000,true);

    for(new i = 0; i<MAX_PLAYERS; i++) //
	{
	TextTut[i] =
	TextDrawCreate(8.000000, 218.000000, "Perfect City - Nuevo servidor.");
    TextDrawBackgroundColor(TextTut[i], 255);
	TextDrawFont(TextTut[i], 2);
	TextDrawLetterSize(TextTut[i], 0.219999, 1.999999);
	TextDrawColor(TextTut[i], -1);
	TextDrawSetOutline(TextTut[i], 1);
	TextDrawSetProportional(TextTut[i], 1);
	TextDrawSetSelectable(TextTut[i], 0);

 	/*Experiencia[i] = TextDrawCreate(180.000000, 428.000000, "Experiencia: 0/16");
	TextDrawBackgroundColor(Experiencia[i], 255);
	TextDrawFont(Experiencia[i], 1);
	TextDrawLetterSize(Experiencia[i], 0.500000, 2.000000);
	TextDrawColor(Experiencia[i], -1);
	TextDrawSetOutline(Experiencia[i], 0);
	TextDrawSetProportional(Experiencia[i], 1);
	TextDrawSetShadow(Experiencia[i], 1);
	textdrawscount++;*/
	}

//**************************************Autos**************************************
//SAPD
//San Andreas Police Departament Cars
SAPDVehicles[0] = 	AddStaticVehicleEx(497,1563.660034,-1655.212158,28.589679,88.595161,0,0,TIME_RESPAWN); // Police Maverick  19
SAPDVehicles[1] =	AddStaticVehicleEx(497,1560.5781,-1644.7632,28.5767,90.9838,0,0,TIME_RESPAWN); /////35
SAPDVehicles[2] =	AddStaticVehicleEx(596,1602.2975000,-1688.0460000,5.4932000,88.7400000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[3] =	AddStaticVehicleEx(596,1602.4600000,-1696.1964000,5.5942000,88.7400000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[4] =	AddStaticVehicleEx(596,1602.4235000,-1704.0883000,5.4973000,88.7400000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[5] =	AddStaticVehicleEx(596,1591.4885000,-1710.2935000,5.4963000,0.0000000,-0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[6] =	AddStaticVehicleEx(596,1583.3973000,-1710.7069000,5.4963000,0.0000000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[7] =	AddStaticVehicleEx(523,1602.4479000,-1700.0505000,5.2881000,90.0000000,0,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[8] =	AddStaticVehicleEx(523,1602.2490000,-1691.9579000,5.2881000,90.0000000,0,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[9] =	AddStaticVehicleEx(523,1595.3616000,-1709.8135000,5.2881000,0.0000000,0,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[10] =	AddStaticVehicleEx(523,1587.5962000,-1709.9927000,5.2881000,0.0000000,0,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[11] =	AddStaticVehicleEx(523,1579.1730000,-1710.5823000,5.2881000,0.0000000,0,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[12] =	AddStaticVehicleEx(596,1574.6251000,-1711.4291000,5.4963000,0.0000000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[13] =	AddStaticVehicleEx(599,1563.1056000,-1710.2823000,5.7483000,0.0000000,0,1,TIME_RESPAWN); //Police Ranger
SAPDVehicles[14] =	AddStaticVehicleEx(599,1559.0959000,-1710.3369000,5.7483000,0.0000000,0,1,TIME_RESPAWN); //Police Ranger
SAPDVehicles[15] =	AddStaticVehicleEx(415,1545.2410000,-1688.4819000,5.6128000,90.0000000,0,0,TIME_RESPAWN); //Cheetah
SAPDVehicles[16] =	AddStaticVehicleEx(402,1544.5569000,-1684.2035000,4.8792000,90.0000000,0,0,TIME_RESPAWN); //Buffalo
SAPDVehicles[17] =	AddStaticVehicleEx(560,1529.1791000,-1688.0699000,5.5119000,-90.0000000,0,0,TIME_RESPAWN); //Sultan
SAPDVehicles[18] =	AddStaticVehicleEx(461,1529.7577000,-1680.5739000,5.2813000,262.8600000,0,0,TIME_RESPAWN); //PCJ-600
SAPDVehicles[19] =	AddStaticVehicleEx(521,1529.6710000,-1682.8827000,5.3647000,-89.7600000,0,0,TIME_RESPAWN); //FCR-900
SAPDVehicles[20] =	AddStaticVehicleEx(525,1545.9656000,-1676.1440000,4.8749000,90.0000000,17,20,TIME_RESPAWN); //Tow Truck
SAPDVehicles[21] =	AddStaticVehicleEx(525,1546.1982000,-1668.0928000,4.8749000,90.0000000,18,20,TIME_RESPAWN); //Tow Truck
SAPDVehicles[22] =	AddStaticVehicleEx(601,1544.0022000,-1654.8026000,5.6107000,90.0000000,0,1,TIME_RESPAWN); //S.W.A.T. Van
SAPDVehicles[23] =	AddStaticVehicleEx(427,1538.5599000,-1645.6830000,5.8242000,180.0000000,0,1,TIME_RESPAWN); //Enforcer
SAPDVehicles[24] =	AddStaticVehicleEx(427,1534.5193000,-1645.5964000,5.8242000,180.0000000,0,1,TIME_RESPAWN); //Enforcer
SAPDVehicles[25] =	AddStaticVehicleEx(598,1566.1898000,-1710.2500000,5.4160000,0.0000000,0,1,TIME_RESPAWN); //Police Car (LVPD)
SAPDVehicles[26] =	AddStaticVehicleEx(596,1535.8606000,-1668.9768000,12.9969000,0.0000000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[27] =	AddStaticVehicleEx(596,1535.8368000,-1676.4740000,12.9969000,0.0000000,0,1,TIME_RESPAWN); //Police Car (LSPD)
SAPDVehicles[28] =	AddStaticVehicleEx(506,1535.0072000,-1693.1379000,5.5020000,190.4400000,0,0,TIME_RESPAWN); //Super GT
//Sheriff:
SAPDVehicles[29] = AddStaticVehicleEx(598,638.9896000,-608.8616000,16.4660000,0.0000000,16,1,TIME_RESPAWN); //Police Car (LVPD)
SAPDVehicles[30] = AddStaticVehicleEx(598,634.1750000,-609.0240000,16.4660000,0.0000000,16,1,TIME_RESPAWN); //Police Car (LVPD)
SAPDVehicles[31] = AddStaticVehicleEx(599,615.3359000,-601.4057000,17.2389000,-90.0000000,16,1,TIME_RESPAWN); //Police Ranger
SAPDVehicles[32] = AddStaticVehicleEx(599,615.5258000,-597.0364000,17.2389000,-90.0000000,16,1,TIME_RESPAWN); //Police Ranger
SAPDVehicles[33] = AddStaticVehicleEx(523,630.5765000,-610.2498000,15.8110000,0.0000000,16,1,TIME_RESPAWN); //HPV1000
SAPDVehicles[34] = AddStaticVehicleEx(523,627.5906000,-610.2360000,15.9130000,0.0000000,16,1,TIME_RESPAWN); //HPV1000

//FBI
FBIVehicle[0] = AddStaticVehicleEx(490,2798.1404,-1093.6665,30.8471,358.9354,0,0,TIME_RESPAWN); //FBI Rancher
FBIVehicle[1] = AddStaticVehicleEx(490,2803.1514,-1064.9602,30.7422,181.1292,0,0,TIME_RESPAWN); //FBI Rancher
FBIVehicle[2] = AddStaticVehicleEx(490,2805.6440,-1065.6597,30.5716,183.1636,0,0,TIME_RESPAWN); //FBI Rancher
FBIVehicle[3] = AddStaticVehicleEx(560,2822.4465000,-1071.7291000,30.1974000,180.0000000,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[4] = AddStaticVehicleEx(421,2814.7190000,-1091.7303000,30.4955000,180.0000000,0,0,TIME_RESPAWN); //Washington
FBIVehicle[5] = AddStaticVehicleEx(487,2804.0884000,-1104.5098000,94.3208000,-90.0000000,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[6] = AddStaticVehicleEx(487,2801.8650000,-1071.3163000,94.3208000,-90.0000000,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[7] = AddStaticVehicleEx(601,2821.7021000,-1091.5142000,30.4916000,180.0000000,0,0,TIME_RESPAWN); //S.W.A.T. Van
FBIVehicle[8] = AddStaticVehicleEx(490,2822.2766000,-1081.0297000,30.7541000,180.0000000,0,0,TIME_RESPAWN); //FBI Rancher
FBIVehicle[9] = AddStaticVehicleEx(521,2814.0962000,-1084.6981000,30.2716000,180.0000000,0,0,TIME_RESPAWN); //BF-400
FBIVehicle[10] = AddStaticVehicleEx(451,-1422.5409000,-1566.4377000,101.4459000,0.0000000,0,0,TIME_RESPAWN); //Turismo
FBIVehicle[11] = AddStaticVehicleEx(451,-1415.8271000,-1566.8256000,101.4459000,0.0000000,0,0,TIME_RESPAWN); //Turismo
FBIVehicle[12] = AddStaticVehicleEx(487,-1460.2823000,-1456.3820000,102.1160000,-79.3200000,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[13] = AddStaticVehicleEx(522,-1458.1187000,-1567.0917000,101.3156000,-16.5000000,0,0,TIME_RESPAWN); //NRG-500
FBIVehicle[14] = AddStaticVehicleEx(522,-1458.1187000,-1567.0917000,101.3156000,-16.5000000,0,0,TIME_RESPAWN); //NRG-500
FBIVehicle[15] = AddStaticVehicleEx(522,-1460.6255000,-1567.2433000,101.3156000,-16.5000000,0,0,TIME_RESPAWN); //NRG-500
FBIVehicle[16] = AddStaticVehicleEx(487,-1461.5056000,-1482.3763000,102.1160000,-79.3200000,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[17] = AddStaticVehicleEx(519,-1385.9828000,-1502.4747000,103.3791000,182.7601000,0,0,TIME_RESPAWN); //Shamal
FBIVehicle[18] = AddStaticVehicleEx(560,-1457.3739000,-1532.8961000,101.3997000,-59.4000000,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[19] = AddStaticVehicleEx(560,-1457.0865000,-1526.4402000,101.3997000,-59.4000000,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[20] = AddStaticVehicleEx(560,-1457.5457000,-1520.3958000,101.3997000,-59.4000000,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[21] = AddStaticVehicleEx(560,-1457.5411000,-1514.4116000,101.3997000,-59.4000000,0,0,TIME_RESPAWN); //Sultan
//SAEM
SAEMLandVehicles[0] = AddStaticVehicleEx(548,2779.7327,-2355.4539,15.4874,269.2685,1,1,60000); //Cargobob 24
SAEMLandVehicles[1] = AddStaticVehicleEx(470,2753.69995117,-2387.19995117,13.69999981,179.99963379,-1,-1,60000); //Patriot  25
SAEMLandVehicles[2] = AddStaticVehicleEx(470,2746.89990234,-2387.19995117,13.69999981,179.99450684,-1,-1,60000); //Patriot  26
SAEMLandVehicles[3] = AddStaticVehicleEx(470,2740.10009766,-2387.19995117,13.69999981,179.99450684,-1,-1,60000); //Patriot  27
SAEMLandVehicles[4] = AddStaticVehicleEx(470,2778.60009766,-2409.80004883,13.69999981,179.99450684,-1,-1,600000); //Patriot  28
SAEMLandVehicles[5] = AddStaticVehicleEx(433,2777.80004883,-2433.60009766,14.19999981,90.00000000,-1,-1,600000); //Barracks 29
SAEMLandVehicles[6] = AddStaticVehicleEx(433,2777.69995117,-2439.89990234,14.19999981,90.00000000,-1,-1,600000); //Barracks  30
SAEMLandVehicles[7] = AddStaticVehicleEx(473,2723.10009766,-2583.60009766,0.00000000,270.00000000,16,-1,600000); //Dinghy  31
SAEMLandVehicles[8] = AddStaticVehicleEx(473,2729.50000000,-2583.60009766,0.00000000,270.00000000,16,-1,600000); //Dinghy  32
SAEMLandVehicles[9] = AddStaticVehicleEx(595,2746.30004883,-2583.39990234,0.30000001,270.00000000,16,-1,600000); //Launch  33
SAEMLandVehicles[10] = AddStaticVehicleEx(548,2776.2207,-2341.7058,22.5969,268.4531,1,1,60000); //Cargobob  34
SAEMLandVehicles[11] = AddStaticVehicleEx(432,2794.00000000,-2456.30004883,13.69999981,90.50000000,-1,-1,600000); //Rhino   35
SAEMLandVehicles[12] = AddStaticVehicleEx(432,2795.19995117,-2494.60009766,13.69999981,89.74987793,-1,-1,600000); //Rhino  36
SAEMLandVehicles[13] = AddStaticVehicleEx(468,2748.89990234,-2484.00000000,13.39999962,286.00000000,16,-1,600000); //Sanchez 37
SAEMLandVehicles[14] = AddStaticVehicleEx(468,2748.80004883,-2482.39990234,13.39999962,285.99609375,16,-1,600000); //Sanchez 38
SAEMLandVehicles[15] = AddStaticVehicleEx(468,2748.69995117,-2480.50000000,13.39999962,285.99609375,16,-1,600000); //Sanchez  39
SAEMLandVehicles[16] = AddStaticVehicleEx(468,2748.69995117,-2478.39990234,13.39999962,285.99609375,16,-1,600000); //Sanchez 40
SAEMLandVehicles[17] = AddStaticVehicleEx(500,2749.39990234,-2459.10009766,13.89999962,179.99963379,16,16,600000); //Mesa  41
SAEMLandVehicles[18] = AddStaticVehicleEx(500,2743.10009766,-2459.00000000,13.89999962,179.49450684,16,16,600000); //Mesa 42
SAEMLandVehicles[19] = AddStaticVehicleEx(470,2778.89990234,-2425.69995117,13.69999981,1.99414062,-1,-1,600000); //Patriot 43
SAEMLandVehicles[20] = AddStaticVehicleEx(520, 2659.2056, -2301.3745, 13.0075, 0.0000, -1, -1, 600000); //hYdra
SAEMLandVehicles[21] = AddStaticVehicleEx(425, 2781.4429, -2304.9895, 12.7921, 88.9636, -1, -1, 600000); //hunter
SAEMLandVehicles[22] = AddStaticVehicleEx(425, 2751.4771, -2305.7341, 12.7142, 267.2612, -1, -1, 600000); //huter
SAEMLandVehicles[23] = AddStaticVehicleEx(520, 2649.3940, -2300.9619, 12.7070, 356.9606, -1, -1, 600000); //hydra
SAEMLandVehicles[24] = AddStaticVehicleEx(476, 2801.0222, -2297.0974, 12.9821, 90.6247, -1, -1, 600000); //rustler
SAEMLandVehicles[25] = AddStaticVehicleEx(431, 2759.0786, -2517.1101, 13.6858, 0.0000, -1, -1, 600000);
SAEMLandVehicles[26] = AddStaticVehicleEx(487, 2791.7087, -2533.1038, 15.1906, 0.0000, -1, -1, 600000);
SAEMLandVehicles[27] = AddStaticVehicleEx(520, -1269.8987, 496.4056, 19.0184, 42.8839, -1, -1, 600000);
SAEMLandVehicles[28] = AddStaticVehicleEx(520, -1295.0035, 493.1584, 19.0184, 42.8839,16,-1,600000); //Launch  33
SAEMLandVehicles[29] = AddStaticVehicleEx(548, -1408.8188, 493.6485, 20.5596, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[30] = AddStaticVehicleEx(548, -1424.2423, 493.9160, 20.5596, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[31] = AddStaticVehicleEx(548, -1439.2657, 493.5150, 20.5596, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[32] = AddStaticVehicleEx(437, -1459.5518, 459.2627, 7.6340, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[33] = AddStaticVehicleEx(470, -1464.9310, 456.9576, 6.9540, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[34] = AddStaticVehicleEx(470, -1470.2751, 456.9593, 6.9540, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[35] = AddStaticVehicleEx(470, -1474.0923, 456.7518, 6.9540, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[36] = AddStaticVehicleEx(470, -1478.6398, 456.5045, 6.9540, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[37] = AddStaticVehicleEx(453, -1474.5448, 487.9578, -0.0143, 88.6089,16,-1,600000); //Launch  33
SAEMLandVehicles[38] = AddStaticVehicleEx(452, -1443.1908, 504.1582, -0.0156, 90.0321,16,-1,600000); //Launch  33
SAEMLandVehicles[39] = AddStaticVehicleEx(452, -1442.7903, 509.5489, -0.0156, 90.0321,16,-1,600000); //Launch  33
SAEMLandVehicles[40] = AddStaticVehicleEx(563, 2789.7290, -2519.2961, 14.6841, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[41] = AddStaticVehicleEx(563, 2791.6008, -2542.3354, 14.6841, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[42] = AddStaticVehicleEx(563, 2799.2759, -2338.5969, 15.1124, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[43] = AddStaticVehicleEx(447, 2802.9539, -2367.2622, 14.1822, 0.0000,16,-1,600000); //Launch  33
SAEMLandVehicles[44] = AddStaticVehicleEx(447, 2803.7126, -2385.4722, 14.1822, 0.0000,16,-1,600000); //Launch  33
//San Andreas Medical Departament (samd)
SAMDVehicles[0] = AddStaticVehicleEx(416,2035.8556000,-1439.6563000,17.3977000,180.0000000,1,3,TIME_RESPAWN); //Ambulance
SAMDVehicles[1] = AddStaticVehicleEx(416,2036.0906000,-1428.2950000,17.3977000,180.0000000,1,3,TIME_RESPAWN); //Ambulance
SAMDVehicles[2] = AddStaticVehicleEx(416,2024.3546000,-1410.8080000,17.3977000,-90.0000000,1,3,TIME_RESPAWN); //Ambulance
SAMDVehicles[3] = AddStaticVehicleEx(416,2013.6329000,-1418.9778000,17.3977000,-89.9400000,1,3,TIME_RESPAWN); //Ambulance
SAMDVehicles[4] = AddStaticVehicleEx(417,2068.6067000,-1413.3715000,48.4294000,-90.0000000,1,3,TIME_RESPAWN); //Leviathan
SAMDVehicles[5] = AddStaticVehicleEx(417,2068.2336000,-1430.2992000,48.4294000,-89.8800000,1,3,TIME_RESPAWN); //Leviathan
SAMDVehicles[6] = AddStaticVehicleEx(416,2000.4099000,-1405.7158000,17.5049000,180.0000000,1,3,TIME_RESPAWN); //Ambulance
SAMDVehicles[7] = AddStaticVehicleEx(416,2041.6937000,-1447.6375000,17.7008000,90.0000000,1,3,TIME_RESPAWN); //Ambulance
//Los Santos Canal de Television (LSTV)
CNNVehicle[0] = AddStaticVehicleEx(582,1787.0139, -1692.2422, 13.4057, 180.0000,2,1,TIME_RESPAWN); // News Van 116
CNNVehicle[1] = AddStaticVehicleEx(582,1792.4253, -1692.2946, 13.4057, 180.0000,2,1,TIME_RESPAWN); // News Van 117
CNNVehicle[2] = AddStaticVehicleEx(582,1797.9181, -1692.3510, 13.4057, 180.0000,2,1,TIME_RESPAWN); // News Van 118
CNNVehicle[3] = AddStaticVehicleEx(488,1765.5740, -1713.5391, 20.7720, 180.0000,2,1,TIME_RESPAWN); // San News 119
//CARPOINT
MecanicosVehicle[0] = AddStaticVehicleEx(525,2458.4448000,-2123.3887000,13.2885000,0.0000000,1,16,TIME_RESPAWN); //Tow Truck
MecanicosVehicle[1] = AddStaticVehicleEx(525,2449.5676000,-2123.4089000,13.2885000,0.0000000,1,16,TIME_RESPAWN); //Tow Truck
MecanicosVehicle[2] = AddStaticVehicleEx(525,2440.4331000,-2123.5830000,13.2885000,-0.1200000,1,16,TIME_RESPAWN); //Tow Truck
MecanicosVehicle[3] = AddStaticVehicleEx(525,2431.2053000,-2123.5864000,13.2885000,-0.1200000,1,16,TIME_RESPAWN); //Tow Truck
//Gobierno
GobiernoCar[0] = AddStaticVehicleEx(421,1493.6493000,-1839.0869000,13.2452000,180.0000000,0,0,TIME_RESPAWN); //Washington
GobiernoCar[1] = AddStaticVehicleEx(421,1500.0125000,-1839.0297000,13.2452000,180.0000000,0,0,TIME_RESPAWN); //Washington
GobiernoCar[2] = AddStaticVehicleEx(560,1506.6188000,-1838.8282000,13.0562000,180.0000000,0,0,TIME_RESPAWN); //Sultan
GobiernoCar[3] = AddStaticVehicleEx(490,1519.9828000,-1839.2396000,13.5604000,180.0000000,0,0,TIME_RESPAWN); //FBI Rancher
GobiernoCar[4] = AddStaticVehicleEx(409,1532.6200000,-1840.1024000,13.1374000,180.0000000,0,0,TIME_RESPAWN); //Stretch
//GobiernoCar[5] = AddStaticVehicleEx(490,1519.9828000,-1839.2396000,13.5604000,180.0000000,0,0,TIME_RESPAWN); //FBI Rancher
GobiernoCar[5] = AddStaticVehicleEx(490,1526.4419000,-1839.2941000,13.5604000,180.0000000,0,0,TIME_RESPAWN); //FBI Rancher
//Sistema Judicial
SistemaJudicialCar[0] = AddStaticVehicleEx(560,1363.6328000,-1660.3219000,12.8853000,-90.0000000,1 ,1 ,TIME_RESPAWN); //Sultan
SistemaJudicialCar[1] = AddStaticVehicleEx(560,1363.5972000,-1655.9644000,12.8853000,-90.0000000,1 ,1 ,TIME_RESPAWN); //Sultan
SistemaJudicialCar[2] = AddStaticVehicleEx(560,1363.5703000,-1651.5684000,12.8853000,-90.0000000,1 ,1 ,TIME_RESPAWN); //Sultan
SistemaJudicialCar[3] = AddStaticVehicleEx(490,1363.9292000,-1638.8660000,12.3723000,-90.0000000,1 ,1 ,TIME_RESPAWN); //FBI Rancher
SistemaJudicialCar[4] = AddStaticVehicleEx(409,1364.0670000,-1634.2662000,12.5617000,-90.0000000,1 ,1 ,TIME_RESPAWN); //Stretch
SistemaJudicialCar[5] = AddStaticVehicleEx(487,1386.5828000,-1638.3612000,38.3374000,0.0000000,1 ,1 , TIME_RESPAWN); //Maverick
//Agencia Hitman
Hitman_Vehicle[0] = AddStaticVehicleEx(522,-273.6733000,-2175.0112000,28.2864000,-193.9200000,0,0,TIME_RESPAWN); //NRG-500
Hitman_Vehicle[1] = AddStaticVehicleEx(522,-277.1704000,-2176.4111000,28.2864000,-193.9200000,0,0,TIME_RESPAWN); //NRG-500
Hitman_Vehicle[2] = AddStaticVehicleEx(487,-265.9044000,-2150.6982000,27.7406000,-168.7200000,0,0,TIME_RESPAWN); //Maverick
Hitman_Vehicle[3] = AddStaticVehicleEx(411,-274.3060000,-2193.8804000,29.1473000,79.1400000,0,0,TIME_RESPAWN); //Infernus
Hitman_Vehicle[4] = AddStaticVehicleEx(411,-273.0854000,-2185.4851000,29.1473000,112.9200000,0,0,TIME_RESPAWN); //Infernus
Hitman_Vehicle[5] = AddStaticVehicleEx(578,-258.2954000,-2226.7495000,28.9029000,53.9400000,0,0,TIME_RESPAWN); //DFT-30
Hitman_Vehicle[6] = AddStaticVehicleEx(579,-295.1937000,-2147.8325000,28.2856000,111.0600000,0,0,TIME_RESPAWN); //Huntley
//Latin Kings
//Bomberos LS
BomberosLSVeh[0] = AddStaticVehicleEx(407,1823.8339000,-1406.1273000,13.4572000,-90.0000000,3,1,TIME_RESPAWN); //Firetruck
BomberosLSVeh[1] = AddStaticVehicleEx(407,1823.8813000,-1397.1315000,13.4572000,-90.4800000,3,1,TIME_RESPAWN); //Firetruck
BomberosLSVeh[2] = AddStaticVehicleEx(407,1824.0936000,-1388.4124000,13.5572000,-90.4800000,3,1,TIME_RESPAWN); //Firetruck
BomberosLSVeh[3] = AddStaticVehicleEx(552,1835.2722000,-1414.1184000,13.0422000,0.0000000,3,1,TIME_RESPAWN); //Utility
BomberosLSVeh[4] = AddStaticVehicleEx(573,1830.8798000,-1414.1796000,13.8786000,0.0000000,3,1,TIME_RESPAWN); //Duneride
BomberosLSVeh[5] = AddStaticVehicleEx(563,1803.0247000,-1411.1260000,29.9022000,90.0000000,3,1,TIME_RESPAWN); //Raindance
//Jobs
//Pizzeria
PizzaBike[0] = AddStaticVehicleEx(448,2123.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[1] = AddStaticVehicleEx(448,2121.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[2] = AddStaticVehicleEx(448,2119.00000000,-1784.30004883,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[3] = AddStaticVehicleEx(448,2116.50000000,-1784.19995117,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[4] = AddStaticVehicleEx(448,2114.19995117,-1784.30004883,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[5] = AddStaticVehicleEx(448,2111.80004883,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[6] = AddStaticVehicleEx(448,2109.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[7] = AddStaticVehicleEx(448,2106.00000000,-1784.50000000,13.10000038,0.00000000,17,6,1200); //Pizzaboy
//Taxistas
TaxiTrans[0] = AddStaticVehicleEx(420,2266.7268000,-1990.3403000,13.2683000,0.0000000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[1] = AddStaticVehicleEx(420,2269.9336000,-1990.3467000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[2] = AddStaticVehicleEx(420,2273.2471000,-1990.3807000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[3] = AddStaticVehicleEx(420,2276.3091000,-1990.3842000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[4] = AddStaticVehicleEx(420,2279.8823000,-1990.5459000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[5] = AddStaticVehicleEx(420,2283.2646000,-1990.5192000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[6] = AddStaticVehicleEx(420,2286.7244000,-1990.5647000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
TaxiTrans[7] = AddStaticVehicleEx(420,2289.7485000,-1990.5084000,13.2683000,0.1800000,6,6,TIME_RESPAWN); //Taxi
//Camionero Los Santos
TruckerVehicles[0] = AddStaticVehicleEx(414,2225.6060000,-2250.7578000,13.4914000,42.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[1] = AddStaticVehicleEx(414,2217.7524000,-2258.4067000,13.4914000,42.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[2] = AddStaticVehicleEx(414,2210.0461000,-2265.3870000,13.4914000,42.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[3] = AddStaticVehicleEx(414,2190.0469000,-2226.3713000,13.3678000,-135.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[4] = AddStaticVehicleEx(414,2197.2856000,-2219.2786000,13.3678000,-135.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[5] = AddStaticVehicleEx(414,2204.9707000,-2211.7178000,13.3678000,-135.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[6] = AddStaticVehicleEx(414,2212.5847000,-2204.3340000,13.3678000,-135.4200000,-1,-1,TIME_RESPAWN); //Mule
TruckerVehicles[7] = AddStaticVehicleEx(498,2175.0806000,-2268.3020000,13.3439000,-135.2400000,-1,-1,TIME_RESPAWN); //Boxville
TruckerVehicles[8] = AddStaticVehicleEx(498,2168.1453000,-2275.1487000,13.3439000,-135.2400000,-1,-1,TIME_RESPAWN); //Boxville
TruckerVehicles[9] = AddStaticVehicleEx(498,2156.6216000,-2291.5640000,13.3439000,-135.0000000,-1,-1,TIME_RESPAWN); //Boxville
//job granjero cosechadoras
AddStaticVehicleEx(532,-113.6863,-5.1287,4.0906,70.6139,0,0,60000);
AddStaticVehicleEx(532,-108.5597,6.1032,4.0919,65.7671,0,0,60000);
AddStaticVehicleEx(532,-104.8710,16.5226,4.0923,66.2940,0,0,60000);
AddStaticVehicleEx(532,-113.6863,-5.1287,4.0906,70.6139,0,0,60000);
AddStaticVehicleEx(532,-108.5597,6.1032,4.0919,65.7671,0,0,60000);
AddStaticVehicleEx(532,-104.8710,16.5226,4.0923,66.2940,0,0,60000);
//Otros
// HireCar I
//******************************BICIS DE MARKET STATION (LUGAR DE SPAWN AL REGISTRARSE)*********************
Rentbike[0] = AddStaticVehicleEx(462,816.6058000,-1334.4072000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[1] = AddStaticVehicleEx(462,815.5194000,-1334.3810000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[2] = AddStaticVehicleEx(462,817.7253000,-1334.3536000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[3] = AddStaticVehicleEx(462,818.7271000,-1334.3457000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[4] = AddStaticVehicleEx(462,819.8561000,-1334.3915000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[5] = AddStaticVehicleEx(462,820.8989000,-1334.3767000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
Rentbike[6] = AddStaticVehicleEx(462,821.8685000,-1334.4105000,13.0103000,0.0000000,1,3,TIME_RESPAWN); //BMX
//*************************************BICIS DEL HOSPITAL****************************************************
Rentbike[7] = AddStaticVehicleEx(462, 2010.6544, -1454.3501, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
Rentbike[8] = AddStaticVehicleEx(462, 2009.3506, -1454.3716, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
Rentbike[9] = AddStaticVehicleEx(462, 2011.7194, -1454.2898, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
Rentbike[10] = AddStaticVehicleEx(462, 2012.8054, -1454.2109, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
Rentbike[11] = AddStaticVehicleEx(462, 2013.8495, -1454.1853, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
Rentbike[12] = AddStaticVehicleEx(462, 2014.8280, -1454.2683, 13.0481, 180.0000, 1,3, TIME_RESPAWN);
//**********************************SPAWN AL REGISTRARSE NUEVO: AEROPUERTO**************************************
Rentbike[13] = AddStaticVehicleEx(462,1561.3256000,-2260.7769000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
Rentbike[14] = AddStaticVehicleEx(462,1561.2850000,-2257.4731000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
Rentbike[15] = AddStaticVehicleEx(462,1561.3232000,-2254.0466000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
Rentbike[16] = AddStaticVehicleEx(462,1561.3495000,-2250.9858000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
Rentbike[17] = AddStaticVehicleEx(462,1561.3392000,-2247.5471000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
Rentbike[18] = AddStaticVehicleEx(462,1561.3062000,-2244.2766000,13.0399000,90.0000000,1,3,TIME_RESPAWN); //Faggio
//Autos Vip
CarVIP[0] = AddStaticVehicleEx(560, 3111.6760,-652.1522,10.6664,268.5829,99,51,TIME_RESPAWN); // Auto Vip 15
CarVIP[1] = AddStaticVehicleEx(451, 3091.3464,-650.9921,10.8207,355.8454,12,45,TIME_RESPAWN); // Auto Vip 16
CarVIP[2] = AddStaticVehicleEx(434, 3110.6851,-664.4827,11.0341,268.0104,56,2,TIME_RESPAWN);  // Auto Vip 17
CarVIP[3] = AddStaticVehicleEx(429, 3111.6465,-656.3209,10.6569,269.1187,3,5,TIME_RESPAWN); // Auto Vip 18
CarVIP[4] = AddStaticVehicleEx(424, 3105.9866,-652.8840,10.9553,356.8055,5,7,TIME_RESPAWN); // Auto Vip 19
CarVIP[5] = AddStaticVehicleEx(415, 3087.6616,-651.3013,10.8771,356.2128,7,8,TIME_RESPAWN); // Auto Vip 20
CarVIP[6] = AddStaticVehicleEx(480, 3111.9724,-646.5659,10.6997,272.1165,1,5,TIME_RESPAWN); // Auto Vip 21
CarVIP[7] = AddStaticVehicleEx(494, 3102.5271,-651.4576,11.0859,356.3582,8,3,TIME_RESPAWN); // Auto Vip 22
CarVIP[8] = AddStaticVehicleEx(502, 3098.6997,-651.4344,11.0390,357.9201,5,51,TIME_RESPAWN); // Auto Vip 23
CarVIP[9] = AddStaticVehicleEx(503, 3095.3970,-651.2744,11.0378,357.8214,8,1,TIME_RESPAWN); // Auto Vip 24
CarVIP[10] = AddStaticVehicleEx(506, 3084.3352,-650.9185,10.7950,357.0737,9,45,TIME_RESPAWN); // Auto Vip 25
CarVIP[11] = AddStaticVehicleEx(559, 3111.3301,-660.5445,10.6432,268.2041,13,76,TIME_RESPAWN); // Auto Vip 26
//Autos de chocones
VortexVehicle[0] = AddStaticVehicleEx(539,396.9688, -2054.3696, 7.4113, 180.0000,0,1,TIME_RESPAWN);
VortexVehicle[1] = AddStaticVehicleEx(539,393.2085, -2054.1755, 7.4113, 180.0000,3,125,TIME_RESPAWN);
VortexVehicle[2] = AddStaticVehicleEx(539,389.4496, -2054.2319, 7.4113, 180.0000,6,3,TIME_RESPAWN);
VortexVehicle[3] = AddStaticVehicleEx(539,385.5569, -2054.3420, 7.4113, 180.0000,144,7,TIME_RESPAWN);
VortexVehicle[4] = AddStaticVehicleEx(539,381.6167, -2054.3047, 7.4113, 180.0000,6,17,TIME_RESPAWN);
//autos FSociety
// Autos la cosa nostra
LCNVeh[0] = AddStaticVehicleEx(560,1277.7814, -2019.9493, 58.4925, 89.1000,0,0,TIME_RESPAWN); //Sultan
LCNVeh[1] = AddStaticVehicleEx(560,1277.8406, -2024.2859, 58.4925,89.1000,0,0,TIME_RESPAWN); //Sultan
LCNVeh[2] = AddStaticVehicleEx(560,1277.7280, -2028.6737, 58.4925,89.1000,0,0,TIME_RESPAWN); //Sultan
LCNVeh[3] = AddStaticVehicleEx(560,1277.6724, -2033.1078, 58.4925,89.1000,0,0,TIME_RESPAWN); //Sultan
LCNVeh[4] = AddStaticVehicleEx(482,1277.3661, -2014.9072, 59.0209,89.5800,0,0,TIME_RESPAWN); //Burrito
LCNVeh[5] = AddStaticVehicleEx(521,1276.9188, -2038.8556, 58.6215,122.8200,0,0,TIME_RESPAWN); //FCR-900
LCNVeh[6] = AddStaticVehicleEx(521,1276.8882, -2042.1780, 58.6215,122.8200,0,0,TIME_RESPAWN); //FCR-900
LCNVeh[7] = AddStaticVehicleEx(487,1194.2156, -2021.8068, 69.1242,-173.6000,0,0,TIME_RESPAWN); //Maverick
//Autos Yakuza
YAKVeh[0] = AddStaticVehicleEx(560,298.8887000,-1184.7693000,80.5269000,-45.3600000,1,1,TIME_RESPAWN); //Sultan
YAKVeh[1] = AddStaticVehicleEx(560,295.8603000,-1181.4835000,80.5269000,-45.3600000,1,1,TIME_RESPAWN); //Sultan
YAKVeh[2] = AddStaticVehicleEx(560,292.5555000,-1178.1372000,80.5269000,-45.3600000,1,1,TIME_RESPAWN); //Sultan
YAKVeh[3] = AddStaticVehicleEx(560,289.1336000,-1174.6796000,80.5269000,-45.3600000,1,1,TIME_RESPAWN); //Sultan
YAKVeh[4] = AddStaticVehicleEx(482,293.5710000,-1149.9838000,80.7785000,-173.3400000,1,1,TIME_RESPAWN); //Burrito
YAKVeh[5] = AddStaticVehicleEx(521,281.8552000,-1166.8110000,80.4159000,-67.2600000,1,1,TIME_RESPAWN); //FCR-900
YAKVeh[6] = AddStaticVehicleEx(521,280.5914000,-1164.5278000,80.4159000,-67.2600000,1,1,TIME_RESPAWN); //FCR-900
YAKVeh[7] = AddStaticVehicleEx(487,270.1474000,-1179.5454000,80.0240000,-69.7200000,1,1,TIME_RESPAWN); //Maverick
//autos Rusa
RUVeh[0] = AddStaticVehicleEx(560,660.9055000,-1281.8781000,13.0138000,-178.7399000,3,3,TIME_RESPAWN); //Sultan
RUVeh[1] = AddStaticVehicleEx(560,661.0892000,-1288.6710000,13.0138000,-178.7399000,3,3,TIME_RESPAWN); //Sultan
RUVeh[2] = AddStaticVehicleEx(560,661.0565000,-1295.3568000,13.0138000,-178.7399000,3,3,TIME_RESPAWN); //Sultan
RUVeh[3] = AddStaticVehicleEx(560,660.8909000,-1275.2937000,13.0138000,-178.7399000,3,3,TIME_RESPAWN); //Sultan
RUVeh[4] = AddStaticVehicleEx(482,668.9664000,-1264.2700000,13.3903000,-179.3400000,3,3,TIME_RESPAWN); //Burrito
RUVeh[5] = AddStaticVehicleEx(521,669.3752000,-1258.9056000,12.9095000,-176.1599000,3,3,TIME_RESPAWN); //FCR-900
RUVeh[6] = AddStaticVehicleEx(521,669.3973000,-1255.7928000,12.9095000,-176.1599000,3,3,TIME_RESPAWN); //FCR-900
RUVeh[7] = AddStaticVehicleEx(487,757.1761000,-1228.1292000,13.7050000,0.0000000,3,3,TIME_RESPAWN); //Maverick
//autos Ndrangheta
NDRVeh[0] = AddStaticVehicleEx(560,3014.2341000,-1874.4777000,6.8571000,-2.5800000,0,0,TIME_RESPAWN); //Sultan
NDRVeh[1] = AddStaticVehicleEx(560,3009.8000000,-1873.9980000,6.8571000,-2.5800000,0,0,TIME_RESPAWN); //Sultan
NDRVeh[2] = AddStaticVehicleEx(560,3005.6484000,-1873.6912000,6.8571000,-2.5800000,0,0,TIME_RESPAWN); //Sultan
NDRVeh[3] = AddStaticVehicleEx(560,3000.9634000,-1873.3040000,6.8571000,-2.5800000,0,0,TIME_RESPAWN); //Sultan
NDRVeh[4] = AddStaticVehicleEx(487,2994.4504000,-1781.4227000,12.2149000,170.3400000,0,0,TIME_RESPAWN); //Maverick
NDRVeh[5] = AddStaticVehicleEx(579,3016.0183000,-1858.9114000,7.1210000,-183.9001000,0,0,TIME_RESPAWN); //Huntley
NDRVeh[6] = AddStaticVehicleEx(579,3011.1123000,-1858.6069000,7.1210000,-183.9001000,0,0,TIME_RESPAWN); //Huntley
NDRVeh[7] = AddStaticVehicleEx(409,2990.6367000,-1856.8380000,6.9056000,-273.2401000,0,0,TIME_RESPAWN); //Stretch
//autos groove
GROVeh[0] =	AddStaticVehicleEx(585, 2509.7419, -1671.1534, 12.9923, 168.3774, 44, 44,TIME_RESPAWN); //
GROVeh[1] =	AddStaticVehicleEx(492,2506.3511,-1678.6918,13.2421,137.8921,44,0,TIME_RESPAWN); //
GROVeh[2] =	AddStaticVehicleEx(585,2498.1970,-1682.9766,12.9602,102.2121,44,44,TIME_RESPAWN); //
GROVeh[3] =	AddStaticVehicleEx(492,2499.3054,-1654.6339,13.2089,69.5431,44,1,TIME_RESPAWN); //
GROVeh[4] =	AddStaticVehicleEx(517,2485.0928,-1654.0254,13.2480,88.2814,44,1,TIME_RESPAWN); //
GROVeh[5] =	AddStaticVehicleEx(517,2469.4697,-1670.2765,13.2510,9.5673,44,0,TIME_RESPAWN); //
GROVeh[6] =	AddStaticVehicleEx(482,2458.9688,-1670.5138,13.6138,0.0187,44,44,TIME_RESPAWN); //
GROVeh[7] =	AddStaticVehicleEx(481,2512.2698,-1664.1511,13.0907,98.1544,44,44,TIME_RESPAWN); //
GROVeh[8] =	AddStaticVehicleEx(481,2512.0090,-1662.2184,13.1007,100.2997,44,44,TIME_RESPAWN); //
GROVeh[9] =	AddStaticVehicleEx(481,2512.8643,-1666.0569,13.0888,93.2912,44,44,TIME_RESPAWN); //
// autos ballas
BALVeh[0] = AddStaticVehicleEx(567,1900.59997559,-1083.80004883,24.00000000,150.00000000,179,179,TIME_RESPAWN); //Savanna
BALVeh[1] = AddStaticVehicleEx(566,1907.80004883,-1083.40002441,24.10000038,204.00000000,179,179,TIME_RESPAWN); //Tahoma
BALVeh[2] = AddStaticVehicleEx(566,1913.00000000,-1083.40002441,24.20000076,203.99963379,179,179,TIME_RESPAWN); //Tahoma
BALVeh[3] = AddStaticVehicleEx(566,1919.09997559,-1083.09997559,24.29999924,203.99963379,179,179,TIME_RESPAWN); //Tahoma
BALVeh[4] = AddStaticVehicleEx(478,1925.09997559,-1089.50000000,24.70000076,356.00000000,179,179,TIME_RESPAWN); //Walton
BALVeh[5] = AddStaticVehicleEx(567,1895.69995117,-1083.50000000,24.00000000,149.99633789,179,179,TIME_RESPAWN); //Savanna
BALVeh[6] = AddStaticVehicleEx(567,1889.69995117,-1083.30004883,23.89999962,149.99633789,179,179,TIME_RESPAWN); //Savanna
BALVeh[7] = AddStaticVehicleEx(481,1912.80004883,-1091.30004883,24.10000038,0.00000000,179,179,TIME_RESPAWN); //BMX
BALVeh[8] = AddStaticVehicleEx(481,1909.30004883,-1091.09997559,24.00000000,0.00000000,179,179,TIME_RESPAWN); //BMX
BALVeh[9] = AddStaticVehicleEx(481,1915.40002441,-1091.50000000,24.10000038,0.00000000,179,179,TIME_RESPAWN); //BMX
//autos Sureños
SURVeh[0] = AddStaticVehicleEx(405,1817.8407000,-2021.3251000,13.4641000,180.0000000,2,2,15); //Sentinel
SURVeh[1] = AddStaticVehicleEx(410,1828.3547000,-2020.4197000,13.0980000,180.0000000,2,2,15); //Manana
SURVeh[2] = AddStaticVehicleEx(412,1817.7429000,-2028.4572000,13.2567000,180.0000000,180,180,15); //Voodoo
SURVeh[3] = AddStaticVehicleEx(413,1920.0126000,-2002.3652000,13.4652000,90.0000000,72,27,15); //Pony
SURVeh[4] = AddStaticVehicleEx(418,1921.7928000,-2012.9851000,13.6623000,0.0000000,3,3,15); //Moonbeam
SURVeh[5] = AddStaticVehicleEx(419,1877.9310000,-2021.1306000,13.2635000,180.0000000,2,2,15); //Esperanto
SURVeh[6] = AddStaticVehicleEx(421,1877.7411000,-2029.4913000,13.3590000,180.0000000,2,2,15); //Washington
SURVeh[7] = AddStaticVehicleEx(421,1888.1588000,-2021.2059000,13.3590000,180.0000000,2,2,15); //Washington
SURVeh[8] = AddStaticVehicleEx(426,1888.1320000,-2030.3341000,13.1600000,180.0000000,79,79,15); //Premier
SURVeh[9] = AddStaticVehicleEx(422,1901.1827000,-2032.5890000,13.4543000,90.0000000,1,79,15); //Bobcat
//**************************************
//*******************pickup ticket*******************
ticketR = CreatePickup(1239,23,359.3290,-2032.0443,7.8359, 0);
//Pickup uniforme
CreatePickup(1275,23,2103.9744,-1803.7089,13.5547);
//*******************pickup bomba*******************
bombita = CreatePickup(1252,23,2351.4546,-648.1740,128.0547, 0);
//******************ferreteria***************
CreatePickup(1239,23,664.7147,-568.5193,16.3433);
//Leñador
CreatePickup(1239,23,-572.4534,-1498.0902,11.0859);
//*******************Teléfono público.*******************
CreatePickup(1239, 23, 1723.0403,-1720.8251,13.5440);
CreatePickup(1239, 23, 1540.4768,-1722.1370,13.5546);
CreatePickup(1239, 23, 1828.9257,-1850.9833,13.5781);
CreatePickup(1239, 23, 1710.4623,-1604.9115,13.5469);
CreatePickup(1239, 23, 1711.2399,-1605.5371,13.5469);
CreatePickup(1239, 23, 1310.6002,-912.0837,38.5596);
CreatePickup(1239, 23, 355.3920,-1365.1967,14.4665);
CreatePickup(1239, 23, 356.8177,-1364.4913,14.4850);
CreatePickup(1239, 23, 1801.3276,-1863.0636,13.5755);
CreatePickup(1239, 23, 350.2411,-1785.1615,5.3446);
CreatePickup(1239, 23, 1037.0452,-1937.8800,13.1434);
//****************COBRAR CHEQUE******************+
CreateDynamic3DTextLabel("Banco de Los Santos\n{FFFFFF}Para cobras tus cheques usa\n{FFFFFF}Usa /cobrarcheques.",                                            COLOR_LIGHTBLUE, 1494.8383,-1567.2552,-9.4108, 8.0);
CreatePickup(1239, 23, 1494.8383,-1567.2552,-9.4108);
//********************Reanimador*************************
CreatePickup(1239, 23, 1169.2024,-1348.8594,2423.0461);
CreateDynamic3DTextLabel("Venta de reanimador\n{FFFFFF}Usa /creanimador\nPrecio: {FF0000}$40000.",                           COLOR_LIGHTBLUE, 1169.2024,-1348.8594,2423.0461, 8.0);
//*******************3d labels*******************
//**************punto /creararma*****************++
CreateDynamic3DTextLabel("Fabrica de armas\n{FFFFFF}Usa /creararma para crear una.",                                         COLOR_LIGHTBLUE, 2148.2375,-2267.3174,13.3080, 8.0);
CreatePickup(1239, 23, 2148.2375,-2267.3174,13.3080);
//Camaras PD
CreateDynamic3DTextLabel("Camaras de Seguridad\n{FFFFFF}/camaras", 															 COLOR_LIGHTBLUE, 267.4925,119.2183,1004.6172+0.6, 8.0);
CreatePickup(1239, 23, 267.3825,119.5380,1004.6172, 500); // Camaras
//punto /ad
CreateDynamic3DTextLabel("LSRTV\n{FFFFFF}Usa /anuncios para publicar uno.",                                            		 COLOR_LIGHTBLUE, 1775.8372,-1711.3041,13.5950, 8.0);
//Muebles y tienda electronica
CreateDynamic3DTextLabel("Para robar electrodomestico\n{FFFFFF}Usa /robarshop.",                                             COLOR_LIGHTBLUE, 1009.2381,48.5105,55.3221,8.0);
//CreateDynamic3DTextLabel("Tienda Electronica\n{FFFFFF}Usa /comprar.",                                                        COLOR_LIGHTBLUE, 1006.0530,52.7181,55.3221,8.0);
CreateDynamic3DTextLabel("Tienda de muebles\n{FFFFFF}Usa /cmueble.",                                                         COLOR_LIGHTBLUE, 2115.1011,-1739.1328,13.6391,8.0);
//******************
//CreateDynamic3DTextLabel("Deseas vender tú coche\n{FFFFFF}Usa /vendercoche.",                                                COLOR_LIGHTBLUE, 376.1310,-63.8547,-93.8500,8.0);
CreateDynamic3DTextLabel("Para abrir el VIP locker.\n{FFFFFF}Usa /viplocker",                                                COLOR_LIGHTBLUE,798.4911,-1416.1251,1016.4688+0.6,4.0);/// VIP locker room
CreateDynamic3DTextLabel("/regalo\n{FFFFFF}para ver el interior.",                                                           COLOR_LIGHTBLUE,798.0074,-1419.0095,1016.4688+0.8,8.0);/// VIP Lounge
CreateDynamic3DTextLabel("Ferretería\n{FFFFFF}Usa /comprarh para comprar herramientas.",                                     COLOR_LIGHTBLUE,664.7147,-568.5193,16.3433+0.8,8.0);/// Ferretería
CreateDynamic3DTextLabel("Mercado Negro\n {FFFFFF}Utiliza: {FF0000}/mccomprar",					                             COLOR_YELLOW, 2355.5916,-648.6025,128.0547,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//CreateDynamic3DTextLabel("Mercado Negro\n {FFFFFF}Utiliza: {FF0000}/comprardni",					                         COLOR_YELLOW, 2244.1309,-1943.2737,13.5552,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("Mercado Negro\n {FFFFFF}Utiliza: {FF0000}/cbomba",					                             COLOR_YELLOW, 2351.4546,-648.1740,128.0547,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//Bincos
CreateDynamic3DTextLabel("Para cambiar tu skin\n{FFFFFF}Usa /cropa.",                                                        COLOR_LIGHTBLUE, 208.8970,-100.3289,1005.2578,8.0);
CreateDynamic3DTextLabel("Para cambiar tu skin\n{FFFFFF}Usa /cropa.",                                                        COLOR_LIGHTBLUE, 206.5429,-41.2313,1001.8047,8.0);
CreateDynamic3DTextLabel("Para cambiar tu skin\n{FFFFFF}Usa /cropa.",                                                        COLOR_LIGHTBLUE, 209.3064,-8.3033,1005.2109,8.0);
CreateDynamic3DTextLabel("Para cambiar tu skin\n{FFFFFF}Usa /cropa.",                                                        COLOR_LIGHTBLUE, 159.6771,-83.2866,1001.8120,8.0);
CreateDynamic3DTextLabel("Para cambiar tu skin\n{FFFFFF}Usa /cropa.",                                                        COLOR_LIGHTBLUE, 206.4552,-163.0903,1000.5234,8.0);
CreateDynamic3DTextLabel("Para comprar accesorio\n{FFFFFF}Usa /ctoys",                                                       COLOR_LIGHTBLUE, 206.3253,-100.3268,1005.2578,8.0);
CreateDynamic3DTextLabel("Para comprar accesorio\n{FFFFFF}Usa /ctoys",                                                       COLOR_LIGHTBLUE, 201.0413,-40.1616,1001.8047,8.0);
CreateDynamic3DTextLabel("Para comprar accesorio\n{FFFFFF}Usa /ctoys",                                                       COLOR_LIGHTBLUE, 206.3963,-8.2122,1001.2109,8.0);
CreateDynamic3DTextLabel("Para comprar accesorio\n{FFFFFF}Usa /ctoys",                                                       COLOR_LIGHTBLUE, 162.7706,-83.2726,1001.8047,8.0);
CreateDynamic3DTextLabel("Para comprar accesorio\n{FFFFFF}Usa /ctoys",                                                       COLOR_LIGHTBLUE, 202.6777,-163.0623,1000.5306,8.0);
CreateDynamic3DTextLabel("Para cambiar tu skin de familia\n{FFFFFF}Usa /fropa",                                              COLOR_LIGHTBLUE,997.3839,-1266.6259,15.2554,8.0);// /fropa
//Comando Equipo Para Facciones Legales 
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /casilleropd",                          								 		 COLOR_LIGHTBLUE, 267.0328,109.8991,1004.6172,8.0); //sapd
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /casillerosheriff",                          								 		 COLOR_LIGHTBLUE, 253.6248,76.8420,1003.6406,8.0); //sapd dilimore
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /fbi",                          								 		 COLOR_LIGHTBLUE, 310.3287,-1537.2428,-45.1338,8.0);//fbi
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /fbi",                          								 		 COLOR_LIGHTBLUE, -1394.1967, -1465.1123, 19.9635,8.0);//fbi
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /casilleroem",                          								     	 COLOR_LIGHTBLUE, 332.6553,2345.9578,8905.4180,8.0);//saem
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 1188.8640,-1351.4312,2423.2649,8.0);//samd
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 1792.5287,-1710.1592,13.5950,8.0);//lstv
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 2509.4067,-2079.5461,13.5469,8.0);//crazy motors
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 362.1189,-52.2308,-93.8500,8.0);//gobierno
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, -283.1366,-2174.5459,28.6632,8.0);//hitman
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 2135.5605,1300.7083,7698.8999,8.0);//judicial
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						        	 COLOR_LIGHTBLUE, -1683.8572,-2074.3633,19.2459,8.0);//bomberosls
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 1201.6417,-2015.9741,71.6094,8.0);//lcn equipo
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 305.0333, -1160.6010, 80.5505,8.0);//yakuza equipo
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 688.3789, -1267.5032, 12.5460,8.0);//rusa
CreateDynamic3DTextLabel("Para equiparte\n{FFFFFF}Usa /equipo",                          						         	 COLOR_LIGHTBLUE, 3065.7185, -1849.9324, 6.1719,8.0);//ndrangheta
//Spray mecas
CreateDynamic3DTextLabel("Depósito de spray\n{FFFFFF}Usa /sacarspray",                          						         	 COLOR_LIGHTBLUE, 2517.5764,-2079.5603,13.5469,8.0);//Spray mecas
//Teléfonos Públicos.
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1723.0403,-1720.8251,13.5440+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1540.4768,-1722.1370,13.5546+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1828.9257,-1850.9833,13.5781+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1710.4623,-1604.9115,13.5469+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1711.2399,-1605.5371,13.5469+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1310.6002,-912.0837,38.5596+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,355.3920,-1365.1967,14.4665+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,356.8177,-1364.4913,14.4850+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1803.0021,-1863.0212,13.5756+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1801.3276,-1863.0636,13.5755+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,350.2411,-1785.1615,5.3446+0.5,4.0);// teléfono público
CreateDynamic3DTextLabel("Escribe /Publico\n{FFFFFF}Para usar el teléfono",                                                  COLOR_YELLOW,1037.0452,-1937.8800,13.1434+0.5,4.0);// teléfono público
//Comandos
CreateDynamic3DTextLabel("Para comprar licencias y más\n{FFFFFF}Usa /ayuntamiento",                          			     COLOR_LIGHTBLUE, 375.8133,-64.7353,-93.8500,8.0);//ayuntamiento comando
//CreateDynamic3DTextLabel("Bicicletas en {FFFFFF}renta.",																	 COLOR_YELLOW,1508.396850,-1738.622680,13.546875+0.5,6.0);
CreateDynamic3DTextLabel("Contrata un mata ratas\n{FFFFFF}Usa /contrato",													 COLOR_LIGHTBLUE,1407.7058,-1307.4529,9.0442,5.0); // hitman /contrato
CreateDynamic3DTextLabel("Solo líderes\n{FFFFFF}Usa /robarbanco",                          								     COLOR_LIGHTBLUE, 1518.2928,-1564.0775,-22.1879,8.0); // /robarbanco
CreateDynamic3DTextLabel("Depósito\n/embargar", 							                                                 COLOR_LIGHTBLUE, 1658.9924,-1807.1152,13.5508+0.6, 8.0);
CreateDynamic3DTextLabel("Multas\n{FFFFFF}Usa /pagarm", 					                  								 COLOR_LIGHTBLUE, 240.4770,112.7777,1003.2188+0.6, 8.0); // Pagar Multas LS
CreateDynamic3DTextLabel("Multas\n{FFFFFF}Usa /pagarm", 					                  								 COLOR_LIGHTBLUE, 234.4222,160.0437,1003.0438+0.6, 8.0); // Pagar Multas SF
CreateDynamic3DTextLabel("Para Dejar El Paciente\nUtiliza {008EC1}/dejarpt",                                                 COLOR_LIGHTRED,  2012.6680,-1409.3304,16.9922+0.6,4.0);// SAMD
CreateDynamic3DTextLabel("Para Dejar El Paciente\nUtiliza {008EC1}/dejarpt",                                                 COLOR_LIGHTRED,  2684.0684,-2525.4067,13.3136+0.6,4.0);// SAEM
CreateDynamic3DTextLabel("Ammunation - Para comprar un arma\n{FFFFFF}Usa /comprar",     									 COLOR_LIGHTBLUE, 308.15,-141.46,999.60+0.6,4.0); //ammu
CreateDynamic3DTextLabel("Ammunation - Para comprar un arma\n{FFFFFF}Usa /comprar",     								 	 COLOR_LIGHTBLUE, 1406.9501, -1279.8677, -3.0344+0.6,4.0); //ammu
CreateDynamic3DTextLabel("Paintball Menu\n{FFFFFF}Usa /arena ",                                                    		     COLOR_LIGHTBLUE, 305.3528,-141.9280,1004.0625+0.6,8.0); // Paintball LS
CreateDynamic3DTextLabel("Paintball Menu\n{FFFFFF}Usa /arena ",                                                     		 COLOR_LIGHTBLUE, 301.8077,-76.3016,1001.6091+0.6,8.0); // Paintball SF
CreateDynamic3DTextLabel("Sitio de arresto SAPD\n{FFFFFF}Usa /arrestar",                                                     COLOR_LIGHTBLUE,1559.3228,-1693.7491,5.8970+0.6,4.0);// Arresto LSPD
CreateDynamic3DTextLabel("Sitio de arresto FBI\n{FFFFFF}Usa /arrestar",                                                      COLOR_LIGHTBLUE,2800.9270,-1105.2594,30.7188+0.6,4.0); // Arresto Cia
CreateDynamic3DTextLabel("Sitio de arresto LSSD Dillimore\n{FFFFFF}Usa /arrestar",											 COLOR_LIGHTBLUE,613.3228,-589.1623,17.2266+0.6,4.0);///arrest(LSPD)
CreateDynamic3DTextLabel("Solo Policías\n{FFFFFF}Usa /arrestojudicial",                            					 	     COLOR_LIGHTBLUE,1735.1194,-1325.8646,13.2494+0.6,3.0); // Arresto Sistema Judicial
CreateDynamic3DTextLabel("Sitio de arresto EUEM\n{FFFFFF}Usa /prision",                                      				 COLOR_LIGHTBLUE,2648.9587,-2384.3145,13.6328+0.6,3.0); // Arresto SAEM
CreateDynamic3DTextLabel("Presiona\n{FFFFFF}F Para entrar.",                                                                 COLOR_YELLOW,1568.5718,-1691.0177,5.8906+0.6,4.0); //LSPD Garage enter
CreateDynamic3DTextLabel("Presiona\n{FFFFFF}F Para entrar.",                                                                 COLOR_YELLOW,1564.8464,-1666.1444,28.3956+0.6,4.0); //LSPD Roof enter
CreateDynamic3DTextLabel("Para recibir tu paga\n{FFFFFF}Usa /vendercosecha",                                                 COLOR_LIGHTBLUE,-382.1567,-1438.8259,25.7266+0.6,4.0); // ls
CreateDynamic3DTextLabel("Para comenzar a repartir pizzas\n{FFFFFF}Usa /tomarpizza" ,                                        COLOR_LIGHTBLUE, 2098.6919,-1789.5027,13.5547, 12.0); //Pizzero 
CreateDynamic3DTextLabel("Para comenzar a repartir pizzas\n{FFFFFF}Usa /tomarpizza" ,                                        COLOR_LIGHTBLUE,-2346.1243,-136.8405,35.1734, 12.0); //Pizzero
CreateDynamic3DTextLabel("Para ponerte tu uniforme \n{FFFFFF}Usa /uniforme" ,                                        	   	 COLOR_LIGHTBLUE,2103.9744,-1803.7089,13.5547, 12.0); //Uniforme pizza
CreateDynamic3DTextLabel("Para aprender algún estilo de pelea\n{FFFFFF}Usa /apelear",                                        COLOR_LIGHTBLUE, 767.6719,13.6320,1000.7010,8.0); //GYM LS
CreateDynamic3DTextLabel("Para aprender algún estilo de pelea\n{FFFFFF}Usa /apelear",                                        COLOR_LIGHTBLUE, 769.00,-47.39,1000.59,8.0); // GYM SF
CreateDynamic3DTextLabel("GYM Ganton Garage\n{FFFFFF}Usa /entrar",                                                           COLOR_YELLOW,2281.1748,-1724.4528,13.2521+0.6,8.0);
CreateDynamic3DTextLabel("Para navegar en Google\n{FFFFFF}Usa /google",    													 COLOR_LIGHTBLUE, 959.3875, -1443.0875, 13.6144+0.6,8.0);
CreateDynamic3DTextLabel("Sube a una bicicleta\npara {FFFFFF}rentarla",		                                                 COLOR_LIGHTGREEN,1727.5811,-1865.1080,13.5730+0.5,6.0); //Renk Bike
CreateDynamic3DTextLabel("Para comprar materiales\n{FFFFFF}Usa /materiales",		                                         COLOR_LIGHTBLUE,2613.3691,-1065.9915,69.9656+0.6,5.0);
CreateDynamic3DTextLabel("Para comprar materiales\n{FFFFFF}Usa /materiales",		                                         COLOR_LIGHTBLUE,2388.4568,-2008.2374,13.5537+0.6,5.0);
CreateDynamic3DTextLabel("Licencia de Taxi\n {FFFFFF}Usa /licenciataxi\n\n$500",                                             COLOR_LIGHTBLUE, 1752.5104,-1903.1664,13.5631, 8.0); // LS
//CreateDynamic3DTextLabel("Para adquirir una licencia\n{FFFFFF}Usa /comprarlicencia", 			                             COLOR_LIGHTBLUE, 252.39,117.47,1003.22+0.6, 8.0); // LS
CreateDynamic3DTextLabel("Para realizar una entrevisa\n{FFFFFF}Usa /nr",													 COLOR_LIGHTBLUE,1780.8818,-1779.3278,57.3117,4.0); //LSTV
//Gasolinerias
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-60.2884,59.0147,1023.5759,4.0); //gcomprar1
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-59.3870,58.2315,1004.8693,4.0); //gcomprar2
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-60.4091,58.8382,1043.5759,4.0); //gcomprar3
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-60.1126,58.8346,1063.5759,4.0); //gcomprar4
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-60.4153,58.8366,1083.5759,4.0); //gcomprar5
CreateDynamic3DTextLabel("Productos gasolinera\n{FFFFFF}Usa /gcomprar",														 COLOR_LIGHTBLUE,-60.9187,58.8351,1098.5759,4.0); //gcomprar6
//Robo al banco
CreateDynamic3DTextLabel("Sistema de robo al banco\n{FFFFFF}Usa /escapar",													 COLOR_LIGHTBLUE,1498.7604,-1564.1198,-22.0759,4.0); //escapar
CreateDynamic3DTextLabel("Sistema de robo al banco\n{FFFFFF}Usa /explotarpuerta",											 COLOR_LIGHTBLUE,1502.6974,-1564.3524,-22.0759,4.0); //explotarpuerta
//Otros
CreateDynamic3DTextLabel("Si quieres saber todos los comandos\n{FFFFFF}Usa /ayuda", 										 COLOR_LIGHTBLUE, 1712.19995,-1919.5,14.10000, 8.0);
CreateDynamic3DTextLabel("Descarga aqui los escombros\n{FFFFFF}Vuelve a recojer mas y vendelo", 						     COLOR_LIGHTBLUE, -117.2054,-1591.7810,8.9128, 8.0);
CreateDynamic3DTextLabel("Si necesitas soporte de un ayudante\n{FFFFFF}Usa /ayuda", 			                             COLOR_LIGHTBLUE, 1718.099,-1919.5,14.1, 8.0);
CreateDynamic3DTextLabel("/JobAyuda,/BuscarJob\n{FFFFFF}Buscas trabajo?", 													 COLOR_LIGHTBLUE, 1715.0999,-1919.5,13.39999+0.5,6.0);
//Jobs Los Santos
CreateDynamic3DTextLabel("[JOB] Repartidor de pizzas\n{FFFFFF}Usa /unirse",				                                     COLOR_LIGHTBLUE, 2104.8408,-1810.0991,13.5547+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0); // Pizzero LS
CreateDynamic3DTextLabel("[JOB] Camioneros.\n{FFFFFF}Usa /unirse",				                                             COLOR_LIGHTBLUE, 2184.5562,-2251.8499,14.7700+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0); // Camionero LS
CreateDynamic3DTextLabel("[JOB] Jardinero.\n{FFFFFF}Usa /unirse",				                                             COLOR_LIGHTBLUE, 2021.5721,-1274.4832,23.9810+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0); // Jardinero LS
CreateDynamic3DTextLabel("[JOB] Armero.\n{FFFFFF}Usa /unirse",		                                             COLOR_LIGHTBLUE, 2154.5103,-2268.6807,13.3025+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0); // Vendedor de Armas LS
CreateDynamic3DTextLabel("[JOB] Taxista.\n{FFFFFF}Usa /unirse",			                                         COLOR_LIGHTBLUE, 2246.6863,-1990.4323,13.5469+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0); // Taxista LS
CreateDynamic3DTextLabel("[JOB] Granjero.\n{FFFFFF}Usa /unirse",			                                                 COLOR_LIGHTBLUE, -100.0008,33.9278,3.1172+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);// granjero
CreateDynamic3DTextLabel("[JOB] Traficante de drogas.\n{FFFFFF}Usa /unirse",	                                             COLOR_LIGHTBLUE, 2355.1594,-1169.2037,28.0057+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);// Traficante de Drogas LS
CreateDynamic3DTextLabel("[JOB] Leñador.\n{FFFFFF}Usa /unirse",			                                                 COLOR_LIGHTBLUE, -564.4684,-1500.0900,9.2544+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);// leñador
CreateDynamic3DTextLabel("[JOB] Vendedor de Chalecos.\n{FFFFFF}Usa /unirse",			                                                 COLOR_LIGHTBLUE, 1423.9009,-1355.9692,13.2810+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);// vendedor de chalecos
//CreateDynamic3DTextLabel("[JOB] Mecánico.\n{FFFFFF}Usa /unirse",			                                                 COLOR_LIGHTBLUE, 1333.3785,-1540.6389,13.6500+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);// mecánico
//BAnco Tarjeta Credito
CreateDynamic3DTextLabel("Para registrar tu cuenta\nen el Banco de Los Santos\n{FFFFFF}Usa /sacartarjeta",             COLOR_LIGHTBLUE, 1492.1687,-1567.2876,-9.4108+0.6,4.0); // Banco LS
// Mapa de interes.
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1711.10828,-1888.84167,13.36670+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1719.21936,-1888.48071,13.36670+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1738.1191,-1862.8081,13.5758+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1738.1191,-1862.8081,13.5758+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1185.3795,-1339.4580,13.5742+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,981.88, -1157.62, 23.86+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1195.7616,-919.6393,43.1544+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,562.7845,-1250.2927,17.2599+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,805.9656,-1387.7549,13.5602+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,159.1252,-1946.8750,3.7734+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1309.5337,-912.6902,38.6741+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1756.7098,-1147.4298,23.9336+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1829.0646,-1679.4893,13.5469+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1934.2709,-1761.6580,13.5469+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1205.8312,-1842.7323,13.5432+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,844.4606,-2059.8254,12.8672+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1355.6024,-1739.5306,13.5469+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,2047.2003,-1920.9122,13.5469+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1832.5538,-1845.5059,13.1817+0.6,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Lugares de interés\n{00BCFF}[/VerMapa]",		 COLOR_YELLOW,1544.4031,-1681.4004,13.5583+0.6,5.0);
//Cajeros Automaticos ATM Los Santos
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1833.24268, -1846.19141, 13.17900+0.6,4.0); //24/7 Unity
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1837.34595, -1672.31592, 12.94730+0.6,4.0); //Albrahama LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,2010.88110, -1451.23486, 13.17634+0.6,4.0); //Hospital LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,2118.22583, -1119.08044, 24.91362+0.6,4.0); //COncesionario de Motos LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,607.25879, -1233.42444, 17.88725+0.6,4.0); //BAnco Exterior LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,562.59302, -1253.75623, 16.82513+0.6,4.0); //Concesionario Grotti LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,158.84294, -1949.27344, 3.35796+0.6,4.0); //Faro LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1254.49707, -1695.39844, 13.12211+0.6,4.0); //Inicio de SPawn LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,2449.93066, -1998.21167, 13.06436+0.6,4.0); //Mercado Negro LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,2379.11353, 1112.15613, 33.88081+0.6,4.0); //Vip Interior Los SAntos
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,24.7601,-2654.2646,40.5045+0.6,4.0); //24/7 Camino Hacia San Francisco
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1541.30005, -1601.90002, 13.20000+0.6,4.0); //LSPD
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1356.69995, -1759.19995, 13.30000+0.6,4.0); //24/7 Ayuntamiento
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1318.59998, -897.79999, 39.20000+0.6,4.0); //24/7 Vinewood
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,536.59998, -1740.69995, 11.90000+0.6,4.0);  //Casi En La Playa LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1415.00000, -1020.79999, 23.50000+0.6,4.0); //Por Vinewood LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1186.19995, -1372.50000, 13.20000+0.6,4.0); //Antiguo Hospital LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,2228.38989, -1707.78003, 13.25000+0.6,4.0); //GYM LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,665.59003, -577.96997, 15.96000+0.6,4.0); //Dilmori LS
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1498.7799,-1573.8557,-9.4034+0.6,4.0); // Banco interior
CreateDynamic3DTextLabel("Cajeros Automaticos <ATM>\nUtiliza {008EC1}/cajero\n{FFFFFF}Para Hacer Tus Transaciones",              COLOR_LIGHTBLUE,1482.9467,-1571.1311,-9.4108+0.6,4.0); // banco interior
//**************************************Fin 3DTextLabel**************************************

//**************************************Map icons************************************** 
//Map Icon Los Santos
CreateDynamicMapIcon(1775.8372,-1711.3041,13.5950, 42, 0, 0, 0, -1, 500.0); // LSRTV
CreateDynamicMapIcon(2115.1011,-1739.1328,13.6391, 26, 0, 0, 0, -1, 500.0); // Muebles
CreateDynamicMapIcon(1411.5359,-1699.8553,13.5395, 44, 0, 0, 0, -1, 500.0); // Sistema judicial
CreateDynamicMapIcon(2900.7278,-2143.5913,2.5486, 9, 0, 0, 0, -1, 500.0); // Conce botes
CreateDynamicMapIcon(1161.5182,-1324.1838,13.8832, 21, 0, 0, 0, -1, 500.0); // Iglesia
CreateDynamicMapIcon(1324.0598,-1841.7421,13.5469, 40, 0, 0, 0, -1, 500.0); // Ferretería
CreateDynamicMapIcon(1094.955322, -1271.142089, 13.546875, 12, 0, 0, 0, -1, 500.0); // Sexshop
CreateDynamicMapIcon(959.3875, -1443.0875, 13.6144, 35, 0, 0, 0, -1, 500.0); // Cyber Los Santos
CreateDynamicMapIcon(2034.5580,-1412.3188,16.9922, 22, 0, 0, 0, -1, 500.0); // Hospital
CreateDynamicMapIcon(1547.4792,-1675.3093,13.5541, 30, 0, 0, 0, -1, 500.0); // SAPD
CreateDynamicMapIcon(627.0303,-571.7255,17.9145, 30, 0, 0, 0, -1, 500.0); // Dillimore comisaria
CreateDynamicMapIcon(2793.0076,-1087.5804,30.7188, 61, 0, 0, 0, -1, 500.0); // FBI
CreateDynamicMapIcon(-1440.8188, -1562.2168, 101.2912, 61, 0, 0, 0, -1, 500.0); // FBI2
CreateDynamicMapIcon(1829.5077,-1842.7311,13.5781, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(1352.1354,-1759.1620,13.5541, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(646.7178,-511.4338,16.3359, 24, 0, 0, 0, -1, 500.0); // traficante de droga
CreateDynamicMapIcon(1315.63696, -898.36614, 39.57812, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(559.4346,-1293.3511,17.2482, 55, 0, 0, 0, -1, 500.0); // CAR DEALER GROTTI
CreateDynamicMapIcon(2131.9119,-1150.1757,24.1872, 55, 0, 0, 0, -1, 500.0); // CAR DEALER MOTOS
/*CreateDynamicMapIcon(1047.7563,-923.6198,42.6302, 55, 0, 0, 0, -1, 500.0); // CAR DEALER Vinewood atras locales
CreateDynamicMapIcon(334.8959,-1812.2848,4.4261, 55, 0, 0, 0, -1, 500.0); // CAR DEALER Playa al lado concierto*/
CreateDynamicMapIcon(2098.5596,-1805.6979,13.5546, 29, 0, 0, 0, -1, 500.0); // Pizza
CreateDynamicMapIcon(2355.5916,-648.6025,128.0547, 23, 0, 0, 0, -1, 500.0); // Mercado negro
CreateDynamicMapIcon(2148.2375,-2267.3174,13.3080, 23, 0, 0, 0, -1, 500.0); // Fabrica de armas
CreateDynamicMapIcon(2245.9502,-1660.6981,15.2864, 45, 0, 0, 0, -1, 500.0); // Binco Groove
CreateDynamicMapIcon(456.8236,-1501.6539,31.0389, 45, 0, 0, 0, -1, 500.0); // Binco Victim
CreateDynamicMapIcon(1456.8384,-1137.7065,23.9601, 45, 0, 0, 0, -1, 500.0); // Binco ZIP
CreateDynamicMapIcon(2229.5786,-1721.5316,13.5638, 54, 0, 0, 0, -1, 500.0); // GYM
CreateDynamicMapIcon(816.1325,-1386.1024,13.6537, 59, 0, 0, 0, -1, 500.0); // VIP
CreateDynamicMapIcon(2466.6709,-2118.2195,13.5469, 27, 0, 0, 0, -1, 500.0); // Mecanicos LS
CreateDynamicMapIcon(1368.7128,-1279.8639,13.5541, 6 ,  0, 0, 0, -1, 500.0); // Ammunation LS
CreateDynamicMapIcon(1836.8391,-1682.6100,13.3312, 48, 0, 0, 0, -1, 500.0); // Alhambra LS
CreateDynamicMapIcon(1480.8044,-1771.8195,18.7958, 3, 0, 0, 0, -1, 500.0); // ayuntamiento
CreateDynamicMapIcon(1997.3848,-2330.7671,15.8119, 5, 0, 0, 0, -1, 500.0); // AERO
CreateDynamicMapIcon(1498.5365,-1580.9977,13.5498, 52, 0, 0, 0, -1, 500.0); // Banco de LS
CreateDynamicMapIcon(1310.8230,-1360.2109,37.8764, 50, 0, 0, 0, -1, 500.0); // Casino LS
CreateDynamicMapIcon(1820.6606,-1414.2963,13.6216, 20, 0, 0, 0, -1, 500.0); // Bombero LS
CreateDynamicMapIcon(1929.629028,-1776.265869,13.546875, 36, 0, 0, 0, -1, 500.0); // Gasolinera Idlewood
CreateDynamicMapIcon(999.966308,-919.887573,42.328125, 36, 0, 0, 0, -1, 500.0); // Gasolinera Vinewood
CreateDynamicMapIcon(216.607940,-1430.037353,13.259366, 36, 0, 0, 0, -1, 500.0); // Gasolinera Cerca de Grotti
CreateDynamicMapIcon(2375.088867,-1892.202880,13.500000, 36, 0, 0, 0, -1, 500.0); // Gasolinera Ganton cerca de groove
CreateDynamicMapIcon(-79.004318,-1169.639526,2.152132, 36, 0, 0, 0, -1, 500.0); // Gasolinera en caminos de San Francisco a los santos
CreateDynamicMapIcon(-2034.8037, 147.6270, 28.7296, 36, 0, 0, 0, -1, 500.0); // Gasolinera Parada de Trenes
//CreateDynamicMapIcon(2293.5688,-1960.6058,13.5733, 35, 0, 0, 0, -1, 500.0); // Tienda Electronica
//Jobs Los Santos
CreateDynamicMapIcon(2104.8408,-1810.0991,13.5547, 56, 0, 0, 0, -1, 500.0); // Job Pizzero LS
CreateDynamicMapIcon(2184.5562,-2251.8499,14.7700, 51, 0, 0, 0, -1, 500.0); // Job Camionero LS
CreateDynamicMapIcon(2154.5103,-2268.6807,13.3025, 56, 0, 0, 0, -1, 500.0); // Job Vendedor de Armas LS
CreateDynamicMapIcon(2246.6863,-1990.4323,13.5469, 56, 0, 0, 0, -1, 500.0); // Job Taxi LS
CreateDynamicMapIcon(-100.0008,33.9278,3.1172, 56, 0, 0, 0, -1, 500.0); // Job Granjero LS
CreateDynamicMapIcon(2355.1594,-1169.2037,28.0057, 24, 0, 0, 0, -1, 500.0); // Job Traficante de Drogas LS
CreateDynamicMapIcon(2021.2024,-1274.8973,23.9814, 56, 0, 0, 0, -1, 500.0); // Job jardinero LS
CreateDynamicMapIcon(-564.4684,-1500.0900,9.2544, 56, 0, 0, 0, -1, 500.0); // Job leñador LS
//**************************************FIN Map icons**************************************

//*******************MAPEOS DE PUERTAS Y OBJETOS*******************
//LSPD
//Textura

//*******************BANCO LS*******************
Bankito = CreateObject(5720, 982.34, -1169.66, 32.82,   0.00, 0.00, 0.00);
SetObjectMaterial(Bankito, 2, 3942, "bistro", "ahoodfence2", 0);
SetObjectMaterial(Bankito, 4, 16016, "des_n", "ranchwall1", 0);
SetObjectMaterial(Bankito, 5, 16005, "des_stownmain2", "des_redslats", 0);
SetObjectMaterial(Bankito, 6, 964, "cj_crate_will", "CJ_FLIGHT_CASE", 0);
SetObjectMaterial(Bankito, 7, 16021, "des_geyser", "shingles1", 0);
SetObjectMaterial(Bankito, 8, 16005, "des_stownmain2", "sanruf", 0);
SetObjectMaterial(Bankito, 9, 6295, "lawland2", "lightglass", 0);
//*******************Mapas de Interes de Unity*******************
CreateDynamicObject(1444, 1711.10828, -1888.84167, 13.36670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1719.21936, -1888.48071, 13.36670,   0.00000, 0.00000, 0.00000);
//*******************SAPD Prisión*******************
fen1 = CreateDynamicObject(969,1417.90002441,-1554.90002441,4334.70019531,0.00000000,269.74975586,358.50000000); //object(electricgate) (1)
fen2 = CreateDynamicObject(969,1425.90002441,-1555.00000000,4334.70019531,0.00000000,269.74743652,359.49755859); //object(electricgate) (2)
fen3 = CreateDynamicObject(969,1429.50000000,-1554.80004883,4334.70019531,0.00000000,269.74731445,359.49462891); //object(electricgate) (3)
fen4 = CreateDynamicObject(969,1422.19995117,-1567.00000000,4334.60009766,0.00000000,269.74743652,179.99456787); //object(electricgate) (4)
fen5 = CreateDynamicObject(969,1414.80004883,-1566.69995117,4334.60009766,0.00000000,269.74182129,179.99450684); //object(electricgate) (5)
fen6 = CreateDynamicObject(969,1430.19995117,-1566.69995117,4334.70019531,0.00000000,269.74182129,179.99450684); //object(electricgate) (6)
JDoor1 = CreateButton(1418.19995117,-1555.09997559,4340.79980469, 0.0);
JDoor2 = CreateButton(1426.00000000,-1555.09997559,4340.79980469, 0.0);
JDoor3 = CreateButton(1429.80004883,-1554.90002441,4340.79980469, 0.0);
JDoor4 = CreateButton(1425.80004883,-1566.50000000,4340.79980469, 180);
JDoor5 = CreateButton(1433.80004883,-1566.40002441,4340.79980469, 180);
JDoor6 = CreateButton(1418.09997559,-1566.40002441,4340.79980469, 180);
//*******************GUARDIA NACIONAL*******************
saem1 = CreateDynamicObject(980, 2457.80, -2254.76, 26.90,   0.00, 0.00, 45.17); // Cerrada
saem2 = CreateDynamicObject(980, -1529.04, 482.44, 9.06,   0.00, 0.00, 0.00);// puerta sf
//*******************GOBIERNO*******************
gobiernogate = CreateDynamicObject(2990,1390.39941406,-1649.69921875,16.29999924,0.00000000,0.00000000,90.00000000);
gobiernogate1 = CreateDynamicObject(16500,1391.29980469,-1629.89941406,12.52500343,0.00000000,90.00000000,0.00000000);
//*******************FBI*******************
FBILobbyLeftBTN[0] = CreateButton(297.66613770,-1498.67749023,-44.59006119,0.79565430); //Lobby Button Left
FBILobbyLeftBTN[1] = CreateButton(297.24850464,-1498.23107910,-44.59006119,180); //Lobby Button Left
FBILobbyRightBTN[0] = CreateButton(300.05300903,-1521.40747070,-44.59006119,180); //Lobby Button Right
FBILobbyRightBTN[1] = CreateButton(300.16033936,-1521.84387207,-44.59006119,0); //Lobby Button Right
FBIPrivateBTN[0] = CreateButton(298.87384033,-1495.87316895,-27.32773209,270); //Private Office Button
FBIPrivateBTN[1] = CreateButton(300.49453735,-1495.33837891,-27.28091812,180.49487305); //Private Office Button
FBIPrivate[0] = CreateDynamicObject(1536,299.29986572,-1492.82666016,-28.73300552,0.00000000,0.00000000,270.00000000,600); //Private Office Door Left
FBIPrivate[1] = CreateDynamicObject(1536,299.33737183,-1495.83911133,-28.73300552,0.00000000,0.00000000,90.00000000,600); //Private Office Door Right
FBILobbyLeft = CreateDynamicObject(1536,295.40136719,-1498.43457031,-46.13965225,0.00000000,0.00000000,0.00000000,600); //Lobby Door Left
FBILobbyRight = CreateDynamicObject(1536,302.39355469,-1521.62988281,-46.13965225,0.00000000,0.00000000,179.99450684,600); //Lobby Door Right
//*******************LSPD*******************
eastlobby1 = CreateDynamicObject(1536,253.14941406,110.59960938,1002.21502686,0.00000000,0.00000000,270.00000000,-1,10,-1,100.0);
eastlobby2 = CreateDynamicObject(1536,253.18457031,107.59960938,1002.21502686,0.00000000,0.00000000,90.00000000,-1,10,-1,100.0);
westlobby1 = CreateDynamicObject(1536,239.71582031,116.09179688,1002.21502686,0.00000000,0.00000000,90.00000000,-1,10,-1,100.0);
westlobby2 = CreateDynamicObject(1536,239.67968750,119.09960938,1002.21502686,0.00000000,0.00000000,269.98901367,-1,10,-1,100.0);
locker1 = CreateDynamicObject(1536,267.29980469,112.56640625,1003.61718750,0.00000000,0.00000000,179.99450684,-1,10,-1,100.0);
locker2 = CreateDynamicObject(1536,264.29980469,112.52929688,1003.61718750,0.00000000,0.00000000,0.00000000,-1,10,-1,100.0);
cctv1 = CreateDynamicObject(1536,264.44921875,115.79980469,1003.61718750,0.00000000,0.00000000,0.00000000,-1,10,-1,100.0);
cctv2 = CreateDynamicObject(1536,267.46875000,115.83691406,1003.61718750,0.00000000,0.00000000,179.99450684,-1,10,-1,100.0);
chief1 = CreateDynamicObject(1536,229.59960938,119.50000000,1009.21875000,0.00000000,0.00000000,0.00000000,-1,10,-1,100.0);
chief2 = CreateDynamicObject(1536,232.59960938,119.53515625,1009.21875000,0.00000000,0.00000000,179.99450684,-1,10,-1,100.0);
eastin = CreateButton(253.44921875,110.59960938,1003.79998779,90.00000000);
westout = CreateButton(239.79492188,116.18457031,1003.87286377,90.00000000);
westin = CreateButton(239.32031250,116.27441406,1003.87286377,270.00000000);
eastout = CreateButton(253.00000000,110.59960938,1003.79998779,270.00000000);
elevator = CreateButton(275.83984375,120.94921875,1005.12280273,90.00000000);
cctvin = CreateButton(264.55566406,115.97949219,1005.12280273,179.99450684);
cctvout = CreateButton(264.55566406,115.69531250,1005.12280273,0.00000000);
lockerin = CreateButton(267.21679688,112.40917969,1005.12280273,0.00000000);
lockerout = CreateButton(267.21679688,112.66992188,1005.12280273,179.99450684);
chiefout = CreateButton(232.50000000,119.38476562,1010.81384277,0.00000000);
chiefin = CreateButton(229.67089844,119.66992188,1010.81384277,179.99450684);
roofkey = CreateButton(1565.93652344,-1667.35058594,28.85165977,179.99450684);
garagekey = CreateButton(1567.14550781,-1689.62011719,6.69999981,0.00000000);
pdgate1 = CreateDynamicObject(976, 1584.68250, -1637.97388, 12.53610,   0.00000, 0.00000, 0.00000);
pdgate2 = CreateDynamicObject(989, 1544.63647, -1627.31799, 14.16765,   0.00000, 0.00000, 196.57930);
FBIgate = CreateDynamicObject(980,-1412.1141400,-1474.1333000,103.0417300,0.0000000,0.0000000,-89.8199800); //
//****************Portones con nombre***********
SamuelGate  = CreateDynamicObject(971,1003.2999878,-643.5000000,124.0999985,0.0000000,1.9995117,21.9946289); //
NicoGate = CreateDynamicObject(19912,268.5060100,-1330.3514400,54.9451600,0.0000000,0.0000000,34.1400000); //
//*******************LSTV*******************
tvp = CreateDynamicObject(985, 1803.49744, -1721.39587, 14.32406,   0.00000, 0.00000, 180.00000);
//*************Mecanico***********************
portonmeca = CreateDynamicObject(2990, 2423.98120, -2089.46729, 15.73482,   0.00000, 0.00000, -90.00000);
//**************Porton residencia******************************************
portonres = CreateDynamicObject(969, -40.30374, -2507.42505, 34.83630,   0.00000, 0.00000, 124.31996);
//*******************vip*******************
rejavip = CreateDynamicObject(980, 2909.96484, -666.21680, 12.56295,   0.00000, 0.00000, 88.61147);
////*******************PEAJE LS-SF*****************************
peaje1 = CreateDynamicObject(976, 35.25729, -1516.96399, 4.24860,   0.00000, 0.00000, 270.00000);
peaje2 = CreateDynamicObject(976, 67.85014, -1545.88879, 4.02450,   0.00000, 0.00000, 89.10002);
//********************Portones faccs ilegales**********************
LCNgate = CreateDynamicObject(980, 1303.3156, -2057.1909, 60.0301, 0, 0, 270.0);//
YAKgate = CreateDynamicObject(980,321.7926600,-1187.9338400,78.1372800,0.0000000,0.0000000,38.4600600); //
RUgate = CreateDynamicObject(980,664.9176600,-1309.5562700,15.1891000,0.0000000,0.0000000,0.0000000); //
RUgate2 = CreateDynamicObject(980,658.7751500,-1226.6846900,17.7822700,0.0000000,0.0000000,-118.1399800); //
RUgate3 = CreateDynamicObject(980,786.4652700,-1152.4625200,25.3604800,0.0000000,0.0000000,90.2400100); //
NDRgate = CreateDynamicObject(980,2972.8317900,-1825.7243700,9.0336300,0.0000000,0.0000000,-96.6600000); //
//*******************BANCO LOS SANTOS*******************
Pbankazo = CreateDynamicObject(2634, 1503.60242, -1564.33789, -21.49960,   0.00000, 0.00000, 90.00000);
//*******************SISTEMA DE ROBO*******************
roboV = CreatePickup(1239,23,2618.5164,-1071.5796,69.7339); //Pos Robo
roboD = CreatePickup(1239,23,2447.9905,-1975.9823,13.5469); //Pos dejar cosas
//*******************CORTAR CESPED*******************
koson = CreatePickup(1210, 23, 2021.5721,-1274.4832,23.9810, -1);
cesped = CreatePickup(1274, 23, 2013.0183,-1282.8282,23.9762, -1);
koscar[0] =  AddStaticVehicleEx(572,2008.3411,-1274.8767,23.8203,358.8771,86,1, 1); // gaz
koscar[1] =  AddStaticVehicleEx(572,2005.4747,-1274.7090,23.8203,359.8171,1,86, 1); // gaz
koscar[2] =  AddStaticVehicleEx(572,2002.5492,-1274.9041,23.8203,357.6237,86,1, 1); // gaz
koscar[3] =  AddStaticVehicleEx(572,1999.5586,-1274.9226,23.8203,357.6237,1,86, 1); // gaz
koscar[4] =  AddStaticVehicleEx(572,1996.6884,-1275.0327,23.8203,357.6237,86,1, 1); // gaz
koscar[5] =  AddStaticVehicleEx(572,1993.6345,-1275.2351,23.8203,357.6237,1,86, 1); // gaz
koscar[6] =  AddStaticVehicleEx(572,1990.7550,-1275.3965,23.8203,357.6237,86,1, 1); // gaz
koscar[7] =  AddStaticVehicleEx(572,1987.7107,-1275.3932,23.8203,357.6237,1,86, 1); // gaz
koscar[8] =  AddStaticVehicleEx(572,1984.8125,-1275.4390,23.8203,357.6237,86,1, 1); // gaz
koscar[9] = AddStaticVehicleEx(572,1981.6827,-1274.9569,23.8203,357.6237,1,86, 1); // gaz
koscar[10] = AddStaticVehicleEx(572,1978.9513,-1275.0441,23.8203,357.6237,86,1, 1); // gaz
//Textura:
//*******************LEÑADOR*******************
lena = CreatePickup(1239,23,-407.2330,-1426.3041,26.3147);
Arbolvivo[0] = CreateObject(726, -528, -1453.8994140625, 9.8999996185303, 0, 0, 0);
Arbolvivo[1] = CreateObject(763, -513.7998046875, -1470.7998046875, 10.800000190735, 0, 0, 0);
Arbolvivo[2] = CreateObject(766, -525.8994140625, -1473.5, 9.8999996185303, 0, 0, 0);
Arbolvivo[3] = CreateObject(727, -514.69921875, -1457.099609375, 10.89999961853, 0, 0, 0);
Talararbol[0] = CreatePickup(1239,2,-527.2280,-1455.4230,10.9610);
Talararbol[1] = CreatePickup(1239,2,-515.0847,-1470.9744,11.6864);
Talararbol[2] = CreatePickup(1239,2,-527.0183,-1472.3345,10.7982);
Talararbol[3] = CreatePickup(1239,2,-515.7106,-1457.4116,11.8509);
//*******************FIN MAPEOS*******************

	for(new h = 0; h < sizeof(fINFO); h++)
	{
		if(fINFO[h][FamilyUSafe] > 0)
		{
			fINFO[h][FamilyPickup] = CreatePickup(1239, 23, fINFO[h][FamilySafe][0], fINFO[h][FamilySafe][1], fINFO[h][FamilySafe][2]);
		}
		if(fINFO[h][FamilyEntrance][0] != 0.0 && fINFO[h][FamilyEntrance][1] != 0.0)
		{
		    fINFO[h][FamilyEntrancePickup] = CreatePickup(1318, 23, fINFO[h][FamilyEntrance][0], fINFO[h][FamilyEntrance][1], fINFO[h][FamilyEntrance][2]);
			format(string, sizeof(string), "%s", fINFO[h][FamilyName]);
			fINFO[h][FamilyEntranceText] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,fINFO[h][FamilyEntrance][0], fINFO[h][FamilyEntrance][1], fINFO[h][FamilyEntrance][2]+0.6,4.0);
		}
		LoadGangVehicles(h);
	}
	for(new h = 0; h < sizeof(Points); h++)
	{
		if(Points[h][Type] == 3)
		{
			format(string, sizeof(string), " HIERBA DISPONIBLE: %d/1000.", Points[h][Stock]);
			Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
			Points[h][CratePoint] = 1;
		}
		else if(Points[h][Type] == 4)
		{
			format(string, sizeof(string), " CRACK DISPONIBLE: %d/1000.", Points[h][Stock]);
			Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
			Points[h][CratePoint] = 2;
		}
		CreatePickup(1239, 23, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]);
	}
	new text_info[128];
	for(new d = 0; d < sizeof(CDSInfo); d++)
	{
		if(CDSInfo[d][cdEntranceX] != 0.0 && CDSInfo[d][cdEntranceY] != 0.0)
		{
			CDSInfo[d][cdPickupID] = CreateDynamicPickup(1239, 1, CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]);
			if(CDSInfo[d][cdOwned])
			{
	            format(text_info, sizeof(text_info),"Concesionario (%d) %s\nDueño: %s", d,CDSInfo[d][cdMessage], CDSInfo[d][cdOwner]);
	            CDSInfo[d][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_BLUED,CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]+0.75,2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
			else
			{
	            format(text_info, sizeof(text_info),"Concesionario (%d) %s En Venta\nPrecio: %d", d,CDSInfo[d][cdMessage], CDSInfo[d][cdPrice]);
	            CDSInfo[d][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_BLUED,CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]+0.75,2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
		}
		for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
	    {
			if (CDSInfo[d][cdVehicleModel][v] != 0)
			{
		        new carcreated = CreateVehicle(CDSInfo[d][cdVehicleModel][v], CDSInfo[d][cdVehicleSpawnX][v], CDSInfo[d][cdVehicleSpawnY][v], CDSInfo[d][cdVehicleSpawnZ][v], CDSInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		        format(text_info, sizeof(text_info), "{4639F1}Modelo: {FFFFFF}%s\n{4639F1}Precio: {FFFFFF}%d", GetVehicleName(carcreated), CDSInfo[d][cdVehicleCost][v]);
                CDSInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_MAGENTA,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
                CDSInfo[d][cdVehicleId][v] = carcreated;
			}
		}
	}
//**************************************Pickups**************************************
//Comandos
//*******************punto /ad*******************
CreatePickup(1313, 23, 2355.5916,-648.6025,128.0547); //Mercado negro
CreatePickup(1239, 23, 1775.8372,-1711.3041,13.5950); //Anuncio
CreatePickup(1239, 23, 1009.2381,48.5105,55.3221); // Robar tienda electronica.
CreatePickup(1239, 23, 1006.0530,52.7181,55.3221); // Comprar tienda electronica.
CreatePickup(1239, 23, 2115.1011,-1739.1328,13.6391); // Tienda de muebles
CreatePickup(1239, 23, 1492.1687,-1567.2876,-9.4108); // Compra de Tarjeta De Credito LS
CreatePickup(1240, 23, 2012.6680,-1409.3304,16.9922, -1); // DejarPT - SAMD
CreatePickup(1240, 23, 2684.0684,-2525.4067,13.3136, -1); // DejarPT - Guardia Nacional
CreatePickup(1239, 23, 959.3875, -1443.0875, 13.6144, -1); //Google
CreatePickup(1239, 23, 240.4770,112.7777,1003.2188, 500); // Pagar Multas LS
CreatePickup(1240, 23, 1658.9924,-1807.1152,13.5508, -1); // Embargar
CreatePickup(1247, 23, 1559.3228,-1693.7491,5.8970, -1); // Arresto SAPD
CreatePickup(1247, 23, 2800.9270,-1105.2594,30.7188, -1); // Arresto FBI
CreatePickup(1247, 23, 613.3228,-589.1623,17.2266, -1); // Arresto sapd dillimore
CreatePickup(1247, 23, 1735.1194,-1325.8646,13.2494); // Arresto Judicial
CreatePickup(1247, 23, 2648.9587,-2384.3145,13.6328); // Arresto SAEM
CreatePickup(1239, 23, 308.15,-141.46,999.60); // Comprar Arma LS
CreatePickup(1239, 23, 305.3528,-141.9280,1004.0625); // PaintBall LS
CreatePickup(1239, 23, 767.6719,13.6320,1000.7010); // GYM LS
//CreatePickup(1239, 23, 252.39,117.47,1003.22); // Licencias Compra LS
CreatePickup(1239, 23, 1752.5104,-1903.1664,13.5631); // Licencia de Taxi Compra LS
CreatePickup(1274, 23, -382.1567,-1438.8259,25.7266, -1); // /vendercosecha ls
CreatePickup(1254, 23, 1407.7058,-1307.4529,9.0442); // pickup /contrato
//Equipo de Facciones
CreatePickup(334,  23, 267.0328,109.8991,1004.6172); // pickup SAPD
CreatePickup(348,  23, 310.3287,-1537.2428,-45.1338); // pickup FBI
CreatePickup(356,  23, 332.6553,2345.9578,8905.4180); // pickup SAEM
CreatePickup(1239, 23, 1188.8640,-1351.4312,2423.2649); // pickup SAMD
CreatePickup(2894, 23, 1792.5287,-1710.1592,13.5950); // pickup LSTV
CreatePickup(365,  23, 2509.4067,-2079.5461,13.5469); // pickup crazy motors
CreatePickup(1212, 23, 362.1189,-52.2308,-93.8500); // pickup GOB
CreatePickup(353,  23, -283.1366,-2174.5459,28.6632); // pickup hitman
CreatePickup(353,  23, 1201.6417,-2015.9741,71.6094); // pickup lcn
CreatePickup(353,  23, 305.0333, -1160.6010, 80.5505); // pickup yakuza
CreatePickup(353,  23, 688.3789, -1267.5032, 12.5460); // pickup rusa
CreatePickup(353,  23, 3065.7185, -1849.9324, 6.1719); // pickup ndrangheta
CreatePickup(2894, 23, 2135.5605,1300.7083,7698.8999); // pickup s. Judicial
CreatePickup(366,  23, -1683.8572,-2074.3633,19.2459); // pickup bomberos
//Spray mecas
CreatePickup(365,  23, 2517.5764,-2079.5603,13.5469); // spray mecas
//Jobs Los Santos
CreatePickup(1210, 23, 2104.8408,-1810.0991,13.5547); // Pizzero LS
CreatePickup(1210, 23, 2184.5562,-2251.8499,14.7700); // Camionero LS
CreatePickup(1210, 23, 2154.5103,-2268.6807,13.3025); // Vendedor de Armas LS
CreatePickup(1210, 23, 2246.6863,-1990.4323,13.5469);// Taxi LS
CreatePickup(1210, 23, -564.4684,-1500.0900,9.2544);// Leñador
CreatePickup(1210, 23, -100.0008,33.9278,3.1172, -1); // granjero
CreatePickup(1210, 23, 2355.1594,-1169.2037,28.0057); // Traficante De Drogas LS
//CreatePickup(1210, 23, 1333.3785,-1540.6389,13.6500, -1); // mecánico

CreatePickup(1239, 23, 375.8133,-64.7353,-93.8500); //Ayuntamiento
//**************************************Fin Pickups**************************************

	InfoEvento[EventRequest] = 999;
	InfoEvento[EventCreator] = 999;
	InfoEvento[EventStaff][0] = 999;
	InfoEvento[EventStaff][1] = 999;
	InfoEvento[EventStaff][2] = 999;
	InfoEvento[EventStaff][3] = 999;
	InfoEvento[EventStaff][4] = 999;

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
		gTime = tmphour;
	}
	gWeather = 10;
	ManualVehicleEngineAndLights();
 return 1;
}

doesAccountExist(account_name[]){
	new sz_accStr[MAX_PLAYER_NAME + 12];
	format(sz_accStr, sizeof(sz_accStr), USERFILEOLD, account_name);
	if(fexist(sz_accStr)) {
		new File: f_Handle = fopen(sz_accStr, io_read);
		if(flength(f_Handle) > 0) {
			fclose(f_Handle);
			return 1;
		}
		fclose(f_Handle);
	}
	return 0;
}

function SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		WeatherCalling++;
		if(WeatherCalling > 3)
		{
		    WeatherCalling = 0;
		    new rand;
		    rand = random(20);
		    switch(rand)
		    {
          		case 0:{ SetWeather(11); gWeather = 11; }
		        case 8:{ SetWeather(12); gWeather = 12; }
		        case 9:{ SetWeather(5); gWeather = 5; }
		        case 16:{ SetWeather(4); gWeather = 4; }
		        case 19:{ SetWeather(20); gWeather = 20; }
		        default:{ SetWeather(rand); gWeather = rand; }
		    }
		}
		ghour = tmphour;
		if(realtime)
		{
			SetWorldTime(tmphour);
			gTime = tmphour;
		}
	}
}


//*******************Función: PayDay*******************
timer SyncUp[60000]()
{
    new hour,minuite,second;
    if(PayDayLeft >= 1)
	{
	    PayDayLeft--;
	}
	else
	{
        PayDayLeft = 60;
	}
	SyncTime();
	SyncMinTime();
	DollahScoreUpdate();
	gettime(hour,minuite,second);
	FixHour(hour);
	hour = shifthour;
	if(PayDayLeft == 0) PayDay();
	foreach(Player, i)
	{
	   	if(Info[i][pBeingSentenced] > 1) Info[i][pBeingSentenced]--;
	   	if(Info[i][pBeingSentenced] == 1)
		{
			TogglePlayerControllable(i, true);
			SetPVarInt(i, "IsFrozen", 0);
			SetPlayerPos(i, 1452.7971,-1757.7694,13.5469);
			SetPlayerFacingAngle(i, 278.701);
			SendClientMessageEx(i, COLOR_WHITE, "Ningún Juez ha asistido al juicio, eres libre.");
			Info[i][pBeingSentenced] = 0;
		}
	}
}
function SyncMinTime()
{
	new hour, minute, second;
	gettime(hour, minute, second);
	foreach(Player, i)
	{
	    if(GetPlayerVirtualWorld(i) == 133769)
		{
		    SetPlayerWeather(i, 45);
			SetPlayerTime(i, 0, 0);
		}
		else
		{
			SetPlayerTime(i, hour, minute);
		}
	}
	return 1;
}
stock GetClosestPlayer(p1){
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	foreach(Player, x){
		if(x != p1){
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00){
				dis = dis2;
				player = x;
			}
		}
	}
	return player;
}

function PayDay()
{
	new string[128];
	PayDayLeft = 60;
	TotalUptime += 1;
	GiftAllowed = 1;
	SaveStuff();
	SaveServerStats();
	FMemberCounter();
	PaydayOn = 1;
	SetTimer("PayDayOOF", 180000, false);
	foreach(Player, i)
	{
		if(IsPlayerConnected(i))
		{
		    if(Info[i][pLevel] >= 1)
			{
			    Info[i][YaCobre] = 0;
			    PlayerPlaySound(i, 1133, 0.0, 0.0, 0.0);
			    GameTextForPlayer(i, "~y~Hora de pago", 5000, 1); 
			    SendClientMessageEx(i, COLOR_WHITE, "");
                SendClientMessageEx(i, 0x00C200FF, "*--------------- BANCO DE LOS SANTOS ---------------*");
                if(Info[i][pMember] > 0 || Info[i][pFMember] < 255)
                {
			    	format(string, sizeof(string), "Pago por facción/familia: {FFFFFF}%d", 2000*Info[i][pRank]);
			    	SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
			    }
			    /*format(string, sizeof(string), "Pago de nivel: {FFFFFF}%d", 100*Info[i][pLevel]);
			    SendClientMessageEx(i, COLOR_LIGHTBLUE, string);*/
			    format(string, sizeof(string), "{D60000}Impuestos: {FFFFFF}-%d", TaxValue);
			    SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
		    	if(Info[i][pPlan] == 1)
				{
			    	SendClientMessageEx(i, COLOR_LIGHTBLUE, "{D60000}Plan Médico: {FFFFFF}-50$");
				}
			    format(string, sizeof(string), "Antiguo Balance: {FFFFFF}%d", Info[i][pAccount]);
			    SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
     			if(Info[i][pMember] > 0 || Info[i][pFMember] < 255)
		     	{
			    	Info[i][pAccount] += 2000*Info[i][pRank];
			    }
			    if(Info[i][pPlan] == 1)
				{
					new total = TaxValue+50;
			    	format(string, sizeof(string), "Nuevo Balance: {FFFFFF}%d", Info[i][pAccount]-total);
			    	SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
				}
				else
				{
   					format(string, sizeof(string), "Nuevo Balance: {FFFFFF}%d", Info[i][pAccount]-TaxValue);
			    	SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
				}
			    SendClientMessageEx(i, 0x00C200FF, "*--------------- BANCO DE LOS SANTOS ---------------*");
                Info[i][pConnectTime] += 1;
			    Info[i][pAccount] -= TaxValue;
				if(Info[i][pConnectTime] == 2){
					Info[i][pWRestricted] = 0;
					SendClientMessageEx(i, COLOR_GRAD2, "{A2DC35}[NOTA]:{FFFFFF} Cumpliste las 2 horas de juego, la restricción de armas fue eliminada.");
				}
				if(Info[i][pAdiccion] > 0){
				    Info[i][pAdiccion] -= 1;
				}
				if(Info[i][pWRestricted] > 0)
				{
				    Info[i][pWRestricted]--;
					if(Info[i][pWRestricted] == 0) SendClientMessageEx(i, COLOR_LIGHTRED, "Aun te queda una hora de restricción de armas.");
				}
				if(MoneyMessage[i]==1)
				{
   					if( Info[i][pJailed] < 1 && !IsACop(i))
			    	{
   	    				format(string,sizeof(string),"No pudiste pagar la deuda de {FF0000}$%d{FFFFFF}. Ahora la policía te está buscando.",GetPlayerCash(i));
						SendClientMessageEx(i, COLOR_WHITE, string);
						if(Info[i][pWantedLevel] < 6) Info[i][pWantedLevel] += 1;
						SetPlayerWantedLevel(i, Info[i][pWantedLevel]);
					}
				}
				if(Info[i][pRenting] != INVALID_HOUSE_ID)
				{
					if(HouseInfo[Info[i][pRenting]][hRentFee] > Info[i][pAccount])
					{
						Info[i][pRenting] = INVALID_HOUSE_ID;
						SendClientMessageEx(i, COLOR_WHITE, "Fuiste desalojado de la casa que rentabas.");
					}
					else
					{
						HouseInfo[Info[i][pRenting]][hSafeMoney] += HouseInfo[Info[i][pRenting]][hRentFee];
						Info[i][pAccount] -= HouseInfo[Info[i][pRenting]][hRentFee];
					}
				}
				Info[i][pRob] = 0;
				if(Info[i][pVIP] >= 4) Info[i][pVTokens]+= 2;
				Info[i][YaCobre] = 1;
				IDCode[i] = -1;
  				if(Info[i][pDobleExp] == 0)
				{
    				Info[i][pExp] += 1;
				}
  				else
				{
					Info[i][pExp] += 2;
					Info[i][pDobleExp]--;
					format(string, sizeof(string), "* INFO: Ganaste 2 puntos de respeto por tener horas de doble experiencia, te quedan %d horas más.", Info[i][pDobleExp]);
					SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
				}
			}
		}
	}
	return 1;
}

function PayDayOOF()
{
    PaydayOn = 0;
}

    strtok(const string[], &index){
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' ')){
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

function OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
	    new INI:File = INI_Open(UserPath(playerid));
	    INI_SetTag(File,"data");
     	INI_WriteInt(File,"Password",udb_hash(password));
		INI_Close(File);
		TotalRegister++;
		SendClientMessageEx(playerid, COLOR_YELLOW, "Cuenta registrada, se ha iniciado sesión automáticamente.");
		PlayerLogin(playerid);
	}
	return 1;
}
OnPlayerSavedStats(playerid)
{
    if(GetPVarInt(playerid, "TempName") == 1) return 1;
    if(!gPlayerLogged{playerid}) return 1;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
    if(INI_Exist(playername))
    {
		new PlayerFile[ 13 + MAX_PLAYER_NAME + 1];
	    format( PlayerFile , sizeof PlayerFile, USERFILE, playername);
	    new INI:File = INI_Open(PlayerFile);
	    INI_SetTag(File,"data");
	    INI_WriteInt(File,"TarjetaCredito",Info[playerid][pTarjetaCredito]);
	    INI_WriteInt(File,"Level",Info[playerid][pLevel]);
	    INI_WriteInt(File,"AdminNivelZC",Info[playerid][pAdminZC]);
	    INI_WriteInt(File,"AdminZC",Info[playerid][pLvlAdminZC]);
	    INI_WriteInt(File,"BanAppealer",Info[playerid][pBanAppealer]);
		INI_WriteInt(File,"FactionModerator",Info[playerid][pFactionModerator]);
		INI_WriteInt(File,"ModStaff",Info[playerid][pModStaff]);
		INI_WriteInt(File,"GangModerator",Info[playerid][pGangModerator]);
		INI_WriteInt(File,"Helper",Info[playerid][pHelper]);
		INI_WriteInt(File,"ConnectedTime",Info[playerid][pConnectTime]);
		INI_WriteInt(File,"Registered",Info[playerid][pReg]);
		INI_WriteInt(File,"Sex",Info[playerid][pSex]);
		INI_WriteInt(File,"Age",Info[playerid][pAge]);
		INI_WriteInt(File,"Origin",Info[playerid][pOrigin]);
		INI_WriteInt(File,"Respect",Info[playerid][pExp]);
        INI_WriteInt(File,"Money",GetPVarInt(playerid, "Cash"));
        INI_WriteInt(File,"Bank",Info[playerid][pAccount]);
        INI_WriteString(File,"IP", Info[playerid][pIP]);
        INI_WriteInt(File,"Kills",Info[playerid][pKills]);
        INI_WriteInt(File,"Deaths",Info[playerid][pDeaths]);
        INI_WriteInt(File,"Arrested",Info[playerid][pArrested]);
        INI_WriteInt(File,"JailAdmin",Info[playerid][pJailAdmin]);
        INI_WriteInt(File,"LottoNr",Info[playerid][pLottoNr]);
        INI_WriteInt(File,"Job",Info[playerid][pJob]);
        INI_WriteInt(File,"NewMuted",Info[playerid][pNMute]);
        INI_WriteInt(File,"NewMutedTotal",Info[playerid][pNMuteTotal]);
        INI_WriteInt(File,"Warn",Info[playerid][pWarn]);
        INI_WriteInt(File,"WRestricted",Info[playerid][pWRestricted]);
        INI_WriteInt(File,"Jailed",Info[playerid][pJailed]);
        INI_WriteInt(File,"JailTime",Info[playerid][pJailTime]);
        INI_WriteInt(File,"Materials",Info[playerid][pMats]);
        INI_WriteInt(File,"Packages",GetPVarInt(playerid, "Packages"));
        INI_WriteInt(File,"Drugs",Info[playerid][pDrugs]);
        INI_WriteInt(File,"Cosecha",Info[playerid][pCosecha]);
        INI_WriteInt(File,"Crack",Info[playerid][pCrack]);
        INI_WriteInt(File,"Pot",Info[playerid][pPot]);
        INI_WriteInt(File,"Crates",Info[playerid][pCrates]);
        INI_WriteInt(File,"Adic",Info[playerid][pAdiccion]);
        INI_WriteInt(File,"Leader",Info[playerid][pLeader]);
        INI_WriteInt(File,"Member",Info[playerid][pMember]);
        INI_WriteInt(File,"FMember",Info[playerid][pFMember]);
        INI_WriteInt(File,"Division",Info[playerid][pDivision]);
        INI_WriteInt(File,"Rank",Info[playerid][pRank]);
        INI_WriteInt(File,"Char",Info[playerid][pChar]);
		if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0){
		    GetPlayerHealth(playerid,Info[playerid][pHealth]);
		}
		INI_WriteFloat(File,"pHealth",Info[playerid][pHealth]);
		if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0){
		    GetPlayerArmour(playerid,Info[playerid][pArmour]);
		}
        INI_WriteFloat(File,"pArmour",Info[playerid][pArmour]);
        INI_WriteInt(File,"Team",Info[playerid][pTeam]);
        INI_WriteInt(File,"Model",Info[playerid][pModel]);
        INI_WriteInt(File,"PhoneNr",Info[playerid][pPnumber]);
        INI_WriteInt(File,"Sprunk",Info[playerid][pSprunk]);
        INI_WriteInt(File,"Phonebook",Info[playerid][pPhoneBook]);
        INI_WriteInt(File,"House",Info[playerid][pPhousekey]);
        INI_WriteInt(File,"House2",Info[playerid][pPhousekey2]);
        INI_WriteInt(File,"Int", Info[playerid][pInt]);
        INI_WriteFloat(File,"Pos_x",Info[playerid][pPos_x]);
        INI_WriteFloat(File,"Pos_y",Info[playerid][pPos_y]);
        INI_WriteFloat(File,"Pos_z",Info[playerid][pPos_z]);
        INI_WriteFloat(File,"SPos_r",Info[playerid][pPos_r]);
        INI_WriteInt(File,"CarLic",Info[playerid][pCarLic]);
        INI_WriteInt(File,"FlyLic",Info[playerid][pFlyLic]);
        INI_WriteInt(File,"BoatLic",Info[playerid][pBoatLic]);
        INI_WriteInt(File,"GunLic",Info[playerid][pGunLic]);
        INI_WriteInt(File,"Gafas",Info[playerid][pGafas]);
        INI_WriteInt(File,"Tutorial",Info[playerid][pTut]);
        INI_WriteInt(File,"Test",Info[playerid][pTestTut]);
        INI_WriteInt(File,"VWorld",Info[playerid][pVW]);
        INI_WriteInt(File,"Lighter",Info[playerid][pLighter]);
        INI_WriteInt(File,"Cigarettes",Info[playerid][pCigarettes]);
        INI_WriteInt(File,"BanZC",Info[playerid][pBannedZC]);
        INI_WriteInt(File,"DisabledZC",Info[playerid][pDisabledZC]);
        INI_WriteInt(File,"BlockBug",Info[playerid][pBlockBug]);
        INI_WriteInt(File,"DNI",Info[playerid][pDNI]);
        INI_WriteInt(File,"VSkill",Info[playerid][pArmsSkill]);
        INI_WriteInt(File,"TSkill",Info[playerid][pTruckSkill]);
        INI_WriteInt(File,"SmugglerSkill",Info[playerid][pSmugSkill]);
        INI_WriteInt(File,"DrugsSkill",Info[playerid][pDrugsSkill]);
        INI_WriteInt(File,"SIDA",Info[playerid][pSIDA]);
        INI_WriteInt(File,"Cancer" ,Info[playerid][pCancer]);
        INI_WriteInt(File,"Epilepsia",Info[playerid][pEpilepsia]);
        INI_WriteInt(File,"Dengue",Info[playerid][pDengue]);
        INI_WriteInt(File,"FStyle",Info[playerid][pFStyle]);
        INI_WriteInt(File,"Busqueda",Info[playerid][pWantedLevel]);
        INI_WriteInt(File,"AntiSIDA",Info[playerid][pAntiSIDA]);
        INI_WriteInt(File,"AntiCancer",Info[playerid][pAntiCancer]);
        INI_WriteInt(File,"AntiEpilepsia",Info[playerid][pAntiEpilepsia]);
        INI_WriteInt(File,"Rent",Info[playerid][pRenting]);
        INI_WriteInt(File,"prMoney",Info[playerid][p_Pr_Money]);
        INI_WriteInt(File,"Rob",Info[playerid][pRob]);
        INI_WriteInt(File,"Premium",Info[playerid][pVIP]);
        INI_WriteInt(File,"FichasCash",Info[playerid][pPTR]);
        INI_WriteInt(File,"CarPremium",Info[playerid][pCarKey2]);
        INI_WriteInt(File,"BanDuda",Info[playerid][pBanDuda]);
        INI_WriteInt(File,"ReportMuted",Info[playerid][pRMuted]);
        INI_WriteInt(File,"ReportMutedTotal",Info[playerid][pRMutedTotal]);
        INI_WriteInt(File,"ReportMutedTime",Info[playerid][pRMutedTime]);
        INI_WriteInt(File,"Pasaporte",Info[playerid][pPasaporte]);
        INI_WriteInt(File,"RadioP", Info[playerid][pRadio]);
        INI_WriteInt(File,"KHZ",Info[playerid][pRadioFreq]);
        INI_WriteInt(File,"Ipad",Info[playerid][pIpadMusic]);
        INI_WriteInt(File,"GiftTime",Info[playerid][pGiftTime]);
		for( new m = 0; m < 12; m++ )
		{
		    new mStr[24];
		    format(mStr,sizeof(mStr), "Gun%d", m);
		    INI_WriteInt(File,mStr, Info[playerid][pWeapons][m]);
		}
		INI_WriteInt(File,"Acento",Info[playerid][pAccent]);
		INI_WriteInt(File,"PTokens",Info[playerid][pPaintTokens]);
		INI_WriteInt(File,"Undercover",Info[playerid][pUndercover]);
		INI_WriteInt(File,"Head",Info[playerid][pHead]);
		INI_WriteInt(File,"TaxiLicense", Info[playerid][pTaxiLicense]);
		INI_WriteInt(File,"Hospital",Info[playerid][pHospital]);
		INI_WriteInt(File,"CHits",Info[playerid][pCHits]);
		INI_WriteInt(File,"FHits",Info[playerid][pFHits]);
		INI_WriteInt(File,"Spraycan",Info[playerid][pSpraycan]);
		INI_WriteInt(File,"Married",Info[playerid][pMarried]);
		INI_WriteString(File,"MarriedTo",Info[playerid][pMarriedTo]);
		INI_WriteString(File,"ContractBy",Info[playerid][pContractBy]);
		INI_WriteString(File,"ContractDetail",Info[playerid][pContractDetail]);
		INI_WriteInt(File,"pWExists",Info[playerid][pWExists]);
		INI_WriteFloat(File,"pWX",Info[playerid][pWX]);
		INI_WriteFloat(File,"pWY",Info[playerid][pWY]);
		INI_WriteFloat(File,"pWZ",Info[playerid][pWZ]);
		INI_WriteInt(File,"pWVW",Info[playerid][pWVW]);
		INI_WriteInt(File,"pWInt",Info[playerid][pWInt]);
		INI_WriteInt(File,"pWValue",Info[playerid][pWValue]);
		INI_WriteInt(File,"pWSeeds",Info[playerid][pWSeeds]);
		INI_WriteInt(File,"PayEx",Info[playerid][YaCobre]);
		INI_WriteInt(File,"AdMuted",Info[playerid][pADMute]);
		INI_WriteInt(File,"AdMutedTotal",Info[playerid][pADMuteTotal]);
		INI_WriteString(File,"Warrants",Info[playerid][pWarrant]);
		INI_WriteInt(File,"JudgeJailTime",Info[playerid][pJudgeJailTime]);
		INI_WriteInt(File,"JudgeJailType",Info[playerid][pJudgeJailType]);
		INI_WriteInt(File,"BeingSentenced",Info[playerid][pBeingSentenced]);
		INI_WriteInt(File,"ProbationTime",Info[playerid][pProbationTime]);
		INI_WriteInt(File,"RewardsHours",Info[playerid][pRHours]);
		INI_WriteInt(File,"ADTime",Info[playerid][pADTime]);
		INI_WriteInt(File,"Otros",Info[playerid][pOther]);
		INI_WriteInt(File,"GGTokens",Info[playerid][pGTokens]);
		INI_WriteInt(File,"HDExp",Info[playerid][pDobleExp]);
		INI_WriteInt(File,"DPHoras",Info[playerid][pDPHours]);
		INI_WriteInt(File,"DPTiempo",Info[playerid][pDPTime]);
		INI_WriteInt(File,"DPTotal",Info[playerid][pDPTotal]);
		INI_WriteInt(File,"Order",Info[playerid][pOrder]);
		INI_WriteInt(File,"TempVIP",Info[playerid][pTempVIP]);
		INI_WriteInt(File,"VIPInviteDay",Info[playerid][pVIPInviteDay]);
		INI_WriteInt(File,"BuddyInvite",Info[playerid][pBuddyInvited]);
		INI_WriteInt(File,"VTokens",Info[playerid][pVTokens]);
		INI_WriteInt(File,"Job2",Info[playerid][pJob2]);
		INI_WriteInt(File,"TypeSpawn",Info[playerid][pTypeSpawn]);
		INI_WriteInt(File,"ShopTech",Info[playerid][pShopTech]);
		INI_WriteInt(File,"Status",Info[playerid][pEstado]);
		INI_WriteInt(File,"DayVIP",Info[playerid][pVIPDateD]);
		INI_WriteInt(File,"MonthVIP",Info[playerid][pVIPDateM]);
		INI_WriteInt(File,"IDRegalo",Info[playerid][pRegalo]);
		for( new m = 0; m < 11; m++ )
		{
		    new mStr[24];
		    format(mStr,sizeof(mStr), "Mueble%d", m);
		    INI_WriteInt(File,mStr, Info[playerid][pMuebles][m]);
		}
		INI_WriteInt(File,"Screwdrivers", Info[playerid][pScrewdriver]);
		INI_WriteInt(File,"Firstaid", Info[playerid][pFirstaid]);
		INI_WriteInt(File,"CamOculta", Info[playerid][pSurveillance]);
		INI_WriteInt(File,"Negocio",Info[playerid][pPbizzkey]);
		INI_WriteInt(File,"skinn",Info[playerid][pgskin]);
		INI_WriteInt(File,"robita",Info[playerid][probita]);
		INI_WriteInt(File,"DNIFalse",Info[playerid][pDNIFalse]);
 		INI_WriteString( File, "DNIName",Info[playerid][pDNIName]);
 		INI_WriteInt(File,"Boombox",Info[playerid][pBoombox]);
	    for(new v = 0; v < MAX_PLAYERTOYS; v++)
    	{
	    	new string[64];
			format( string,64, "pt%dModelID", v);
			INI_WriteInt(File,string, PlayerToyInfo[playerid][v][ptModelID]);
			format(string, 64, "pt%dBone",v);
			INI_WriteInt(File,string, PlayerToyInfo[playerid][v][ptBone]);
			format(string, 64, "pt%dPosX",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosX]);
			format(string, 64, "pt%dPosY",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosY]);
			format(string, 64, "pt%dPosZ",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosZ]);
			format(string, 64, "pt%dRotX",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotX]);
			format(string, 64, "pt%dRotY",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotY]);
			format(string, 64, "pt%dRotZ",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotZ]);
			format(string, 64, "pt%dSizX",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleX]);
			format(string, 64, "pt%dSizY",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleY]);
			format(string, 64, "pt%dSizZ",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleZ]);
    	}
    	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    	{
    	    new string[64];
        	format(string, 64, "pv%dPosX",v);
        	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosX]);
        	format(string, 64, "pv%dPosY",v);
        	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosY]);
        	format(string, 64, "pv%dPosZ",v);
        	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosZ]);
        	format(string, 64, "pv%dPosAngle",v);
        	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosAngle]);
			format(string, 64, "pv%dVirtualW",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvVW]);
			format(string, 64, "pv%dModelId",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvModelId]);
			format(string, 64, "pv%dLock",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvLock]);
			format(string, 64, "pv%dLocked",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvLocked]);
			format(string, 64, "pv%dPaintJob",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvPaintJob]);
			format(string, 64, "pv%dColor1",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvColor1]);
			format(string, 64, "pv%dColor2",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvColor2]);
			format(string, 64, "pv%dPrice",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvPrice]);
			format(string, 64, "pv%dTicket",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvTicket]);
			format(string, 64, "pv%dWeapon0",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][0]);
			format(string, 64, "pv%dWeapon1",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][1]);
			format(string, 64, "pv%dWeapon2",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][2]);
			format(string, 64, "pv%dWeapon3",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][3]);
			format(string, 64, "pv%dWeapon4",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][4]);
			format(string, 64, "pv%dWeapon5",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][5]);
			format(string, 64, "pv%dWeapon6",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][6]);
			format(string, 64, "pv%dWeapon7",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][7]);
			format(string, 64, "pv%dWepUpgrade",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWepUpgrade]);
			format(string, 64, "pv%dFuel",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvFuel]);
			format(string, 64, "pv%dImpound",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvImpounded]);
			format(string, 64, "pv%dHealth",v);
			INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvHealth]);
			for(new m = 0; m < MAX_MODS; m++)
			{
			    new strings[64];
			    format(strings, 64, "pv%dMod%d", v, m);
			    INI_WriteInt(File,strings,PlayerVehicleInfo[playerid][v][pvMods][m]);
			}
		}
		INI_Close(File);
   	}
   	return 1;
}

function PlayerLogin(playerid)
{
	new string [128];
	TotalLogin++;
	ClearChatbox(playerid);
	ResetPlayerMoney(playerid);
	StopAudioStreamForPlayer(playerid);
	TextDrawHideForPlayer(playerid, Drawlogueando0);
    TextDrawHideForPlayer(playerid, Drawlogueando1);
 	//Textdraws ingame
   	TextDrawShowForPlayer(playerid, Textgame0);
	CurrentMoney[playerid] = GetPVarInt(playerid, "Cash");
	if(Info[playerid][pLvlAdminZC] > 0)
	{
	    Info[playerid][pLvlAdminZC] = 0;
	    Info[playerid][pAdminZC] = 0;
	    Info[playerid][pBanAppealer] = 0;
	    Info[playerid][pFactionModerator] = 0;
	    Info[playerid][pModStaff] = 0;
	    Info[playerid][pGangModerator] = 0;
	    Info[playerid][pShopTech] = 0;
	    Info[playerid][pHelper] = 0;
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"Perfect City:{FFFFFF} Restauración de administradores general, No reportar esto.");
	}
	if(Info[playerid][pDisabledZC] == 1){
	    SetPlayerName(playerid, "BannedPlayer");
   	    SendClientMessageEx(playerid, COLOR_WHITE,  "{FFFF00}Administración:{FFFFFF} Esta cuenta está deshabilitada.");
   	    Kick(playerid);
	}
	if(Info[playerid][pBannedZC] >= 2){
   	    SetPlayerName(playerid, "BannedPlayer");
   	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}Administración:{FFFFFF} Tú estás baneado del servidor.");
   	    Kick(playerid);
	}
	if(Info[playerid][pAdminZC] > 0){
		new tempip[32];
		GetPlayerIp(playerid, tempip, 32);
		if(strcmp(tempip, Info[playerid][pIP], true)){
			format(string, sizeof(string), "{008EC1}Perfect City:{FFFFFF} %s ha logueado con diferente [IP: %s] - IP original es: %s", GetPlayerNameEx(playerid), tempip, Info[playerid][pIP]);
			ABroadCast(COLOR_GENERAL, string, 4);
		}
	}
	if(Info[playerid][pWRestricted] >= 1) ResetPlayerWeaponsEx(playerid);
	GetPlayerIp(playerid, Info[playerid][pIP], 32);
	SetPlayerScore(playerid, Info[playerid][pLevel]);
	if(Info[playerid][pReg] == 0){
		Info[playerid][pLevel] = 0;
		Info[playerid][pHealth] = 100.0;
		Info[playerid][pPos_x] = 1612.3240;
		Info[playerid][pPos_y] = -2330.1670;
		Info[playerid][pPos_z] = 13.5469;
		Info[playerid][pInt] = 0;
		Info[playerid][pTeam] = 3;
		Info[playerid][pChar] = 299;
		Info[playerid][pPnumber] = 0;
		Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
		Info[playerid][pPhousekey2] = INVALID_HOUSE_ID;
		Info[playerid][pAccount] = 0;
		Info[playerid][pPbizzkey] = 9999;
	}
    if(Info[playerid][pPos_x] == 0.0 && Info[playerid][pPos_y]== 0.0&& Info[playerid][pPos_z]== 0.0){
        Info[playerid][pPos_x] = 1715.12;
		Info[playerid][pPos_y] = -1903.17;
		Info[playerid][pPos_z] = 13.56;
    }
    if(Info[playerid][pShopTech] >= 2) Info[playerid][pShopTech] = 0;
    if(Info[playerid][pAdminZC] == 0) { Info[playerid][pGangModerator] = 0; Info[playerid][pShopTech] = 0; Info[playerid][pBanAppealer] = 0; Info[playerid][pFactionModerator] = 0; Info[playerid][pModStaff] = 0; }
	if(Info[playerid][pHospital] == 1){ Info[playerid][pHospital] = 0; SetPVarInt(playerid, "Hospital", 1); }
	if(Info[playerid][pLevel] < 5 || Info[playerid][pAdminZC] > 0 || Info[playerid][pHelper] > 0) gNewbie[playerid] = 0;
	if(Info[playerid][pNMute] == 1) SetTimerEx("NewbieUnMuted", 300000, 0, "d", playerid);
	if(Info[playerid][pTut] == 1) Info[playerid][pReg] = 1;
	new stringa[256];
	format(stringa, sizeof(stringa), "{FFFFFF}Info: Bienvenido al servidor, %s. Usa {0000C2}/actualizaciones {FFFFFF}para saber lo más reciente del servidor.)", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_GENERAL, stringa);
	//Message(playerid, COLOR_GENERAL, "{FFFFFF}Info: Bienvenido al servidor, %s. Usa {0000C2}/actualizaciones {FFFFFF}para saber lo más reciente del servidor");
	//SendClientMessageEx(playerid, COLOR_GENERAL, GlobalMOTD);
	CheckVIPExpire(playerid);
	//if(Info[playerid][pVIP] >= 1) SendClientMessageEx(playerid, COLOR_VIP, VIPMOTD);
	if(gTeam[playerid] == 0){
		gTeam[playerid] = 3;
	}
	else{
		gTeam[playerid] = Info[playerid][pTeam];
	}
	SetSpawnInfo(playerid, Info[playerid][pTeam], Info[playerid][pChar], Info[playerid][pPos_x], Info[playerid][pPos_y], Info[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
	gPlayerLogged{playerid} = 1;
    SpawnPlayer(playerid);
	new ip[32];
	GetPlayerIp(playerid, ip, 32);
	if(Info[playerid][pOrder] > 0){
		format(string, sizeof(string), "{008EC1}Perfect City:{FFFFFF} %s está esperando por su compra en la tienda.",GetPlayerNameEx(playerid));
		ShopTechBroadCast(COLOR_SHOP,string);
	}
	if(Info[playerid][pVIP] >= 5 && Info[playerid][pArmsSkill] < 400){
		Info[playerid][pArmsSkill] = 401;
		SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[MODVIP]:{FFFFFF} Ahora eres nivel 5 en el trabajo Armero.");
	}
 	SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
 	WeedLogin(playerid);
 	SetPlayerToTeamColor(playerid);
	LoadPlayerVehicles(playerid);
 	new hcheck, hcheck2, name[MAX_PLAYER_NAME];
	hcheck = INVALID_HOUSE_ID;
	hcheck2 = INVALID_HOUSE_ID;
	GetPlayerName(playerid, name, sizeof(name));
	
	if(Info[playerid][pReg] > 0 && Info[playerid][pAdminZC] < 2)
	{
		TogglePlayerControllable(playerid, 0);
	    Message(playerid, COLOR_GREEN, "Se está cargando tu cuenta y los objetos, espera porfavor.");
    	SetTimerEx("descongelar", 5000, false, "i", playerid);
		SetTimerEx("SobeitCheck", 4000, 0, "i", playerid);
	}
	
	for(new i = 0; i < MAX_HOUSES; i++)
	{
  		if(!strcmp(name, HouseInfo[i][hOwner], false))
		{
   			if(hcheck != INVALID_HOUSE_ID)
			{
   		        hcheck2 = i;
			}
			else
			{
				hcheck = i;
			}
    	}
	}
	if(hcheck != INVALID_HOUSE_ID) Info[playerid][pPhousekey] = hcheck;
	if(hcheck2 != INVALID_HOUSE_ID) Info[playerid][pPhousekey2] = hcheck2;
	if(hcheck == INVALID_HOUSE_ID) return Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
	if(hcheck2 == INVALID_HOUSE_ID) return Info[playerid][pPhousekey2] = INVALID_HOUSE_ID;
	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[128];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[128];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}


public OnPlayerPressButton(playerid, buttonid)
{
	if(buttonid == JDoor1)
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen1,1417.90002441,-1554.90002441,4330.50000000,6);
        SetTimer("CloseCell1", 5000, 0);
        //print("JDOOR 1 - Moved");
    }
    if(buttonid == JDoor2)
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen2,1425.90002441,-1555.00000000,4330.50000000,6);
        SetTimer("CloseCell2", 5000, 0);
        //print("JDOOR 2 - Moved");
    }
    if(buttonid == JDoor3)
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen3,1429.50000000,-1554.80004883,4330.50000000,6);
        SetTimer("CloseCell3", 5000, 0);
        //print("JDOOR 3 - Moved");
    }
    if(buttonid == JDoor4)
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen4,1422.19995117,-1567.00000000,4330.50000000,6);
        SetTimer("CloseCell4", 5000, 0);
        //print("JDOOR 4 - Moved");
    }
    if(buttonid == JDoor5) // FIX a 6
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen6,1430.19995117,-1566.69995117,4330.50000000,6);
        SetTimer("CloseCell5", 5000, 0);
        //print("JDOOR 5 - Moved");
    }
    if(buttonid == JDoor6)
    {
        if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF}Acceso Denegado.");
        MoveDynamicObject(fen5,1414.80004883,-1566.69995117,4330.50000000,6);
        SetTimer("CloseCell6", 5000, 0);
        //print("JDOOR 6 - Moved");
    }
   	if(buttonid == courtbuttons[0])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719-10,7698.24169922,4);
		SetTimer("CloseCourtGate2", 5000, 0);
	}
	if(buttonid == courtbuttons[3])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719-10,7698.24169922,4);
		SetTimer("CloseCourtGate2", 5000, 0);
	}
	if(buttonid == courtbuttons[1])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934+10,7698.23632812,4);
		SetTimer("CloseCourtGate1", 5000, 0);
	}
	if(buttonid == courtbuttons[2])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934+10,7698.23632812,4);
		SetTimer("CloseCourtGate1", 5000, 0);
	}
    if(buttonid == FBILobbyLeftBTN[0] || buttonid == FBILobbyLeftBTN[1])
	{
	    if(Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2)
	    {
	        MoveDynamicObject(FBILobbyLeft,293.93002319,-1498.43457031,-46.13965225,4);
			SetTimer("CloseFBILobbyLeft", 2500, 0);
	    }
	    else
	    {
	        SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
	}
	if(buttonid == FBILobbyRightBTN[0] || buttonid == FBILobbyRightBTN[1])
	{
	    if(Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2)
	    {
	        MoveDynamicObject(FBILobbyRight,303.84756470,-1521.62988281,-46.13965225,4);
			SetTimer("CloseFBILobbyRight", 2500, 0);
	    }
	    else
	    {
	        SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
	}
	if(buttonid == FBIPrivateBTN[0] || buttonid == FBIPrivateBTN[1])
	{
	    if((Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2) && Info[playerid][pRank] >= 5)
	    {
	        MoveDynamicObject(FBIPrivate[0],299.29986572,-1491.75842285,-28.73300552,4);
	        MoveDynamicObject(FBIPrivate[1],299.33737183,-1496.86145020,-28.73300552,4);
			SetTimer("CloseFBIPrivate", 2500, 0);
	    }
	    else
	    {
	        SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
	}
	if(buttonid == elevator)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		else SafeDialogEx( playerid, ELEVATOR3, DIALOG_STYLE_LIST, "{008EC1}Elevador", "Helipuerto\nGarage", "Ok", "Cancelar");
	}
	if(buttonid == garagekey)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		else SafeDialogEx( playerid, ELEVATOR2, DIALOG_STYLE_LIST, "{008EC1}Elevador", "Helipuerto\nInterior", "Ok", "Cancelar");
	}
	if(buttonid == roofkey)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		else SafeDialogEx( playerid, ELEVATOR, DIALOG_STYLE_LIST, "{008EC1}Elevador", "Interior\nGarage", "Ok", "Cancelar");
	}
	if(buttonid == cctvin || buttonid == cctvout)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(cctv1,263.44921875,115.79980469,1003.61718750,4);
  MoveDynamicObject(cctv2,268.46875000,115.83691406,1003.61718750,4);
		SetTimer("CloseCCTV", 2500, 0);
	}
	if(buttonid == chiefin || buttonid == chiefout)
	{
		if((Info[playerid][pRank] < 6 && Info[playerid][pMember] == 1) || Info[playerid][pMember] != 1)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(chief1,228.0,119.50000000,1009.21875000,4);
  MoveDynamicObject(chief2,230.0,119.53515625,1009.21875000,4);
	    SetTimer("CloseChief", 2500, 0);
	}
	if(buttonid == lockerin || buttonid == lockerout)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(locker1,268.29980469,112.56640625,1003.61718750,4);
  MoveDynamicObject(locker2,263.29980469,112.52929688,1003.61718750,4);
		SetTimer("CloseLocker", 2500, 0);
	}
	if(buttonid == westout)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(westlobby1,239.71582031,115.09179688,1002.21502686,4);
		MoveDynamicObject(westlobby2,239.67968750,120.09960938,1002.21502686,4);
		SetTimer("CloseWestLobby", 2500, 0);
	}
	else if(buttonid == westin)
	{
		MoveDynamicObject(westlobby1,239.71582031,115.09179688,1002.21502686,4);
		MoveDynamicObject(westlobby2,239.67968750,120.09960938,1002.21502686,4);
		SetTimer("CloseWestLobby", 2500, 0);
	}
	else if(buttonid == eastin)
	{
	    MoveDynamicObject(eastlobby1,253.14941406,111.59960938,1002.21502686,4);
	    MoveDynamicObject(eastlobby2,253.18457031,106.59960938,1002.21502686,4);
		SetTimer("CloseEastLobby", 2500, 0);
	}
	else if(buttonid == eastout)
	{
		if(!Team_LSPD(playerid) && !Team_SAEM(playerid))
		{
			SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
			return 1;
		}
 		MoveDynamicObject(eastlobby1,253.14941406,111.59960938,1002.21502686,4);
 		MoveDynamicObject(eastlobby2,253.18457031,106.59960938,1002.21502686,4);
		SetTimer("CloseEastLobby", 2500, 0);
	}
	return false;
}


//*******************PaintBall*******************
PaintballMainMenu(playerid)
{
	new string[128];
	format(string,sizeof(string),"Elegir Arena\nComprar Fichas");
	SafeDialogEx(playerid,PB_MENU,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Menu:",string,"Ok","Salir");
}

PaintballArenaSelection(playerid)
{
	new string[256];
	format(string,sizeof(string),"DeathMatch Arena \t\t Jugadores:(%d/20)\nDeathMatch Arena 2 \t\t Jugadores:(%d/20)\nTeam DeathMatch \t\t Jugadores:(%d)",TotalDM, TotalDM2, TotalTDM);
	SafeDialogEx(playerid,PB_SARENA,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elige una Arena:",string,"Ok","Atrás");
}

PaintballTokenBuyMenu(playerid)
{
	new string[150];
	format(string,sizeof(string),"{FFFFFF}Cuantas fichas deseas comprar?\n\nCada ficha cuesta $%d. Actualmente tienes {AA3333}%d{FFFFFF} fichas.", 20, Info[playerid][pPaintTokens]);
	SafeDialogEx(playerid,PB_FICHAS,DIALOG_STYLE_INPUT,"{008EC1}Paintball Arena - Fichas:",string,"Comprar","Atrás");
	return 1;
}

RentaMenu(playerid)
{
    ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_INPUT,"{008EC1}Renta de motos","{FFFFFF}Ingresa los minutos que quieres tener rentada la moto\n5$ por minuto", "Rentar", "Cancelar");
}

CorreoMenu(playerid)
{
    ShowPlayerDialog(playerid,DIALOG_CORREO,DIALOG_STYLE_INPUT,"{008EC1}4.- Escribe tu Correo Electrónico:","{FFFFFF}Ahora necesitamos saber tú correo electrónico para que en un futuro puedas recibir actualizaciones del servidor o recuperar tu contraseña\n\nIngresa un correo electrónico {00A900}Válido:","Aceptar","Atrás");
}
    
SaldoMenu(playerid)
{
    new string[256];
    format(string, sizeof(string), "{FFFFFF}Ingrese la cantidad de saldo que quiera adquirir, máximo 500 y mínimo 10 por saldo\n\nEjemplo: 30 = 30$ de saldo\nActualmente cuentas con {00B500}%d{FFFFFF} de saldo", Info[playerid][pSaldo]);
    SafeDialogEx(playerid, SALDO, DIALOG_STYLE_INPUT,"{008EC1}Recarga de Saldo",string, "Recargar", "Atras");
}

PaintballScoreboard(playerid)
{
	if(GetPVarInt(playerid, "IsInArena") == 0) { return 1; }
	new titlestring[128];
	new string[2048];
 	foreach(Player, p)
  	{
		if(GetPVarInt(p, "ArenaMode") == 1)
		{
			format(titlestring,sizeof(titlestring),"(DM) Scoreboard - Players: (%d)",TotalDM);
			format(string,sizeof(string),"%s(ID: %d) %s - (Puntos: %d) (Muertes: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],Info[p][pDeaths],GetPlayerPing(p));
  		}
		if(GetPVarInt(p, "ArenaMode") == 3)
		{
			format(titlestring,sizeof(titlestring),"(DM) Scoreboard - Players: (%d)",TotalDM2);
			format(string,sizeof(string),"%s(ID: %d) %s - (Puntos: %d) (Muertes: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],Info[p][pDeaths],GetPlayerPing(p));
  		}
		if(GetPVarInt(p, "ArenaMode") == 2)
		{
		    format(titlestring,sizeof(titlestring),"(TDM) Scoreboard - Rojo: (%d) - Azul: (%d)",TRedKills,TBlueKills);
		    switch(Info[p][pPaintTeam])
		    {   // 1: Red Team - 2: // Blue Team
		        case 1: format(string,sizeof(string),"%s(ID: %d) ({FF0000}Equipo Rojo{FF0000}) %s - (Puntos: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],GetPlayerPing(p));
		        case 2: format(string,sizeof(string),"%s(ID: %d) ({0000FF}Equipo Verde{0000FF}) %s - (Puntos: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],GetPlayerPing(p));
		    }
		}
	}
	SafeDialogEx(playerid,PBARENASCORES,DIALOG_STYLE_LIST,titlestring,string,"Actualizar","Cerrar");
	return 1;
}

SpawnPaintballArena(playerid)
{
    ResetPlayerWeapons(playerid);
	switch(GetPVarInt(playerid, "ArenaMode")) // Deathmatch
	{
	    case 1:
	    {
			Info[playerid][pVW] = 700; Info[playerid][pInt] = 10;
     		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
			SetPlayerInterior(playerid, Info[playerid][pInt]);
			new rand = Random(1,5);
			switch (rand)
			{
	    		case 1:
	    		{
	       			SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
 					SetPlayerFacingAngle(playerid, 116.4942);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    		}
	    		case 2:
				{
		   			SetPlayerPos(playerid, -1126.8611,1020.4957,1345.5922);
 					SetPlayerFacingAngle(playerid, 286.6877);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 3:
				{
		   			SetPlayerPos(playerid, -1087.2578,1094.6459,1343.9775);
 					SetPlayerFacingAngle(playerid, 205.5335);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 4:
				{
		   			SetPlayerPos(playerid, -981.2971,1019.2087,1344.6238);
 					SetPlayerFacingAngle(playerid, 51.9989);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			}
 			SetHP(playerid, 100);
 			SetPlayerArmour(playerid, 50);
 			GivePlayerValidWeapon(playerid, 29);
 			return 1;
		}
		case 3: // Deathmatch 2
		{
			Info[playerid][pVW] = 800; Info[playerid][pInt] = 10;
			SetPlayerInterior(playerid, Info[playerid][pInt]);
			SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
			new rand = Random(1,5);
			switch (rand)
			{
	    		case 1:
	    		{
	    	   		SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
 					SetPlayerFacingAngle(playerid, 116.4942);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    		}
	    		case 2:
				{
			   		SetPlayerPos(playerid, -1126.8611,1020.4957,1345.5922);
 					SetPlayerFacingAngle(playerid, 286.6877);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 3:
				{
			   		SetPlayerPos(playerid, -1087.2578,1094.6459,1343.9775);
 					SetPlayerFacingAngle(playerid, 205.5335);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 4:
				{
			   		SetPlayerPos(playerid, -981.2971,1019.2087,1344.6238);
 					SetPlayerFacingAngle(playerid, 51.9989);
 					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			}
 			SetHP(playerid, 100);
 			SetPlayerArmour(playerid, 50);
 			GivePlayerValidWeapon(playerid, 290);
 			return 1;
		}
		case 2: // Team Deathmatch
		{
	    	Info[playerid][pVW] = 600; Info[playerid][pInt] = 10;
			SetPlayerInterior(playerid, Info[playerid][pInt]);
 			SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
 			SetHP(playerid, 100);
 			SetPlayerArmour(playerid, 50);
 			GivePlayerValidWeapon(playerid, 29);
        	switch(Info[playerid][pPaintTeam])
        	{
        	    case 1: //red
			    {
					SetPlayerPos(playerid, -1132.0417,1041.1082,1345.7397);
					SetPlayerFacingAngle(playerid, 116.4942);
					SetPlayerColor(playerid, PAINTBALL_TEAM_RED);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 2: // Blue
				{
					SetPlayerPos(playerid, -974.1334,1077.5168,1344.9895);
					SetPlayerFacingAngle(playerid, 351.7867);
			    	SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE);
			    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			}
		}
	}
	return 1;
}

JoinPaintballArena(playerid, modo)
{
	new string[256];

	new Float:oldX, Float:oldY, Float:oldZ, Float:oldHealth, Float:oldArmor;
	GetPlayerPos(playerid, oldX, oldY, oldZ);
	SetPVarFloat(playerid, "pbOldX", oldX);
	SetPVarFloat(playerid, "pbOldY", oldY);
	SetPVarFloat(playerid, "pbOldZ", oldZ);
	GetPlayerHealth(playerid,oldHealth);
	GetPlayerArmour(playerid,oldArmor);
	SetPVarInt(playerid, "pbOldInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "pbOldVW", GetPlayerVirtualWorld(playerid));
	SetPVarFloat(playerid, "pbOldHealth", oldHealth);
	SetPVarFloat(playerid, "pbOldArmor", oldArmor);
	pTazer[playerid] = 0; // Reset Tazer
	switch(modo)
	{
		case 1: // DM
		{
		    if(Info[playerid][pPaintTokens] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{008EC1}[Paintball Arena]:{5ABAFF} Necesitas 3 fichas para entrar a está Arena.");
            if(TotalDM == 20) return SendClientMessageEx(playerid, COLOR_GRAD2, "{008EC1}[Paintball Arena]:{5ABAFF} La Arena está FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 1);
	        SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
 			SetPlayerFacingAngle(playerid, 116.4942);
 			SetHP(playerid, 100);
 			SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 700);
 			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string,sizeof(string),"{008EC1}[Paintball Arena]:{5ABAFF} %s se ha unido al Paintball Arena.", GetPlayerNameEx(playerid));
	        SendPaintballArenaMessage(1,COLOR_YELLOW,string);
	        SendClientMessageEx(playerid, COLOR_WHITE, "[Comandos Paintball Arena]: /fichas - /armas - /salirarena - /arena - /cequipo - /scores.");
			TotalDM++;
		}
		case 2: // CHOOSE TEAM
		{
		    if(Info[playerid][pPaintTokens] < 8) return SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Necesitas 8 fichas para entrar a está Arena");
		    SafeDialogEx(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
		}
		case 3: // JOIN TEAM
		{
		    if(TotalTDM == 32) return SendClientMessageEx(playerid, COLOR_GRAD2, "{008EC1}[Paintball Arena]:{5ABAFF} La Arena esta FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 2);

			SendClientMessageEx(playerid, COLOR_WHITE, "[Comandos Paintball Arena]: /fichas - /armas - /salirarena - /arena - /cequipo - /scores.");
			switch(Info[playerid][pPaintTeam])
			{
				case 1: //RED
		    	{
		        	format(string,sizeof(string),"{008EC1}[Paintball Arena]:{5ABAFF} %s se ha unido al Paintball Arena - Equipo Rojo!", GetPlayerNameEx(playerid));
	        		SendPaintballArenaMessage(2,COLOR_YELLOW,string);
		        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        	SetPlayerPos(playerid,-1132.0417,1041.1082,1345.7397);
		        	SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 600);
		        	SetPlayerColor(playerid, PAINTBALL_TEAM_RED); SetHP(playerid, 100);
		        	SetPlayerArmour(playerid, 50);
		        	PlayersRed++;
		    	}
		    	case 2: //BLUE
		    	{
		       		format(string,sizeof(string),"{008EC1}[Paintball Arena]:{5ABAFF} %s se ha unido al Paintball Arena - Equipo Azul!", GetPlayerNameEx(playerid));
	        		SendPaintballArenaMessage(2,COLOR_YELLOW,string);
		        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        	SetPlayerPos(playerid,-974.1334,1077.5168,1344.9895);
		        	SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 600);
		        	SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE); SetHP(playerid, 100);
		        	SetPlayerArmour(playerid, 50);
		        	PlayersBlue++;
		    	}
			}
		}
		case 4: // CTF
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Proximamente, Nuevo modo de juego: Captura la Bandera.");
		}
		case 5: // DM2
		{
		    if(Info[playerid][pPaintTokens] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{008EC1}[Paintball Arena]:{5ABAFF} Necesitas 3 fichas para entrar a está Arena");
            if(TotalDM2 == 20) return SendClientMessageEx(playerid, COLOR_GRAD2, "{008EC1}[Paintball Arena]:{5ABAFF} La Arena 2 está FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 3);
			ResetPlayerWeapons(playerid);
	        SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
 			SetPlayerFacingAngle(playerid, 116.4942);
 			SetHP(playerid, 100);
 			SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 800);
 			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string,sizeof(string),"{008EC1}[Paintball Arena]:{5ABAFF}  %s se ha unido al Paintball Arena!", GetPlayerNameEx(playerid));
	        SendPaintballArenaMessage(1,COLOR_YELLOW,string);
	        SendClientMessageEx(playerid, COLOR_YELLOW, "{008EC1}[Paintball Arena]:{5ABAFF} Te regalamos por tu entrada un MP5, cuando mueras usa /armas para ver las armas disponibles.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "[Comandos Paintball Arena]: /fichas - /armas - /salirarena - /arena - /cequipo - /scores.");
			TotalDM2++;
		}
	}
	return 1;
}

LeavePaintballArena(playerid)
{
    switch(GetPVarInt(playerid, "ArenaMode"))
	{
        case 1:{
            TotalDM -= 1;
        }
        case 2:{
        	TotalTDM -= 1;
        }
        case 3:{
        	TotalDM2 -= 1;
        }
    }
    switch(Info[playerid][pPaintTeam])
	{
        case 1:{
			PlayersRed -= 1;
		}
		case 2:{
		    PlayersBlue -= 1;
		}
    }
    new string[128];
	format(string,sizeof(string),"{008EC1}[Paintball Arena]:{5ABAFF} %s ha dejado el Paintball Arena!", GetPlayerNameEx(playerid));
	SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_YELLOW, string);
	Info[playerid][pKills] = 0;
    Info[playerid][pDeaths] = 0;
	SetPlayerWeapons(playerid);
  	SetPlayerColor(playerid,TEAM_HIT_COLOR);
  	SetPlayerSkin(playerid, Info[playerid][pChar]);
    LoadObjects(playerid);
	SetPVarInt(playerid, "ArenaMode", 0);
	SetPVarInt(playerid, "IsInArena", 0);
	SetPlayerPos(playerid, GetPVarFloat(playerid, "pbOldX"), GetPVarFloat(playerid, "pbOldY"), GetPVarFloat(playerid, "pbOldZ"));
	SetHP(playerid, GetPVarFloat(playerid, "pbOldHealth"));
	SetPlayerArmour(playerid, GetPVarFloat(playerid, "pbOldArmor"));
	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "pbOldVW"));
	SetPlayerInterior(playerid, GetPVarInt(playerid, "pbOldInt"));
	Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
	Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
    Info[playerid][pPaintTeam] = 0;
}

PaintballDisconnect(playerid)
{
    switch(GetPVarInt(playerid, "ArenaMode"))
    {
        case 1:
        {
            TotalDM -= 1;
        }
        case 2:
        {
        	TotalTDM -= 1;
        }
        case 3:{
        	TotalDM2 -= 1;
        }
    }
    switch(Info[playerid][pPaintTeam])
    {
        case 1:
		{
			PlayersRed -= 1;
		}
		case 2:
		{
		    PlayersBlue -= 1;
		}
    }
	Info[playerid][pKills] = 0;
    Info[playerid][pDeaths] = 0;
  	SetPlayerSkin(playerid, Info[playerid][pChar]);
	SetPlayerPos(playerid, GetPVarFloat(playerid, "pbOldX"), GetPVarFloat(playerid, "pbOldY"), GetPVarFloat(playerid, "pbOldZ"));
	SetHP(playerid, GetPVarFloat(playerid, "pbOldHealth"));
	SetPlayerArmour(playerid, GetPVarFloat(playerid, "pbOldArmor"));
	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "pbOldVW"));
	SetPlayerInterior(playerid, GetPVarInt(playerid, "pbOldInt"));
	Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
	Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
    Info[playerid][pPaintTeam] = 0;
}

PaintballSwitchTeam(playerid)
{
	new string[128];
	format(string,sizeof(string),"{FF0000}Equipo Rojo (%d/12)\n{0000FF}Equipo Azul (%d/12)",PlayersRed,PlayersBlue);
	SafeDialogEx(playerid,PB_CHOOSE,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elegir Equipo:",string,"Unirse","Cancelar");
}

// EMS
function KillEMSQueue(playerid)
{
    DeletePVar(playerid, "Injured");
    SetPVarInt(playerid, "FirstSpawn", 1);
    DeletePVar(playerid, "EMSAttempt");
	DeletePVar(playerid, "MedicCall");
	return 1;
}

function SendEMSQueue(playerid,type)
{
	switch(type)
	{
		case 1:
		{
		    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
	  		SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
			SetPVarInt(playerid, "EMSAttempt", -1);
			ClearAnimations(playerid);
            ApplyAnimation(playerid,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);

			if(GetPlayerInterior(playerid) > 0)
			{
			    LoadObjects(playerid);
			}
			GameTextForPlayer(playerid, "~r~¡Estas Herido!~n~~g~/servicios medicos", 5000, 3);
			SetHP(playerid, 100);
			SetPlayerArmour(playerid,0);
			SetPVarInt(playerid,"MedicCall",1);
		}
		case 2:
		{
		    SetPVarInt(playerid,"EMSAttempt", 2);
		 	ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.0, 0, 1, 1, 1, 0, 1);
			SetHP(playerid, 100);
			SetPlayerArmour(playerid,0);
		}
	}
	return 1;
}
SafeDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[]){
    CurrentDialog[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = fOffsetX;
    PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = fOffsetY;
    PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = fOffsetZ;
    PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = fRotX;
    PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = fRotY;
    PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = fRotZ;

    PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = fScaleX;
    if(fScaleX < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 0.1;
 	else if(fScaleX > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1.5;

    PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = fScaleY;
 	if(fScaleY < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 0.1;
 	else if(fScaleY > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1.5;

 	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = fScaleZ;
 	if(fScaleZ < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 0.1;
 	else if(fScaleZ > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1.5;

	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
	SendClientMessageEx(playerid, -1, "{A2DC35}[TOYS]:{FFFFFF} Finalizaste de editar este objeto. Usa{2F99B5} /toys {FFFFFF}si quieres editar otro objeto.");
	slotselection[playerid] = -1;
	Editing[playerid] = 0;
    return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
	new idcar = GetPlayerVehicleID(playerid),string[128];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(!isnull(inputtext))
	{
	    if(strfind(inputtext, "%s", true) != -1)
	    {
			format(string, sizeof(string), "Perfect City: %s (ID %d) es un posible dialog-exploiting, intenta enviar string en blanco mediante diálogos.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast(COLOR_GENERAL, string, 2);
  			format(string, sizeof(string), "%s a intentado insertar un falso string en un diálogo. [Exploit]", GetPlayerNameEx(playerid));
  			Log("logs/reportbug.log", string);
  			format(string, sizeof(string), "[AdmCmd]: %s ha sido auto expulsado, razón: Teleport.", GetPlayerNameEx(playerid), playerid);
			ABroadCast(COLOR_GENERAL, string, 0 );
			Kick(playerid);
	        return 1;
		}
	}
	if(dialogid == REG_NAC)
	{
 		if(!response)
	    {
     		SafeDialogEx(playerid,REG_NAC,DIALOG_STYLE_LIST,"{008EC1}3.- Seleccionar tu Nacionalidad:","Norteamericana\nCentroamericana\nSudamericana\nEuropea\nAsiática\nÁrabe\nAfricana\nOceánica","Elegir","");
	        return 1;
		}
	    if(listitem == 0)
	    {
	        Info[playerid][pOrigin] = 1;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Norteamericana{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
  		if(listitem == 1)
	    {
	        Info[playerid][pOrigin] = 2;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Centroamericana{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);

		}
		if(listitem == 2)
	    {
	        Info[playerid][pOrigin] = 3;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Sudamericana{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
		if(listitem == 3)
	    {
	        Info[playerid][pOrigin] = 4;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Europea{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
		if(listitem == 4)
	    {
	        Info[playerid][pOrigin] = 5;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Asiática{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
		if(listitem == 5)
	    {
	        Info[playerid][pOrigin] = 6;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Árabe{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
		if(listitem == 6)
	    {
	        Info[playerid][pOrigin] = 7;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Africana{FFFFFF}; espera un momento porfavor..");
			CorreoMenu(playerid);
		}
		if(listitem == 7)
	    {
	        Info[playerid][pOrigin] = 8;
	        SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFFFF}Bien, elegiste tú nacionalidad {5ABAFF}Oceánica{FFFFFF}; espera un momento porfavor..");
			/*GameTextForPlayer(playerid, "~G~Guardando tus Datos", 3000, 1);
			SetTimerEx("RegMsn", 6000, false, "i", playerid);*/
			CorreoMenu(playerid);
		}
	}
	if(dialogid == DIALOG_SERVICIOS)
	{
	    if(!response)
	    {
     		SendClientMessage(playerid, -1, "* Has cancelado el diálogo.");
	        return 1;
		}
		if(listitem == 0)
		{
		    if(Medics < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* No hay médicos ahora para usar este servicio.");
			if(GetPVarInt(playerid, "Injured") == 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "* No estás herido, no puedes llamar a médicos ahora.");
				return 1;
			}
			new zone[MAX_ZONE_NAME];
			GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
			SetPVarInt(playerid, "EMSAttempt", 1);
			SendClientMessageEx(playerid, COLOR_WHITE, "LSMD ha sido informado de su ubicación actual y están en camino.");
			format(string, sizeof(string), "* Central: Reportan a un tal (%d) %s que puede estar herido en %s, se requiere emegercia inmediata.",playerid, GetPlayerNameEx(playerid), zone);
			SendRadioMessage(4, TEAM_MED_COLOR, string);
			Info[playerid][pServiceTime] = 30;
			return 1;
		}
		if(listitem == 1)
		{
			if(TaxiDrivers < 1)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "* En este momento no se encuentran disponibles taxistas, intenta más tarde.");
				return 1;
			}
			if(TransportDuty[playerid] > 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ya llamaste un taxi.");
				return 1;
			}
			format(string, sizeof(string), "** %s necesita un taxista en su posición - usa /aceptar taxi para aceptar la llamada.", GetPlayerNameEx(playerid));
			MessageTaxiDriver(9, TEAM_AZTECAS_COLOR, string);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has solicitado un taxista, espera por una respuesta.");
			TaxiCall = playerid;
			Info[playerid][pServiceTime] = 30;
			return 1;
		}
		if(listitem == 2)
		{
			if(Medics < 1)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "En este momento no se encuentran médicos disponibles, intenta más tarde.");
				return 1;
			}
			format(string, sizeof(string), "** %s necesita un médico - usa /aceptar medico para aceptar la llamada.", GetPlayerNameEx(playerid));
			SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Llamaste a un médico espera a una llamada.");
			MedicCall = playerid;
			Info[playerid][pServiceTime] = 30;
			return 1;
		}
		if(listitem == 3)
		{
			format(string, sizeof(string), "** %s necesita un mecánico - usa /aceptar mecanico para aceptar la llamada.", GetPlayerNameEx(playerid));
			SendFamilyMessage(6, TEAM_AZTECAS_COLOR, string);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has solicitado un mecanico, espera por una respuesta.");
			MechanicCall = playerid;
			Info[playerid][pServiceTime] = 30;
			return 1;
		}
	}
	if(dialogid == DIALOG_AYUNTA)
	{
	    if(!response)
	    {
	        SendClientMessage(playerid, -1, "* Has cancelado el diálogo.");
	        return 1;
		}
		if(listitem == 0)
		{
		    if (Info[playerid][pWantedLevel] > 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienes órden de arresto, te prohibieron la adquisición de licencias.");
				return 1;
			}
			else
			{
				SafeDialogEx(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "{A2DC35}Selecciona el tipo de licencia que deseas.", "Licencia de Conducción ($1,200)\r\nLicencia de Navegación ($2,600)\r\nLicencia de Vuelo ($5,000)", "Comprar", "Atrás");
			}
		}
	    if(listitem == 1)
		{
		    new vstring[128];
		    for(new i; i < MAX_PLAYERVEHICLES; i++)
			{
				if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
					format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else
					format(vstring, sizeof(vstring), "%s\nVacío", vstring);
			}
			SafeDialogEx(playerid, SELLCAR, DIALOG_STYLE_LIST, "{008EC1}Venta de Vehiculo", vstring, "Vender", "Atrás");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Si vendes el vehículo te pagarán la mitad del precio de lo que te habia costado por ser de segunda mano");
		}
		if(listitem == 2)
		{
      		ShowPlayerDialog(playerid, PLANM, DIALOG_STYLE_MSGBOX, "{008EC1}Seguro Médico", "{FFFFFF}Estás a punto de adquirir un plan médico, tiene un costo de {72DC00}$500{FFFFFF} y se te descuenta {DE1600}50{FFFFFF} dólares por PayDay\n\n{F21646}NOTA:{FFFFFF} Recuerde que al tener plan médico no se le cobrará por la atención médica que reciba en el hospital.","Adquirir","Remover");
		}
		return 1;
	}
	if(dialogid == MAPINTERES)
     {
            	if(!response)
     			{
            		SendClientMessage(playerid, -1, "* Has cancelado la el {FF4142}mini-mapa.");
        			return 1;
        		}
				if(listitem == 0)
				{
				    SetPlayerCheckpoint(playerid, 1498.5365,-1580.9977,13.5498, 2);
				    SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 1)
				{
				    SetPlayerCheckpoint(playerid, 1187.2222, -1323.0615, 12.5588, 2);
				    SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 2)
				{
				    SetPlayerCheckpoint(playerid, 1481.8735, -1742.4076, 12.5452, 2);
				    SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 3)
				{
				    SetPlayerCheckpoint(playerid, 1831.5500, -1842.5154, 12.5772, 2);
				    SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 4)
				{
					SetPlayerCheckpoint(playerid, 1352.6233, -1756.7639, 12.5059, 2);
					SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 5)
				{
					SetPlayerCheckpoint(playerid, 1829.6061, -1682.7268, 12.5408, 2);
					SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 6)
				{
					SetPlayerCheckpoint(playerid, 2090.2244, -1807.4121, 12.5332, 2);
					SendClientMessage(playerid, -1, "{5ABAFF}Se marcó la ubicacion en el mini {FF4142}mapa");
				}
				if(listitem == 7)
				{
				    SafeDialogEx(playerid, JOBFINDMENU, DIALOG_STYLE_LIST, "{008EC1}Buscar - Trabajos disponibles","Pizzero\nCamionero\nTaxista\nJardinero\nLeñador\nGranjero\nTraficante de drogas", "Ok", "Cancelar");
				}
				if(listitem == 8)
				{
				    SafeDialogEx(playerid, FINDCONCE, DIALOG_STYLE_LIST, "{008EC1}Mapa -  Concesionarios","Gama Alta\nMotos\nGama Media - Baja\nBotes\nAviones", "Ok", "Cancelar");
				}
     			return 1;
	}
//BOOMBOX DIALOGS
	if(dialogid == DIALOG_BOOMBOX)
    {
    	if(!response)
     	{
            SendClientMessage(playerid, -1, "* Has cancelado la selección de emisoras de radio.");
        	return 1;
        }
		switch(listitem)
  		{
    		case 0:
      		{
      		    ShowPlayerDialog(playerid,DIALOG_BOOMBOX1,DIALOG_STYLE_LIST,"Lista de música Jazz","Smooth Jazz\nJazz FM","Sintonizar","Cancelar");
            }
            case 1:
            {
                ShowPlayerDialog(playerid,DIALOG_BOOMBOX2,DIALOG_STYLE_LIST,"Lista de música Pop","Power FM\nDEFJAY.COM","Sintonizar","Cancelar");
            }
            case 2:
            {
                ShowPlayerDialog(playerid,DIALOG_BOOMBOX3,DIALOG_STYLE_LIST,"Lista de música Rap","Rap City Radio\nFlow 103 Rap","Sintonizar","Cancelar");
            }
            case 3:
            {
                ShowPlayerDialog(playerid,DIALOG_BOOMBOX4,DIALOG_STYLE_LIST,"Lista de música Hip Hop","Hot 108 Jamz\nBlackBeats.FM","Sintonizar","Cancelar");
			}
			case 4:
			{
			    ShowPlayerDialog(playerid,DIALOG_BOOMBOX5,DIALOG_STYLE_LIST,"Lista de música Rock","Radio Paradise\n181.FM","Sintonizar","Cancelar");
			}
			case 5:
			{
			    ShowPlayerDialog(playerid,DIALOG_BOOMBOX6,DIALOG_STYLE_LIST,"Lista de música Reggaeton","Reggaeton 24/7\nReggaeton Stereo","Sintonizar","Cancelar");
			}
			case 6:
			{
			    if(Info[playerid][pLevel] < 3) return SendClientMessage(playerid, -1, "* Debes ser mínimo nivel 3 para usar esta opción.");
			    ShowPlayerDialog(playerid,DIALOG_BOOMBOX7,DIALOG_STYLE_INPUT, "{008EC1}Boombox URL", "Introduzca la URL del MP3 o radio on-line que desee escuchar", "Continuar", "Salir");
			}
			case 7:
			{
                if(GetPVarType(playerid, "BBArea"))
			    {
			        foreach(Player, i)
					{
			            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
			            {
			                StopStream(i);
						}
					}
			        DeletePVar(playerid, "BBStation");
				}
				SendClientMessage(playerid, -1, "* Has apagado la Boombox");
			}
        }
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX1)//JAZZ
	{
	    if(!response)
	    {
     		ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179772", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179772");
				}
			}
		 	if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=119894", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=119894");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX2)//POP
	{
	    if(!response)
	    {
            ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=158237", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=158237");
				}
			}
			if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=81263", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=81263");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX3)//RAP
	{
	    if(!response)
	    {
     		ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
        			foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181500", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181500");
    			}
   			}
   			if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=281301", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=281301");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX4)//HIP HOP
	{
	    if(!response)
	    {
     		ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99188676", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99188676");
				}
			}
			if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=137513", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=137513");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX5)//ROCK
	{
	    if(!response)
	    {
     		ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181110", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181110");
				}
			}
   			if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181395", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181395");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX6)//REGGAETON
	{
	    if(!response)
	    {
	       ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras de radio","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=372869", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=372869");
				}
			}
   			if(listitem == 1)
            {
                if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=98237", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=98237");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BOOMBOX7)//SET URL
	{
		if(response == 1)
		{
		    if(isnull(inputtext))
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "*No has introducido ninguna URL." );
		        return 1;
		    }
		    if(strlen(inputtext))
		    {
		        if(GetPVarType(playerid, "PlacedBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, inputtext, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "BBStation", inputtext);
				}
			}
		}
		else
		{
		    return 1;
		}
	}
	//***************
	if(dialogid == MPSPAYTICKETS)
	{
	    if(response)
	    {
			new
				szMessage[128];

			if(Info[playerid][pWantedLevel] != 0)
			{
				format(szMessage, sizeof(szMessage), "%s intenta pagar multas y es buscado por la policía - Nivel de búsqueda: %i.", GetPlayerNameEx(playerid), Info[playerid][pWantedLevel]);
				SendRadioMessage(1, TEAM_RADIO_COLOR, szMessage);
				SendRadioMessage(2, TEAM_RADIO_COLOR, szMessage);
				return SendClientMessageEx(playerid, COLOR_YELLOW, "La policía ha dado comunicado que usted está buscado, y están en camino.");
			}
			if(PlayerVehicleInfo[playerid][listitem][pvTicket])
			{
				Tax += PlayerVehicleInfo[playerid][listitem][pvTicket];
				format(szMessage, sizeof(szMessage), "Pagaste la multa de $%d de tu %s.", PlayerVehicleInfo[playerid][listitem][pvTicket], VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400]);
				SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
				Bought(playerid, PlayerVehicleInfo[playerid][listitem][pvTicket]);
				PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
			}
			else if(PlayerVehicleInfo[playerid][listitem][pvImpounded])
			{

				new
					iCost = (PlayerVehicleInfo[playerid][listitem][pvPrice] / 40) + PlayerVehicleInfo[playerid][listitem][pvTicket] + (Info[playerid][pLevel] * 2);

				if(GetPlayerCash(playerid) < iCost)
				{
					return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficiente dinero para pagar la multa.");
				}

				format(szMessage, sizeof(szMessage), "Liberaste tu %s por $%i.", VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400], iCost);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
				SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Tu auto se encuentra en el depósito municipal, puedes abrir la reja usando /deposito.");
				GivePlayerCash(playerid, -iCost);
				Tax += iCost;
				PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
				PlayerVehicleInfo[playerid][listitem][pvPosX] = 1655.4379;
				PlayerVehicleInfo[playerid][listitem][pvPosY] = -1829.5668;
				PlayerVehicleInfo[playerid][listitem][pvPosZ] = 13.2677;
				PlayerVehicleInfo[playerid][listitem][pvPosAngle] = 91.6165;
				PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
				PlayerVehicleInfo[playerid][listitem][pvVW] = 0;
                ++PlayerCars;
				PlayerVehicleInfo[playerid][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
				SetPlayerVirtualWorld(PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvVW]);
    			VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = PlayerVehicleInfo[playerid][listitem][pvFuel];
				if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);
				LoadPlayerVehicleMods(playerid, listitem);
			}
			else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Este coche, o bien no existe, o no es necesario liberar o tiene sus multas pagadas.");
	    }
		return 1;
	}
	else if(dialogid == DIALOG_CDBUY)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
		{
		    TogglePlayerControllable(playerid, 1);
			SendClientMessageEx(playerid,COLOR_GRAD2,"{A2DC35}[INFO]:{FFFFFF} Necesitas estar en el vehículo que desea comprar.");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		new v = GetCarDealershipVehicleId(vehicleid);
		new d = GetCarDealershipId(vehicleid);
		if(response)
		{
		    if(carsforplayer[playerid] == 15) return SendClientMessageEx(playerid,COLOR_WHITE,"{A2DC35}[INFO]:{FFFFFF} Tienes 15 coches liberados, primero guarda uno para comprar otro.");
            if(CDSInfo[d][cdVehicleSpawn][0] == 0.0 && CDSInfo[d][cdVehicleSpawn][1] == 0.0 && CDSInfo[d][cdVehicleSpawn][2] == 0.0)
            {
				SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} El propietario de este Concesionario no ha configurado completamente los puntos de spawn de coches.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }
            new playervehicleid = GetPlayerFreeVehicleId(playerid);
            new carsamount = VehicleCount(playerid);
            if((Info[playerid][pVIP] == 0) && carsamount >= 3)
			{
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, usuarios normales sólo pueden tener 3 coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
			}
            if(Info[playerid][pVIP] == 1 && carsamount >= 5)
            {
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, {FFFF00}BRONCEVIP{FFFFFF} sólo puede tener 5 coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
            if(Info[playerid][pVIP] == 2 && carsamount >= 8)
            {
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, {FFFF00}SILVERVIP{FFFFFF} sólo puede tener 8 coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
            if(Info[playerid][pVIP] == 3 && carsamount >= 10)
            {
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, {FFFF00}GOLDVIP{FFFFFF} sólo puede tener 10 coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
            if(Info[playerid][pVIP] == 4 && carsamount >= 12)
            {
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, {FFFF00}PLATINUMVIP{FFFFFF} sólo puede tener 12 coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
		    if(playervehicleid == -1)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Este jugador no puede tener más coches.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
		    }
		    new randcolor1 = Random(0, 126);
		    new randcolor2 = Random(0, 126);
		    TogglePlayerControllable(playerid, 1);
		    new cost;
		    if(Info[playerid][pVIP] < 1)
            {
                cost = CDSInfo[d][cdVehicleCost][v];
	            if(GetPVarInt(playerid, "Cash") < CDSInfo[d][cdVehicleCost][v])
	            {
					SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente para comprar este coche.");
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
					return 1;
	            }
                format(string, sizeof(string), "{A2DC35}[CONCE]:{FFFFFF} Gracias por comprar en %s.", CDSInfo[d][cdMessage]);
		        SendClientMessageEx(playerid, COLOR_GRAD1, string);
		        SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-CDSInfo[d][cdVehicleCost][v]);
		        CDSInfo[d][cdTill] += ( CDSInfo[d][cdVehicleCost][v] * 40 ) / ( 100 );
	        }
	        else
	        {
				cost = ( CDSInfo[d][cdVehicleCost][v] * 80 ) / ( 100 );
	            if(GetPVarInt(playerid, "Cash") < cost)
	            {
					SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente para comprar este coche.");
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
					return 1;
	            }

                format(string, sizeof(string), "{A2DC35}[CONCE]:{FFFFFF} Gracias por comprar en %s.", CDSInfo[d][cdMessage]);
		        SendClientMessageEx(playerid, COLOR_GRAD1, string);
		        SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash") - cost );
				CDSInfo[d][cdTill] += cost;
     		}
            new car = CreatePlayerVehicle(playerid, playervehicleid, CDSInfo[d][cdVehicleModel][v], CDSInfo[d][cdVehicleSpawn][0], CDSInfo[d][cdVehicleSpawn][1], CDSInfo[d][cdVehicleSpawn][2], CDSInfo[d][cdVehicleSpawn][3], randcolor1, randcolor2, cost);
            SetPlayerPos(playerid, CDSInfo[d][cdVehicleSpawn][0], CDSInfo[d][cdVehicleSpawn][1], CDSInfo[d][cdVehicleSpawn][2]+2);
			SetTimerEx("PutPlayerInVeh", 2000, 0, "dd", playerid, car);
            SavecDealership(d);
		}
		else
		{
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
			return 1;
		}
	}
	else if(dialogid == DIALOG_CDEDIT)
	{ //Concesionario
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0)
			{
				format(string, sizeof(string),"Por favor, escriba la identificación del modelo del nuevo vehículo.");
		        SafeDialogEx(playerid,DIALOG_CDNEWVEH,DIALOG_STYLE_INPUT,"{008EC1}Advertencia:",string,"Ok","Cancelar");
			}
			else if(listitem == 1) // My Vehicles
			{
				new vehicles;
                for(new i=0; i<MAX_DEALERSHIPVEHICLES; i++)
	            {
					if(CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleModel][i] != 0)
					{
						vehicles++;
		                format(string, sizeof(string), "Vehiculo %d| Nombre: %s | Precio: %d.",i+1,GetVehicleName(CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][i]),CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleCost][i]);
		                SendClientMessageEx(playerid, COLOR_WHITE, string);
					}
				}
				if(vehicles)
				{
				    SafeDialogEx(playerid, DIALOG_CDEDITCARS, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:", " Elija un vehículo para editar:", "Editar", "Atrás");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Este Concesionario no tiene ningún coche.");
				}
			}
			else if(listitem == 2) // Upgrade
			{
				new listitems[] = "1 Vehicle Spawn\n2 Radio\n3 Nombre del Negocio";
			    SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige y continua.", listitems,"Ok","Cancelar");
			}
			else if(listitem == 3) // Till
			{
				new listitems[] = "1 Retirar\n2 Depositar";
			    SafeDialogEx(playerid,DIALOG_CDTILL,DIALOG_STYLE_LIST,"Elige y continua.", listitems,"Ok","Cancelar");
			}
		}
		else
		{
			SavecDealership(GetPVarInt(playerid, "editingcd"));
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDTILL)
	{ // Concesionario dialog
	    if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0) // Withdraw
			{
				format(string, sizeof(string), "Tienes $%d en la cuenta de tu caja.\n\n\tCuanto deseas retirar?", CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				SafeDialogEx(playerid,DIALOG_CDWITHDRAW,DIALOG_STYLE_INPUT,"{008EC1}Retirar", string,"Ok","Cancelar");
			}
			else if(listitem == 1) // Deposit
			{
				format(string, sizeof(string), "Tienes $%d en la cuenta de tu caja.\n\n\tCuanto deseas depositar?", CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				SafeDialogEx(playerid,DIALOG_CDDEPOSIT,DIALOG_STYLE_INPUT,"{008EC1}Depositar", string,"Ok","Cancelar");
			}
		}
		else
		{
            SavecDealership(GetPVarInt(playerid, "editingcd"));
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDWITHDRAW)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
		    if (isnumeric(inputtext))
	        {
	             new money = strval(inputtext);
	             if(CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill] < money)
	             {
                     format(string, sizeof(string), "No tienes ese dinero en tu caja!\n\nTienes $%d en tu caja.\n\n\tCuanto dinero quieres retirar?", CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				     SafeDialogEx(playerid,DIALOG_CDWITHDRAW,DIALOG_STYLE_INPUT,"{008EC1}Retirar", string,"Ok","Cancelar");
                     return 1;
	             }
	             CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill] -= money;
	             SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")+money);
	             format(string, sizeof(string), "Retiraste $%d de tu caja, nuevo balance: $%d", money, CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
	             SendClientMessageEx(playerid, COLOR_GRAD2, string);
	             SavecDealership(GetPVarInt(playerid, "editingcd"));
                 SetPVarInt(playerid, "editingcd", -1);
			}
        }
		else
		{
             SavecDealership(GetPVarInt(playerid, "editingcd"));
             SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDSELL)
	{
		if(response)
		{
			if(GetPVarInt(playerid, "editingcd") == -1) return 1;
            SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")+ (CDSInfo[GetPVarInt(playerid, "editingcd")][cdPrice] / 2));
			SellCarDealership(GetPVarInt(playerid, "editingcd"));
			PlayerPlayMusic(playerid);
			format(string, sizeof(string), "Concesionario de coches vendido con éxito por %d.", CDSInfo[GetPVarInt(playerid, "editingcd")][cdPrice] / 2);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else
		{
            SetPVarInt(playerid, "editingcd", -1);
			return 1;
		}
	}
	else if(dialogid == DIALOG_CDDEPOSIT)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
		    if (isnumeric(inputtext))
	        {
	             new money = strval(inputtext);
	             if(GetPVarInt(playerid, "Cash") < money)
	             {
                     format(string, sizeof(string), "No tienes el dinero especificado!\n\nTienes $%d en tu caja.\n\n\tCuanto dinero quieres depositar?", CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				     SafeDialogEx(playerid,DIALOG_CDDEPOSIT,DIALOG_STYLE_INPUT,"{008EC1}Depositar", string,"Select","Cancel");
                     return 1;
	             }
	             CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill] += money;
	             SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-money);
	             format(string, sizeof(string), "Depositaste $%d a tu caja, Nuevo Balance: $%d", money, CDSInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
	             SendClientMessageEx(playerid, COLOR_GRAD2, string);
	             SavecDealership(GetPVarInt(playerid, "editingcd"));
                 SetPVarInt(playerid, "editingcd", -1);
			}
		}
		else
		{
             SavecDealership(GetPVarInt(playerid, "editingcd"));
             SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDNEWVEH)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new modelid, d;
			new Float: x, Float: y, Float: z, Float: a;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			GetPlayerPos(playerid,x,y,z);
	        GetPlayerFacingAngle(playerid, a);
	        if (!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} El modelo debe ser números.");
            if (IsPlayerInRangeOfPoint(playerid, CDSInfo[d][cdRadius], CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
	        {
	             modelid = strval(inputtext);
	             if(modelid < 100 || modelid > 611) { SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} ID's  No menor de 400 y no mayor de 611."); return 1; }
	             new cdvehicleid = CreateCarDealershipVehicle(d, modelid, x, y, z, a, 1337);
	             if(cdvehicleid == -1)
		         {
		             SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El coche no se puede crear.");
		         }
	             else
	             {
					 PutPlayerInVehicle(playerid, CDSInfo[d][cdVehicleId][cdvehicleid], 0);
                     format(text_info, sizeof(text_info), "{A2DC35}[INFO]:{FFFFFF} Vehículo de Concesionario creado con la ID {5ABAFF}%d.", cdvehicleid-1);
		             SendClientMessageEx(playerid, COLOR_WHITE, text_info);
		             SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Por favor, ponte donde quieres añadir tu nuevo vehículo.");
				     SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Una vez listo, presiona el botón {FF0000}FIRE - DISPARAR {FFFFFF}(CLICK).");
				     SetPVarInt(playerid, "editingcdvehnew", 1);
		             SetPVarInt(playerid, "editingcdveh", cdvehicleid);
	             }
	        }
	        else
	        {
                 SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Estas fuera del radio del Concesionario, por favor vuelve a intentarlo.");
                 TogglePlayerControllable(playerid, true);
	        }
		}
		else
		{
            TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDEDITCARS)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new cdvid;
            if (isnumeric(inputtext))
	        {
	             cdvid = strval(inputtext);
	             if(CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleModel][cdvid-1])
	             {
	                 SetPVarInt(playerid, "editingcdveh", cdvid-1);
	                 new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			         SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
				 }
	        }
		}
		else
		{
		    new listitems[] = "1 Nuevo Coche\n2 Mis Coches\n3 Mejorar\n4 Ganancias";
			SafeDialogEx(playerid,DIALOG_CDEDIT,DIALOG_STYLE_LIST,"{008EC1}Elige y Continua", listitems,"Ok","Cancelar");
		}
	}
	else if(dialogid == DIALOG_CDUPGRADE)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0) // Vehicle Spawn
			{
		        SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Por favor, ponte donde quieres que este el vehiculo para la venta.");
				SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Una vez listo, presiona el botón {FF0000}FIRE - DISPARAR {FFFFFF}(CLICK).");
				SetPVarInt(playerid, "editingcdvehpos", 2);
			}
            if(listitem == 1) // Radio
			{
				SafeDialogEx(playerid, DIALOG_CDRADIUS, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:", " Elige el nuevo Radio:", "Editar", "Atrás");
			}
			else if(listitem == 2) // Dealership Name
			{
				SafeDialogEx(playerid, DIALOG_CDNAME, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:", " Elige el nuevo Nombre:", "Editar", "Atrás");
			}
		}
		else
		{
            SavecDealership(GetPVarInt(playerid, "editingcd"));
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDEDITONE)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
            if(listitem == 0) // Edit Model
			{
	             SafeDialogEx(playerid, DIALOG_CDEDITMODEL, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:", " * Elige el nuevo modelo (id):", "Editar", "Atrás");
	        }
	        else if(listitem == 1) // Edit Cost
			{
	             SafeDialogEx(playerid, DIALOG_CDEDITCOST, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:",  " * Elige el nuevo precio del coche:", "Editar", "Atrás");
	        }
	        else if(listitem == 2) // Edit Park
			{
				 PutPlayerInVehicle(playerid, CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][GetPVarInt(playerid, "editingcdveh")], 0);
	             SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Por favor, ponte donde quieres aparcar el vehículo.");
				 SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Una vez listo, presiona el botón {FF0000}FIRE - DISPARAR {FFFFFF}(CLICK).");
				 SetPVarInt(playerid, "editingcdvehpos", 1);
	        }
	        else if(listitem == 3) // Delete Vehicle
			{
	             format(string, sizeof(string), "¿Seguro que quieres eliminar este %s?\nNota: No recibirás ningún tipo de dinero.",
				 GetVehicleName(CDSInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][GetPVarInt(playerid, "editingcdveh")]));
		         SafeDialogEx(playerid,DIALOG_CDDELVEH,DIALOG_STYLE_MSGBOX,"{008EC1}Advertencia:",string,"Ok","Cancel");
	        }
		}
		else
		{
            SavecDealership(GetPVarInt(playerid, "editingcd"));
            SetPVarInt(playerid, "editingcdveh", -1);
		}
	}
	else if(dialogid == DIALOG_CDRADIUS)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new d;
			d = GetPVarInt(playerid, "editingcd");
			new Float:radius = floatstr(inputtext);
			new Float:radiusex = CDSInfo[d][cdRadius];
			new test = floatround(radius), test1 = floatround(radiusex);
            if (CDSInfo[d][cdRadius] > radius)
	        {
				 new cost = ( test - test1 ) * ( test1 * 1000 );
				 if(GetPVarInt(playerid, "Cash") < cost)
				 {
                     format(string, sizeof(string), "{FFFF00}[ERROR]:{FFFFFF} No tienes suficiente dinero de esta mejora ($%d).",cost);
                     SendClientMessageEx(playerid, COLOR_GREY, string);
                     return 1;
				 }
				 format(string, sizeof(string), "{1DF5F7} Concesionario:{FFFFFF} Radio actualizado desde %.1f a %.1f por $%d.",radiusex, radius, cost);
                 SendClientMessageEx(playerid, COLOR_GREY, string);
	             CDSInfo[d][cdRadius] = radius;
        		 format(string, sizeof(string),"{A2DC35}Concesionario (%d) %s\n{2F99B5}Dueño: %s", d, CDSInfo[d][cdMessage], CDSInfo[d][cdOwner]);
	             UpdateDynamic3DTextLabelText(CDSInfo[d][cdTextLabel], COLOR_GENERAL, string);
	             new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario\n4 Precio";
			     SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige y continúa", listitems,"Ok","Cancelar");
			     SavecDealership(GetPVarInt(playerid, "editingcd"));
	        }
		}
		else
		{
		    new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario";
			SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige y continúa", listitems,"Ok","Cancelar");
		}
	}
	else if(dialogid == DIALOG_CDNAME)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new d;
			d = GetPVarInt(playerid, "editingcd");
            if (!strlen(inputtext))
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTRED, "Debes escribir un nombre.");
    	        SafeDialogEx(playerid, DIALOG_CDNAME, DIALOG_STYLE_INPUT, "{008EC1}Concesionario:", " Elige el nuevo nombre:", "Editar", "Atrás");
		        return 1;
			}
			new cost = strlen(inputtext) * 50;
			format(string, sizeof(string), "{A2DC35}[INFO]:{FFFFFF} Nombre del Concesionario fue mejorado de %s a %s por $%d.", CDSInfo[d][cdMessage], inputtext, cost);
            SendClientMessageEx(playerid, COLOR_GREY, string);
	        strmid(CDSInfo[d][cdMessage], inputtext, 0, strlen(inputtext), 255);
	        format(string, 128,"{A2DC35}Concesionario (%d) %s\n{2F99B5}Dueño: %s", d, CDSInfo[d][cdMessage], CDSInfo[d][cdOwner]);
	        UpdateDynamic3DTextLabelText(CDSInfo[d][cdTextLabel], COLOR_GENERAL, string);
	        new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario";
			SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige y continúa", listitems,"Ok","Cancelar");
			SavecDealership(GetPVarInt(playerid, "editingcd"));
		}
		else
		{
		    new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario";
			SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige y continúa", listitems,"Ok","Cancelar");
		}
	}
	else if(dialogid == DIALOG_CDEDITPARK)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1 &&  GetPVarInt(playerid, "editingcdvehpos") == 1 || GetPVarInt(playerid, "editingcdvehnew"))
		{
			new Float: x, Float: y, Float: z, Float: a;
			new d, v, text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
			GetVehiclePos(CDSInfo[d][cdVehicleId][v], x, y, z);
	        GetVehicleZAngle(CDSInfo[d][cdVehicleId][v], a);
			if(IsPlayerInRangeOfPoint(playerid, CDSInfo[d][cdRadius], CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
		    {
			     CDSInfo[d][cdVehicleSpawnX][v] = x;
                 CDSInfo[d][cdVehicleSpawnY][v] = y;
                 CDSInfo[d][cdVehicleSpawnZ][v] = z;
                 CDSInfo[d][cdVehicleSpawnAngle][v] = a;
                 SetPVarInt(playerid, "editingcdvehpos", 0);
                 SetPVarInt(playerid, "editingcdvehnew", 0);
                 DestroyDynamic3DTextLabel(CDSInfo[d][cdVehicleLabel][v]);
	             DestroyVehicle(CDSInfo[d][cdVehicleId][v]);
	             new carcreated;
	             carcreated = CreateVehicle(CDSInfo[d][cdVehicleModel][v], CDSInfo[d][cdVehicleSpawnX][v], CDSInfo[d][cdVehicleSpawnY][v], CDSInfo[d][cdVehicleSpawnZ][v], CDSInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		         format(text_info, sizeof(text_info), "{4639F1}Modelo: {FFFFFF}%s\n{4639F1}Precio: {FFFFFF}%d", GetVehicleName(carcreated), CDSInfo[d][cdVehicleCost][v]);
                 CDSInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_MAGENTA,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
	             CDSInfo[d][cdVehicleId][v] = carcreated;
	             TogglePlayerControllable(playerid, true);
	             new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			     SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
			     SavecDealership(d);
			}
			else
			{
                 SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Estás fuera del radio de este Concesionario, por favor vuelve a intentarlo.");
                 TogglePlayerControllable(playerid, true);
			}
		}
		else if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 2)
		{
			new Float: x, Float: y, Float: z, Float: a;
			new d;
			GetPlayerPos(playerid,x,y,z);
	        GetPlayerFacingAngle(playerid, a);
			d = GetPVarInt(playerid, "editingcd");
			if(IsPlayerInRangeOfPoint(playerid, CDSInfo[d][cdRadius], CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
		    {
			     CDSInfo[d][cdVehicleSpawn][0] = x;
                 CDSInfo[d][cdVehicleSpawn][1] = y;
                 CDSInfo[d][cdVehicleSpawn][2] = z;
                 CDSInfo[d][cdVehicleSpawn][3] = a;
                 SetPVarInt(playerid, "editingcdvehpos", 0);
	             TogglePlayerControllable(playerid, true);
	             new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario";
			     SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige para continuar", listitems,"Ok","Cancelar");
			     SavecDealership(d);
			}
			else
			{
                 SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Estás fuera del radio de este Concesionario, por favor vuelve a intentarlo.");
                 TogglePlayerControllable(playerid, true);
			}
		}
		else if(!response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 1)
		{
            new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
			TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcdvehpos", 0);
		}
		else if(!response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 2)
		{
            new listitems[] = "1 Spawn de Vehiculo\n2 Radio\n3 Nombre del Concesionario";
		    SafeDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"{008EC1}Elige para continuar", listitems,"Ok","Cancelar");
			TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcdvehpos", 0);
		}
	}
    else if(dialogid == DIALOG_CDEDITMODEL)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			new modelid, d, v;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
            if (isnumeric(inputtext))
	        {
	             modelid = strval(inputtext);
	             if(modelid < 400 || modelid > 611) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} ID´s: No puede ser menos de 400 o mayor 611 !"); return 1; }
	             CDSInfo[d][cdVehicleModel][v] = modelid;
	             DestroyDynamic3DTextLabel(CDSInfo[d][cdVehicleLabel][v]);
	             DestroyVehicle(CDSInfo[d][cdVehicleId][v]);
	             new carcreated;
	             carcreated = CreateVehicle(CDSInfo[d][cdVehicleModel][v], CDSInfo[d][cdVehicleSpawnX][v], CDSInfo[d][cdVehicleSpawnY][v], CDSInfo[d][cdVehicleSpawnZ][v], CDSInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		         format(text_info, sizeof(text_info),"{4639F1}Modelo: {FFFFFF}%s\n{4639F1}Precio: {FFFFFF}%d", GetVehicleName(carcreated), CDSInfo[d][cdVehicleCost][v]);
                 CDSInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_MAGENTA,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
	             CDSInfo[d][cdVehicleId][v] = carcreated;
	             new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			     SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
			     SavecDealership(d);
	        }
		}
		else
		{
		    new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
		}
	}
	else if(dialogid == DIALOG_CDEDITCOST)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			new price, d, v;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
            if (isnumeric(inputtext))
	        {
	             price = strval(inputtext);
	             CDSInfo[d][cdVehicleCost][v] = price;
	             format(text_info, sizeof(text_info), "{4639F1}Modelo: {FFFFFF}%s\n{4639F1}Precio: {FFFFFF}%d", GetVehicleName(CDSInfo[d][cdVehicleId][v]), CDSInfo[d][cdVehicleCost][v]);
	             UpdateDynamic3DTextLabelText(CDSInfo[d][cdVehicleLabel][v], COLOR_MAGENTA, text_info);
	             new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			     SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
			     SavecDealership(d);
	        }
		}
		else
		{
		    new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
		}
	}
	else if(dialogid == DIALOG_CDDELVEH)
	{ // Concesionario dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			DestroyCarDealershipVehicle(GetPVarInt(playerid, "editingcd"), GetPVarInt(playerid, "editingcdveh"));
			SavecDealership(GetPVarInt(playerid, "editingcd"));
		}
		else
		{
  			new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Vehiculo";
			SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"{008EC1}Concesionario:", listitems,"Ok","Cancelar");
		}
	}
 	if (dialogid == ELEVATOR3 && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 1564.8, -1666.2, 28.3);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SetPlayerPos(playerid, 1568.6676, -1689.9708, 6.2188);
		 	SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if (dialogid == ELEVATOR && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 276.0980, 122.1232, 1004.6172);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 500);
		}
		else
		{
			SetPlayerPos(playerid, 1568.6676, -1689.9708, 6.2188);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if (dialogid == ELEVATOR2 && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 1564.8, -1666.2, 28.3);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SetPlayerPos(playerid, 276.0980, 122.1232, 1004.6172);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 500);
		}
	}
	if (dialogid == ELEVATOR4 && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 301.5812,-1490.6759,-45.1302);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 600);
		}
	}
	if (dialogid == ELEVATOR5 && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 2789.2639,-1099.1514,94.1871);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if (dialogid == ELEVATOR7 && response)
    {
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 301.5812,-1490.6759,-45.1302);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 600);
		}
	}
	else if(dialogid == HQENTRANCE)
	{
	    if(response)
	    {
	        new Float: x, Float: y, Float: z, Float: a;
	        GetPlayerPos(playerid, x, y, z);
	        GetPlayerFacingAngle(playerid, a);
	        if(GetPVarInt(playerid, "editingfamhqaction") == 5)
	        {
	            if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] );
	            DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] );
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][0] = x;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][1] = y;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][2] = z;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][3] = a;
            	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] = CreateDynamicPickup(1318, 23, x, y, z);
				format(string, sizeof(string), "%s", fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyName]);
            	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, x, y, z+0.6, 4.0);
            	SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} HQ, entrada cambiada.");
            	TogglePlayerControllable(playerid, true);
            	saveFamiliesHQ();
            	return 1;
			}
			fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][0] = x;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][1] = y;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][2] = z;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][3] = a;
         	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] = CreateDynamicPickup(1318, 23, x, y, z);
			format(string, sizeof(string), "%s", fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyName]);
   			fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, x, y, z+0.6, 4.0);
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} HQ entrada guardada, Por favor colocate en el lugar de la salida, y presiona el boton {FF0000}FIRE{FFFFFF}.");
            SetPVarInt(playerid, "editingfamhqaction", 2);
            TogglePlayerControllable(playerid, true);
	    }
	    else
	    {
	        if(GetPVarInt(playerid, "editingfamhqaction") == 5)
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Se ha cancelado el cambio exterior de esta HQ.");
	            SetPVarInt(playerid, "editingfamhqaction", 0);
	        	SetPVarInt(playerid, "editingfamhq", 255);
	        	TogglePlayerControllable(playerid, true);
	            return 1;
	        }
	        SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Ha cancelado la creación de esta HQ.");
	        if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] );
			if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitText] );
			fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = 0;
	        SetPVarInt(playerid, "editingfamhqaction", 0);
	        SetPVarInt(playerid, "editingfamhq", 255);
	        TogglePlayerControllable(playerid, true);
	    }
	}
	else if(dialogid == HQEXIT)
	{
	    if(response)
	    {
	        new Float: x, Float: y, Float: z, Float: a;
	        GetPlayerPos(playerid, x, y, z);
	        GetPlayerFacingAngle(playerid, a);
	        if(GetPVarInt(playerid, "editingfamhqaction") == 6)
	        {
	            if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup] );
	            fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][0] = x;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][1] = y;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][2] = z;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][3] = a;
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = GetPlayerInterior(playerid);
	        	fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyVirtualWorld] = GetPVarInt(playerid, "editingfamhq")+900000;
            	SendClientMessageEx(playerid, COLOR_GRAD2, "HQ Exit changed!.");
            	TogglePlayerControllable(playerid, true);
            	saveFamiliesHQ();
            	return 1;
	        }
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][0] = x;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][1] = y;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][2] = z;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][3] = a;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = GetPlayerInterior(playerid);
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyVirtualWorld] = GetPVarInt(playerid, "editingfamhq")+900000;
            format(string,128,"HQ Salida guardada!\n\n¿Es esto un interior de un mapeado personalizado?");
        	SafeDialogEx(playerid,HQCUSTOMINT,DIALOG_STYLE_MSGBOX,"{008EC1}Advertencia:",string,"Si","No");
            SetPVarInt(playerid, "editingfamhqaction", 3);
            TogglePlayerControllable(playerid, true);
	    }
	    else
	    {
	        if(GetPVarInt(playerid, "editingfamhqaction") == 6)
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Se ha cancelado el cambio interior de esta HQ.");
	            SetPVarInt(playerid, "editingfamhqaction", 0);
	        	SetPVarInt(playerid, "editingfamhq", 255);
	        	TogglePlayerControllable(playerid, true);
	            return 1;
	        }
	        SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has cancelado la creación de esta HQ.");
	        if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] );
			if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitText] );
			fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = 0;
	        SetPVarInt(playerid, "editingfamhqaction", 0);
	        SetPVarInt(playerid, "editingfamhq", 255);
	        TogglePlayerControllable(playerid, true);
	    }
	}
	else if(dialogid == HQCUSTOMINT)
	{
	    if(response)
	    {
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyCustomMap] = 1;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = 255;
	        if(GetPVarInt(playerid, "editingfamhqaction") == 7)
	        {
	        	SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has cambiado el interior personalizado para esta HQ.");
   			}
   			else
   			{
   				SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has creado correctamente este HQ.");
   			}
	        SetPVarInt(playerid, "editingfamhq", 255);
	        saveFamiliesHQ();
	    }
	    else
	    {
	        if(GetPVarInt(playerid, "editingfamhqaction") == 7)
	        {
	        	SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has cambiado el interior personalizado para esta HQ.");
   			}
   			else
   			{
   				SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has creado correctamente este HQ.");
   			}
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyCustomMap] = 0;
	        SetPVarInt(playerid, "editingfamhq", 255);
	        saveFamiliesHQ();
	    }
	}
	else if(dialogid == HQDELETE)
	{
	    if(!response)
	    {
	    }
	    else
	    {
	        format(string,128,"{A2DC35}[INFO]:{FFFFFF} Has eliminado correctamente '%s' HQ", fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyName]);
	        SendClientMessageEx(playerid, COLOR_GRAD2, string);
	        if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrancePickup] );
			if(IsValidDynamicPickup(fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup])) DestroyDynamicPickup( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitPickup] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntranceText] );
			DestroyDynamic3DTextLabel( fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExitText] );
			fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyEntrance][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][0] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][1] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][2] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyExit][3] = 0.0;
	        fINFO[GetPVarInt(playerid, "editingfamhq")][FamilyInterior] = 0;
	        SetPVarInt(playerid, "editingfamhqaction", 0);
	        SetPVarInt(playerid, "editingfamhq", 255);
	        TogglePlayerControllable(playerid, true);
	        saveFamiliesHQ();
	    }
	}
	if((dialogid == BUYTOYSCOP) && response)
	{
	    new stringg[512];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
  			new name[24] = "Nada";

			for(new i;i<sizeof(HoldingObjectsAll);i++)
   			{
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
    			{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}

			format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		SafeDialogEx(playerid, BUYTOYSCOP2, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if((dialogid == BUYTOYSCOP2) && response)
	{
	    if(listitem >= 8 && Info[playerid][pVIP] <= 1 || listitem >= 8 && Info[playerid][pBuddyInvited] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Debes ser un nivel mayor de {FFFF00}PREMIUMVIP{FFFFFF} para usar este slot.");
	    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[ERROR]:{FFFFFF} Ya tienes algo en esa ranura, eliminala con /toys");

		slotselection[playerid] = listitem;

		new stringg[512];
		for(new x;x<sizeof(HoldingObjectsCop);x++)
		{
		    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsCop[x][holdingmodelname], HoldingObjectsCop[x][holdingprice]);
		}
		SafeDialogEx(playerid, BUYTOYSCOP3, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYSCOP3) && response)
	{
		if(GetPlayerCash(playerid) < HoldingObjectsCop[listitem][holdingprice])
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar eso.");
		}
		else
		{
			GivePlayerCash(playerid, -HoldingObjectsCop[listitem][holdingprice]);
		    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsCop[listitem][holdingmodelid];
		    Tax += HoldingObjectsCop[listitem][holdingprice];

   			new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
		    {
		        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		    }
		    else if(modelid >= 18891 && modelid <= 18910)
		    {
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid >= 18926 && modelid <= 18935)
			{
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid >= 18911 && modelid <= 18920)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid == 19078 || modelid == 19078)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
		    else
		    {
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}

			format(string, sizeof(string), "* Has comprado un %s por $%d (Slot: %d)", HoldingObjectsCop[listitem][holdingmodelname], HoldingObjectsCop[listitem][holdingprice], slotselection[playerid]);
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		    SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[TOYS]:{FFFFFF} Usa /toys para editar tus objetos");
		}
	}
	if((dialogid == BUYTOYSGOLD) && response)
	{
 		if(Info[playerid][pVIP] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes acceso a este comando.");
	    new stringg[512];
		for(new x;x<MAX_PLAYERTOYS;x++){
  			new name[24] = "Nada";
			for(new i;i<sizeof(HoldingObjectsAll);i++){
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		SafeDialogEx(playerid, BUYTOYSGOLD2, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if((dialogid == BUYTOYSGOLD2) && response)
	{
        if(Info[playerid][pVIP] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes acceso a este comando.");
	    if(listitem >= 8 && Info[playerid][pVIP] <= 1 || listitem >= 8 && Info[playerid][pBuddyInvited] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Debes ser un nivel mayor de Premium para usar este slot.");
	    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[TOYS]:{FFFFFF} Ya tienes algo en esa ranura, eliminala con /toys");

		slotselection[playerid] = listitem;
		new stringg[1536];
		for(new x;x<sizeof(HoldingObjectsGold);x++)
		{
		    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsGold[x][holdingmodelname], HoldingObjectsGold[x][holdingprice]);
		}
		SafeDialogEx(playerid, BUYTOYSGOLD3, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYSGOLD3) && response){
	    if(Info[playerid][pVIP] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes acceso a este comando.");
		if(GetPlayerCash(playerid) < HoldingObjectsGold[listitem][holdingprice]){
		    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero para esto.");
		}
		else{
			GivePlayerCash(playerid, -HoldingObjectsGold[listitem][holdingprice]);
		    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsGold[listitem][holdingmodelid];

   			new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140)){
		        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
		    }
		    else if(modelid >= 18891 && modelid <= 18910){
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid >= 18926 && modelid <= 18935){
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if(modelid >= 18911 && modelid <= 18920){
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid == 19078 || modelid == 19078){
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890){
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
		    else{
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}

			format(string, sizeof(string), "* Compraste un %s por $%d (Slot: %d)", HoldingObjectsGold[listitem][holdingmodelname], HoldingObjectsGold[listitem][holdingprice], slotselection[playerid]);
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		    SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[TOYS]:{FFFFFF} Usa /toys para editar tus objetos");
		}
	}
	if((dialogid == BUYTOYS) && response)
	{
	    new stringg[512];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
  			new name[24];
	    	format(name, sizeof(name), "Nada");

			for(new i;i<sizeof(HoldingObjectsAll);i++)
   			{
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
    			{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		SafeDialogEx(playerid, BUYTOYS2, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if((dialogid == BUYTOYS) && !response)
	{
	    if(Info[playerid][pVIP] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} No tienes acceso a esta función. (VIP Gold o Mayor.)");
	    return SafeDialogEx(playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "{008EC1}Tienda de Accesorios VIP", "Bienvenido a la tienda de accesorios VIP! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir un slot.","Ok", "Salir");
	}
	if((dialogid == BUYTOYS2) && response)
	{
	    if(listitem >= 8 && Info[playerid][pVIP] <= 1 || listitem >= 8 && Info[playerid][pBuddyInvited] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Debes ser un nivel mayor de Premium para usar este slot.");
	    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[TOYS]:{FFFFFF} Ya tienes algo en esa ranura, eliminala con /toys");
		slotselection[playerid] = listitem;
		new stringg[3730]; //
		for(new x;x<sizeof(HoldingObjects);x++)
		{
		    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjects[x][holdingmodelname], HoldingObjects[x][holdingprice]);
		}
		SafeDialogEx(playerid, BUYTOYS3, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYS3) && response)
	{
	    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
		if(GetPlayerCash(playerid) < HoldingObjects[listitem][holdingprice]) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficiente dinero.");
		else
		{
			businessVariables[businessID][bVault] += HoldingObjects[listitem][holdingprice];
			businessVariables[businessID][bStock]--;
			SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			GivePlayerCash(playerid, -HoldingObjects[listitem][holdingprice]);
		    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjects[listitem][holdingmodelid];
		    new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
		    {
		        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		    }
		    else if(modelid >= 18891 && modelid <= 18910)
		    {
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid >= 18926 && modelid <= 18935)
			{
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid >= 18911 && modelid <= 18920)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid == 19078 || modelid == 19078)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			else if(modelid == 19317)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.079;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = -0.10;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.09;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 30.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
		    else
		    {
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
			}
			format(string, sizeof(string), "* Compraste un %s por $%d (Slot: %d)", HoldingObjects[listitem][holdingmodelname], HoldingObjects[listitem][holdingprice], slotselection[playerid]);
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		    SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[TOYS]:{FFFFFF} Usa /toys para editar tus objetos");
		}
	}
	if((dialogid == TOYS) && response)
	{
		if(listitem == 0)
		{
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Nada");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			SafeDialogEx(playerid, WEARTOY, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Seleccionar", "Cancelar");
	    }
		else if(listitem == 1)
		{
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Nada");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			SafeDialogEx(playerid, EDITTOYS, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Seleccionar", "Cancelar");
   		}
		else if(listitem == 2)
		{
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Nada");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			SafeDialogEx(playerid, DELETETOY, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Objeto", stringg, "Borrar", "Cancelar");
		}
	}
	if((dialogid == EDITTOYS) && response)
	{
	    if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
	    {
	        SafeDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "{008EC1}Menu Accesorios: {008EC1}Edición", "No tiene nada en ese slot!", "OK", "");
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Posiciona bien la cámara y usa /headmove para una edición mucho mejor.");
		    slotselection[playerid] = listitem;
		    ShowEditMenu(playerid);
		}
	}
	if((dialogid == EDITTOYS2))
	{
	    if(response)
	    {
	        switch(listitem)
			{
			    case 0: SafeDialogEx(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, "{008EC1}Selecciona una Parte", "Columna\nCabeza\nBrazo Izquierdo Superior\nBrazo Derecho Superior\nMano Izquierda\nMano Derecha\nMuslo Izquierdo\nMuslo Derecho\nPie Izquierdo\nPie Derecho\nRight calf\nLeft calf\nAnteBrazo Izquierdo\nAnteBrazo Derecho\nClavicula Izquierda\nClavicula Derecha\nCuello\nQuijada", "Seleccionar", "Cancel");
				case 1:
				{
					SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
					PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
					EditAttachedObject(playerid, slotselection[playerid]);
					Editing[playerid] =1;
				    return SendClientMessage(playerid, -1, "* Mantén presionado {008EC1}~k~~PED_SPRINT~{FFFFFF} para cambiar la posición de la cámara.");
				}
			}
		}
		else
		{
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Nada");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			SafeDialogEx(playerid, EDITTOYS, DIALOG_STYLE_LIST, "{008EC1}Selecciona un Accesorio", stringg, "Seleccionar", "Cancelar");
		}
	}
	if(dialogid == EDITTOYSBONE)
	{
	    if(response)
	    {
	        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = listitem+1;
		}
	 	ShowEditMenu(playerid);
	}
	if((dialogid == WEARTOY) && response)
	{
	    if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
	    {
	        SafeDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "{008EC1}Menu Accesorios: {0000FF}Poner/Quitar", "No tienes ningún objeto en este slot!", "OK", "");
		}
		else
		{
		    if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
			{
			    new name[24];
			    format(name, sizeof(name), "Nada");

				for(new i;i<sizeof(HoldingObjectsAll);i++)
	   			{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
			    format(string, sizeof(string), "{A2DC35}[TOYS]:{FFFFFF} Te quitaste correctamente tu %s (Bone: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			    RemovePlayerAttachedObject(playerid, listitem);
			}
			else
			{
			    SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ], PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], PlayerToyInfo[playerid][listitem][ftscaleX],
				PlayerToyInfo[playerid][listitem][ftscaleY], PlayerToyInfo[playerid][listitem][ftscaleZ]);
			    new name[24];
			    format(name, sizeof(name), "Nada");

				for(new i;i<sizeof(HoldingObjectsAll);i++)
	   			{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
				format(string, sizeof(string), "%s puesto correctamente. (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
	}

	if((dialogid == DELETETOY) && response)
	{
		PlayerToyInfo[playerid][listitem][ptModelID] = 0;
		PlayerToyInfo[playerid][listitem][ptBone] = 0;
		PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleY] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleX] = 0.0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, listitem)) RemovePlayerAttachedObject(playerid, listitem);
		format(string, sizeof(string), "{A2DC35}[TOYS]:{FFFFFF} Usted ha eliminado su accesorio del slot %d", listitem);
	    SafeDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "{008EC1}Menu Accesorios", string, "OK", "");
	}
	if(dialogid == GOOGLE)
	      {
		    if(response == 1)
		    {
		        Bought(playerid, 3);
	    	    if(strfind(inputtext, "Concesionarios", true) != -1)
				{
				    SendClientMessageEx(playerid, COLOR_BLUE, "www.mundoauto.com - Todo tipo de vehículos a tu alcance.");
				    SetPlayerCheckpoint(playerid, 1654.5254,-1655.7502,22.5156, 10.0);
				    SendClientMessageEx(playerid, 0xD9006CFF, "* Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Ropa", true) != -1)
				{
				    SendClientMessageEx(playerid, COLOR_RED2, "www.binco.com - Llévalo con orgullo.");
			    	SetPlayerCheckpoint(playerid, 460.6988,-1501.1395,31.0564, 10.0);
			    	SendClientMessageEx(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
				else if(strfind(inputtext, "Trabajos", true) != -1)
				{
				    SendClientMessageEx(playerid, COLOR_GREEN, "Trabajo de disponibles en: www.trabajos.com");
			    	SendClientMessageEx(playerid, COLOR_GRAD2, "- Pizzero");
			    	SendClientMessageEx(playerid, COLOR_GRAD2, "- Camionero");
			    	SendClientMessageEx(playerid, COLOR_GRAD2, "- Leñador");
		    		SendClientMessageEx(playerid, COLOR_GRAD2, "- Taxista");
		    		SendClientMessageEx(playerid, COLOR_GRAD2, "- Granjero");
		    		SendClientMessageEx(playerid, COLOR_GRAD2, "- Jardinero");
		    		return 1;
				}
				else if(strfind(inputtext, "Banco", true) != -1)
				{
				    SendClientMessageEx(playerid, COLOR_GREEN, "www.banconacional.com - Banco central de Perfect City.");
				    SetPlayerCheckpoint(playerid, 300.0895,-1611.6455,33.1248, 10.0);
				    SendClientMessageEx(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Biblioteca", true) != -1)
				{
				    SendClientMessageEx(playerid, COLOR_GREEN, "www.bookandstudy.org - Biblioteca de Perfect City.");
			    	SetPlayerCheckpoint(playerid, 1546.6545,-1097.5780,25.0625, 10.0);
                	SendClientMessageEx(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
            	}
				else if(strfind(inputtext, "Ammunation", true) != -1)
				{
			    	SendClientMessageEx(playerid, COLOR_RED, "www.armas-legales.com - Ammunation Perfect City.");
			    	SetPlayerCheckpoint(playerid, 1368.4303,-1280.0046,13.5469, 10.0);
			    	SendClientMessageEx(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
	    	}
		}
  		if(dialogid == BANCO_MENU)
    	{
    		if(!response)
            {
                return 1;
            }
		 	switch(listitem)
            {
                case 0:
				{
				SafeDialogEx(playerid,BANCO_SACAR, DIALOG_STYLE_INPUT, "{008EC1}Retirar Dinero", "{FFFFFF}Por favor ingrese la cantidad ha retirar.", "Retirar", "Cancelar");
				}
				case 1:
				{
				SafeDialogEx(playerid,BANCO_DEPOSITAR, DIALOG_STYLE_INPUT, "{008EC1}Depositar Dinero", "{FFFFFF}Por favor ingrese la cantidad ha depositar.", "Depositar", "Cancelar");
				}
				case 2:
				{
				SafeDialogEx(playerid,BANCO_TRANSFERIR, DIALOG_STYLE_INPUT, "{008EC1}Transferir Dinero * PASO 1 *", "{FFFFFF}Por favor ingrese la {008EC1}ID Del Jugador a Transferir El Dinero", "Siguiente", "Cancelar");
				}
				case 3:
				{
		            SendClientMessageEx(playerid, COLOR_WHITE, "Banco Perfect City.");
					format(string, sizeof(string), "Saldo Disponible:  %d$",Info[playerid][pAccount]);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					return 1;
				}
    		}
		}
		if(dialogid == BANCO_TRANSFERIR)
    	{
    		if(!response)
            {
                SafeDialogEx(playerid,BANCO_MENU, DIALOG_STYLE_LIST, "{008EC1}Banco Perfect City", "{FFFFFF}Retirar Dinero\n{FFFFFF}Depositar Dinero\n{FFFFFF}Transferir Dinero\n{FFFFFF}Balance de Fondos", "Seleccionar", "Cancelar");
                return 1;
            }
        	else
        	{
        	new idjugador = strval(inputtext);
        	if(Info[playerid][pConnectTime] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes que tener mínimo 2 Horas de juego para dar dinero.");
			if(playerid == idjugador) return SendClientMessage(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes transferirte dinero a ti mismo.");
        	if(!IsPlayerConnected(idjugador)) return SendClientMessage(playerid, COLOR_GRAD2, "Jugador no conectado.");
        	if (GetPVarInt(playerid, "GiveMoneyTimer") > 0)
			{
				format(string, sizeof(string), "Tienes que esperar %d segundos después de transferido dinero.", GetPVarInt(playerid, "GiveMoneyTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
        	}
			SetPVarInt(playerid,"JugadorATransferir",idjugador);
 	    	SafeDialogEx(playerid,BANCO_TRANSFERIR2, DIALOG_STYLE_INPUT, "{008EC1} Transferir dinero paso 2.", "{FFFFFF}Por favor ingrese la {008EC1}Cantidad de Dinero A Transferir", "Transferir", "Cancelar");
        	}
		 	return 1;
    	}
   		if(dialogid == BANCO_TRANSFERIR2)
    	{
    		if(!response)
            {
                SafeDialogEx(playerid,BANCO_MENU, DIALOG_STYLE_LIST, "{008EC1}Banco Perfect City", "{FFFFFF}Retirar Dinero\n{FFFFFF}Depositar Dinero\n{FFFFFF}Transferir Dinero\n{FFFFFF}Balance de Fondos", "Seleccionar", "Cancelar");
                return 1;
            }
   		 	else
        	{
          		if(Info[playerid][pConnectTime] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes que tener mínimo 2 Horas de juego para dar dinero.");
          		new giveplayerid = GetPVarInt(playerid, "JugadorATransferir");
          		new money = strval(inputtext);
          		if(money > Info[playerid][pAccount]) return SendClientMessageEx(playerid, COLOR_WHITE, "Cantidad incorrecta.");
          		if(money < 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes transferir menos de 0.");

                DeletePVar(playerid,"JugadorATransferir");
          		SetPVarInt(playerid, "GiveMoneyTimer", 60);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PAYTIMER);
      			Info[playerid][pAccount] -= money+10;
                Info[giveplayerid][pAccount] += money-10;
       			format(string, sizeof(string), "* Has hecho una transferencia de %d$ a %s", money, GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* Recibiste una transferencia de %d$ de %s", money, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Perfect City: %s hizo una transferencia de $%d a %s", GetPlayerNameEx(playerid), money, GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_YELLOW,string,2);
				format(string, sizeof(string), "[TRANSFER BANCO] - %s hizo una transferencia de $%d a %s.", GetPlayerNameEx(playerid), money, GetPlayerNameEx(giveplayerid));
				Log("logs/banco.log", string);
        	}
        	return 1;
    	}
		if(dialogid == BANCO_DEPOSITAR)
    	{
    		if(!response)
            {
                SafeDialogEx(playerid,BANCO_MENU, DIALOG_STYLE_LIST, "{008EC1}Banco Perfect City", "{FFFFFF}Retirar Dinero\n{FFFFFF}Depositar Dinero\n{FFFFFF}Transferir Dinero\n{FFFFFF}Balance de Fondos", "Seleccionar", "Cancelar");
                return 1;
            }
       		else
        	{
         		new money = strval(inputtext);
         		if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "{FFFF00}[ERROR]:{FFFFFF} La cantidad tiene que ser números.");
         		if (money > GetPlayerCash(playerid) || money < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Cantidad incorrecta");
         		if(money < 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes retirar menos de 0.");

         		Bought(playerid,money);
				Info[playerid][pAccount]+=money-15;
				Tax+=15;
         		format(string, sizeof(string), "  Depositaste: $%d (-$15 Comisión) - Nuevo Balance: $%d",money,Info[playerid][pAccount]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s deposita dinero mediante una transacción bancaria.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "[DEPOSITO BANCO] - %s hizo un depósito de $%d.", GetPlayerNameEx(playerid), money);
				Log("logs/banco.log", string);
        	}
        	return 1;
    	}
    	if(dialogid == BANCO_SACAR)
    	{
    		if(!response)
            {
                SafeDialogEx(playerid,BANCO_MENU, DIALOG_STYLE_LIST, "{008EC1}Banco Perfect City", "{FFFFFF}Retirar Dinero\n{FFFFFF}Depositar Dinero\n{FFFFFF}Transferir Dinero\n{FFFFFF}Balance de Fondos", "Seleccionar", "Cancelar");
                return 1;
            }
        	else
        	{
         		new money = strval(inputtext);
         		if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "{FFFF00}[ERROR]:{FFFFFF} La cantidad tiene que ser números!");
         		if(money > Info[playerid][pAccount] || money < 11) return SendClientMessageEx(playerid, COLOR_WHITE, "Cantidad incorrecta");
         		if(money < 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes retirar menos de 0.");
         		
         		Earn(playerid,money);
         		Info[playerid][pAccount]-= money-10;
         		format(string, sizeof(string), "  Extrajiste: $%d (-$10 Comisión) - Nuevo Balance: $%d",money,Info[playerid][pAccount]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s retira dinero mediante una transacción bancaria.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "[RETIRO BANCO] - %s hizo un retiro de $%d.", GetPlayerNameEx(playerid), money);
				Log("logs/banco.log", string);
  	 		}
        	return 1;
    	}
    /*if(dialogid == ACEPTAR_TER)
	{
    if(response)
    {
    SetPlayerJoinCamera(playerid);
    ClearChatbox(playerid);
    TextDrawShowForPlayer(playerid, Drawlogueando0);
    TextDrawShowForPlayer(playerid, Drawlogueando1);
   	TextDrawHideForPlayer(playerid, Drawlogueo0);
    TextDrawHideForPlayer(playerid, Drawlogueo1);
    TextDrawHideForPlayer(playerid, Drawlogueo2);
    TextDrawHideForPlayer(playerid, Drawlogueo4);
    TextDrawHideForPlayer(playerid, Drawlogueo5);
    TextDrawHideForPlayer(playerid, Drawlogueo6);
    TextDrawHideForPlayer(playerid, Drawlogueo7);
    TextDrawHideForPlayer(playerid, Drawlogueo8);
    TextDrawHideForPlayer(playerid, Drawlogueo9);
    TextDrawHideForPlayer(playerid, Drawlogueo10);
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	if(INI_Exist(playername))
	{
	    gPlayerAccount[playerid] = 1;
        ShowMainMenuDialog(playerid, 1);
		return 1;
	}
	else
	{
	    if(strfind( playername, "_", true) == -1)
		{
		    SetPlayerName(playerid, "InvalidNick");
			SendClientMessage(playerid, COLOR_GENERAL, "{008EC1}Perfect City:{FFFFFF} Vuelve a entrar con el formato indicado. Ejemplo: Nombre_Apellido");
			Kick(playerid);
		}
		else
		{
			gPlayerAccount[playerid] = 0;
        	ShowMainMenuDialog(playerid, 2);
	    }
	    return 1;
	 }
	}
	if(!response)
	{
     SendClientMessage(playerid, COLOR_GENERAL, "{008EC1}Perfect City:{FFFFFF} Has sido expulsado del servidor por que no has aceptado las normas.");
	}
 }*/
	if(dialogid == EQUIPO_CNN)
	{
	    if(response == 1)
	    {
            ResetPlayerWeaponsEx(playerid);
			switch(listitem)
   	        {
		        case 0:
		        {
					GivePlayerValidWeapon(playerid, 43);
					SetHP(playerid, 100);
					Skin(playerid, 217);
		            format(string, sizeof(string), "* %s coge el equipo de Periodista.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 1:
				{
				    Skin(playerid, Info[playerid][pChar]);
				    ResetPlayerWeapons(playerid);
				    format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
	    }
	}
	if(dialogid == EQUIPO_BOMBEROS)
	{
	    if(response == 1)
	    {
            ResetPlayerWeaponsEx(playerid);
			switch(listitem)
   	        {
		        case 0:
		        {
                    GivePlayerValidWeapon(playerid, 42);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
					SetPlayerSkin(playerid, 277);
		            format(string, sizeof(string), "* %s coge el equipo de Ayudante.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 1:
		        {
					if(Info[playerid][pRank] > 2)
				    {
                    GivePlayerValidWeapon(playerid, 42);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
					SetPlayerSkin(playerid, 278);
		            format(string, sizeof(string), "* %s coge el equipo de Intermedio.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
					else
				    {
    				            SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el rango requerido (3, 4 ó 5).");
    				            return 1;
				            }
			        }
		        case 2:
		        {
					if(Info[playerid][pRank] > 5)
				    {
					GivePlayerValidWeapon(playerid, 42);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
					SetPlayerSkin(playerid, 279);
		            format(string, sizeof(string), "* %s coge el equipo de Director.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
					else
				    {
    				            SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes el rango requerido (Director).");
    				            return 1;
				            }
			        }
		        case 3:
				{
				    Skin(playerid, Info[playerid][pChar]);
				    SetHP(playerid, 100);
				    SetPlayerToTeamColor(playerid);
				    format(string, sizeof(string), "* %s se viste con ropa normal y deja su placa.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
	    }
	}
	if(dialogid == EQUIPO_MECANICO)
    {
	        if(response == 1)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                SetPlayerSkin(playerid, 8);
		                SetHP(playerid, 100);
	    	            format(string, sizeof(string), "* %s se viste con uniforme de Ayudante.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	            	case 1:
		            {
                        SetPlayerSkin(playerid, 16);
                        SetHP(playerid, 100);
	        	        format(string, sizeof(string), "* %s se viste con uniforme de Trucker.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
		            case 2:
		            {
                        SetPlayerSkin(playerid, 50);
                        SetHP(playerid, 100);
	        	        format(string, sizeof(string), "* %s se viste con uniforme de Mecanico.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	            	case 3:
		            {
	    	            SetPlayerSkin(playerid, 185);
	    	            SetHP(playerid, 100);
	            	    format(string, sizeof(string), "* %s se viste con uniforme de Supervisor.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	            	case 4:
		            {
	    	            SetPlayerSkin(playerid, 192);
	    	            SetHP(playerid, 100);
	            	    format(string, sizeof(string), "* %s se viste con uniforme de Mujer.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	    	        case 5:
		            {
		                SetPlayerSkin(playerid, 268);
		                SetHP(playerid, 100);
	        	        format(string, sizeof(string), "* %s se viste con su uniforme de Director.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
		            case 6:
		            {
	    	            SetPlayerSkin(playerid, Info[playerid][pChar]);
	    	            SetHP(playerid, 100);
	        	        format(string, sizeof(string), "* %s se viste con su ropa normal.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	     		}
		    }
		}
	if(dialogid == EQUIPO_SistemaJ)
	{
	    if(response == 1)
	    {
   	        switch(listitem)
   	        {
		        case 0:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 228);
		            format(string, sizeof(string), "* %s coge el equipo de Director.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 1:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 240);
		            format(string, sizeof(string), "* %s coge el equipo de Abogado.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 2:
				{
				    SetPlayerSkin(playerid, Info[playerid][pChar]);
				    SetHP(playerid, 100);
				    SetPlayerToTeamColor(playerid);
				    format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
	    }
	}
	if(dialogid == EQUIPO_GOB)
	{
	    if(response == 1)
	    {
   	        switch(listitem)
   	        {
		        case 0:
		        {
		            ResetPlayerWeaponsEx(playerid);
					GivePlayerValidWeapon(playerid, 24);
					GivePlayerValidWeapon(playerid, 29);
					SetPlayerSkin(playerid, 163);
					SetHP(playerid, 100);
					SetPlayerArmour(playerid, 100);
		            format(string, sizeof(string), "* %s coge el equipo de seguridad.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 1:
		        {
		            ResetPlayerWeaponsEx(playerid);
					GivePlayerValidWeapon(playerid, 24);
					GivePlayerValidWeapon(playerid, 29);
					SetPlayerSkin(playerid, 164);
					SetHP(playerid, 100);
					SetPlayerArmour(playerid, 100);
		            format(string, sizeof(string), "* %s coge el equipo de seguridad.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 2:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 166);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 50);
		            format(string, sizeof(string), "* %s coge el equipo de chofér.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 3:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 171);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 0);
		            format(string, sizeof(string), "* %s coge el equipo de Burócrata.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 4:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 186);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 0);
		            format(string, sizeof(string), "* %s coge el equipo de Secretario.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 5:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 147);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 50);
		            format(string, sizeof(string), "* %s coge el equipo de Ministro.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 6:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 295);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 75);
		            format(string, sizeof(string), "* %s coge el equipo de Alcalde.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 7:
		        {
					SetHP(playerid, 100);
					SetPlayerSkin(playerid, 187);
					ResetPlayerWeapons(playerid);
					SetPlayerArmour(playerid, 80);
		            format(string, sizeof(string), "* %s coge el equipo de Gobernador.", GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 8:
				{
				    SetPlayerSkin(playerid, Info[playerid][pChar]);
				    ResetPlayerWeapons(playerid);
				    SetPlayerArmour(playerid, 0);
				    format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
	    }
	}
	if(dialogid == TELEPORTS_FACCIONES){
	    if(response == 1){
	        switch (listitem){
	            case 0:{
					SetPosEx(playerid, 1553.1155,-1675.7045,16.1953,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} San Andreas Police Department.{FFFFFF} (SAPD)");
				}
				case 1:{
					SetPosEx(playerid, 2831.1738,-1123.7646,24.8416,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Federal Bureau Of Investigation.{FFFFFF} (FBI)");
				}
				case 2:{
    				SetPosEx(playerid, 2032.2820,-1416.1334,16.9922,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} San Andreas Medical Department.{FFFFFF} (SAMD)");
				}
				case 3:{
    				SetPosEx(playerid, 1776.4254,-1724.3342,13.5469,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Los Santos Radio y Televisión.{FFFFFF} (LSRTV)");
				}
				case 4:{
					SetPosEx(playerid, 2751.28,-2447.02,13.64,0,0,0); 
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Ejército Militar de Estados Unidos.{FFFFFF} (EUEM)");
				}
				case 5:{
					SetPosEx(playerid, 2466.6709,-2118.2195,13.5469,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Mecánicos de LS.");
				}
				case 6:{
					SetPosEx(playerid, 1480.0621,-1743.2894,13.5469,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Gobierno Estatal de Los Santos.{FFFFFF} (GOB)");
				}
				case 7:{
					SetPosEx(playerid, -287.6416,-2192.3511,28.4127,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Sicarios.");
				}
				case 8:{
					SetPosEx(playerid, 1414.8297,-1703.0167,13.5395,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Sistema Judicial.");
				}
				case 9:{
					SetPosEx(playerid, 1832.9102,-1400.9033,13.4297,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Los Santos Fire Department.");
				}
				case 11:{
					SetPosEx(playerid, 1124.8428, -2036.5468, 70.7588,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} La Cosa Nostra.");
				}
				case 12:{
					SetPosEx(playerid, 299.8381, -1153.9520, 80.5511,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Yakuza.");
				}
				case 13:{
					SetPosEx(playerid, 690.3619, -1276.9127, 12.5500,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Mafia Rusa.");
				}

				case 14:{
					SetPosEx(playerid, 690.3619, -1276.9127, 12.5500,0,0,0);
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Estas en la faccion:{00FFFF} Ndrangheta .");
				}
			}
		}
	}
	if(dialogid == PETITION_DIALOG)
	{
	    if(response == 1)
	    {
	        format(string, sizeof(string), "* %s acepta una petición.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if(Petition_ID[playerid] == 2)
	        {
	            GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "* Pagaste una multa de $%d al oficial %s.", TicketMoney[playerid], giveplayer);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s te ha pagado la multa de $%d.", sendername, TicketMoney[playerid]);
				SendClientMessageEx(TicketOffer[playerid], COLOR_WHITE, string);
				GivePlayerCash(playerid, - TicketMoney[playerid]);
				GivePlayerCash(TicketOffer[playerid], TicketMoney[playerid]);
				Tax += TicketMoney[playerid];
				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	    }
	    else
	    {
	        format(string, sizeof(string), "* %s rechaza una petición.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        if(Petition_ID[playerid] == 2)
	        {
				SendClientMessageEx(playerid, COLOR_WHITE, "* Multa rechazada.");
				format(string, sizeof(string), "* %s te rechazó la multa.", sendername);
				SendClientMessageEx(TicketOffer[playerid], COLOR_RED2, string);
				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	    }
	}
	else if(dialogid == DIALOG_CDGLOCKBUY)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetGangVehicleCount(Info[playerid][pFMember]) != 0)
				{
				    if(GetPlayerCash(playerid) < 1000)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes 1.000 para hacer esto.");
						return 1;
					}
					SetPVarInt(playerid, "lockmenu", 1);
                    for(new i=0; i<MAX_GANG_VEHICLES; i++)
	                {
          if(FVINFO[Info[playerid][pFMember]][i][fvId] != INVALID_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Vehiculo %d | Modelo: %s.",i+1,GetVehicleName(FVINFO[Info[playerid][pFMember]][i][fvId]));
		                     SendClientMessageEx(playerid, COLOR_WHITE, string);
 				     }
				    }
				    SafeDialogEx(playerid, DIALOG_CDGLOCKMENU, DIALOG_STYLE_INPUT, "{008EC1}24-7","Selecciona el vehiculo donde instalarás el seguro:", "Ok", "Cancelar");

				}
  		else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes coches, ¿donde podemos instalar este elemento?.");
					return 1;
				}
			}
			if(listitem == 1)
			{
				if(GetGangVehicleCount(Info[playerid][pFMember]) != 0)
				{
					if(GetPlayerCash(playerid) < 5000)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF}No tienes 5000 para hacer esto");
						return 1;
					}
					SetPVarInt(playerid, "lockmenu", 2);
				    for(new i=0; i<MAX_GANG_VEHICLES; i++)
	                {
          if(FVINFO[Info[playerid][pFMember]][i][fvId] != INVALID_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Vehiculo %d | Modelo: %s.",i+1,GetVehicleName(FVINFO[Info[playerid][pFMember]][i][fvId]));
		                     SendClientMessageEx(playerid, COLOR_WHITE, string);
          }
				    }
				    SafeDialogEx(playerid, DIALOG_CDGLOCKMENU, DIALOG_STYLE_INPUT, "{008EC1}24-7","Selecciona el vehiculo donde instalarás el seguro:", "Ok", "Cancelar");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes coches, ¿donde podemos instalar este elemento?.");
					return 1;
				}
			}
		}
	}
	if(dialogid == DIALOG_CDGLOCKMENU)
	{
		if(response)
		{
		if(GetPVarInt(playerid, "lockmenu") == 1)
		{
            new fvid;
            if (isnumeric(inputtext))
	        {
				fvid = strval(inputtext)-1;
			    if(FVINFO[Info[playerid][pFMember]][fvid][fvId] == INVALID_VEHICLE_ID)
			    {
				    SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} No tienes un vehículo en esta ranura.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
			    if(FVINFO[Info[playerid][pFMember]][fvid][fvLock] == 1)
			    {
				    SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} Ya tienes instalado ese seguro en el coche.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
				format(string, sizeof(string), "{A2DC35}[24/7]:{FFFFFF} Compraste un seguro de alarma!");
			    SendClientMessageEx(playerid, COLOR_GRAD4, string);
			    SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Ahora puedes usar /fseguro para bloquear el coche.");
			    FVINFO[Info[playerid][pFMember]][fvid][fvLock] = 1;
			    SetPVarInt(playerid, "lockmenu", 0);
				if(Info[playerid][pVIP] == 0)
				{
				   	return GivePlayerCash(playerid, -500);
				}
				else
				{
   					GivePlayerCash(playerid, -500);
				}
		    }
		}
		else if(GetPVarInt(playerid, "lockmenu") == 2)
		{
		    new fvid;
            if (isnumeric(inputtext))
	        {
                fvid = strval(inputtext)-1;
			    if(FVINFO[Info[playerid][pFMember]][fvid][fvId] == 0)
			    {
				    SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} No tienes un vehículo en esta ranura.");
				    SetPVarInt(playerid, "lockmenu", 0);
	                return 1;
			    }
			    if(FVINFO[Info[playerid][pFMember]][fvid][fvLock] == 3)
		  	    {
				    SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} Ya tienes instalado ese seguro en el coche.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
			    format(string, sizeof(string), "{A2DC35}[24/7]:{FFFFFF} Has adquirido un seguro industrial!");
			    SendClientMessageEx(playerid, COLOR_GRAD4, string);
			    SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Ahora puedes usar /fseguro para bloquear el coche.");
			    FVINFO[Info[playerid][pFMember]][fvid][fvLock] = 3;
			    SetPVarInt(playerid, "lockmenu", 0);
				if(Info[playerid][pVIP] == 0)
				{
				   	return GivePlayerCash(playerid, -2000);
				}
				else
				{
   					GivePlayerCash(playerid, -2500);
				}
		    }
		}
		}
	}
	if(dialogid == NGMENU)
	{
 		if(response) switch(listitem)
		{
			case 0: // NG Duty
			{
				if(OnDuty[playerid]==0)
				{
					format(string, sizeof(string), "* Soldado %s toma una placa y una pistola de su casillero.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 287);
					Info[playerid][pModel] = 287;
	    			SetPlayerArmour(playerid, 100.0);
					GivePlayerValidWeapon(playerid, 24);
					GivePlayerValidWeapon(playerid, 31);
					OnDuty[playerid] = 1;
				}
				else if(OnDuty[playerid]==1)
				{
					format(string, sizeof(string), "* Soldado %s deja su placa y armas en el casillero.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeaponsEx(playerid);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerArmour(playerid, 0.0);
					SetPlayerSkin(playerid, Info[playerid][pChar]);
					OnDuty[playerid] = 0;
				}
			}
			case 1: // NG Uniforms
			{
			    SafeDialogEx(playerid, NGMENUSKIN, DIALOG_STYLE_LIST, "{008EC1}EUEM Uniformes", "Coronel\nOficial 1 (OFF)\nOfcial 2 (OFF)\nRanger\nEntrenamiento Hombre\nEntrenamiento Mujer\n\
				Seguridad Negro\nSeguridad Blanco\nMédico\nTraje Táctico", "Ok", "Cancelar");
			}
			case 2: // NG Weapons
			{
				SafeDialogEx(playerid, NGMENUWEP, DIALOG_STYLE_LIST, "{008EC1}EUEM Armas","Deagle\nShotgun\nMP5\nM4\nAK47\nSniper Rifle\nRifle\n\
				SDPistol\nGrenada\nTear Gas\nNitestick\nSpray\nCamara", "Equipar", "Cancelar");
			}
    		case 3: // NG Heal
			{
				SetPlayerArmour(playerid, 100);
				Tax -= 750;
    		}
			case 4: SetHP(playerid, 100);
			case 5: SafeDialogEx( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "{008EC1}Accesorios", "Bienvenido a la taquilla de accesorios de EUEM","Continuar", "Cancelar" );
			case 6: GivePlayerValidWeapon(playerid, 46);
		}
	}
	if(dialogid == NGMENUSKIN)
	{
 		if(response)
		{
			if(listitem == 0) // LSPD Uniforms
			{
			    if(Info[playerid][pRank] == 6)
			    {
					SetPlayerSkin(playerid, 295);
					Info[playerid][pModel] = 295;
				}
				else
				{
				    SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres rango 6.");
				}
			}
			if(listitem == 1) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 240);
				Info[playerid][pModel] = 240;
			}
			if(listitem == 2) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 186);
				Info[playerid][pModel] = 240;
			}
			if(listitem == 3) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 287);
				Info[playerid][pModel] = 287;
			}
			if(listitem == 4) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 179);
				Info[playerid][pModel] = 179;
			}
			if(listitem == 5) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 191);
				Info[playerid][pModel] = 191;
			}
			if(listitem == 6) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 163);
				Info[playerid][pModel] = 163;
			}
			if(listitem == 7) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 164);
				Info[playerid][pModel] = 164;
			}
			if(listitem == 8) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 276);
				Info[playerid][pModel] = 16;
			}
			if(listitem == 9) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 285);
				Info[playerid][pModel] = 285;
			}
		}
	}
	if(dialogid == NGMENUWEP)
	{
 		if(response)
		{
 			if(listitem == 0) return GivePlayerValidWeapon(playerid, 24);
			if(listitem == 1) return GivePlayerValidWeapon(playerid, 25);
			if(listitem == 2) return GivePlayerValidWeapon(playerid, 29);
			if(listitem == 3) return GivePlayerValidWeapon(playerid, 31);
			if(listitem == 4) return GivePlayerValidWeapon(playerid, 30);
			if(listitem == 5) return GivePlayerValidWeapon(playerid, 34);
			if(listitem == 6) return GivePlayerValidWeapon(playerid, 33);
			if(listitem == 7) return GivePlayerValidWeapon(playerid, 23);
			if(listitem == 8) return GivePlayerValidWeapon(playerid, 16);
			if(listitem == 9) return GivePlayerValidWeapon(playerid, 17);
			if(listitem == 10) return GivePlayerValidWeapon(playerid, 3);
			if(listitem == 11) return GivePlayerValidWeapon(playerid, 41);
			if(listitem == 12) return GivePlayerValidWeapon(playerid, 43);
		}
	}
	switch(dialogid){
  		case DIALOG_CREATEGUN:{
			if(!response)
				return 1;
		    switch(listitem){
				case 0:{
					if(Info[playerid][pMats] >= 150){
						GivePlayerValidWeapon(playerid, 8);
				        Info[playerid][pMats] -= 150;
				        SendClientMessage(playerid, COLOR_WHITE, "Creaste una katana. Usa /venderarma [playerid] para dar el arma.");
				        format(string, sizeof(string), "* %s crea una katana con sus materiales.", GetPlayerNameEx(playerid));
				        ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				        Info[playerid][pArmsSkill]++;
				        Info[playerid][pScrewdriver]--;
				        SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
							case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderes.",Info[playerid][pArmsSkill]/50);
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
				    }
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 1: {
					if(Info[playerid][pMats] >= 90) {
						GivePlayerValidWeapon(playerid, 15);
						Info[playerid][pMats] -= 90;
						SendClientMessage(playerid, COLOR_WHITE,"Creaste una Caña. Usa /venderarma [playerid] para dar el arma.");
				        format(string, sizeof(string), "* %s crea una caña con sus materiales.", GetPlayerNameEx(playerid));
				        ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				        Info[playerid][pArmsSkill]++;
				        Info[playerid][pScrewdriver]--;
				        SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
							case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 2: {
					if(Info[playerid][pMats] >= 90) {
						GivePlayerValidWeapon(playerid, 7);
						Info[playerid][pMats] -= 90;
						SendClientMessage(playerid, COLOR_WHITE,"Creaste un palo de Billar. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea un palo de billar con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				        Info[playerid][pArmsSkill]++;
				        Info[playerid][pScrewdriver]--;
				        SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 3: {
					if(Info[playerid][pMats] >= 90) {
						GivePlayerValidWeapon(playerid, 5);
						Info[playerid][pMats] -= 90;
						SendClientMessage(playerid, COLOR_WHITE,"Creaste un bate. Usa /venderarma [playerid] para dar el arma.");
 						format(string, sizeof(string), "* %s crea un bate con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				        Info[playerid][pArmsSkill]++;
				        Info[playerid][pScrewdriver]--;
				        SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 4: {
					if(Info[playerid][pMats] >= 90) {
						GivePlayerValidWeapon(playerid, 6);
						Info[playerid][pMats] -= 90;
						SendClientMessage(playerid, COLOR_WHITE,"Creaste una Pala. Usa /venderarma [playerid] para dar el arma.");
 						format(string, sizeof(string), "* %s crea una Pala con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				        Info[playerid][pArmsSkill]++;
				        Info[playerid][pScrewdriver]--;
				        SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 5: {
					if(Info[playerid][pMats] >= 300) {
						GivePlayerValidWeapon(playerid, 22);
						Info[playerid][pMats] -= 300;
						SendClientMessage(playerid, COLOR_WHITE,"Creastes una pistola 9mm. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una pistola 9mm con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 6: {
					if(Info[playerid][pMats] >= 400) {
						GivePlayerValidWeapon(playerid, 23);
						Info[playerid][pMats] -= 400;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes una pistola con silenciador. Usa /Venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una pistola con silenciador con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
									case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 7: {
					if(Info[playerid][pMats] >= 450) {
						GivePlayerValidWeapon(playerid, 25);
						Info[playerid][pMats] -= 450;
						SendClientMessage(playerid, COLOR_WHITE,"Creastes una shotgun. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string),"* %s crea una shotgun con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "No tienes suficientes materiales.");
				}
				case 8: {
					if(Info[playerid][pMats] >= 800) {
						GivePlayerValidWeapon(playerid, 24);
						Info[playerid][pMats] -= 800;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes una Desert Eagle. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una Desert Eagle con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
									case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 9: {
					if( Info[playerid][pMats] >= 1200){
						GivePlayerValidWeapon(playerid, 29);
						Info[playerid][pMats] -= 1200;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes una MP5. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una MP5 con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
									case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 10: {
					if(Info[playerid][pMats] >= 2000) {
						GivePlayerValidWeapon(playerid, 30);
						Info[playerid][pMats] -= 2000;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes una AK-47. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una AK-47 con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 11:{
					if(Info[playerid][pMats] >= 2000){
						GivePlayerValidWeapon(playerid, 31);
						Info[playerid][pMats] -= 2000;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes una M4A1. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una M4A1 con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 12: {
					if(Info[playerid][pMats] >= 4000) {
						GivePlayerValidWeapon(playerid, 34);
						Info[playerid][pMats] -= 4000;
						SendClientMessage(playerid, COLOR_WHITE,"Creastes un sniper rifle. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea un sniper rifle con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
				case 13: {
					if(Info[playerid][pMats] >= 3000) {
						GivePlayerValidWeapon(playerid, 27);
						Info[playerid][pMats] -= 3000;
						SendClientMessage(playerid, COLOR_WHITE, "Creastes un SPAS12. Usa /venderarma [playerid] para dar el arma.");
						format(string, sizeof(string), "* %s crea una SPAS12 con sus materiales.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Info[playerid][pArmsSkill]++;
						Info[playerid][pScrewdriver]--;
						SetPVarInt(playerid, "ArmsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
						switch(Info[playerid][pArmsSkill]) {
								case 50, 100,300, 600: {
								format(string,sizeof(string),"Felicitaciones! Tu nivel de creación de armas aumentó. Ahora puedes crear armas más poderosas.");
								SendClientMessage(playerid,COLOR_WHITE,string);
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficientes materiales.");
				}
			}
		}
		// VIP Locker /viplocker
		case DIALOG_VIPLOCKER:{
			if(response){
				if(listitem == 0){
 					new Float:health;
 					GetPlayerHealth(playerid, health);
					new hpint = floatround( health, floatround_round );
		    		if( hpint >= 100 ) return SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Ya tienes la vida al tope.");
			    	SetHP(playerid, 100);
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Usaste el Botiquín HP, ahora tienes 100 de vida.");
				}
				if(listitem == 1){
					new Float:armour;
					GetPlayerArmour(playerid, armour);
					if(armour >= 100) return SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Ya tienes la armadura al tope.");
					if(Info[playerid][pVIP] == 1){
						if(GetPlayerCash(playerid) < 15000) return SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $15000!");
						GivePlayerCash(playerid, -15000);
						SetPlayerArmour(playerid, 100);
						SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Pagaste $15000 por una armadura.");
					}
					else if(Info[playerid][pVIP] == 2){
						if(GetPlayerCash(playerid) < 10000) return SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $10000!");
						GivePlayerCash(playerid, -10000);
						SetPlayerArmour(playerid, 100);
						SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Pagaste $10000 por una armadura.");
					}
					if(Info[playerid][pVIP] >= 3) SetPlayerArmour(playerid, 100);
				}
				if(listitem == 2){
            		if(Info[playerid][pVIP] >= 2) return SafeDialogEx( playerid, DIALOG_VIPCLOTHES, DIALOG_STYLE_INPUT, "{008EC1}Selector de Skin","Por favor ingresa una Skin ID!\n\nNote: Los cambios de Skin son Gratis.", "Cambiarse", "Cancelar" );
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Debes ser VIP Silver o mayor para acceder a los lockers de Ropa.");
				}
				if(listitem == 3){
  					if(Info[playerid][pVIP] >= 2) return SafeDialogEx(playerid, DIALOG_VIPJOB, DIALOG_STYLE_LIST, "{008EC1}VIP: Trabajos", "Ninguno\nLeñador\nPizzero\nCamionero\nArmero\nTaxista\nGranjero\nTraficante de drogas\nJardinero", "Ok", "Cancelar");
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Debes ser VIP Silver o mayor para acceder a los trabajos.");
				}
				if(listitem == 4) SafeDialogEx(playerid, DIALOG_VIPCOLOR, DIALOG_STYLE_LIST, "{008EC1}VIP Color", "On\nOff", "Ok", "Cancelar");
			}
		}
				case DIALOG_MYBUSINESS:
		if(response)
	{
	    new x = getPlayerBusinessID(playerid),szDialogTittle[48];
	    switch(listitem)
	    {
			case 0:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Disponible: $%d", businessVariables[x][bVault]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_RET,DIALOG_STYLE_INPUT,szDialogTittle,"Ingresa la cantidad que deseas retirar","Retirar","Atrás");
			}
			case 1:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Disponible: $%d", businessVariables[x][bVault]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_DEP,DIALOG_STYLE_INPUT,szDialogTittle,"Ingresa la cantidad que deseas depositar","Depositar","Atrás");
			}
			case 2:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "{FFFFFF}Stock de productos disponibles: %d.", businessVariables[x][bStock]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_STO,DIALOG_STYLE_MSGBOX,"Stock",szDialogTittle,"Atrás","Salir");
			}
			case 3:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Ingresa la cantidad que deseas pedir.\n\n{FFFFFF}Stock disponible: %d.", businessVariables[x][bStock]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_PSTO,DIALOG_STYLE_INPUT,"Pedir productos",szDialogTittle,"Pedir","Salir");
			}
	    }
	}
	case DIALOG_MYBUSINESS_RET:
	{
	    new id = getPlayerBusinessID(playerid), money = strval(inputtext);
		if(response)
		{
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	        if (isnumeric(inputtext))
	        {
	            if(businessVariables[id][bVault] < money) return SendClientMessage(playerid, COLOR_GREY, "* No hay la cantidad de dinero que ingresaste.");
				Earn(playerid, money);
				businessVariables[id][bVault] -= money;
				new szMessage[256];
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d - Dinero disponible: $%d",money,businessVariables[id][bVault]);
				SendClientMessageEx(playerid, -1, szMessage);
				SaveVarBusiness(1,id, "Vault",businessVariables[id][bVault]);
			}
			else return SendClientMessageEx(playerid, -1, "* Sólo puedes ingresar números.");
		}
		else
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
	}
	case DIALOG_MYBUSINESS_DEP:
	{
	    new id = getPlayerBusinessID(playerid), money = strval(inputtext);
		if(response)
		{
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	        if(isnumeric(inputtext))
	        {
	            if(money > GetPlayerCash(playerid)) return SendClientMessage(playerid, COLOR_GREY, "* No tienes la cantidad de dinero que ingresaste.");
				Bought(playerid, money);
				businessVariables[id][bVault] += money;
				new szMessage[256];
				format(szMessage, sizeof(szMessage), "* Depositaste: $%d - Dinero disponible: $%d",money,businessVariables[id][bVault]);
				SendClientMessageEx(playerid, -1, szMessage);
				SaveVarBusiness(1,id, "Vault",businessVariables[id][bVault]);
			}
			else return SendClientMessageEx(playerid, -1, "* Sólo puedes ingresar números.");
		}
		else
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
	}
	case DIALOG_MYBUSINESS_STO:
	{
	    new id = getPlayerBusinessID(playerid);
		if(response)
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
		else { return 1; }
	}
	case DIALOG_MYBUSINESS_PSTO:
	{
		if(response)
		{
		    new stocke = strval(inputtext);
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	    	if(isnumeric(inputtext))
	    	{
		    	new szDialogTittle[84],
					IGV = 18,
					value = 4,
					total;
		    	total = (stocke * value) + 18;
		    	SetPVarInt(playerid,"BusinessStock",total);
		    	SetPVarInt(playerid,"Stock",stocke);
		    	format(szDialogTittle, sizeof(szDialogTittle), "Pedido de productos:\n\nCosto: %d\nImpuesto: %d\n\nTOTAL: %d.",stocke*value,IGV,total);
		    	ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_PSTO2,DIALOG_STYLE_MSGBOX,"Factura:",szDialogTittle, "Pagar", "Salir");
			}
			else SendClientMessageEx(playerid, COLOR_GREY,"* Sólo puedes ingresar números.");
		}
		else { return 1; }
	}
	case DIALOG_MYBUSINESS_PSTO2:
	{
		if(response)
		{
		    new newtotal = GetPVarInt(playerid,"BusinessStock"), newstock = GetPVarInt(playerid,"Stock");
		    if(newtotal > GetPlayerCash(playerid)) return SendClientMessageEx(playerid, COLOR_GREY,"* No tienes el dinero que necesitas en tu mano, sácalo de la caja fuerte de tu negocio o del banco.");
            Bought(playerid,newtotal);
            Tax += newtotal;
            new szMessage[256];
			format(szMessage, sizeof(szMessage), "* Hiciste la compra de stock para tu negocio de %d por $%d",newstock,newtotal);
			SendClientMessageEx(playerid, -1, szMessage);
			new id = getPlayerBusinessID(playerid);
			businessVariables[id][bStock] += newstock;
			SaveVarBusiness(1,id, "Stock",businessVariables[id][bStock]);
			return 1;
		}
		else { return 1; }
	}
		case DIALOG_VIPJOB:
		{
	    	if(!response) return 1;
	    	switch(listitem){
            	case 0: SetPVarInt(playerid, "jobSelection", 0);
            	case 1: SetPVarInt(playerid, "jobSelection", 4);
            	case 2: SetPVarInt(playerid, "jobSelection", 6);
            	case 3: SetPVarInt(playerid, "jobSelection", 7);
            	case 4: SetPVarInt(playerid, "jobSelection", 8);
            	case 5: SetPVarInt(playerid, "jobSelection", 9);
            	case 6: SetPVarInt(playerid, "jobSelection", 13);
            	case 7: SetPVarInt(playerid, "jobSelection", 2);
        	}
        	SafeDialogEx(playerid, DIALOG_VIPJOB2, DIALOG_STYLE_LIST, "{008EC1}VIP Trabajos", "Job slot 1\nJob slot 2", "Ok", "Cancelar");
    	}
		case DIALOG_VIPJOB2:{
	    	if(!response) return 1;
	    	switch(listitem){
	        	case 0:
	        	{
					Info[playerid][pJob] = GetPVarInt(playerid, "jobSelection");
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Cambiaste tu primer trabajo.");
				}
				case 1:
				{
					Info[playerid][pJob2] = GetPVarInt(playerid, "jobSelection");
					SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Cambiaste tu segundo trabajo.");
				}
			}
		}
		case DIALOG_VIPCOLOR:{
	    	if(!response) return 1;
	    	switch(listitem){
	        	case 0: SetPlayerColor(playerid, COLOR_VIP) && SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Activaste el color VIP en tu nombre.");
	        	case 1: SetPlayerToTeamColor(playerid) && SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Desactivaste el color VIP en tu nombre.");
	    	}
		}
		case DIALOG_VIPCLOTHES: //vip clothes corner
		{
			new skinid = strval(inputtext);
			if(!response) { }
			else{
				if(!IsValidSkin(skinid))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ese skin no está disponible, skins: IDs son de 1 a 311 !");
    				SafeDialogEx( playerid, DIALOG_VIPCLOTHES, DIALOG_STYLE_INPUT, "VIP: Skin","Por favor ingresa una Skin ID!\n\nNota: Los cambios de skin son Libres.", "Cambiar", "Cancelar" );
				}
				else{
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Te cambiaste tu skin en los lockers VIP.");
					Info[playerid][pChar] = skinid;
					SetPlayerSkin(playerid, skinid);
				}
  			}
			return 1;
		}
		case DIALOG_ADMAIN: if(response) switch(listitem)
		{
			case 0:
			{
				if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Estás prohibido de hacer anuncios.");
				if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
				if(iAdverTimer >= 1)
				{
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
                    new szerror[128];
					format(szerror, sizeof(szerror), "Sólo se puede enviar un anuncio global cada 1 Minuto, faltan %d segundos.", iAdverTimer);
					return SendClientMessageEx(playerid, COLOR_GREY, szerror);
				}
				else SafeDialogEx(playerid, DIALOG_ADPLACEP, DIALOG_STYLE_INPUT, "{008EC1}Anuncios - Compra Venta","Ingresa el de anuncio, recuerda que los anuncios son exclusivamente para compra y venta\nNota: Tamaño del texto sólo será máximo 128 Letras.\nNota: Este anuncio se hará desde SA News.", "Enviar", "Atrás");
			}
			case 1:
			{
				if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Estás prohibido de hacer anuncios.");
				if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
				if(iAdverTimer >= 1)
				{
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
                    new szerror[128];
					format(szerror, sizeof(szerror), "Sólo se puede enviar un anuncio global cada 1 Minuto, faltan %d segundos.", iAdverTimer);
					return SendClientMessageEx(playerid, COLOR_GREY, szerror);
				}
				else SafeDialogEx(playerid, DIALOG_ADPLACEP2, DIALOG_STYLE_INPUT, "{008EC1}Anuncios - Clasificados","Ingresa el anuncio, recuerda que los anuncios son exclusivamente para clasificados\nNota: Tamaño del texto sólo será máximo 128 Letras.\nNota: Este anuncio se hará desde SA News.", "Enviar", "Atrás");
			}
			case 2:
			{
				if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Estás prohibido de hacer anuncios.");
				if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
				if(iAdverTimer >= 1)
				{
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
                    new szerror[128];
					format(szerror, sizeof(szerror), "Sólo se puede enviar un anuncio global cada 1 Minuto, faltan %d segundos.", iAdverTimer);
					return SendClientMessageEx(playerid, COLOR_GREY, szerror);
				}
				else SafeDialogEx(playerid, DIALOG_ADPLACEP3, DIALOG_STYLE_INPUT, "{008EC1}Anuncios - Empleo","Ingresa el anuncio, recuerda que los anuncios son exclusivamente para busqueda de trabajo\nNota: Tamaño del texto sólo será máximo 128 Letras.\nNota: Este anuncio se hará desde SA News.", "Enviar", "Atrás");
			}
			case 3:
			{
				if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Estás prohibido de hacer anuncios.");
				if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
				if(iAdverTimer >= 1)
				{
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
                    new szerror[128];
					format(szerror, sizeof(szerror), "Sólo se puede enviar un anuncio global cada 1 Minuto, faltan %d segundos.", iAdverTimer);
					return SendClientMessageEx(playerid, COLOR_GREY, szerror);
				}
				else SafeDialogEx(playerid, DIALOG_ADPLACEP4, DIALOG_STYLE_INPUT, "{008EC1}Anuncios - Extras","Ingresa el anuncio, recuerda que los anuncios son exclusivamente para extras y noticias\nNota: Tamaño del texto sólo será máximo 128 Letras.\nNota: Este anuncio se hará desde SA News.", "Enviar", "Atrás");
			}
		}
		case DIALOG_ADPLACE:{
			if(response){
				new
					iLength = strlen(inputtext);
				if(Info[playerid][pAdverID] != -1) return SendClientMessageEx(playerid, COLOR_GREY, "Ya hiciste un anuncio, primero borra el anterior.");
				if(isnull(inputtext)){
				    SafeDialogEx(playerid, DIALOG_ADPLACE, DIALOG_STYLE_INPUT, "{008EC1}Anuncios - Hacer Anuncio", "Ingresa el anuncio que dejarás, recuerda que los anuncios son exclusivamente para compra y venta\nNota: Tamaño del texto sólo será máximo 128 Letras", "Enviar", "Atrás");
				    return SendClientMessageEx(playerid, COLOR_GREY, "No ingresaste nada.");
				}
				if(strlen(inputtext) >= 128){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "Ingresaste un anuncio con más de 128 Letras.");
				}
				iLength *= 5;
				if(GetPlayerCash(playerid) < iLength) return SendClientMessageEx(playerid, COLOR_GREY, "No tienes suficiente dinero para pagar el anuncio.");
				GivePlayerCash(playerid, -iLength);
				SendAD(playerid, inputtext, Info[playerid][pPnumber]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones tu anuncio saldrá en la lista.");
			}
			else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
		}
  		case DIALOG_ADPLACEP:{
			if(response){
				if(GetPlayerCash(playerid) < 100){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero para hacer este anuncio.");
				}
				else if(strlen(inputtext) >= 128){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "Ingresaste un anuncio con más de 128 Letras.");
				}
				iAdverTimer = 60;
				GivePlayerCash(playerid, -200);
				new
					szMessage[255];
                new st[128];
                if(DetectarSpam(inputtext)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste Spam, esto está prohibido."); return 0; }
				format(szMessage, sizeof(szMessage), "[Compra-Venta]: %s {00FFFF}[Contacto(%i)]", inputtext, Info[playerid][pPnumber]);
				OOCNews(TEAM_GROVE_COLOR,szMessage);
				format(st,128,"[Anunciante]: %s (%d)",GetPlayerNameEx(playerid),playerid);
				SendAdminMessage(COLOR_GREY,st);
				return PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
		}
		case DIALOG_ADPLACEP2:{
			if(response){
				if(GetPlayerCash(playerid) < 100){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero para hacer este anuncio.");
				}
				else if(strlen(inputtext) >= 128){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "Ingresaste un anuncio con más de 128 Letras.");
				}
				iAdverTimer = 60;
				GivePlayerCash(playerid, -200  );
				new
					szMessage[255];
                new st[128];
                if(DetectarSpam(inputtext)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste Spam, esto está prohibido."); return 0; }
				format(szMessage, sizeof(szMessage), "[Clasificados]: %s {00FFFF}[Contacto(%i)]", inputtext, Info[playerid][pPnumber]);
				OOCNews(TEAM_GROVE_COLOR,szMessage);
                format(st,128,"[Anunciante]: %s (%d)",GetPlayerNameEx(playerid),playerid);
				SendAdminMessage(COLOR_GREY,st);
				return PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
		}
		case DIALOG_ADPLACEP3:{
			if(response){
				if(GetPlayerCash(playerid) < 50){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero para hacer este anuncio.");
				}
				else if(strlen(inputtext) >= 128){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "Ingresaste un anuncio con más de 128 Letras.");
				}
				iAdverTimer = 60;
				GivePlayerCash(playerid, -50);
				new
					szMessage[255];
				new st[128];
				if(DetectarSpam(inputtext)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste Spam, esto está prohibido."); return 0; }
				format(szMessage, sizeof(szMessage), "[Empleos]: %s {00FFFF}[Contacto(%i)]", inputtext, Info[playerid][pPnumber]);
				OOCNews(TEAM_GROVE_COLOR,szMessage);
				format(st,128,"[Anunciante]: %s (%d)",GetPlayerNameEx(playerid),playerid);
				SendAdminMessage(COLOR_GREY,st);
				return PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
		}
		case DIALOG_ADPLACEP4:{
			if(response){
				if(GetPlayerCash(playerid) < 500){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero para hacer este anuncio.");
				}
				else if(strlen(inputtext) >= 128){
					SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
					return SendClientMessageEx(playerid, COLOR_GREY, "Ingresaste un anuncio con más de 128 Letras.");
				}
				iAdverTimer = 60;
				GivePlayerCash(playerid, -500);
				new
					szMessage[255];
				new st[128];
				if(DetectarSpam(inputtext)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste Spam, esto está prohibido."); return 0; }
				format(szMessage, sizeof(szMessage), "[Extras]: %s {00FFFF}[Contacto(%i)]", inputtext, Info[playerid][pPnumber]);
				OOCNews(TEAM_GROVE_COLOR,szMessage);
                format(st,128,"[Anunciante]: %s (%d)",GetPlayerNameEx(playerid),playerid);
				SendAdminMessage(COLOR_GREY,st);
				return PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{008EC1}Anuncios", "Compra Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
		}

	    case DOORLOCK:
		{
			if(response == 1)
			{
			    new i = GetPVarInt(playerid, "Door");
			    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "No ingresaste nada." );
			    if(strlen(inputtext) > 24) return SendClientMessageEx(playerid, COLOR_GREY, "La contraseña no es más de 24 letras o números.");
			    if(strcmp(inputtext, DDoorsInfo[i][dPass], true) == 0){
			        if(DDoorsInfo[i][dLocked] == 0){
						DDoorsInfo[i][dLocked] = 1;
						SendClientMessageEx(playerid, COLOR_WHITE, "Contraseña Aceptada, puerta bloqueada.");
			        }
			        else{
			            DDoorsInfo[i][dLocked] = 0;
			            SendClientMessageEx(playerid, COLOR_WHITE, "Contraseña Aceptada, puerta desbloqueada.");
			        }
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "¡Contraseña Incorrecta!");
			}
		}
		case ADMUTE:
		{
		    if(response == 1)
		    {
		        switch(listitem)
		        {
		            case 0: // Jailtime
					{
					    if(Info[playerid][pADMuteTotal] < 4)
					    {
						    Info[playerid][pADMute] = 0;
					        ResetPlayerWeaponsEx(playerid);
							if(Info[playerid][pJailed] != 0)
							{
							    Info[playerid][pJailTime] += Info[playerid][pADMuteTotal]*15*60;
							}
							else
							{
							    GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Fort DeMorgan", 5000, 3);
								Info[playerid][pJailed] = 1; PhoneOnline[playerid] = 1;
								Info[playerid][pJailTime] = Info[playerid][pADMuteTotal]*15*60;
								SetPlayerFacingAngle(playerid, 0);
								TogglePlayerControllable(playerid, 1);
								new rand = random(sizeof(OOCJail));
								LoadObjects(playerid);
								SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
								SetPlayerVirtualWorld(playerid, 1000);
								SetPlayerInterior(playerid,0);
								SetPlayerSkin(playerid, 50);
								SetPlayerToTeamColor(playerid);
							}
					    }
					    else if(Info[playerid][pADMuteTotal] >= 4 || Info[playerid][pADMuteTotal] < 7)
					    {
						    Info[playerid][pADMute] = 0;
							ResetPlayerWeaponsEx(playerid);
							if(Info[playerid][pJailed] != 0)
							{
							    Info[playerid][pJailTime] += Info[playerid][pADMuteTotal]*15*60;
							}
							else
							{
							    GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Fort DeMorgan", 5000, 3);
								new rand = random(sizeof(OOCJail));
								LoadObjects(playerid);
								SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
								SetPlayerVirtualWorld(playerid, 1000);
								SetPlayerInterior(playerid,0);
								SetPlayerSkin(playerid, 50);
								Info[playerid][pJailed] = 1;
								Info[playerid][pJailTime] = Info[playerid][pADMuteTotal]*15*60;
								PhoneOnline[playerid] = 1;
								SetPlayerToTeamColor(playerid);
								SetPlayerWantedLevel(playerid, 0);
								ClearAnimations(playerid);
								SetPlayerSkin(playerid, 50);
							}
					    }
						format(string,sizeof(string),"[AdmWarning]: %s estará en prisión %d Minutos, gracias a la oportunidad de AD Unmuted.",GetPlayerNameEx(playerid),Info[playerid][pADMuteTotal]*15);
						ABroadCast(COLOR_GENERAL,string,2);
	            	}
	            	case 1: // Fine
	            	{
	            	    new playername[MAX_PLAYER_NAME];
	            	    GetPlayerName(playerid, playername, sizeof(playername));

		                new allmoney;
	 					if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
						{
	 						allmoney = HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]+GetPlayerCash(playerid)+Info[playerid][pAccount];
	   					}
	   					else
	    				{
	   						allmoney = GetPlayerCash(playerid)+Info[playerid][pAccount];
	    				}
	                    Info[playerid][pADMute] = 0;
					    new fine = 10*allmoney/100;
		                format(string,sizeof(string),"[AdmWarning]: %s pagó $%d por la oportunidad de AD Unmuted.",GetPlayerNameEx(playerid),fine);
		                GivePlayerCash(playerid,-fine);
						ABroadCast(COLOR_GENERAL,string,2);
		            }
		        }
		    }
		    else
		    {
		        format(string,sizeof(string),"[AdmWarning]: %s canceló su oportunidad de ser desmuteado del comando /ad.",GetPlayerNameEx(playerid));
				ABroadCast(COLOR_GENERAL,string,2);
		    }
		}
		case DUTYMENU:
		{
 			if(response)
			{
				if(listitem == 0) // LSPD Duty
				{
					if(OnDuty[playerid] == 0)
					{
					    if(Info[playerid][pRank] == 1)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Cadete %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 71);
						Info[playerid][pModel] = 71;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 41);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
		    			else if(Info[playerid][pRank] == 2)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Oficial %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 280);
						Info[playerid][pModel] = 280;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 29);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
   						else if(Info[playerid][pRank] == 3)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Detective %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 281);
						Info[playerid][pModel] = 281;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 25);
	    				GivePlayerValidWeapon(playerid, 29);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
						else if(Info[playerid][pRank] == 4)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Sargento %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 282);
						Info[playerid][pModel] = 282;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 25);
	    				GivePlayerValidWeapon(playerid, 29);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
						else if(Info[playerid][pRank] == 5)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Teniente %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 283);
						Info[playerid][pModel] = 283;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 31);
	    				GivePlayerValidWeapon(playerid, 29);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
						else if(Info[playerid][pRank] == 6)
					    {
					    ResetPlayerWeaponsEx(playerid);
						format(string, sizeof(string), "* Comisario %s coge su equipo reglamentario y su placa.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_BLUE_COLOR);
						SetPlayerSkin(playerid, 288);
						Info[playerid][pModel] = 288;
	    				SetPlayerArmour(playerid, 100.0);
	    				GivePlayerValidWeapon(playerid, 25);
	    				GivePlayerValidWeapon(playerid, 31);
	    				GivePlayerValidWeapon(playerid, 29);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 3);
						OnDuty[playerid] = 1;
						}
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* Agente %s deja su equipo reglamentario en su casillero y se quita su uniforme.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SetPlayerArmour(playerid, 0.0);
						SetPlayerSkin(playerid, Info[playerid][pChar]);
						ResetPlayerWeaponsEx(playerid);
						OnDuty[playerid] = 0;
					}
				}
				if(listitem == 1) // LSPD Weapons
				{
					SafeDialogEx(playerid, DUTYMENU2, DIALOG_STYLE_LIST, "LSPD Equipamiento","Chaleco Antibalas\nBotiquin\nAccessorios", "Ok", "Cancelar");
				}
				if(listitem == 2) // LSPD SWAT Uniform
				{
				    if(Info[playerid][pDivision] == 5 && Info[playerid][pRank] >= 3)
				    {
				        ResetPlayerWeaponsEx(playerid);
				        format(string, sizeof(string), "* Agente %s coge su equipo pesado y se coloca su uniforme SWAT.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				        GivePlayerValidWeapon(playerid, 34);
				        GivePlayerValidWeapon(playerid, 17);
				        GivePlayerValidWeapon(playerid, 31);
				        GivePlayerValidWeapon(playerid, 24);
						SetPlayerSkin(playerid, 285);
						Info[playerid][pModel] = 285;
						OnDuty[playerid] = 1;
					}
					else
					{
					    SendClientMessageEx(playerid, COLOR_WHITE, "No eres de la división de SWAT.");
					}
				}
				if(listitem == 3) // LSPD Uniforms
				{
					SafeDialogEx(playerid, DUTYMENU3, DIALOG_STYLE_LIST, "Uniformes LSPD","Oficial Moto\nOficial Femenina\nOficial Femenina 2\nOficial Femenina 3", "Ponerse", "Cancelar");
				}
				if(listitem == 4) // LSPD Undercover Uniform
				{
					SafeDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Encubierto","Elige un Skin (por ID).", "Ok", "Cancelar");
				}
			}
		}
	 	case DUTYMENU2:
		{
 			if(response)
			{
		    	if(Tax > 0) switch(listitem) {
				case 0: // LSPD Kevlar
					{
     					format(string, sizeof(string), "* Agente %s coge un chaleco antibalas de su armario y se lo pone.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerArmour(playerid, 100.0);
						Tax -= 2000;
					}
					case 1:
					{
     					format(string, sizeof(string), "* Agente %s coge un botiquin de primeros auxilios.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetHP(playerid, 100);
						Tax -= 500;
					}
					case 2: SafeDialogEx( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Accessorios", "Bienvenido al casillero de accesorios del LSPD","Continuar", "Cancelar" );
				}
				else return SendClientMessageEx(playerid,COLOR_WHITE,"El gobierno no tiene fondos para facilitar armas.");
			}
		}
		case DUTYMENU3:
		{
 			if(response)
			{
				if(listitem == 0) // LSPD Uniforms
				{
					SetPlayerSkin(playerid, 284);
					Info[playerid][pModel] = 284;
				}
				if(listitem == 1) // LSPD Uniforms
				{
					SetPlayerSkin(playerid, 306);
					Info[playerid][pModel] = 306;
				}
				if(listitem == 2) // LSPD Uniforms
				{
					SetPlayerSkin(playerid, 307);
					Info[playerid][pModel] = 307;
				}
				if(listitem == 3) // LSPD Uniforms
				{
					SetPlayerSkin(playerid, 309);
					Info[playerid][pModel] = 309;
				}
			}
		}
		case FDUTYMENU:
		{
 			if(response)
			{
				if(listitem == 0) // FBI Duty
				{
					if(OnDuty[playerid] == 0)
					{
						format(string, sizeof(string), "* Agente %s coge una placa y una pistola de su casillero.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerArmour(playerid, 100.0);
						GivePlayerValidWeapon(playerid, 24);
						GivePlayerValidWeapon(playerid, 29);
						SetPlayerSkin(playerid, 286);
						OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* Agente %s deja su placa y su arma en su casillero.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						ResetPlayerWeaponsEx(playerid);
						SetPlayerSkin(playerid, Info[playerid][pChar]);
						SetPlayerArmour(playerid, 0.0);
						OnDuty[playerid] = 0;
					}
				}
			}
			if(listitem == 1) // FBI Weapons
			{
				SafeDialogEx(playerid, FDUTYMENU2, DIALOG_STYLE_LIST, "{008EC1}Armamento","Mace\nNite Stick\nDesert Eagle\nMP5\nM4A1\nAK-47\nSmoke Grenade\nCamara\nSniper Rifle\nTactical Vest\nFirst Aid Kit\nAccesorios", "Ok", "Cancelar");
			}
			if(listitem == 2) // FBI SWAT Uniform
			{
           	    if(Info[playerid][pRank] > 3)
				{
    				SetPlayerSkin(playerid, 285);
	    			Info[playerid][pModel] = 285;
				}
				else
				{
    				SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes el rango requerido (3).");
    				return 1;
				}
			}
			if(listitem == 3) // FBI Uniforms
			{
				SafeDialogEx(playerid, FDUTYMENU3, DIALOG_STYLE_LIST, "{008EC1}Uniformes","Agente con escudo\nAgente 1\nAgente 2\nAgente Asiatico\nAgente Asiatico 2\nSWAT\nMujer", "Poner", "Cancelar");
			}
			if(listitem == 4) // FBI Undercover Uniform
			{
				SafeDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "{008EC1}Encubierto","Elige un skin (por ID).", "Ok", "Cancelar");
			}
		}
		case FDUTYMENU2:
		{
 			if(response)
			{
		    	if(Tax <= 0) return SendClientMessageEx(playerid,COLOR_WHITE,"El gobierno no tiene fondos para facilitar armas.");
		    	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					else switch(listitem) {
					case 0: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 41);
						Tax -= 100;
					}
					case 1: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 3);
						Tax -= 100;
					}
					case 2: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 24);
						Tax -= 500;
					}
					case 3: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 29);
						Tax -= 400;
					}
					case 4: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 31);
						Tax -= 4000;
					}
					case 5: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 30);
						Tax -= 4000;
					}
					case 6: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 17);
						Tax -= 800;
					}
					case 7: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 43);
						Tax -= 300;
					}
					case 8: // FBI Weapons
					{
						GivePlayerValidWeapon(playerid, 34);
						Tax -= 10000;
					}
					case 9: // FBI Weapons
					{
						SetPlayerArmour(playerid, 100);
						Tax -= 2000;
					}
					case 10: SetHP(playerid, 100);
					default: SafeDialogEx( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "{008EC1}Accesorios", "Bienvenido al casillero de accesorios del FBI.","Continuar", "Cancelar" );
				}
			}
		}
		case FDUTYMENU3:
		{
 			if(response)
			{
				if(listitem == 0) // FBI Uniforms
				{
					SetPlayerSkin(playerid, 286);
					Info[playerid][pModel] = 286;
				}
				if(listitem == 1) //FBI Uniforms
				{
					SetPlayerSkin(playerid, 166);
					Info[playerid][pModel] = 166;
				}
				if(listitem == 2) // FBI Uniforms
				{
					SetPlayerSkin(playerid, 165);
					Info[playerid][pModel] = 165;
				}
				if(listitem == 3) // FBI Uniforms
				{
					SetPlayerSkin(playerid, 294);
					Info[playerid][pModel] = 294;
				}
				if(listitem == 4) // FBI Uniforms
				{
					SetPlayerSkin(playerid, 120);
					Info[playerid][pModel] = 120;
				}
				if(listitem == 5) //FBI Uniforms
				{
					SetPlayerSkin(playerid, 285);
					Info[playerid][pModel] = 285;
				}
				if(listitem == 6) //FBI Uniforms
				{
					SetPlayerSkin(playerid, 141);
					Info[playerid][pModel] = 141;
				}
			}
		}
		case FDUTYMENU4:
		{
 			if(response)
			{
	 	        new skinid = strval(inputtext);
 		        if(!IsValidSkin(skinid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Debes de escoger una id de skin entre 1 y 311.");
				if(!IsPublicSkin(skinid)) return SafeDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "{008EC1}Encubierto","Skin inválido. Escoge otro.", "Seleccionar", "Cancelar");
				Info[playerid][pChar] = skinid;
				Info[playerid][pModel] = skinid;
				SetPlayerSkin(playerid, Info[playerid][pChar]);
			}
		}
		case DIALOG_LOADTRUCK: // TRUCKER JOB LOAD TRUCK
		{
 			if(response)
			{
				if(listitem == 0) // Legal goods
				{
			    	SafeDialogEx(playerid, DIALOG_LOADTRUCKL, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{008EC1}Comida y Bebida\n{008EC1}Ropa\n{008EC1}Materiales\n{008EC1}Objetos del 24/7", "Ok", "Cancelar");
				}
				if(listitem == 1) // Illegal goods
				{
					new level = Info[playerid][pTruckSkill];
					if(level >= 0 && level <= 50)
					{
            			SafeDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FF0606}Armas 		{FFFFFF}(Nivel 1 Bonus: puño americano\n{FF0606}Drogas 			{FFFFFF}(Nivel 1 Bonus: 1gr de cada Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 1 Bonus: 15 materiales)", "Ok", "Cancelar");
					}
					else if(level >= 51 && level <= 100)
					{
		    			SafeDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FF0606}Armas 		{FFFFFF}(Nivel 2 Bonus: bate de baseball y un puño americano\n{FF0606}Drogas 			{FFFFFF}(Nivel 2 Bonus: 2gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 2 Bonus: 25 materiales)", "Ok", "Cancelar");
					}
					else if(level >= 101 && level <= 200)
					{
		    			SafeDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FF0606}Armas 		{FFFFFF}(Nivel 3 Bonus: 9mm\n{FF0606}Drogas 			{FFFFFF}(Nivel 3 Bonus: 3gr de cada Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 3 Bonus: 35 materiales)", "Ok", "Cancelar");
					}
					else if(level >= 201 && level <= 400)
					{
            			SafeDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FF0606}Armas 		{FFFFFF}(Nivel 4 Bonus: SD pistol y  katana\n{FF0606}Drogas 			{FFFFFF}(Nivel 4 Bonus: 4gr de cada Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 4 Bonus: 50 materiales)", "Ok", "Cancelar");
					}
					else if(level >= 401)
					{
 		 				SafeDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "{008EC1}¿Que quieres transportar?","{FF0606}Armas 		{FFFFFF}(Nivel 5 Bonus: mp5 o shotgun\n{FF0606}Drogas 			{FFFFFF}(Nivel 5 Bonus: 5gr de cada Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 5 Bonus: 100 materiales)", "Ok", "Cancelar");
					}
				}
			}
			else
			{
		    	DeletePVar(playerid, "IsFrozen");
				TogglePlayerControllable(playerid, 1);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Cancelaste la carga del camión, usa /cargarcamion para intentarlo de nuevo.");
			}
		}
		case DIALOG_LOADTRUCKL: // TRUCKER JOB LEGAL GOODS
		{
 			if(response)
			{
				if(listitem == 0) // Food & beverages
				{
					new route = Random(1, 4);
    				if(route == 1)
					{
    					SetPVarInt(playerid, "TruckDeliver", 1);
    				}
    				if(route == 2)
					{
    					SetPVarInt(playerid, "TruckDeliver", 2);
    				}
    				if(route == 3)
					{
    					SetPVarInt(playerid, "TruckDeliver", 3);
    				}
    				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con comida y bebidas.");
				}
				if(listitem == 1) // Clothing
				{
					new route = Random(1, 4);
    				if(route == 1)
					{
    					SetPVarInt(playerid, "TruckDeliver", 4);
    				}
    				if(route == 2)
					{
    					SetPVarInt(playerid, "TruckDeliver", 5);
    				}
    				if(route == 3)
					{
    					SetPVarInt(playerid, "TruckDeliver", 6);
    				}
                	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con ropa y calzado.");
				}
				if(listitem == 2) // Materials
				{
					SetPVarInt(playerid, "TruckDeliver", 7);
                	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con materiales.");
				}
				if(listitem == 3) // 24/7 Items
				{
					new route = Random(1, 4);
    				if(route == 1)
					{
    					SetPVarInt(playerid, "TruckDeliver", 8);
    				}
    				if(route == 2)
					{
    					SetPVarInt(playerid, "TruckDeliver", 9);
    				}
    				if(route == 3)
					{
    					SetPVarInt(playerid, "TruckDeliver", 10);
    				}
                	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con artículos del 24/7.");
				}
  				LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
				SetProgressBarValue(LoadTruckBar[playerid], 100.0);
				ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
				SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
			}
			else
			{
		    	DeletePVar(playerid, "IsFrozen");
				TogglePlayerControllable(playerid, 1);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has cancelado la carga de los camiones, usa /cargarcamion para intentarlo de nuevo.");
			}
		}
		case DIALOG_LOADTRUCKI: // TRUCKER JOB ILLEGAL GOODS
		{
 			if(response)
			{
		    	new level = Info[playerid][pTruckSkill];
				if(listitem == 0) // Weapons
				{
					if(level >= 0 && level <= 50)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 11); // Bonus: 9mm
					}
					else if(level >= 51 && level <= 100)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 12); // Bonus: MP5
					}
					else if(level >= 101 && level <= 200)
					{
                		SetPVarInt(playerid, "TruckDeliver", 13); // Bonus: Deagle
					}
					else if(level >= 201 && level <= 400)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 14); // Bonus: AK-47
					}
					else if(level >= 401)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 15); // Bonus: Ak-47 or M4
					}
    				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con armas.");
				}
				if(listitem == 1) // Drugs
				{
					if(level >= 0 && level <= 50)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 16); // Bonus: 10 pot, 5 crack
					}
					else if(level >= 51 && level <= 100)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 17); // Bonus: 20 pot, 10 crack
					}
					else if(level >= 101 && level <= 200)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 18); // Bonus: 30 pot, 15 crack
					}
					else if(level >= 201 && level <= 400)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 19); // Bonus: 40 pot, 20 crack
					}
					else if(level >= 401)
					{
                   		SetPVarInt(playerid, "TruckDeliver", 20); // Bonus: 50 pot, 25 crack
					}
                	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espere un momento mientras el camión está siendo cargado con drogas.");
				}
				if(listitem == 2) // Illegal materials
				{
					if(level >= 0 && level <= 50)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 21); // Bonus: 100 materials
					}
					else if(level >= 51 && level <= 100)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 22); // Bonus: 300 materials
					}
					else if(level >= 101 && level <= 200)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 23); // Bonus: 750 materials
					}
					else if(level >= 201 && level <= 400)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 24); // Bonus: 1500 materials
					}
					else if(level >= 401)
					{
                    	SetPVarInt(playerid, "TruckDeliver", 25); // Bonus: 2500 materials
					}
                	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Por favor, espera un momento mientras el camión está siendo cargado con mercancía ilegal.");
				}
  				LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
				SetProgressBarValue(LoadTruckBar[playerid], 100.0);
				ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
				SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
			}
			else
			{
		    	DeletePVar(playerid, "IsFrozen");
				TogglePlayerControllable(playerid, 1);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has cancelado la carga de los camiones, usa /cargarcamion para intentarlo de nuevo.");
			}
		}
		case DIALOG_HITMAN:
		{
 	    	if(response == 1)
 	    	{
 	        	switch(listitem)
 	        	{
 	            	case 0:
 	            	{
                        if(GetPlayerCash(playerid) < 1500)
						{
		    				return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes dinero suficiente!");
						}
 	                	GivePlayerValidWeapon(playerid, 4);
 	                	GivePlayerValidWeapon(playerid, 23);
 	                	GivePlayerCash(playerid, -1500);
 	            	}
  	            	case 1:
 	            	{
                        if(GetPlayerCash(playerid) < 250)
						{
		    				return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes dinero suficiente!");
						}
               	    	GivePlayerValidWeapon(playerid, 34);
               	    	GivePlayerCash(playerid, -250);
 	            	}
  	            	case 2:
  	            	{
                    	SafeDialogEx(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "{008EC1}Disfraz", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para Sicario's.\nTIP <1 - 311>\n", "Ok", "Salir");
  	            	}
				}
			}
		}
	    case DIALOG_HIT:
 	  	{
 	    	if(response == 1)
 	    	{
 	        	if(strval(inputtext) < 1 || strval(inputtext) > 311) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Debes de escoger una id de skin entre 1 y 311.");
				Info[playerid][pChar] = strval(inputtext);
                SetPlayerSkin(playerid, Info[playerid][pChar]);
		    	return 1;
	    	}
		}
		case CPASS:
		{
		    if( strlen( inputtext ) > 14 )
		    {
		        SendClientMessageEx( playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes cambiar una password a más de 14 carácteres." );
		    }
		    else
		    {
		        if( strlen( inputtext ) >= 1 )
		        {
		            if(!response) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No has cambiado tu contraseña." ); }
		            else
		            {
			            new String[ 84 ];
	    				new INI:File = INI_Open(UserPath(playerid));
	    				INI_SetTag(File,"data");
     					INI_WriteInt(File,"Password",udb_hash(inputtext));
						INI_Close(File);
						format( String, sizeof( String ), "%s (IP: %s) a cambiado su contraseña.", GetPlayerNameEx(playerid), Info[playerid][pIP]);
						Log("logs/password.log", String);
			            format( String, sizeof( String ), "Has cambiado tu contraseña a: '%s'", inputtext );
			            SendClientMessageEx( playerid, COLOR_YELLOW, String );
		            }
		        }
		        else SendClientMessageEx( playerid, COLOR_WHITE, "No has cambiado tu contraseña." );
		    }
		}
	case MENU_CASA:
	{
	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
					SafeDialogEx(playerid, MENU_CASA2, DIALOG_STYLE_LIST, "Dinero de la casa", "* Retirar dinero\n* Guardar dinero", "Aceptar", "Cancelar");
				}
				case 1:
				{
					SafeDialogEx(playerid, MENU_CASA3, DIALOG_STYLE_LIST, "Editar muebles", "* Acomodar muebles\n* Colocar un nuevo mueble\n* Eliminar mueble\n* Esconder mueble", "Aceptar", "Cancelar");
				}

			}
		}
		else
		{

		}
	}
	case MENU_CASA3:
	{
	    new stringf[350];
    	new house = Info[playerid][pPhousekey];
	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
				if(house != -1 && IsPlayerInRangeOfPoint(playerid, 25.0, HouseInfo[house][hInteriorX], HouseInfo[house][hInteriorY], HouseInfo[house][hInteriorZ]))
		 			{
						format(stringf, sizeof(stringf), "* Mueble 1 [MUEBLE ID: %d]\n* Mueble 2 [MUEBLE ID: %d]\n* Mueble 3 [MUEBLE ID: %d]\n* Mueble 4 [MUEBLE ID: %d]\n* Mueble 5 [MUEBLE ID: %d]\
						\n* Mueble 6 [MUEBLE ID: %d]\n* Mueble 7 [MUEBLE ID: %d]\n* Mueble 8 [MUEBLE ID: %d]\n* Mueble 9 [MUEBLE ID: %d]\n* Mueble 10 [MUEBLE ID: %d]\
						", HouseInfo[house][hMuebles][0],HouseInfo[house][hMuebles][1],HouseInfo[house][hMuebles][2],HouseInfo[house][hMuebles][3],HouseInfo[house][hMuebles][4],
						HouseInfo[house][hMuebles][5], HouseInfo[house][hMuebles][6], HouseInfo[house][hMuebles][7], HouseInfo[house][hMuebles][8], HouseInfo[house][hMuebles][9], HouseInfo[house][hMuebles][10]);
						SafeDialogEx(playerid, COLOCAR_M2, DIALOG_STYLE_LIST, "{85AB6B}Guardar mueble", stringf, "Confirmar", "Salir");
					}
				}
				case 1:
				{
				    new mueble0 = Info[playerid][pMuebles][0], mueble1 = Info[playerid][pMuebles][1], mueble2 = Info[playerid][pMuebles][2], mueble3 = Info[playerid][pMuebles][3];
				    new mueble4 = Info[playerid][pMuebles][4], mueble5 = Info[playerid][pMuebles][5], mueble6 = Info[playerid][pMuebles][6], mueble7 = Info[playerid][pMuebles][7];
				    new mueble8 = Info[playerid][pMuebles][8], mueble9 = Info[playerid][pMuebles][9], mueble10 = Info[playerid][pMuebles][10];
					format(stringf, sizeof(stringf), "* Mueble 1 [MUEBLE ID: %d]\n* Mueble 2 [MUEBLE ID: %d]\n* Mueble 3 [MUEBLE ID: %d]\n* Mueble 4 [MUEBLE ID: %d]\
					\n* Mueble 5 [MUEBLE ID: %d]\n* Mueble 6 [MUEBLE ID: %d]\n* Mueble 7 [MUEBLE ID: %d]\
					\n* Mueble 8 [MUEBLE ID: %d]\n* Mueble 9 [MUEBLE ID: %d]\n* Mueble 10 [MUEBLE ID: %d]", mueble0, mueble1, mueble2, mueble3, mueble4, mueble5, mueble6, mueble7, mueble8, mueble9, mueble10);
					SafeDialogEx(playerid, COLOCAR_M, DIALOG_STYLE_LIST, "{85AB6B}Colocar mueble", stringf, "Confirmar", "Salir");
				}
				case 2:
				{
                	if(house != -1 && IsPlayerInRangeOfPoint(playerid, 25.0, HouseInfo[house][hInteriorX], HouseInfo[house][hInteriorY], HouseInfo[house][hInteriorZ]))
		 			{
						format(stringf, sizeof(stringf), "* Mueble 1 [MUEBLE ID: %d]\n* Mueble 2 [MUEBLE ID: %d]\n* Mueble 3 [MUEBLE ID: %d]\n* Mueble 4 [MUEBLE ID: %d]\n* Mueble 5 [MUEBLE ID: %d]\
						\n* Mueble 6 [MUEBLE ID: %d]\n* Mueble 7 [MUEBLE ID: %d]\n* Mueble 8 [MUEBLE ID: %d]\n* Mueble 9 [MUEBLE ID: %d]\n* Mueble 10 [MUEBLE ID: %d]\
						", HouseInfo[house][hMuebles][0],HouseInfo[house][hMuebles][1],HouseInfo[house][hMuebles][2],HouseInfo[house][hMuebles][3],HouseInfo[house][hMuebles][4],
						HouseInfo[house][hMuebles][5], HouseInfo[house][hMuebles][6], HouseInfo[house][hMuebles][7], HouseInfo[house][hMuebles][8], HouseInfo[house][hMuebles][9], HouseInfo[house][hMuebles][10]);
						SafeDialogEx(playerid, COLOCAR_M3, DIALOG_STYLE_LIST, "{85AB6B}Guardar mueble", stringf, "Confirmar", "Salir");
					}
				}
				case 3:
				{
					if(house != -1 && IsPlayerInRangeOfPoint(playerid, 25.0, HouseInfo[house][hInteriorX], HouseInfo[house][hInteriorY], HouseInfo[house][hInteriorZ]))
		 			{
						format(stringf, sizeof(stringf), "* Mueble 1 [MUEBLE ID: %d]\n* Mueble 2 [MUEBLE ID: %d]\n* Mueble 3 [MUEBLE ID: %d]\n* Mueble 4 [MUEBLE ID: %d]\n* Mueble 5 [MUEBLE ID: %d]\
						\n* Mueble 6 [MUEBLE ID: %d]\n* Mueble 7 [MUEBLE ID: %d]\n* Mueble 8 [MUEBLE ID: %d]\n* Mueble 9 [MUEBLE ID: %d]\n* Mueble 10 [MUEBLE ID: %d]\
						", HouseInfo[house][hMuebles][0],HouseInfo[house][hMuebles][1],HouseInfo[house][hMuebles][2],HouseInfo[house][hMuebles][3],HouseInfo[house][hMuebles][4],
						HouseInfo[house][hMuebles][5], HouseInfo[house][hMuebles][6], HouseInfo[house][hMuebles][7], HouseInfo[house][hMuebles][8], HouseInfo[house][hMuebles][9], HouseInfo[house][hMuebles][10]);
						SafeDialogEx(playerid, COLOCAR_M1, DIALOG_STYLE_LIST, "{85AB6B}Guardar mueble", stringf, "Confirmar", "Salir");
					}

				}

			}
		}
		else
		{

		}
	}
	case MENU_CASA2:
	{
	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
					SafeDialogEx(playerid, MENU_CASA6, DIALOG_STYLE_INPUT, "Retirar", "Escribe la cantidad a retirar", "Aceptar", "Cancelar");
				}
				case 1:
				{
					SafeDialogEx(playerid, MENU_CASA7, DIALOG_STYLE_INPUT, "Guardar", "Escribe la cantidad a guardar", "Aceptar", "Cancelar");
				}
			}
		}
		else
		{

		}
	}
	case MENU_CASA7:
	{
		if(response)
		{
			new Dinero_asd = strval(inputtext);
  			if(IsNumeric(inputtext))
    		{
				if(Dinero_asd > GetPlayerMoney(playerid) || Dinero_asd < 1) return SendClientMessageEx(playerid, COLOR_GREY, "No tienes todo ese dinero para depositarlo.");
				GivePlayerCash(playerid,-Dinero_asd);
				HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] += Dinero_asd;
				format(string, sizeof(string), " Has depositado $%d en la caja fuerte de la casa ahora hay: $%d ", Dinero_asd, HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
	 			SendClientMessageEx(playerid, COLOR_GREY, string);
				return 1;
			}
			else
			{
				SafeDialogEx(playerid, MENU_CASA7, DIALOG_STYLE_INPUT, "Guardar", "Escribe la cantidad a guardar", "Aceptar", "Cancelar");
				SendClientMessageEx(playerid, COLOR_GREY, "Sólo se pueden escribir números.");
			}
		}
		return 1;
	}
	case MENU_CASA6:
	{
		if(response)
		{
			new Dinero_asd = strval(inputtext);
  			if(IsNumeric(inputtext))
    		{
				if(Dinero_asd > HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] || Dinero_asd < 1)return SendClientMessage(playerid, COLOR_GREY, "El local no configura con esta cantidad.");
				GivePlayerCash(playerid,Dinero_asd); // +
				HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] -= Dinero_asd;
				format(string, sizeof(string), "Has sacado %d$ de tu casa.",strval(inputtext));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else
			{
				SafeDialogEx(playerid, MENU_CASA6, DIALOG_STYLE_INPUT, "Retirar", "Escribe la cantidad a retirar", "Aceptar", "Cancelar");
				SendClientMessageEx(playerid, COLOR_GREY, "Sólo se pueden escribir números.");
			}
		}
		return 1;
	}
	case COLOCAR_M:
	{
	    new Float:X,Float:Y,Float:Z, Float:fAngle;

	    if(response == 1)
	    {
	        if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
			{
	    	GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid, fAngle);

        	switch(listitem)
			{
				case 0:
				{
	 		 			if(Info[playerid][pMuebles][0] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][0];
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 1;

						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][0], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 1:
				{
	 		 			if(Info[playerid][pMuebles][1] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][1];
				        ObjetoUsar[playerid] = 1;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][1], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 2:
				{

	 		 			if(Info[playerid][pMuebles][2] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][2];
				        ObjetoUsar[playerid] = 2;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][2], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 3:
				{
	 		 			if(Info[playerid][pMuebles][3] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][3];
				        ObjetoUsar[playerid] = 3;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][3], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 4:
				{
	 		 			if(Info[playerid][pMuebles][4] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][4];
				        ObjetoUsar[playerid] = 4;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][4], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 5:
				{
	 		 			if(Info[playerid][pMuebles][5] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][5];
				        ObjetoUsar[playerid] = 5;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][5], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
				}
				case 6:
				{
	 		 			if(Info[playerid][pMuebles][6] != -1)
				        {
				        IDObjetoUsar[playerid] = Info[playerid][pMuebles][6];
				        ObjetoUsar[playerid] = 6;
				        ObjetoUsarEnCasa[playerid] = 1;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid, fAngle);
						Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][6], X,Y,Z, 0,0,fAngle,100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);
						InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
					}
				case 7:
				{
	 		 			if(Info[playerid][pMuebles][7] != -1)
				        {
				        	IDObjetoUsar[playerid] = Info[playerid][pMuebles][7];
				        	ObjetoUsar[playerid] = 7;
				        	ObjetoUsarEnCasa[playerid] = 1;
							GetPlayerPos(playerid, X,Y,Z);
							GetPlayerFacingAngle(playerid, fAngle);
							Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][7], X,Y,Z, 0,0,fAngle,100.0);
							EditObject(playerid, Objeto_Por_Jugador[playerid]);
							InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
					}
				case 8:
				{
	 		 			if(Info[playerid][pMuebles][8] != -1)
				        {
				        	IDObjetoUsar[playerid] = Info[playerid][pMuebles][8];
				        	ObjetoUsar[playerid] = 8;
				        	ObjetoUsarEnCasa[playerid] = 1;
							GetPlayerPos(playerid, X,Y,Z);
							GetPlayerFacingAngle(playerid, fAngle);
							Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][8], X,Y,Z, 0,0,fAngle,100.0);
							EditObject(playerid, Objeto_Por_Jugador[playerid]);
							InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
					}
				case 9:
				{
	 		 			if(Info[playerid][pMuebles][9] != -1)
				        {
				        	IDObjetoUsar[playerid] = Info[playerid][pMuebles][9];
				        	ObjetoUsar[playerid] = 9;
				        	ObjetoUsarEnCasa[playerid] = 1;
							GetPlayerPos(playerid, X,Y,Z);
							GetPlayerFacingAngle(playerid, fAngle);
							Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][9], X,Y,Z, 0,0,fAngle,100.0);
							EditObject(playerid, Objeto_Por_Jugador[playerid]);
							InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
					}
				case 10:
				{
	 		 			if(Info[playerid][pMuebles][10] != -1)
				        {
				        	IDObjetoUsar[playerid] = Info[playerid][pMuebles][10];
				        	ObjetoUsar[playerid] = 10;
				        	ObjetoUsarEnCasa[playerid] = 1;
							GetPlayerPos(playerid, X,Y,Z);
							GetPlayerFacingAngle(playerid, fAngle);
							Objeto_Por_Jugador[playerid] = CreateObject(Info[playerid][pMuebles][10], X,Y,Z, 0,0,fAngle,100.0);
							EditObject(playerid, Objeto_Por_Jugador[playerid]);
							InfoCasaMuebles(playerid);
						} else SendClientMessage(playerid, -1, "No mueble en ese espacio");
					}
				}
            }
		}
		else
		{

		}
	}
	case COLOCAR_M1:
	{
       	new house = Info[playerid][pPhousekey];

	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][0] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 0);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 1:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][1] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 1);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 2:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][2] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 2);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 3:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][3] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 3);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 4:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][4] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 4);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 5:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][5] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 5);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 6:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][6] > 0)
	    				{
	    				GuardarmuebleUser(playerid, house, 6);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			 	case 7:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][7] > 0)
	    				{
	    					GuardarmuebleUser(playerid, house, 7);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 8:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][8] > 0)
	    				{
	    					GuardarmuebleUser(playerid, house, 8);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			 	case 9:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][9] > 0)
	    				{
	    					GuardarmuebleUser(playerid, house, 9);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			 	case 10:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][10] > 0)
	    				{
	    					GuardarmuebleUser(playerid, house, 10);
       					} else SendClientMessage(playerid, -1, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, -1, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			}
		}
		else
		{

		}
	}
	case COLOCAR_M2:
	{
//	    new Float:fAngle;
       	new house = Info[playerid][pPhousekey];
	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][0] > 0)
	    				{
				        	IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][0];
				        	DestroyDynamicObject(HouseInfo[house][hMuebleId][0]);
				        	ObjetoUsar[playerid] = 0;
				        	ObjetoUsarEnCasa[playerid] = 1;
                        	HouseInfo[house][hMuebles][0] = -1;
							Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][0],HouseInfo[house][hMueblesPOSY][0],HouseInfo[house][hMueblesPOSZ][0], HouseInfo[house][hMueblesPOSRx][0],HouseInfo[house][hMueblesPOSRy][0],HouseInfo[house][hMueblesPOSRz][0],100.0);
							EditObject(playerid, Objeto_Por_Jugador[playerid]);
							SendClientMessageEx(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
							SendClientMessageEx(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
							SendClientMessageEx(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					}
				   		else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			}
					else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 1:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][1] > 0)
	    				{


				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][1];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][1]);
				        ObjetoUsar[playerid] = 1;
				        ObjetoUsarEnCasa[playerid] = 1;
                        HouseInfo[house][hMuebles][1] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][1],HouseInfo[house][hMueblesPOSY][1],HouseInfo[house][hMueblesPOSZ][1], HouseInfo[house][hMueblesPOSRx][1],HouseInfo[house][hMueblesPOSRy][1],HouseInfo[house][hMueblesPOSRz][1],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 2:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][2] > 0)
	    				{


				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][2];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][2]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 2;
                        HouseInfo[house][hMuebles][2] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][2],HouseInfo[house][hMueblesPOSY][2],HouseInfo[house][hMueblesPOSZ][2], HouseInfo[house][hMueblesPOSRx][2],HouseInfo[house][hMueblesPOSRy][2],HouseInfo[house][hMueblesPOSRz][2],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 3:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][3] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][3];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][3]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 3;
                        HouseInfo[house][hMuebles][3] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][3],HouseInfo[house][hMueblesPOSY][3],HouseInfo[house][hMueblesPOSZ][3], HouseInfo[house][hMueblesPOSRx][3],HouseInfo[house][hMueblesPOSRy][3],HouseInfo[house][hMueblesPOSRz][3],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 4:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][4] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][4];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][4]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 4;
                        HouseInfo[house][hMuebles][4] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][4],HouseInfo[house][hMueblesPOSY][4],HouseInfo[house][hMueblesPOSZ][4], HouseInfo[house][hMueblesPOSRx][4],HouseInfo[house][hMueblesPOSRy][4],HouseInfo[house][hMueblesPOSRz][4],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 5:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][5] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][5];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][5]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 5;
                        HouseInfo[house][hMuebles][5] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][5],HouseInfo[house][hMueblesPOSY][5],HouseInfo[house][hMueblesPOSZ][5], HouseInfo[house][hMueblesPOSRx][5],HouseInfo[house][hMueblesPOSRy][5],HouseInfo[house][hMueblesPOSRz][5],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 6:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][6] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][6];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][6]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 6;
                        HouseInfo[house][hMuebles][6] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][6],HouseInfo[house][hMueblesPOSY][6],HouseInfo[house][hMueblesPOSZ][6], HouseInfo[house][hMueblesPOSRx][6],HouseInfo[house][hMueblesPOSRy][6],HouseInfo[house][hMueblesPOSRz][6],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			 	case 7:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][7] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][7];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][7]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 7;
                        HouseInfo[house][hMuebles][7] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][7],HouseInfo[house][hMueblesPOSY][7],HouseInfo[house][hMueblesPOSZ][7], HouseInfo[house][hMueblesPOSRx][7],HouseInfo[house][hMueblesPOSRy][7],HouseInfo[house][hMueblesPOSRz][7],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 8:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][8] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][8];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][8]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 8;
                        HouseInfo[house][hMuebles][8] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][8],HouseInfo[house][hMueblesPOSY][8],HouseInfo[house][hMueblesPOSZ][8], HouseInfo[house][hMueblesPOSRx][8],HouseInfo[house][hMueblesPOSRy][8],HouseInfo[house][hMueblesPOSRz][8],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 9:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][9] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][9];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][9]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 9;
                        HouseInfo[house][hMuebles][9] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][9],HouseInfo[house][hMueblesPOSY][9],HouseInfo[house][hMueblesPOSZ][9], HouseInfo[house][hMueblesPOSRx][9],HouseInfo[house][hMueblesPOSRy][9],HouseInfo[house][hMueblesPOSRz][9],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 10:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][10] > 0)
	    				{

				        IDObjetoUsar[playerid] = HouseInfo[house][hMuebles][10];
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][10]);
				        ObjetoUsar[playerid] = 0;
				        ObjetoUsarEnCasa[playerid] = 10;
                        HouseInfo[house][hMuebles][10] = -1;
						Objeto_Por_Jugador[playerid] = CreateObject(IDObjetoUsar[playerid], HouseInfo[house][hMueblesPOSX][10],HouseInfo[house][hMueblesPOSY][10],HouseInfo[house][hMueblesPOSZ][10], HouseInfo[house][hMueblesPOSRx][10],HouseInfo[house][hMueblesPOSRy][10],HouseInfo[house][hMueblesPOSRz][10],100.0);
						EditObject(playerid, Objeto_Por_Jugador[playerid]);

						SendClientMessage(playerid, COLOR_GREY, "Presiona 'ESPACIO' para cambiar la posición de la cámara para la edición");
						SendClientMessage(playerid, COLOR_WHITE, "Presiona 'ESQ' para cancelar y no poner el mueble");
						SendClientMessage(playerid, COLOR_GREY, "Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			}
		}
		else
		{

		}
	}

	case COLOCAR_M3:
	{
       	new house = Info[playerid][pPhousekey];
	    if(response == 1)
	    {
        	switch(listitem)
			{
				case 0:
				{
	                if(Info[playerid][pPhousekey] != -1  || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][0] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][0]);
				        HouseInfo[house][hMuebles][0] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 1:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][1] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][1]);
				        HouseInfo[house][hMuebles][1] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 2:
				{
	                if(Info[playerid][pPhousekey] != -1  || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][2] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][2]);
				        HouseInfo[house][hMuebles][2] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 3:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][3] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][3]);
				        HouseInfo[house][hMuebles][3] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 4:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][4] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][4]);
				        HouseInfo[house][hMuebles][4] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 5:
				{
	                if(Info[playerid][pPhousekey] != -1  || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][5] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][5]);
				        HouseInfo[house][hMuebles][5] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
				}

				case 6:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][6] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][6]);
				        HouseInfo[house][hMuebles][6] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 7:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1  && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][7] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][7]);
				        HouseInfo[house][hMuebles][7] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 8:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1  && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][8] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][8]);
				        HouseInfo[house][hMuebles][8] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 9:
				{
	                if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][9] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][9]);
				        HouseInfo[house][hMuebles][9] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
				case 10:
				{
	                if(Info[playerid][pPhousekey] != -1  || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 30.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))
					{
				        if(HouseInfo[house][hMuebles][10] > 0)
	    				{
				        DestroyDynamicObject(HouseInfo[house][hMuebleId][10]);
				        HouseInfo[house][hMuebles][10] = -1;
                        SendClientMessage(playerid, COLOR_GREY, "Mueble de la casa desechado a la basura.");
       					} else SendClientMessage(playerid, COLOR_GREY, "No hay ningún mueble en ese espacio de la sala");
        			} else SendClientMessage(playerid, COLOR_GREY, "No estas dueño de una casa, o no estás en una de ellas.");
			 	}
			}
		}
		else
		{

		}
	}
		//***********************************AYUDA POR DIALOG*********************************      //Oie no se :V
	case MENUAYUDA:
	{
		if(response)
		{
        	switch(listitem)
   			{
      			case 0:
				{
				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - General", "{FFFF00}[PJ]\n{FFFFFF}/est /subirnivel /tiendarol /inventario /tirar /mostrar /removergps /docfalso\n{FFFF00}[CMD'S]\n{FFFFFF}/pagar /payday /id /cfumar /cropa /animaciones /ven /google\n/cerrarp /nokear /togduda /buscartrabajo /tognews /togfam /togphone\n/eject /calcular /fumarcrack /fumarhierba /llenar /moneda /dar /duda /re", "Cerrar", "");
				}
    			case 1:
				{
					if(IsAPolice(playerid))
		    		{
		        	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Comandos - SAPD", "/ant /his /radio /r /d /m /su /esposar /cpeaje /darlarma /callsign /desesposar /ta /ap /radargun /limpiarcamion /vmaletero /ram /luces\n/quitar /multar /casillerosheriff /detener /bk /bkc /tlc /derechos /bar(2)(3) /qb /placa /embargar /rolesposas /pbalasg /(q)(p)spikes /duty\n/limpiar /sospechosos /pddiv /verllaves /escudo /dejarmulta /casilleropd /arrestar /destruirplanta /cono /bengala", "Cerrar", "");
		    		}
					else if(Team_BomberosLS(playerid))
					{
              	    ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}LSFD", "{FFFF00}Comandos disponibles para la faccion LSFD:\n{FFFFFF}/bomduty /d /m /r(adio) /equipo /gob /qfuego /buscarfuego\n\n{FFFF00}Informacion:\n{FFFFFF}*Estar siempre duty y con el skin de facción.\n*Evitar incumplir los conceptos de rol\n*A la 3era advertencia tu facción será limpiada.", "Cerrar", "");
					}
			    	else if(Team_SAMD(playerid))
					{
       				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}SAMD", "{FFFF00}Comandos disponibles para la faccion LSMD:\n{FFFFFF}/equipo /gob /sacarsangre /pcinfo /apgarage /mdduty /placa (/r)adio (/d)epartaments\n/subirpt /dejarpt /curar /irpt", "Cerrar", "");
					}
					else if(Team_Mecanicos(playerid))
					{
          			ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Mecanicos LS", "{FFFF00}Comandos disponibles para la faccion Mecanicos LS:\n{FFFFFF}/miembros /sacarspray /menu /venderspray /mduty\n/remolcar /reparar /recargar /f\n/equipo /pintarcoche /colorcoche", "Cerrar", "");
					}
					else if(Hitman(playerid))
					{
			    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Sicarios", "{FFFF00}Comandos disponibles para la faccion Sicarios:\n{FFFFFF}/miembros /buscar /acontrato /amascara\n/darhit /hrangos /borrarhit /equipo /hits", "Cerrar", "");
					}
					else if(Team_SAEM(playerid))
					{
			    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}EUEM", "{FFFF00}Comandos disponibles para la faccion EUEM:\n{FFFFFF}/misil /cpeaje /casilleroem (/r)adio /d /m (/ta)zer /tgunmaletero /escudo /duty /rolesposas /emdiv /su /derechos /deposito\n/revisar /bar /placa /qb /esposar /gob /limpiarcamion /vmaletero /(q)(p)spikes /detener /prision\nDiv Médicos: /dejarpt - /subirpt", "Cerrar", "");
					}
					else if(Team_LSTV(playerid))
					{
			    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}LSRTV", "{FFFF00}Comandos disponibles para la faccion LSRTV:\n{FFFFFF}/miembros /radiomusica /nr (Noticias) - /entrevista /f /apgarage\n /equipo /activarlinea /panum", "Cerrar", "");
					}
					else if(Gobierno(playerid))
					{
  					ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Gobierno", "{FFFF00}Comandos disponibles para la faccion Gobierno:\n{FFFFFF}/miembros /equipo /gob /impuesto\n/dejarfondos /gobdiv /apgarage /d /(r)adio", "Cerrar", "");
					}
					else if(Team_Judicial(playerid))
					{
       				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Sistema Judicial", "{FFFF00}Comandos disponibles para la faccion Judicial:\n{FFFFFF}/miembros /sjduty (/r)adio /d /orden /qorden\n/multajudicial /scarcel /sprision /buscados /juicio\n/librarcargos /recompensar /verjuicios /revertir /presentar /arrestojudicial", "Cerrar", "");
					}
					else if(Team_FBI(playerid))
					{
  		 			ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}FBI", "{FFFF00}Comandos disponibles para la faccion FBI:\n{FFFFFF}/miembros (/r)adio /d /cpeaje (/m)egaphone /rolesposas /escudo /su /investigar /encontrarveh\n/esposar /desesposar /ta /vmaletero /fbi /arrestar /revisar /placa\n/deposito /quitar /multar /detener /derechos /encontrar /gob\n/limpiar /sospechosos /fbidiv /tgunmaletero /ram /duty /luces", "Cerrar", "");
					}
				}
				case 2:
				{
 				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Chat", "{FFFF00}Comandos IC:\n{FFFFFF}(/g)ritar (/s)usurar /me /ent /so /do /c (/r)adio\n\n{FFFF00}Comandos OOC:\n{FFFFFF}/b (/w)hisper (/f)accion", "Cerrar", "");
				}
				case 3:
				{
            	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Lider", "{FFFF00}Facciones Legales:\n{FFFFFF}/contratar /despedir /odespedir /darrango /gob\n\n{FFFF00}Facciones Ilegales\n{FFFFFF}/contratar /despedir /odespedir /darrango /robarbanco", "Cerrar", "");
				}
				case 4:
				{
 		 		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Telefono", "{FFFFFF}/llamar /sms /altavoz", "Cerrar", "");
				}
				case 5:
				{
 		 		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Casa", "{FFFFFF}/comprarcasa /rentar /desrentar /timbre /vendercasa(2)\n /ponerrenta /preciorenta /sarma /garma /cdepositar\n/cretirar /cmejorar /cajaestado /cseguro /vendermicasa(2)", "Cerrar", "");
				}
				case 6:
				{
 		 		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Coche", "{FFFFFF}/estacionar /motor /v /gps /qmod /seguro\n/velocimetro /gunlocker /borrarcoche /llenar\n /smaletero /gmaletero /darllave /quitarllave", "Cerrar", "");
				}
				case 7:
				{
		    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Banco", "{FFFFFF /depositar /sacar /transferir\n /balance /cajero /sacartarjeta ", "Cerrar", "");
				}
				case 8:
				{
		    		if(Info[playerid][pVIP] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No eres {FFFF00}VIP{FFFFFF}!");
            		if(Info[playerid][pVIP] >= 1)
					{
   					ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Premium", "{FFFFFF}/invitaramigo /viplocker /venderfichasvip /togvip\n/automensaje /ayudafichas /vip\n/spawncasa /skinpremium /repararpremium", "Cerrar", "");
					}
				}
				case 9:
				{
 		 		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Matrimonio", "{FFFFFF}/testigo /proponer /divorcio", "Cerrar", "");
				}
				case 10:
				{
      			ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Armas", "{FFFFFF}/tirararma /aceptar (arma) /cancelar (arma)", "Cerrar", "");
				}
				case 11:
				{
		    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Negocio", "{FFFFFF}/vendernegocio /comprarnegocio /ncaja /nombrenegocio /abrir /cerrar /minegocio", "Cerrar", "");
				}
				case 12:
				{
		    		if (Info[playerid][pFMember] != 255)
		    			{
                		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Familias", "{FFFFFF}/festado /familias /fdepositar /fretirar /cfdepositar\n/fropa /fsarma /fgarma\n\n{FFFF00}Comandos Lider:\n{FFFFFF}/ajustar /anombrerango /fseguro /ajustarrango /festacionar\n/famllaves /fcomprarseguro(En 24/7)", "Cerrar", "");
		    			}
		    			else
		    			{
		    			SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de una familia o banda.");
		    			}
				}
				case 13:
				{
		    		switch(Info[playerid][pJob])
		    		{
		    		//case 2:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Mecánico ", "{FFFFFF}/pintarcoche /colorcoche /reparar /recargar /venderspray /aceptar mecanico /cancelar mecanico)", "Cerrar", "");
		    		case 3:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Leñador ", "{FFFFFF}/talar /dtalar)", "Cerrar", "");
		        	case 4:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Pizzero ", "{FFFFFF}/tomarpizza (En lugar de las pizzabikes) /uniforme", "Cerrar", "");
		        	case 6:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Camionero", "{FFFFFF}/cargarcamion /robarcamion /habilidad", "Cerrar", "");
		        	case 7:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Armero", "{FFFFFF}/creararma /materiales /vendermateriales\n/habilidad", "Cerrar", "");
		        	case 8:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Taxista", "{FFFFFF}/tarifa /aceptar taxi /cancelar taxi /taxiduty", "Cerrar", "");
		        	case 9: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Granjero", "{FFFFFF}/cosechar /dcosechar /vendercosecha", "Cerrar", "");
		        	case 10: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{00F70C}Ayuda - Traficante de droga", "{FFFFFF}/paquete /habilidad /tirar paquetes(d)\n/removergps", "Cerrar", "");
		        	case 13: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Jardinero", "{FFFFFF}/recogercesped", "Cerrar", "");
		        	case 14: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Vendedor de Chalecos", "{FFFFFF}/venderchaleco", "Cerrar", "");
		        	default: SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un trabajo!");
		    		}
		    		switch(Info[playerid][pJob2])
		    		{
		    		//case 2:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Mecánico ", "{FFFFFF}/pintarcoche /colorcoche  /reparar /recagar /aceptar mecanico /cancelar mecanico)", "Cerrar", "");
		    		case 3:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Leñador ", "{FFFFFF}/talar /dtalar", "Cerrar", "");
		        	case 4:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Pizzero ", "{FFFFFF}/tomarpizza (En lugar de las pizzabikes) /uniforme", "Cerrar", "");
		        	case 6:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Camionero", "{FFFFFF}/cargarcamion /robarcamion /habilidad", "Cerrar", "");
		        	case 7:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Armero", "{FFFFFF}/creararma /materiales /vendermateriales\n/habilidad", "Cerrar", "");
		        	case 8:  ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Taxista", "{FFFFFF}/tarifa /aceptar taxi /cancelar taxi /taxiduty", "Cerrar", "");
		        	case 9: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Granjero", "{FFFFFF}/cosechar /dcosechar /vendercosecha", "Cerrar", "");
		        	case 10: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{00F70C}Ayuda - Traficante de droga", "{FFFFFF}/paquete /habilidad /tirar paquetes(d)\n/removergps", "Cerrar", "");
		        	case 13: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Jardinero", "{FFFFFF}/recogercesped", "Cerrar", "");
		        	case 14: ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Vendedor de Chalecos", "{FFFFFF}/venderchaleco", "Cerrar", "");
					}
				}
				case 14:
				{
  				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Reanimador", "{FFFFFF}/reanimar /creanimador", "Cerrar", "");
				}
				case 15:
				{
  				ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{008EC1}Ayuda - Puntos de Rol", "{FFFFFF}/tiendarol /mispuntos", "Cerrar", "");
				}
			}
		}
	}
//******************************DIALOG MERCADO NEGRO******************************
case Camarasss:
{
	if(response)
	{
		switch(listitem)
		{
  			case 0:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1482.9218, -1567.1021, -7.4582);
			SetPlayerCameraLookAt(playerid, 1483.8560, -1567.4597, -7.7057); //Banco A
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
      		case 1:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
   			SetPlayerCameraPos(playerid, 1520.9678, -1561.4174, -19.3984);
			SetPlayerCameraLookAt(playerid, 1520.0946, -1561.9053, -19.7334); //Banco B
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
 			case 2:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1004.2818, 63.2595, 57.5962);
			SetPlayerCameraLookAt(playerid, 1004.7307, 62.3675, 57.3062);
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
 			case 3:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1777.2080, -2056.1758, 15.6198);
			SetPlayerCameraLookAt(playerid, 1777.6163, -2055.2639, 15.5023); //mecanico
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
			case 4:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1810.2036, -1870.9476, 18.1222);
			SetPlayerCameraLookAt(playerid, 1810.9253, -1870.2606, 17.8922); //24-7 unity
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
			case 5:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1316.6885, -952.9022, 50.7973);
			SetPlayerCameraLookAt(playerid, 1316.6024, -951.9089, 50.4173); //24-7 vinewood
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
			case 6:
			{
			TogglePlayerControllable(playerid, 0);
			Camara[playerid] = 1;
			SetPlayerInterior( playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);
			SetPlayerVirtualWorld(playerid, 0);
			Mostrarcam(playerid);
			SetPlayerCameraPos(playerid, 1344.2068, -1721.6309, 24.6288);
			SetPlayerCameraLookAt(playerid, 1344.5946, -1722.5492, 24.2238);
			SendClientMessage(playerid, -1,"{33CCFF}Sistema de seguridad: {FFFFFF}Has entrado en una camara - Para salir usa /salircam.");
			SetPlayerPos(playerid,1484.4828,-1687.6948,14.0224);
            foreach(Player, i)
            	{
   		    		if(IsPlayerConnected(i))
   		    		{
		   				ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
				}
			}
		}
	}
}
		case MENUMC:
		{
	 		if(response)
			{
			    switch(listitem)
			    {
			        case 0:
					{
					    if(CheckMoney(playerid, 20)){
							if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					        if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Tienes restricción de armas las 2 primeras horas de juego");
							Bought(playerid, 20);
							SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste un puño americano");
							GivePlayerValidWeapon(playerid, 1);
							return 1;
						}
					}
					case 1:{
					    if(CheckMoney(playerid, 50)){
					        if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
							Bought(playerid, 50);
							SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Máscara comprada, utiliza /mascara");
							Info[playerid][pMask] = 1;
							return 1;
						}
					}
					case 2:{
					    if(CheckMoney(playerid, 120)){
                            if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste una kit de secuestro");
							Rope[playerid] = 1;
							Bought(playerid, 120);
							return 1;
						}
					}
					case 3:{
					    if(CheckMoney(playerid, 20000)){
					    if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					    if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Tienes restricción de armas las 2 primeras horas de juego");
					    Bought(playerid, 20000);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste una Desert Eagle");
					        GivePlayerValidWeapon(playerid, 24);
							return 1;
						}
					}
					case 4:{
					    if(CheckMoney(playerid, 25000)){
					    if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					    if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Tienes restricción de armas las 2 primeras horas de juego");
					    Bought(playerid, 25000);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste una MP5");
					        GivePlayerValidWeapon(playerid, 29);
							return 1;
						}
					}
					case 5:{
					    if(CheckMoney(playerid, 30000)){
					    if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					    if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Tienes restricción de armas las 2 primeras horas de juego");
					    Bought(playerid, 30000);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste una MP5 + Silenced Pistol");
					        GivePlayerValidWeapon(playerid, 29);
					        GivePlayerValidWeapon(playerid, 23);
							return 1;
						}
					}
					case 6:{
					    if(CheckMoney(playerid, 1000)){
					    if(Info[playerid][pLevel] <= 3) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 3.");
					    if(Info[playerid][pGanzuas] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Ya tienes ganzúas.");
					    Bought(playerid, 1000);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MC]:{FFFFFF} Compraste unas ganzúas, usa /cerrajear");
					        Info[playerid][pGanzuas] = 1;
							return 1;
						}
     				}
     				case 7:{
     				if(Info[playerid][pDNIFalse] > 0) return Message(playerid, COLOR_WHITE, "Ya posees un DNI Falso.");
					ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"{008EC1}Venta DNI Falso","Ingresa el nombre que quieres usar para el DNI Falso. Precio:15.000$.","Aceptar","Salir");
					}
				}
			}
		}
		case MENUF:
		{
	 		if(response)
			{
			    switch(listitem)
			    {
			        case 0:
					{
					    if(CheckMoney(playerid, 600))
					    {
					        if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					        GivePlayerValidWeapon(playerid, 6);
    					    Bought(playerid, 600);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[FERRETERÍA]:{FFFFFF} Has comprado una Pala.");
					        Tax += 600;
						}
					}
					case 1:
					{
						if(CheckMoney(playerid, 500))
					    {
					        if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					        GivePlayerValidWeapon(playerid, 15);
    					    Bought(playerid, 500);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[FERRETERÍA]:{FFFFFF} Has comprado una Caña.");
					        Tax += 500;
						}
					}
					case 2:
					{
						if(CheckMoney(playerid, 700))
					    {
					        if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					        GivePlayerValidWeapon(playerid, 2);
    					    Bought(playerid, 700);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[FERRETERÍA]:{FFFFFF} Has comprado una Palo de Golf.");
					        Tax += 700;
						}
					}
					case 3:
					{
						if(CheckMoney(playerid, 300))
					    {
					        if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					        GivePlayerValidWeapon(playerid, 7);
    					    Bought(playerid, 300);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[FERRETERÍA]:{FFFFFF} Has comprado un Palo de Billar.");
					        Tax += 300;
						}
					}
					case 4:
					{
						if(CheckMoney(playerid, 500))
					    {
					        if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes obtener armas debido a tu restricción de dos horas.");
					        GivePlayerValidWeapon(playerid, 41);
    					    Bought(playerid, 500);
					        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[FERRETERÍA]:{FFFFFF} Has comprado un Spray.");
					        Tax += 500;
						}
					}
				}
			}
		}
		case FINDCONCE:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "Packages") != 0 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Asegúrate de no estar en otra función usando checkpoints.");
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid, 559.4346,-1293.3511,17.2482, 2); // Grotti
    				SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 1)
				{
				    SetPlayerCheckpoint(playerid, 2129.1982,-1139.5284,25.3133, 2); // Motos
    				SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 2)
				{
				    SetPlayerCheckpoint(playerid, 2157.1462,-1133.7566,25.4682, 2); // Gama Media-Baja
    				SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 3)
				{
				    SetPlayerCheckpoint(playerid, 2901.1104,-2148.1526,2.1502, 2); // Botes
    				SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 4)
				{
				    SetPlayerCheckpoint(playerid, 1975.1710,-2284.1226,13.5469, 2); // Aviones
    				SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
			}
		}
		case JOBFINDMENU:
		{
	 		if(response)
			{
			    if(GetPVarInt(playerid, "Packages") != 0 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Asegúrate de no estar en otra función usando checkpoints.");
			    SetPVarInt(playerid, "FindJob", 1);
				if(listitem == 0)
				{
				   SetPlayerCheckpoint(playerid, 2104.8408,-1810.0991,13.5547, 2); // Pizzero
				    SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 1)
				{
				    SetPlayerCheckpoint(playerid, 2184.5562,-2251.8499,14.7700, 2); // camionero
				    SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 2)
				{
				    SetPlayerCheckpoint(playerid, 2246.6863,-1990.4323,13.5469, 2); //taxista
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 3)
				{
				    SetPlayerCheckpoint(playerid, 2021.5721,-1274.4832,23.9810, 2); //jardinero
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 4)
				{
				    SetPlayerCheckpoint(playerid, -564.4684,-1500.0900,9.2544, 2); //leñador
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 5)
				{
				   SetPlayerCheckpoint(playerid, 2154.5103,-2268.6807,13.3025, 2); //vendedor armas
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 6)
				{
				    SetPlayerCheckpoint(playerid, 1689.9009,-1494.9858,13.5469, 2); //vendedor drogas
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 9)
				{
    				SetPlayerCheckpoint(playerid, 2355.1594,-1169.2037,28.0057, 2); //traficante drogas
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 7)
				{
    				SetPlayerCheckpoint(playerid, 1423.9009,-1355.9692,13.2810, 2); //vendedor de chalecos
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 5)
				{
    				SetPlayerCheckpoint(playerid, -100.0008,33.9278,3.1172, 2); //Cosechador
					SendClientMessageEx(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
			}
		}
		case DIALOG_LICENSE_BUY:
		{
	 		if(response){
				switch (listitem){
					case 0:{
				    	if(Info[playerid][pCarLic] == 0){
				        	if(GetPlayerCash(playerid) < 1200){
				            	SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar esta licencia de conducir.");
				            	return 1;
				        	}
							GivePlayerCash(playerid,-1200);
							Tax += 1200;
							Info[playerid][pCarLic] = 1;
							SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Has adquirido con éxito una licencia de conducción.");
						}
						else SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Ya tienes la licencia de conducción.");
					}
					case 1:{
				    	if(Info[playerid][pBoatLic] == 0){
				        	if(GetPlayerCash(playerid) < 2600){
				            	SendClientMessageEx(playerid, COLOR_GREY, "No puedes pagar esta licencia de navegación.");
				            	return 1;
				        	}
							GivePlayerCash(playerid,-2600);
							Tax += 2600;
							Info[playerid][pBoatLic] = 1;
							SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Has adquirido con éxito una licencia de navegación.");
						}
						else SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la licencia de navegación.");
					}
					case 2:{
				    	if(Info[playerid][pFlyLic] == 0){
				    		if(Info[playerid][pLevel] >=2){
				    	    	if(GetPlayerCash(playerid) < 5000){
				            		SendClientMessageEx(playerid, COLOR_GREY, "No puedes pagar esta licencia de piloto.");
				            		return 1;
				        		}
								GivePlayerCash(playerid,-5000);
								Tax += 5000;
								Info[playerid][pFlyLic] = 1;
      							SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Has adquirido con éxito una licencia de piloto; ahora será capaz de manejar aeronaves.");
							}
							else SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser nivel 2 para comprar la licencia de piloto.");
						}
        	      		else SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la licencia de piloto.");
					}
				}
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_AYUNTA,DIALOG_STYLE_LIST,"{008EC1}Ayuntamiento - {DA4500}Trámites","Licencias\nVender Autos (2da Mano)\n{EF0058}Seguro Medico","Seleccionar", "Cancelar");
			}
		}
     	case GASMENU:
		{
			if(response == 1)
 			{
				switch(listitem)
  				{
					case 0:
       				{
       				    if(autorepara[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "¡Ya tienes un bidón!.");
				        if(CheckMoney(playerid,200))
			        	{
			        	autorepara[playerid] = 1;
			        	SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[GAS]:{FFFFFF} Compraste un bidón de gasolina.");
			        	SendClientMessageEx(playerid, COLOR_WHITE, "Usa /ayudabidon para más información.");
			        	GivePlayerCash(playerid, -200);
			        	}
			        	return 1;
					}
					case 1:
					{
					    if(CheckMoney(playerid,30))
			        	{
                    	new Float:Health;
					 	GetPlayerHealth(playerid, Health);
		        	    if(Health < 101)	{	SetHP(playerid, Health+20); 	}
         				format(string, sizeof(string), "* %s come unas bolsa de patatas", GetPlayerNameEx(playerid));
		            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	GivePlayerCash(playerid, -30);
		            	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
		            	}
		            	return 1;
		            }
		            case 2:
	            	{
	            	    if(CheckMoney(playerid,20))
			        	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+2); 	}
	        	        format(string, sizeof(string), "* %s se bebe un refresco.", GetPlayerNameEx(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	GivePlayerCash(playerid, -20);
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		                }
		                return 1;
	        	    }
		        	case 3:
			        {
			            if(CheckMoney(playerid,40))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pCigarettes] = 20;
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[GAS]:{FFFFFF}Has comprado una cajetilla de 20 cigarros, utilza /cfumar.");
				            GivePlayerCash(playerid, -40);
						}
						return 1;
			        }
		        	case 4:
			        {
						if(CheckMoney(playerid,20))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pLighter] = 1;
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[GAS]:{FFFFFF} Compraste un encendedor.");
				            GivePlayerCash(playerid, -20);
						}
						return 1;
                    }
				}
			}
		}
		case TIENDA_ELEC:
		{
			if(response == 1)
			{
				switch(listitem)
			    {
			    case 0:
			        {
			        	if(CheckMoney(playerid,500))
			        	{
			        	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			                new randphone = 100000 + random(899999);
							Info[playerid][pPnumber] = randphone;
							format(string, sizeof(string), "{A2DC35}[24/7]:{FFFFFF}Has comprado un nuevo teléfono. Tú número es: %d",Info[playerid][pPnumber]);
				            SendClientMessageEx(playerid, COLOR_WHITE, string);
				            Tax += 250;
				            if(Info[playerid][pVIP] == 0)
							{
							    return Bought(playerid, 250);
							}
							else
							{
							    Bought(playerid, 200);
							    SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 250, a ti te costó 200.");
							}
				            return 1;
						}
			        }
	         	case 1:
			        {
			            if(CheckMoney(playerid,20))
			            {
			                if(Info[playerid][pLevel] > 2)
			                {
			                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			                    Info[playerid][pPhoneBook] = 1;
				            	SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Has comprado una Agenda Telefónica. Ahora puedes ver los números telefonicos de otra persona.");
	                            SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} /numero <id>.");
	 			            	Tax += 10;
				            	if(Info[playerid][pVIP] == 0)
								{
							    	return Bought(playerid, 20);
								}
								else
								{
							    	Bought(playerid, 5);
							    	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 500, a ti te costó 5.");
								}
								return 1;
							}
							else SendClientMessageEx(playerid, COLOR_GRAD3, "{A2DC35}[24/7]:{FFFFFF} Sólo usuarios mayores a nivel 3 pueden comprar un PhoneBook");
						}
			        }
				case 2:
			        {
			            if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
			            if(CheckMoney(playerid,160))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            GivePlayerValidWeapon(playerid, 43);
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Has comprado una cámara de fotos.");
				            Tax += 160;
				            if(Info[playerid][pVIP] == 0)
							{
							   	return Bought(playerid, 160);
							}
							else
							{
							   	Bought(playerid, 80);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 160, a ti te costó 80.");
							}
				            return 1;
						}
			        }
				case 3:
					{
						if(CheckMoney(playerid,800))
						{
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pRadio] = 1;
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Compraste un radio portátil /pr [Hablar] - /frecuencia - /togpr [Prender/Apagar]");
				            Tax += 800;
				            if(Info[playerid][pVIP] == 0)
							{
							   	return Bought(playerid, 800);
							}
							else
							{
							   	Bought(playerid, 300);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 800, a ti te costó 300.");
							}
						}
					}
				case 4:
			        {
						if(CheckMoney(playerid,850))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							Tax += 850;
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Compraste un reproductor de musica. Usa /Ipod para prender tu Ipod.");
							Info[playerid][pIpadMusic] = 1;
				            if(Info[playerid][pVIP] == 0)
							{
							   	return Bought(playerid, 850);
							}
							else
							{
							   	Bought(playerid, 310);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 850, a ti te costó 310.");
							}
				            return 1;
						}
			        }
				case 5:
			        {
						if(CheckMoney(playerid, 1000))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							Tax += 750;
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Compraste una Boombox (Utiliza /boombox).");
							Info[playerid][pBoombox] = 1;
							Bought(playerid, 750);
				            return 1;
						}
			        }
			    }
		 	}
		}
		case SEXMENU:
		{
			if(response ==1)
			{
  				new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
  			 	if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
				switch(listitem)
				{
					case 0:
					{
						if(CheckMoney(playerid, 60))
						if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
						{
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid,-60); //precio
                            businessVariables[businessID][bVault] += 60;
                            GivePlayerValidWeapon(playerid, 10);
                            SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[Tienda sexual]:{FFFFFF} Compraste un dildo morado.");
                            return 1;
					    }
					}
					case 1:
					{
				        if(CheckMoney(playerid, 30))
				        if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
				        {
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid,-30);
                            businessVariables[businessID][bVault] += 30;
                            GivePlayerValidWeapon(playerid, 11);
                            SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[Tienda sexual]:{FFFFFF} Compraste un dildo normal.");
                            return 1;
						}
					}
					case 2:
					{
						if(CheckMoney(playerid, 50))
						if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
						{
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid,-50);
                            businessVariables[businessID][bVault] += 50;
                            GivePlayerValidWeapon(playerid, 12);
                            SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[Tienda sexual]:{FFFFFF} Compraste un vibrador.");
                            return 1;
                        }
                    }
                    case 3:
                    {
                        if(CheckMoney(playerid, 100))
						if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
						{
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid,-100);
                            businessVariables[businessID][bVault] += 100;
                            GivePlayerValidWeapon(playerid, 13);
                            SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[Tienda sexual]:{FFFFFF} Compraste un vibrador de plata.");
                            return 1;
                        }
                    }
                }
                businessVariables[businessID][bStock]--;
  				SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
  				SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			}
		}
		case MENU_AUTO:
		{
			if(response ==1)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							new vehicleid = GetPlayerVehicleID(playerid);
							new engine,lights,alarm,doors,bonnet,boot,objective,enginestatus[15],lightstatus[15];
							GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
							if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_RED,"Este vehiculo no necesita gasolina.");
							if(engine != VEHICLE_PARAMS_ON) format(enginestatus, sizeof(enginestatus), "Apagado");
							else format(enginestatus, sizeof(enginestatus), "Prendido");
							if(lights != VEHICLE_PARAMS_ON) format(lightstatus, sizeof(lightstatus), "Apagadas");
							else format(lightstatus, sizeof(lightstatus), "Prendidas");
							format(string, sizeof(string), "Motor: %s | Luces: %s | Gasolina: %d",enginestatus,lightstatus,VehicleFuel[vehicleid]);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							return 1;
						}
					}
					case 1:
					{
                        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							new vehicleid = GetPlayerVehicleID(playerid);
							if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto si estás en este tipo de vehiculos.");
							SetVehicleLights(vehicleid, playerid);
							return 1;
						}
					}
     				case 2:
                    {
                        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							new vehicleid = GetPlayerVehicleID(playerid);
							if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
							{
								return SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto si estás en este tipo de vehiculos.");
							}
							SetVehicleTrunk(vehicleid, playerid);
							return 1;
						}
					}
					case 3:
					{
    					if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							new vehicleid = GetPlayerVehicleID(playerid);
							if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || IsAPlane(vehicleid) || IsABike(vehicleid))
							{
								return SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto si estás en este tipo de vehiculos.");
							}
							SetVehicleHood(vehicleid, playerid);
							return 1;
						}
					}
				}
			}
		}
		case STOREMENU:
		{
		    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
			if(response == 1)
			{
  				if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
				switch(listitem)
			    {
		         	case 0:
			        {
			            if(CheckMoney(playerid,10))
			            {
				            SafeDialogEx(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, "{008EC1}Lotería Nacional","Inserta un número entre 1 y 102. Mucha Suerte!","Comprar","Cancelar");
							return 1;
						}
			        }
		         	case 1:
			        {
			            if(CheckMoney(playerid,40))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pCigarettes] = 20;
             				businessVariables[businessID][bStock]--;
    						SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Has una cajetilla de 20 cigarros, utilza /cfumar.");
				            if(Info[playerid][pVIP] == 0)
							{
							    businessVariables[businessID][bVault] += 40;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 40);
							}
							else
							{
							   	Bought(playerid, 20);
							   	businessVariables[businessID][bVault] += 20;
							    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 40, a ti te costó 20.");
							}
				            return 1;
						}
			        }
		         	case 2:
			        {
						if(CheckMoney(playerid,20))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pLighter] = 1;
            				businessVariables[businessID][bStock]--;
    						SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Compraste un encendedor.");
				            Tax += 20;
				            if(Info[playerid][pVIP] == 0)
							{
			    				businessVariables[businessID][bVault] += 20;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 20);
							}
							else
							{
							   	Bought(playerid, 3);
							   	businessVariables[businessID][bVault] += 3;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 20, a ti te costó 3.");
							}
				            return 1;
						}
			        }
					case 3:
			        {
			     		if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
						if(CheckMoney(playerid,7))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
               				businessVariables[businessID][bStock]--;
    						SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Has comprado unas flores");
							GivePlayerValidWeapon(playerid, 14);
				            if(Info[playerid][pVIP] == 0)
							{
			   					businessVariables[businessID][bVault] += 7;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 7);
							}
							else
							{
							   	Bought(playerid, 1);
							   	businessVariables[businessID][bVault] += 1;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 7, a ti te costó 1.");
							}
				            return 1;
						}
					}
					case 4:
			        {
						if(CheckMoney(playerid,8))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							Info[playerid][pSprunk]++;
   							businessVariables[businessID][bStock]--;
    						SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Has comprado un Sprunk ");
							SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Usa /bebersprunk para beber un sprunk. Botón izquierdo del ratón para tomar, F para botarlo.");

				            if(Info[playerid][pVIP] == 0)
							{
  								businessVariables[businessID][bVault] += 8;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 8);
							}
							else
							{
							   	Bought(playerid, 4);
			   					businessVariables[businessID][bVault] += 4;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser {FFFF00}VIP{FFFFFF}! El precio normal es 8, a ti te costó {008EC1}4{FFFFFF}.");
							}
						}
			        }
					case 5:
			        {
          					if(CheckMoney(playerid,500))
          					{
								SetPVarInt(playerid, "lockmenu", 1);
      							for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	                			{
					    			if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					    			{
		                		    	format(string, sizeof(string), "Coche %d | Modelo: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
		                		    	SendClientMessageEx(playerid, COLOR_WHITE, string);
							     	}
					    		}
					    		SafeDialogEx(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "{008EC1}Selecciona"," Selecciona el vehiculo en el cual instalarás el seguro:", "Ok", "Cancelar");
							}
					}
					case 6:
					{
				   			if(CheckMoney(playerid,2000))
					        {
								SetPVarInt(playerid, "lockmenu", 2);
				    			for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	                			{
					     			if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					     			{
		                     			format(string, sizeof(string), "Coche %d | Modelo: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
		                     			SendClientMessageEx(playerid, COLOR_WHITE, string);
					     			}
				    			}
								SafeDialogEx(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "{008EC1}Selecciona"," Selecciona el vehiculo en el cual instalarás el seguro:", "Ok", "Cancelar");
							}
					}
					case 7:
			        {
			        	if(CheckMoney(playerid,500))
			        	{
			        	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			                new randphone = 100000 + random(899999);
							Info[playerid][pPnumber] = randphone;
   							businessVariables[businessID][bStock]--;
    						SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
							format(string, sizeof(string), "{A2DC35}[24/7]:{FFFFFF}Has comprado un nuevo teléfono. Tú número es: %d",Info[playerid][pPnumber]);
				            SendClientMessageEx(playerid, COLOR_WHITE, string);
				            Tax += 250;
				            if(Info[playerid][pVIP] == 0)
							{
  								businessVariables[businessID][bVault] += 250;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							    return Bought(playerid, 250);
							}
							else
							{
  								businessVariables[businessID][bVault] += 200;
                            	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							    Bought(playerid, 200);
							    SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 250, a ti te costó 200.");
							}
				            return 1;
						}
			        }
	         		case 8:
			        {
			            if(CheckMoney(playerid,20))
			            {
			                if(Info[playerid][pLevel] > 2)
			                {
			                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			                    Info[playerid][pPhoneBook] = 1;
   								businessVariables[businessID][bStock]--;
    						    SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				            	SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Has comprado una Agenda Telefónica. Ahora puedes ver los números telefonicos de otra persona.");
	                            SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} /numero <id>.");
				            	if(Info[playerid][pVIP] == 0)
								{
									businessVariables[businessID][bVault] += 20;
                            		SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							    	return Bought(playerid, 20);
								}
								else
								{
									businessVariables[businessID][bVault] += 5;
                            		SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							    	Bought(playerid, 5);
							    	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 500, a ti te costó 5.");
								}
								return 1;
							}
							else SendClientMessageEx(playerid, COLOR_GRAD3, "{A2DC35}[24/7]:{FFFFFF} Sólo usuarios mayores a nivel 3 pueden comprar un PhoneBook");
						}
			        }
					case 9:
			        {
			            if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes comprar esto las 2 primeras horas de juego");
			            if(CheckMoney(playerid,160))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            GivePlayerValidWeapon(playerid, 43);
							businessVariables[businessID][bStock]--;
			    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Has comprado una cámara de fotos.");
				            if(Info[playerid][pVIP] == 0)
							{
								businessVariables[businessID][bVault] += 160;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 160);
							}
							else
							{
							   	Bought(playerid, 80);
								businessVariables[businessID][bVault] += 80;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 160, a ti te costó 80.");
							}
				            return 1;
						}
			        }
					case 10:
					{
						if(CheckMoney(playerid,800))
						{
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				            Info[playerid][pRadio] = 1;
							businessVariables[businessID][bStock]--;
			    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Compraste un radio portátil /pr [Hablar] - /frecuencia - /togpr [Prender/Apagar]");
				            if(Info[playerid][pVIP] == 0)
							{
								businessVariables[businessID][bVault] += 800;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 800);
							}
							else
							{
								businessVariables[businessID][bVault] += 300;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	Bought(playerid, 300);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Descuento por ser VIP! El precio normal es 800, a ti te costó 300.");
							}
						}
					}
					case 11:
			        {
						if(CheckMoney(playerid,850))
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							businessVariables[businessID][bStock]--;
			    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Compraste un reproductor de musica. Usa /Ipod para prender tu Ipod.");
							Info[playerid][pIpadMusic] = 1;
				            if(Info[playerid][pVIP] == 0)
							{
							    businessVariables[businessID][bVault] += 850;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	return Bought(playerid, 850);
							}
							else
							{
							    businessVariables[businessID][bVault] += 310;
      							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							   	Bought(playerid, 310);
							   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 850, a ti te costó 310.");
							}
				            return 1;
						}
			        }
					case 12:
			        {
						if(CheckMoney(playerid, 1000)) if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
			            {
			                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							businessVariables[businessID][bStock]--;
			    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
							SendClientMessageEx(playerid, COLOR_GRAD4, "{A2DC35}[24/7]:{FFFFFF} Compraste una Boombox (Utiliza /boombox).");
							Info[playerid][pBoombox] = 1;
							Bought(playerid, 750);
			    			businessVariables[businessID][bVault] += 750;
   							SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
				            return 1;
						}
			        }
			        case 13:
			        {
						if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
						if(Info[playerid][pSaldo] < 500)
			            {
			                new stringg[256];
			                format(stringg, sizeof(stringg), "{FFFFFF}Ingrese la cantidad de saldo que quiera adquirir, máximo 500 y mínimo 10 por saldo\n\nEjemplo: 30 = 30$ de saldo\nActualmente cuentas con {00B500}%d{FFFFFF} de saldo", Info[playerid][pSaldo]);
                            SafeDialogEx(playerid, SALDO, DIALOG_STYLE_INPUT,"{008EC1}Recarga de Saldo",stringg, "Recargar", "Atras");
				            return 1;
						}
						else Message(playerid, COLOR_GRAD2, "Tienes más de $500 de saldo, úsalos");
			        }
				}
			}
		}
		case TRAFICDRUGS:
		{
		    if(GetPVarInt(playerid, "ChoosingDrugs") == 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás traficando drogas!");
 		    if(response)
	 	    {
				new mypoint = -1;
				for (new i=0; i<MAX_POINTS; i++)
				{
					if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
					{
						mypoint = i;
					}
				}
				if (mypoint == -1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás en el punto especificado!");
					return 1;
				}
				if(Info[playerid][pCrates])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[JOB]:{FFFFFF} No se puede sostener más paquetes de drogas!");
					SetPVarInt(playerid, "ChoosingDrugs", 0);
					return 1;
				}
				if(GetPlayerCash(playerid) > 150)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste $150 por un poco de paquetes de hierba.");
					GivePlayerCash(playerid, -150);
					Info[playerid][pCrates] = 1;
					SetPVarInt(playerid, "CrateDeliver", 1);
					SetPVarInt(playerid, "ChoosingDrugs", 0);
					SetPVarInt(playerid, "tpDrugRunTimer", 45);
					SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
					SendClientMessageEx(playerid, COLOR_WHITE,"{FF8000}[INDICACION]:{FFFFFF} Ahora déjalo en en lugar indicado para tu paga. (Vé al checkpoint)");
					SetPlayerCheckpoint(playerid, 2165.8655,-1675.2634,15.0859, 2);
					for(new i = 0; i < sizeof(fINFO); i++)
					{
						if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0)
						{
							fINFO[i][FamilyBank] += 500;
						}
					}
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE," No tienes $100!");
					SetPVarInt(playerid, "ChoosingDrugs", 0);
   					return 1;
				}
			}
			else
			{
				new mypoint = -1;
				for (new i=0; i<MAX_POINTS; i++)
				{
					if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
					{
						mypoint = i;
					}
				}
				if (mypoint == -1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás en el punto especificado!");
					return 1;
				}
				if(Info[playerid][pCrates])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[JOB]:{FFFFFF} No se puede sostener más paquetes de drogas!");
					SetPVarInt(playerid, "ChoosingDrugs", 0);
					return 1;
				}
				if(GetPlayerCash(playerid) > 100)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste $100 por un poco de paquetes de crack.");
					GivePlayerCash(playerid, -100);
					Info[playerid][pCrates] = 1;
					SetPVarInt(playerid, "CrateDeliver", 2);
					SetPVarInt(playerid, "ChoosingDrugs", 0);
					SetPVarInt(playerid, "tpDrugRunTimer", 45);
					SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
					SetPlayerCheckpoint(playerid, 2348.6213,-1168.0778,27.8631, 2);
					SendClientMessageEx(playerid, COLOR_WHITE,"{FF8000}[INDICACION]:{FFFFFF} Ahora déjalo en en lugar indicado para tu paga. (Vé al checkpoint)");
					for(new i = 0; i < sizeof(fINFO); i++)
					{
						if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0)
						{
							fINFO[i][FamilyBank] += 500;
						}
					}
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE,"* No tienes $100!");
					SetPVarInt(playerid, "ChoosingDrugs", 0);
   					return 1;
				}
			}
		}
		case GIVEKEYS:
		{
		    if(response)
		    {
				if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID)
				{
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No se puede dar las llaves de un vehículo que no existe o que está embargado.");
		            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
		            return 1;
				}
		        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != INVALID_PLAYER_ID)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Usted ya ha dado a alguien las llaves de este coche.");
		            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
		            return 1;
		        }
		        if(Info[GiveKeysTo[playerid]][pVehicleKeysFrom] != INVALID_PLAYER_ID)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Ese jugador ya tiene las llaves de un coche distinto.");
		            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
		            return 1;
		        }
				PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = GiveKeysTo[playerid];
				Info[GiveKeysTo[playerid]][pVehicleKeys] = listitem;
				Info[GiveKeysTo[playerid]][pVehicleKeysFrom] = playerid;
				format(string, sizeof(string), "{5ABAFF}%s{FFFFFF} te ha dado las llaves de su %s.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
				SendClientMessageEx(GiveKeysTo[playerid], COLOR_WHITE, string);
				format(string, sizeof(string), "Has dado a {5ABAFF}%s{FFFFFF} las llaves de tu %s.", GetPlayerNameEx(GiveKeysTo[playerid]), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				GiveKeysTo[playerid] = INVALID_PLAYER_ID;
		    }
		}
		case REMOVEKEYS:
		{
		    if(response)
		    {
		        if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID) {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No se puede quitar las llaves de un vehículo que no existe o que estánembargados.");
		            return 1;
				}
		        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId])
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Este jugador no tiene las llaves de este coche.");
		            return 1;
		        }
		        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] == INVALID_PLAYER_ID)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Usted no ha dado a nadie las llaves de este coche.");
		            return 1;
		        }
				Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
				Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
				format(string, sizeof(string), "{5ABAFF}%s{FFFFFF} ha tomado las llaves de su {5ABAFF}%s{FFFFFF}.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
				SendClientMessageEx(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId], COLOR_WHITE, string);
				format(string, sizeof(string), "Tomaste las llaves de tu {5ABAFF}%s{FFFFFF} de {5ABAFF}%s{FFFFFF}.", GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]),GetPlayerNameEx(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = INVALID_PLAYER_ID;
		    }
		}
		case TRACKCAR:
		{
		    if(response == 1)
		    {
				for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
				{
				    if(listitem == i)
				    {
				        new Float: carPos[3];
				        if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
				        {
				        	GetVehiclePos(PlayerVehicleInfo[playerid][i][pvId], carPos[0], carPos[1], carPos[2]);
				        	if(GetPVarInt(playerid, "Packages") == 0 || TaxiAccepted[playerid] == 999 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
							{
						    	SetPVarInt(playerid, "TrackCar", 1);
					    		new zone[MAX_ZONE_NAME];
					    		format(string, sizeof(string), "Tu vehículo fue localizado en %s. (Vé al checkpoint)", zone);
					    		SendClientMessageEx(playerid, COLOR_WHITE, string);
					    		SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
								PlayerPlaySound(playerid, 1138, 0,0,0);
							}
							else return SendClientMessageEx(playerid, COLOR_WHITE, "Primero ve al checkpoint que se te asignó, debes de estar en una llamada o algo.");
						}
						else if(PlayerVehicleInfo[playerid][i][pvImpounded]) SendClientMessageEx(playerid, COLOR_WHITE, "No se puede rastrear un vehículo confiscado. Si desea recuperarlo, tiene que pagar la multa.");
						else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede rastrear un vehículo que no existe o no está spawneado.");
				    }
				}
		    }
		}
		case SELLCAR:
		{
		    if(response == 1)
		    {
				for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
				{
				    if(listitem == i)
				    {
				        if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
				        {
				            if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 34000;
                            for(new m = 0; m < MAX_MODS; m++)
							{
                                PlayerVehicleInfo[playerid][i][pvMods][m] = 0;
                            }
                            carsforplayer[playerid]--;
				            DestroyVehicle(PlayerVehicleInfo[playerid][i][pvId]);
                            PlayerVehicleInfo[playerid][i][pvId] = 0;
                            PlayerVehicleInfo[playerid][i][pvModelId] = 0;
                            PlayerVehicleInfo[playerid][i][pvPosX] = 0.0;
                            PlayerVehicleInfo[playerid][i][pvPosY] = 0.0;
                            PlayerVehicleInfo[playerid][i][pvPosZ] = 0.0;
                            PlayerVehicleInfo[playerid][i][pvPosAngle] = 0.0;
                            PlayerVehicleInfo[playerid][i][pvLock] = 0;
                            PlayerVehicleInfo[playerid][i][pvLocked] = 0;
                            PlayerVehicleInfo[playerid][i][pvPaintJob] = -1;
                            PlayerVehicleInfo[playerid][i][pvColor1] = 0;
							PlayerVehicleInfo[playerid][i][pvImpounded] = 0;
                            PlayerVehicleInfo[playerid][i][pvColor2] = 0;
                            strmid(PlayerVehicleInfo[playerid][i][pvAllowPlayer], "Nadie", 0, strlen("Nadie"), 255);
                            PlayerVehicleInfo[playerid][i][pvAllowedPlayerId] = INVALID_PLAYER_ID;
                            PlayerVehicleInfo[playerid][i][pvPark] = 0;
                            PlayerVehicleInfo[playerid][i][pvHealth] = 1000.0;
                            format(string, sizeof(string), "Gracias por la venta, te pagamos la mitad del precio de tu coche. {33AA33}($%i)", PlayerVehicleInfo[playerid][i][pvPrice] / 2);
                            SendClientMessageEx(playerid, COLOR_WHITE, string);
                            GivePlayerCash(playerid, PlayerVehicleInfo[playerid][i][pvPrice] / 2);
                            Tax += PlayerVehicleInfo[playerid][i][pvPrice]; //dinero para fondos del gobierno
							PlayerCars--;
						}
						else if(PlayerVehicleInfo[playerid][i][pvImpounded]) SendClientMessageEx(playerid, COLOR_WHITE, "No se puede vender un vehículo confiscado.");
						else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede vender un vehículo que no existe o no está liberado.");
				    }
				}
		    }
		    else
		    {
		    	ShowPlayerDialog(playerid,DIALOG_AYUNTA,DIALOG_STYLE_LIST,"{008EC1}Ayuntamiento - {DA4500}Trámites","Licencias\nVender Autos (2da Mano)\n{EF0058}Seguro Medico","Seleccionar", "Cancelar");
		    }
		}
		case GTRACKCAR:
		{
		    if(response == 1)
		    {
		        for(new i = 0; i < MAX_GANG_VEHICLES; i++)
		        {
		            if(listitem == i)
		            {
		                new Float: carPos[3];
						new Family = Info[playerid][pFMember];
						if(FVINFO[Family][i][fvId] != INVALID_VEHICLE_ID)
						{
		                	GetVehiclePos(FVINFO[Family][i][fvId], carPos[0], carPos[1], carPos[2]);
		                	if(GetPVarInt(playerid, "Packages") != 0 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1)
							{
								return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor asegurate de que no estás en otro tipo de función, usando un checkpoint.");
							}
							else
							{
						    	SetPVarInt(playerid, "TrackCar", 1);
					    		new zone[MAX_ZONE_NAME];
					    		format(string, sizeof(string), "El vehículo se encuentra en %s. (Vé al checkpoint)", zone);
					    		SendClientMessageEx(playerid, COLOR_YELLOW, string);
					    		SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
					    		PlayerPlaySound(playerid, 1138, 0,0,0);
							}
						}
						else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede rastrear un vehículo en un espacio vacío.");
	            	}
	        	}
	    	}
		}
 		case UNMODCARMENU: if(response)
		{
			new count = GetPVarInt(playerid, "modCount");
			for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) for (new i = 0; i < count; i++) if(listitem == i){
				format(string, sizeof(string), "partList%i", i);
				new partID = GetPVarInt(playerid, string);
				if (partID == 999){
					for(new f = 0 ; f < MAX_MODS; f++){
						RemoveVehicleComponent(PlayerVehicleInfo[playerid][d][pvId], GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
						PlayerVehicleInfo[playerid][d][pvMods][f] = 0;
					}
					return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Todas las modificaciones se han eliminado de tu vehículo.");
				}
				RemoveVehicleComponent(GetPlayerVehicleID(playerid), partID);
				PlayerVehicleInfo[playerid][d][pvMods][GetVehicleComponentType(partID)] = 0;
				return SendClientMessageEx(playerid, COLOR_WHITE, "La modificación que has seleccionado ha sido eliminado.");
			}
		}
		case GOTOPLAYERCAR:{
		    if(response == 1){
		        for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
		            if(listitem == i){
						new Float: carPos[3], id = GetPVarInt(playerid, "playeraffectedcarTP");
						if(PlayerVehicleInfo[id][i][pvId] > INVALID_PLAYER_VEHICLE_ID){
							GetVehiclePos(PlayerVehicleInfo[id][i][pvId], carPos[0], carPos[1], carPos[2]);
							SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(PlayerVehicleInfo[id][i][pvId]));
							SetPlayerInterior(playerid,0);
							SetPlayerPos(playerid, carPos[0], carPos[1], carPos[2]);
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "No te puede teletransportar a un espacio vacío o embargado.");
					}
				}
		    }
		}
		case PB_MENU:
		{
			if(response == 1)
			{
			    switch(listitem)
			    {
			        // Elegir Arena
			        case 0: PaintballArenaSelection(playerid);
			        // Comprar Paintball Fichas
			        case 1: PaintballTokenBuyMenu(playerid);
			        case 2:
			        {
			            if(Info[playerid][pAdminZC] >= 1337)
			            {
			            	//PaintballAdminMenu(playerid);
						}
						else
						{
						    PaintballMainMenu(playerid);
						    SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes acceso al panel.");
						    return 1;
						}
			        }
			    }
			}
		}
		case PAYDAY1:
		{
		   	if(response == 1)
		   	{
		   		if(strfind(inputtext, PayDayCodes[IDCode[playerid]], true) != -1)
				{
					if(IsPlayerConnected(playerid))
					{
						if(MoneyMessage[playerid]==1)
						{
					    	if( Info[playerid][pJailed] < 1 && !IsACop(playerid))
					    	{
					    	    format(string,sizeof(string),"No pudiste pagar la deuda de {FF0000}$%d{FFFFFF}. Ahora la policía te está buscando.",GetPlayerCash(playerid));
								SendClientMessageEx(playerid, COLOR_WHITE, string);
								if(Info[playerid][pWantedLevel] < 6) Info[playerid][pWantedLevel] += 1;
								SetPlayerWantedLevel(playerid, Info[playerid][pWantedLevel]);
							}
						}
					    if(PaydayOn == 0)
						{
						    TogglePlayerControllable(playerid, 1);
						    IDCode[playerid] = -1;
							return SendClientMessageEx(playerid, COLOR_WHITE, "Pasaron 3 minutos ya se enviaron los cheques a cada ciudadano, espera a otra hora de pago.");
						}
						if(Info[playerid][pLevel] > 0)
		    			{
							if(Info[playerid][pRenting] != INVALID_HOUSE_ID)
							{
								if(HouseInfo[Info[playerid][pRenting]][hRentFee] > Info[playerid][pAccount])
								{
									Info[playerid][pRenting] = INVALID_HOUSE_ID;
									SendClientMessageEx(playerid, COLOR_WHITE, "Fuiste desalojado de la casa que rentabas.");
								}
								else
								{
									HouseInfo[Info[playerid][pRenting]][hSafeMoney] += HouseInfo[Info[playerid][pRenting]][hRentFee];
									Info[playerid][pAccount] -= HouseInfo[Info[playerid][pRenting]][hRentFee];
								}
							}
							Info[playerid][pRob] = 0;
							if(Info[playerid][pVIP] >= 4) Info[playerid][pVTokens]+= 2;
							Info[playerid][YaCobre] = 1;
							IDCode[playerid] = -1;
				    		if(Info[playerid][pDobleExp] == 0)
							{
                                Info[playerid][pExp] += 1;
							}
				    		else
							{
								Info[playerid][pExp] += 2;
								Info[playerid][pDobleExp]--;
								format(string, sizeof(string), "* Ganaste 2 puntos de respeto por tener horas de doble experiencia, te quedan %d horas más.", Info[playerid][pDobleExp]);
								SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							}
                        GameTextForPlayer(playerid, "~y~1+ de experiencia", 5000, 1);
                        GivePlayerCash(playerid, 900*Info[playerid][pLevel]);
                        GivePlayerCash(playerid, 1500*Info[playerid][pRank]);
						}
					}
				}
				else
				{
				    new text[256], rand;
					rand = random(22);
					format(string, sizeof(string), "Gobierno Estatal de Los Santos.\n\nEl Gobierno Estatal de Los Santos otorga a cada persona un bono de pago, pero es necesario\nque nos confirme sus datos y enviar el código de seguridad:\n\nNombres: %s\nEdad: %d\nPago: %i\nPago De Facc/Fam: %i\nNuevo Código: %s",GetPlayerNameEx(playerid), Info[playerid][pAge], 900*Info[playerid][pLevel], 1500*Info[playerid][pRank], PayDayCodes[rand]);
					ShowPlayerDialog(playerid, PAYDAY1, DIALOG_STYLE_INPUT,"{008EC1} Error intenta otra vez:",text,"Enviar","Salir");
                    IDCode[playerid] = rand;
				}
			}
		}
		case PB_FICHAS:
		{
		    if(response == 1)
		    {
		        if(isnull(inputtext)) return PaintballTokenBuyMenu(playerid);
		        if(strval(inputtext) <= 0) return PaintballTokenBuyMenu(playerid);
		        if(strval(inputtext) > 1000)
		        {
		            PaintballTokenBuyMenu(playerid);
		            SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} No puedes comprar 1000 fichas en una compra.");
		            return 1;
		        }
		        if(GetPlayerCash(playerid) < 20*strval(inputtext))
		        {
					PaintballTokenBuyMenu(playerid);
		        	format(string,sizeof(string), "{008EC1}[Paintball Arena]:{5ABAFF} No puedes pagar %d fichas por $%d.",strval(inputtext),strval(inputtext)*5000);
		        	SendClientMessageEx(playerid, COLOR_WHITE, string);
		        	return 1;
				}
		        GivePlayerCash(playerid, -20*strval(inputtext));
				Info[playerid][pPaintTokens] += strval(inputtext);
				format(string,sizeof(string), "{008EC1}[Paintball Arena]:{5ABAFF} Compraste %d fichas por $%d.",strval(inputtext),strval(inputtext)*20);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
		    }
		    else PaintballMainMenu(playerid);
		}
		case PBARENASCORES:
		{
		    if(response == 1) return PaintballScoreboard(playerid);
		}
		case PB_SARENA:
		{
		    if(response == 1)
		    {
		        switch(listitem)
		        {
	       	    	case 0: JoinPaintballArena(playerid, 1);//Join DM
	       	    	case 1: JoinPaintballArena(playerid, 5);//Join DM2
	       	    	case 2: JoinPaintballArena(playerid, 2);// Join Choose Team
	       	    	case 3: JoinPaintballArena(playerid, 4); // SendClientMessageEx Coming soon
	       	    }
	       	}
		    else PaintballMainMenu(playerid);
		}
		case PB_CHOOSE:
		{
		    if(response == 1)
		    {
		        switch(listitem)
		        {
		        	case 0: // Red
	 				{
	 				    if(Info[playerid][pPaintTeam] == 1)
	 				    {
	 				        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Ya eres del equipo rojo!");
	 				        PaintballSwitchTeam(playerid);
	 				        return 1;
	 				    }
	 				    if(PlayersRed == 12)
	 				    {
							SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Equipo rojo está full, por favor elige otro equipo.");
	 				        PaintballSwitchTeam(playerid);
	 				        return 1;
	 				    }
	 				    if(PlayersRed > PlayersBlue)
	 				    {
	 				        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} No puedes unirte a equipos ahora, si llegas a entrar estarían disparejos.");
	 				        return 1;
	 				    }
	 				    PlayersBlue--;
	 				    PlayersRed++;
	 				    Info[playerid][pPaintTeam] = 1;
	 				    SetHP(playerid, 0);
		        	}
		        	case 1: // Blue
		        	{
		        	    if(Info[playerid][pPaintTeam] == 2)
	 				    {
	 				        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Ya eres del equipo azul!");
	 				        PaintballSwitchTeam(playerid);
	 				        return 1;
	 				    }
	 				    if(PlayersBlue == 12)
	 				    {
							SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Equipo azul está full, por favor elige otro equipo.");
	 				        PaintballSwitchTeam(playerid);
	 				        return 1;
	 				    }
	 				    if(PlayersBlue > PlayersRed)
	 				    {
	 				        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} No puedes unirte a equipos ahora, si llegas a entrar estarían disparejos.");
	 				        return 1;
	 				    }
	 				    PlayersRed--;
	 				    PlayersBlue++;
	 				    Info[playerid][pPaintTeam] = 2;
	 				    SetHP(playerid, 0);
		        	}
				}
		    }
		}
		case PBJOINTEAM:
		{
	   		if(response == 1)
	    	{
	        	switch(listitem)
	        	{
	        		case 0: // Red
 					{
 					    if(PlayersRed == 12)
 					    {
							SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} El equipo rojo está FULL, por favor elige otro equipo.");
 					        SafeDialogEx(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"{008EC1} Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{FFFFFF}Equipo Azul","Entrar","Salir");
 					        return 1;
 					    }
 					    if(PlayersRed > PlayersBlue)
 					    {
 					        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Los equipos estarían disparejos, por favor elige otro equipo.");
 					        SafeDialogEx(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{FFFFFF}Equipo Azul","Entrar","Salir");
 					        return 1;
 					    }
 					    Info[playerid][pPaintTeam] = 1;
 					    TotalTDM++;
						JoinPaintballArena(playerid, 3);
	        		}
	        		case 1: // Blue
	        		{
 					    if(PlayersBlue == 12)
 					    {
							SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} El equipo azul está FULL, por favor elige otro equipo.");
 					        SafeDialogEx(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{FFFFFF}Equipo Azul","Entrar","Salir");
 					        return 1;
 					    }
 					    if(PlayersBlue > PlayersRed)
 					    {
 					        SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} Los equipos estarían disparejos, por favor elige otro equipo.");
 					        SafeDialogEx(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"{008EC1}Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{FFFFFF}Equipo Azul","Entrar","Salir");
 					        return 1;
 					    }
 					    Info[playerid][pPaintTeam] = 2;
 					    TotalTDM++;
						JoinPaintballArena(playerid, 3);
		        	}
				}
		    }
		    else
		    {
		        PaintballArenaSelection(playerid);
		    }
		}
		case PB_ARMAS:
		{
  			if(GetPVarInt(playerid, "ArenaMode") == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{5ABAFF}PAINTBALL:{FFFFFF} Lo sentimos, no estás dentro de la arena.");
		    if(Info[playerid][pPaintTokens] < 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{5ABAFF}PAINTBALL:{FFFFFF} Lo sentimos, no tienes suficientes fichas para canjear.");
 			if(response)
			{
				if(listitem == 0) //
				{
 					GivePlayerWeapon(playerid, 22, 9999);
 					Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 1) //deagle
				{
 					GivePlayerWeapon(playerid, 24, 9999);
 					Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 2) //MP5
				{
 					GivePlayerWeapon(playerid, 29, 9999);
 					Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 3) //AK-47
				{
 					GivePlayerWeapon(playerid, 30, 9999);
 					Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 4) //M4
				{
				    if(Info[playerid][pPaintTokens] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{5ABAFF}PAINTBALL:{FFFFFF} Necesitas 2 fichas para esta arma.");
 					GivePlayerWeapon(playerid, 31, 9999);
 					return Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 5) //shotgun
				{
 					GivePlayerWeapon(playerid, 25, 9999);
 					Info[playerid][pPaintTokens] -= 1;
 				}
				if(listitem == 6) //spaz
				{
				    if(Info[playerid][pPaintTokens] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{5ABAFF}PAINTBALL:{FFFFFF} Necesitas 2 fichas para esta arma.");
 					GivePlayerWeapon(playerid, 27, 9999);
 					return Info[playerid][pPaintTokens] -= 2;
 				}
				if(listitem == 7) //armor
				{
					new Float:health;
					GetPlayerHealth(playerid, health);
					if (health < 50)
					{
					 	return SendClientMessageEx(playerid,COLOR_WHITE,"{5ABAFF}PAINTBALL:{FFFFFF} No puedes comprar chaleco con menos de 35 de vida!");
					}
 					SetPlayerArmour(playerid, 100);
 					return Info[playerid][pPaintTokens] -= 1;
				}
			}
		}
		case DIALOG_CDLOCKMENU:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "lockmenu") == 1)
				{
	            	new pvid;
	            	if (isnumeric(inputtext))
		        	{
						pvid = strval(inputtext)-1;
				    	if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
				    	{
					    	SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} No tienes un vehiculo en este slot.");
					    	SetPVarInt(playerid, "lockmenu", 0);
					    	return 1;
				    	}
				    	if(PlayerVehicleInfo[playerid][pvid][pvLock] == 1)
				    	{
						    SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} Esto ya está instalado ene ste vehiculo.");
						    SetPVarInt(playerid, "lockmenu", 0);
						    return 1;
				    	}
				    	format(string, sizeof(string), "* Compraste un seguro de alarma.");
				    	SendClientMessageEx(playerid, COLOR_WHITE, string);
				    	SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Ahora puedes usar /seguro para asegurar tu auto.");
				    	PlayerVehicleInfo[playerid][pvid][pvLock] = 1;
				    	SetPVarInt(playerid, "lockmenu", 0);
				        if(Info[playerid][pVIP] == 0)
						{
						   	return GivePlayerCash(playerid, -500);
						}
						else
						{
						   	GivePlayerCash(playerid, -500);
						}
			    	}
				}
				else if(GetPVarInt(playerid, "lockmenu") == 2)
				{
		   			new pvid;
            		if (isnumeric(inputtext))
	        		{
                		pvid = strval(inputtext)-1;
			    		if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
			    		{
				    		SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} No tienes un vehiculo en este slot.");
				    		SetPVarInt(playerid, "lockmenu", 0);
	                		return 1;
			    		}
			    		if(PlayerVehicleInfo[playerid][pvid][pvLock] == 3)
		  	    		{
				    		SendClientMessageEx(playerid, COLOR_GRAD4, "{FFFF00}[ERROR]:{FFFFFF} Esto ya está instalado en este vehiculo.");
				    		SetPVarInt(playerid, "lockmenu", 0);
				    		return 1;
			    		}
			    		format(string, sizeof(string), "* Compraste un seguro industrial!");
			    		SendClientMessageEx(playerid, COLOR_WHITE, string);
			    		SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Ahora puedes usar /seguro para asegurar tu coche.");
			    		PlayerVehicleInfo[playerid][pvid][pvLock] = 3;
			    		SetPVarInt(playerid, "lockmenu", 0);
				        if(Info[playerid][pVIP] == 0)
						{
						   	return GivePlayerCash(playerid, -2000);
						}
						else
						{
						   	GivePlayerCash(playerid, -2000);
						}
					}
				}
			}
		}
 	case Tienda_OOC:
	{
	if(response == 1)
	{
	switch(listitem)
	{
	case 0:
	{
	if(Info[playerid][pPTR] > 149) // mas de 100
	{
	GivePlayerCash(playerid, 200000);
	SendClientMessageEx(playerid, -1, "{008EC1}Has canjeado 150 Puntos de Rol! por 200.000$!");
	Info[playerid][pPTR] -= 150;
	} else SendClientMessageEx(playerid, -1, "{FF0000}Necesitas 150 Puntos de Rol!");
	return 1;
	}
	case 1:
	{
	if(Info[playerid][pPTR] > 49) // menos de 50
	{
	GivePlayerCash(playerid, 100000);
	SendClientMessageEx(playerid, -1, "{008EC1}Has canjeado 50 Puntos de Rol! por 100.000$!");
	Info[playerid][pPTR] -= 50;
	} else SendClientMessageEx(playerid, -1, "{FF0000}Necesitas 50 Puntos de Rol!");
	return 1;
	}
	case 2:
	{
	if(Info[playerid][pPTR] > 24) // menos de 25
	{
	GivePlayerCash(playerid, 50000);
	SendClientMessageEx(playerid, -1, "{008EC1}Has canjeado 25 Puntos de Rol! por 50.000$!");
	Info[playerid][pPTR] -= 25;
	} else SendClientMessageEx(playerid, -1, "{FF0000}Necesitas 25 Puntos de Rol!");
	return 1;
	}
	case 3:
	{
	if(Info[playerid][pPTR] > 9) // menos de 10
	{
	GivePlayerCash(playerid, 30000);
	SendClientMessageEx(playerid, -1, "{008EC1}Has canjeado 10 Puntos de Rol! por 30.000$!");
	Info[playerid][pPTR] -= 10;
	} else SendClientMessageEx(playerid, -1, "{FF0000}Necesitas 10 Puntos de Rol!");
	return 1;
	}
	case 4:
	{
	if(Info[playerid][pPTR] > 4) // menos de 5
	{
	GivePlayerCash(playerid, 15000);
	SendClientMessageEx(playerid, -1, "{008EC1}Has canjeado 5 Puntos de Rol! por 15.000$!");
	Info[playerid][pPTR] -= 5;
	} else SendClientMessageEx(playerid, -1, "{FF0000}Necesitas 5 Puntos de Rol!");
	return 1;
	}
	}
	}
	return 1;
	}
		case EQUIPO_DOC:
		{
		    if(response == 1)
		    {
		        switch (listitem)
		        {
		            case 0:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 70);
								Medics += 1;
								format(string, sizeof(string), "* %s se pone su bata blanca y se desinfecta sus manos.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 274);
								Medics += 1;
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 275);
								Medics += 1;
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 276);
								Medics += 1;
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 4:
					{
								if(OnDuty[playerid] == 1) {	SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Estás en labor, termina tu turno."); return 1;    }
								SetPlayerSkin(playerid, Info[playerid][pChar]);
								Medics -= 1;
								format(string, sizeof(string), "* %s se viste con ropa normal", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_HITMAN:
		{
		    if(response == 1)
		    {
		        switch (listitem)
		        {
		            case 0:
					{
								GivePlayerValidWeapon(playerid, 23);
								format(string, sizeof(string), "* %s Coge una pistola silenciadora del armario.", GetPlayerNameEx(playerid));
   				 				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
								GivePlayerValidWeapon(playerid, 4);
								format(string, sizeof(string), "* %s Coge un cuchillo del armario.", GetPlayerNameEx(playerid));
		            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
								Info[playerid][pMask] = 1;
							 	if(Info[playerid][pLevel] <= 2) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debes ser mayor a nivel 2.");
								format(string, sizeof(string), "* %s Coge una mascara del armario.", GetPlayerNameEx(playerid));
		            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

					}
					case 3:
					{
				    GivePlayerValidWeapon(playerid, 34);
				    format(string, sizeof(string), "* %s Coge un Sniper del armario.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case LOTTO_BUY:
		{
			if(response == 1)
			{
			    new lenght = strlen(inputtext);
			    if(lenght > 0 && lenght < 4)
			    {
					Info[playerid][pLottoNr] = strval(inputtext);
					SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[24/7]:{FFFFFF} Lotería comprada.");
					Bought(playerid, 5);
				}
			}
		}
		case FSTYLE_DIALOG:
		{
	    	if(response == 1)
	    	{
	        	switch(listitem)
	        	{
	            	case 0:
	            	{
			    	    if(CheckMoney(playerid, 1500))
			    	    {
							Bought(playerid, 1500);
							Info[playerid][pFStyle] = 7;
							SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
							SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head.");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 1:
		            {
				        if(CheckMoney(playerid, 1000))
				        {
							Bought(playerid, 1000);
							Info[playerid][pFStyle] = 6;
							SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
							SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu.");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 2:
		            {
				        if(CheckMoney(playerid, 800))
				        {
							Bought(playerid, 800);
      						Info[playerid][pFStyle] = 5;
							SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
							SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear.");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 3:
		            {
				        if(CheckMoney(playerid, 800))
				        {
							Bought(playerid, 800);
                            Info[playerid][pFStyle] = 4;
							SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
							SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido pelea callejera.");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 4:
		            {
				        if(CheckMoney(playerid, 800))
				        {
							Bought(playerid, 800);
			    			Info[playerid][pFStyle] = 3;
							SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
							SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido a usar los codos.");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
				}
			}
		}
		case MMENU_REPARACION:
		{
			if(response == 1)
		    {
		        new Float:cx, Float:cy, Float:cz;
	         	GetVehiclePos(idcar, cx, cy, cz);
	         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
		        switch(listitem)
		        {
		            case 0:
					{
						format(string, sizeof(string), "* %s vierte aceite refrigerante sobre el motor y éste deja de emanar humo.", sendername);
	      				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			  			SetVehicleHealth(idcar, 1000.0);
						return 1;
					}
					case 1:
					{
						format(string, sizeof(string), "* %s coloca un chasis nuevo sobre el vehículo.", sendername);
	      				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			  			RepairVehicle(idcar);
						return 1;
					}
				}
			}
		}
 	case MECANICO_MENU:
		{
			if(response == 1)
		    {
		        switch(listitem)
		        {
					case 0:// Reparar
					{
					        if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el taller de mecanica!");
		    				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo!");
							SafeDialogEx(playerid, MMENU_REPARACION, DIALOG_STYLE_LIST, "{008EC1}Reparar", "Cambiar Motor\nCambiar Motor + Chasis", "Ok", "Atrás");
							return 1;
					}
					case 1: // Gasolina
					{
					    if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el taller!");
					    if(IsPlayerInAnyVehicle(playerid))
					    {
							format(string, sizeof(string), "* %s llena el tanque del vehículo.", sendername);
			      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					  		VehicleFuel[idcar] = 200;
					  		return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo!");
					}
					case 2: // Tunnig
					{
    	                if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el taller!");
		    			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo!");
						SafeDialogEx(playerid, MMENUTUNING_G, DIALOG_STYLE_LIST, "{008EC1}Selecciona", "Piezas Wheel Arch Angels\nLlantas\nNitro\nHydraulica", "Aceptar", "Atrás");
						return 1;
					}
				}
			}
		}
	    case MMENUTUNING_G:
		{
			if(response == 1)
			{
		        switch(listitem)
		        {
		            case 0: SafeDialogEx(playerid, TUNING_WAA, DIALOG_STYLE_LIST, "{008EC1}Piezas W.A.A ", "Chasis X-Flow\nChasis Alien", "Aceptar", "Atrás");
		            case 1: SafeDialogEx(playerid, TUNING_MENU_RUEDAS, DIALOG_STYLE_LIST, "{008EC1}Llantas", "OffRoad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Tunear", "<<");
		            case 2:
		            {
		            	if( ! IsPlayerInInvalidNosVehicle( playerid ) )
						{
                			new Float: soPos[3];
                			GetVehiclePos(GetPlayerVehicleID(playerid), soPos[0], soPos[1], soPos[2]);
                			PlayerPlaySoundEx(1133, soPos[0], soPos[1], soPos[2]);
                			AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
   							if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
								{
								UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
								}
                			format(string, sizeof(string), "* %s instala óxido de nitrógeno al vehiculo.", GetPlayerNameEx(playerid));
                			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			} else SendClientMessageEx(playerid, COLOR_WHITE, "Óxido de nitrógeno no se puede instalar en este vehículo.");
            			return 1;
					}
					case 3:
					{
            			if( ! IsPlayerInInvalidNosVehicle( playerid ) )
						{
   							new Float: soPos[3];
							GetVehiclePos(GetPlayerVehicleID(playerid), soPos[0], soPos[1], soPos[2]);
							PlayerPlaySoundEx(1133, soPos[0], soPos[1], soPos[2]);
                			AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
			    			if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
								{
								UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
								}
                			format(string, sizeof(string), "* %s añade suspensión hidráulica al vehiculo.", GetPlayerNameEx(playerid));
                			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			} else SendClientMessageEx( playerid, COLOR_WHITE, "suspensión Hidráulica no se puede instalar en este vehículo." );
            			return 1;
            		}
            	}
            }
        }
		case TUNING_WAA:
		{
			if(response == 1)
	    	{
	    	    switch(listitem)
	    	    {
	    	        // XFLOW TUNING Important Note: Using an invalid componentid crashes the game.
	    	        case 0:
	    	        {
	    	            SendClientMessageEx(playerid, COLOR_GRAD2, "CASE0");
						switch(GetVehicleModel(idcar))
				        {
				            case 560:
				            {
		                        AddVehicleComponent(idcar, 1030);
		                        AddVehicleComponent(idcar, 1033);
		                        AddVehicleComponent(idcar, 1140);
		                        AddVehicleComponent(idcar, 1170);
		                        AddVehicleComponent(idcar, 1029);
		                        AddVehicleComponent(idcar, 1139);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.");
				            }
				            case 562:
				            {
		                        AddVehicleComponent(idcar, 1039);
		                        AddVehicleComponent(idcar, 1035);
		                        AddVehicleComponent(idcar, 1148);
		                        AddVehicleComponent(idcar, 1172);
		                        AddVehicleComponent(idcar, 1037);
		                        AddVehicleComponent(idcar, 1146);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.!");
				            }
				            case 565:
				            {
		                        AddVehicleComponent(idcar, 1048);
		                        AddVehicleComponent(idcar, 1053);
		                        AddVehicleComponent(idcar, 1050);
		                        AddVehicleComponent(idcar, 1151);
		                        AddVehicleComponent(idcar, 1152);
		                        AddVehicleComponent(idcar, 1045);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.");
				            }
			            	case 559:
			            	{
	                        	AddVehicleComponent(idcar,1070);
	                        	AddVehicleComponent(idcar,1068);
	                        	AddVehicleComponent(idcar,1158);
	                        	AddVehicleComponent(idcar,1161);
	                        	AddVehicleComponent(idcar,1173);
	                        	AddVehicleComponent(idcar,1066);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.");
			            	}
			            	case 561:
			            	{
	                        	AddVehicleComponent(idcar,1057);
	                        	AddVehicleComponent(idcar,1061);
	                        	AddVehicleComponent(idcar,1060);
	                        	AddVehicleComponent(idcar,1156);
	                        	AddVehicleComponent(idcar,1157);
	                    	    AddVehicleComponent(idcar,1059);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.");
			            	}
			            	case 558:
			           	 	{
	                    	    AddVehicleComponent(idcar, 1093);
	                    	    AddVehicleComponent(idcar,1091);
	                	        AddVehicleComponent(idcar,1163);
	            	            AddVehicleComponent(idcar, 1167);
	            	            AddVehicleComponent(idcar, 1165);
	            	            AddVehicleComponent(idcar, 1089);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Xflow instalada.");
			    	        }
			    	        default: SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Este coche no permite este tipo de tunning.");
			    	    }
			    	    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
						{
							UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
						}
	            	}
	            	// ALIEN TUNING Important Note: Using an invalid componentid crashes the game.
					case 1:
	            	{
	                	SendClientMessageEx(playerid, COLOR_GRAD2, "CASE0");
						switch(GetVehicleModel(idcar))
			        	{
			        	    case 560:
			        	    {
	                	        AddVehicleComponent(idcar, 1026);
	                	        AddVehicleComponent(idcar, 1032);
	                	        AddVehicleComponent(idcar, 1138);
	                	        AddVehicleComponent(idcar, 1141);
	                	        AddVehicleComponent(idcar,1169);
	                	        AddVehicleComponent(idcar, 1028);
	        	                SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
			    	        }
			    	        case 562:
			    	        {
	        	                AddVehicleComponent(idcar,1036);
	        	                AddVehicleComponent(idcar,1038);
	        	                AddVehicleComponent(idcar,1149);
	        	                AddVehicleComponent(idcar,1171);
	        	                AddVehicleComponent(idcar,1034);
	        	                AddVehicleComponent(idcar,1147);
	        	                SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
				            }
				            case 565:
				            {
	        	                AddVehicleComponent(idcar, 1047);
	        	                AddVehicleComponent(idcar, 1054);
	        	                AddVehicleComponent(idcar, 1049);
	        	                AddVehicleComponent(idcar, 1150);
	        	                AddVehicleComponent(idcar, 1153);
	        	                AddVehicleComponent(idcar, 1046);
	        	                SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
				            }
				            case 559:
				            {
	        	                AddVehicleComponent(idcar, 1069);
	        	                AddVehicleComponent(idcar, 1067);
	        	                AddVehicleComponent(idcar, 1162);
	        	                AddVehicleComponent(idcar, 1159);
	        	                AddVehicleComponent(idcar, 1160);
	        	                AddVehicleComponent(idcar, 1065);
	        	                SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
				            }
				            case 561:
				            {
		                        AddVehicleComponent(idcar, 1056);
		                        AddVehicleComponent(idcar, 1055);
		                        AddVehicleComponent(idcar, 1058);
		                        AddVehicleComponent(idcar, 1154);
		                        AddVehicleComponent(idcar, 1153);
		                        AddVehicleComponent(idcar, 1064);
	        	                SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
				            }
				            case 558:
				            {
		                        AddVehicleComponent(idcar,1094);
		                        AddVehicleComponent(idcar,1088);
		                        AddVehicleComponent(idcar, 1164);
		                        AddVehicleComponent(idcar,1168);
		                        AddVehicleComponent(idcar,1166);
		                        AddVehicleComponent(idcar,1092);
		                        SendClientMessageEx(playerid, COLOR_WHITE, "Carrocería Alien instalada.");
				            }
			    	        default: SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Este coche no permite este tipo de tunning.");
				        }
			    	    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
						{
							UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
						}
		            }
		        }
			}
		}
		case TUNING_MENU_RUEDAS:
		{
			if(response == 1)
		    {
		        new Float:cx, Float:cy, Float:cz;
	         	GetVehiclePos(idcar, cx, cy, cz);
	         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
		        switch(listitem)
		        {
		            case 0: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas OffRoad instaladas."); AddVehicleComponent(idcar, 1025); return 1; }
		            case 1: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Shadow instaladas."); AddVehicleComponent(idcar, 1073);  return 1; }
		            case 2: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Mega instaladas."); AddVehicleComponent(idcar, 1074); return 1; }
		            case 3: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Rimshine instaladas. "); AddVehicleComponent(idcar, 1075);  return 1; }
		            case 4: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Wires instaladas."); AddVehicleComponent(idcar, 1076);  return 1; }
		            case 5: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Classic instaladas."); AddVehicleComponent(idcar, 1077);  return 1; }
		            case 6: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Twist instaladas."); AddVehicleComponent(idcar, 1078);  return 1; }
		            case 7: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Cutter instaladas."); AddVehicleComponent(idcar, 1079);  return 1; }
		            case 8: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Switch instaladas."); AddVehicleComponent(idcar, 1080);  return 1; }
		            case 9: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Grove instaladas."); AddVehicleComponent(idcar, 1081);  return 1; }
		            case 10: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Import instaladas."); AddVehicleComponent(idcar, 1082);  return 1; }
		            case 11: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Dollar instaladas."); AddVehicleComponent(idcar, 1083);  return 1; }
	    	        case 12: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Trance instaladas."); AddVehicleComponent(idcar, 1084);  return 1; }
		            case 13: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1085);  return 1; }
		            case 14: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1096);  return 1; }
		            case 15: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1097);  return 1; }
		            case 16: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1098);  return 1; }
				}
			    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
				{
					UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
				}
			}
		}
 		case REQF_ACCEPT:
		{
	    	if(response == 1)
	    	{
	    	    format(string, sizeof(string), "Ahora formas parte de la facción %s, aceptaste el contrato.",ReqF_Name[playerid]);
	    	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	    	    Info[playerid][pMember]= ReqF_Faction[playerid];
	    	    Info[playerid][pRank] = 1;
	    	    Info[playerid][pDivision] = 1;
	    	    format(string, sizeof(string), "* %s acepta y firma un contrato", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	    ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
	    	}
	    	else
			{
        	    SendClientMessageEx(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
        	    format(string, sizeof(string), "* %s rechaza un contrato", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
			}
		}
		case ENTER_LSTV:
		{
	    	if(response == 1)
	    	{
	        	switch(listitem)
	        	{
	        	    case 0:
	        	    {
	        	        SetPosEx(playerid, -2719.7854,519.2936,48.3752,0,0,0);//-1965.2617,779.8456,107.1754
	        	        GameTextForPlayer(playerid, "~g~~h~SA News", 5000, 1);
	        	    }
	        	    case 1:
	        	    {
	        	        SetPosEx(playerid, 243.2710,302.7583,999.1343+1,0,0,0);
	        	        GameTextForPlayer(playerid, "~g~~h~SA News", 5000, 1);
	        	    }
	    	    }
		    }
		}
	    case REBUG:
	    {
	        if(response == 1)
            {
				SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}Perfect City:{FFFFFF}Gracias, el bug será arreglado lo más antes posible.");
				format(string, sizeof(string), "Administración: %s reportó un bug: %s", GetPlayerNameEx(playerid), inputtext);
				ABroadCast(COLOR_GENERAL,string,4);
  				Log("logs/reportbug.log", string);
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "No dudes en reportar un bug si lo encuentras");
			}
		}
		case REG_SEX:
		{
			if(response == 1)
			{
   				Info[playerid][pSex] = 1;
   				SetPlayerSkin(playerid, 60);
				format(string, sizeof(string), "{FFFFFF}Bien %s, ahora necesitamos saber tú edad:", GetPlayerNameEx(playerid));
		        SafeDialogEx(playerid, REG_AGE, DIALOG_STYLE_INPUT, "{008EC1}2.- Seleccionar tu Edad",string, "OK", "Atrás");
		    }
			else
			{
				Info[playerid][pSex] = 2;
				SetPlayerSkin(playerid, 226);
				format(string, sizeof(string), "{FFFFFF}Bien %s, ahora necesitamos saber tú edad:", GetPlayerNameEx(playerid));
		        SafeDialogEx(playerid, REG_AGE, DIALOG_STYLE_INPUT, "{008EC1}2.- Seleccionar tu Edad:",string, "OK", "Atrás");
			}
		}
		case REG_AGE:
		{
		    if(response == 1)
		    {
		         if(strval(inputtext) < 18 || strval(inputtext) > 99) return SafeDialogEx(playerid, REG_AGE, DIALOG_STYLE_INPUT, "{008EC1}2. Selecciona tú edad:", "{008EC1}Mínimo: {FFFFFF}18 Años\n{008EC1}Máximo: {FFFFFF}99 Años\n\n", "OK", "Atrás");
		         {
		         	Info[playerid][pAge] = strval(inputtext);
		         	//format(string, sizeof(string), "{FFFFFF}Bien %s ya sabemos tú edad, el cual es %d\n\nAhora selecciona tú origen:", GetPlayerNameEx(playerid),strval(inputtext));
					//SafeDialogEx(playerid,REG_NAC,DIALOG_STYLE_MSGBOX, "{008EC1}3.- Seleccionar tu Origen", string, "Los Santos", "San Fierro");
					SafeDialogEx(playerid,REG_NAC,DIALOG_STYLE_LIST,"{008EC1}3.- Seleccionar tu Nacionalidad:","Norteamericana\nCentroamericana\nSudamericana\nEuropea\nAsiática\nÁrabe\nAfricana\nOceánica","Elegir","");
		         }
		    }
		    else
		    {
		    	new sex[]= "{FFFFFF}Al parecer te equivocaste en el sexo, puedes elegir de nuevo:\n";
				SafeDialogEx(playerid,REG_SEX,DIALOG_STYLE_MSGBOX, "{008EC1}1.- Seleccionar tu Sexo:", sex, "Masculino", "Femenino");
			}
		}
		/*case REG_NAC:
		{
		    if(response == 1)
		    {
		        Info[playerid][pOrigin] = 1;
		        SendClientMessageEx(playerid, COLOR_GENERAL, "{5ABAFF}Bien, naciste en Los Santos, espera un momento por favor");
      			//SetTimerEx("Reg_ShowDNI", 3000, false, "i", playerid);
				GameTextForPlayer(playerid, "~G~Guardando tus Datos", 3000, 1);
				SetTimerEx("RegMsn", 6000, false, "i", playerid);
			}
			else
			{
		        Info[playerid][pOrigin] = 2;
   				SendClientMessageEx(playerid, COLOR_GENERAL, "{5ABAFF}Bien, naciste en San Fierro, espera un momento por favor");
      			//SetTimerEx("Reg_ShowDNI", 3000, false, "i", playerid);
				GameTextForPlayer(playerid, "~G~Guardando tus Datos", 3000, 1);
				SetTimerEx("RegMsn", 6000, false, "i", playerid);
			}
		}*/
		case DIALOG_CORREO:
		{
	    	if(response == 1)
	    	{
	    	    if(strfind( inputtext, "@", true) == -1)
				{
					CorreoMenu(playerid);
  	    			Message(playerid, -1, "Por favor introduce un correo válido para continuar.");
  	    		}
	    		if (!strlen(inputtext))
	    		{
					CorreoMenu(playerid);
	    			Message(playerid, -1, "Por favor introduce un correo para continuar.");
  				}
				else
				{
				new email[512];
				format(email, sizeof(email), "%s",inputtext);
				strmid(Info[playerid][pCorreo], inputtext, 0, strlen(inputtext), 32);
				format(string, sizeof(string), "{FFFFFF}¿Estás seguro de querer usar este e-mail? {00FF5F}%s{FFFFFF}\nUna vez elegido el correo, no podrás cambiarlo.", email);
				ShowPlayerDialog(playerid, DIALOG_CORREO2, DIALOG_STYLE_MSGBOX, "{008EC1}5.- Confirmar tu Correo Electrónico", string, "Validar", "Cambiar");
				}
			return 1;
			}
		}
  		case DIALOG_CORREO2:
		{
	    	if(response == 1)
	    	{
	    		GameTextForPlayer(playerid, "~G~Guardando tus datos",3000,5);
				SetTimerEx("RegMsn", 3000, false, "i", playerid);
	    	}
			else
			{
				Info[playerid][pCorreo] = 0;
	    		CorreoMenu(playerid);
			}
			return 1;
		}
		case RENT_BIKE:
		{
		    if(response == 1)
		    {
		        //new lights,alarm,doors,bonnet,boot,objective;
		        new newcar = GetPlayerVehicleID(playerid);
		        if(isnull(inputtext)) return ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_INPUT,"{008EC1}Renta de motos","{FFFFFF}Ingresa los minutos que quieres tener rentada la moto\n\n5$ por minuto", "Rentar", "Cancelar");
		        if(strval(inputtext) <= 0) return ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_INPUT,"{008EC1}Renta de motos","{FFFFFF}Ingresa los minutos que quieres tener rentada la moto\n\n5$ por minuto", "Rentar", "Cancelar");
		        if(strval(inputtext) > 60)
		        {
		            RentaMenu(playerid);
		            SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Renta]:{5ABAFF} No puedes rentar por más de 60 minutos.");
		            return 1;
		        }
		        if(GetPlayerCash(playerid) < 5*strval(inputtext))
		        {
		        	format(string,sizeof(string), "{008EC1}[Renta]:{5ABAFF} No puedes pagar %d minutos por $%d.",strval(inputtext),strval(inputtext)*5);
					RemovePlayerFromVehicle(playerid);
     				SetVehicleToRespawn(newcar);
			    	new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
		    		TogglePlayerControllable(playerid,1);
		        	SendClientMessageEx(playerid, COLOR_WHITE, string);
		        	return 1;
				}
				else
				{
    			TogglePlayerControllable(playerid, 1);
		        Bought(playerid, 5*strval(inputtext));
				RentTime[playerid] = 60*strval(inputtext);
				format(string,sizeof(string), "{008EC1}[Renta]:{5ABAFF} Has rentado %d minutos por $%d.",strval(inputtext),strval(inputtext)*5);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
  				IsaRent[playerid] = 1; HireKey[playerid] = newcar;
		    	}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Renta]:{5ABAFF} Has cancelado el diálogo de renta.");
				RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
		    	TogglePlayerControllable(playerid,1);
		    }
		}
		case SALDO:
		{
		    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
		    if(response == 1)
		    {
		        if(isnull(inputtext)){
				SaldoMenu(playerid);
				}
		        if(strval(inputtext) <= 0){
				SaldoMenu(playerid);
				}
		        if(strval(inputtext) > 500)
		        {
		            SaldoMenu(playerid);
		            SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Saldo]:{5ABAFF} No puedes adquirir más de 500$ de saldo.");
		            return 1;
		        }
		        if(GetPlayerMoney(playerid) >= strval(inputtext))
		        {
		        	format(string,sizeof(string), "{008EC1}[Saldo]:{5ABAFF} Has adquirido correctamente %d de saldo.",strval(inputtext));
		        	SendClientMessageEx(playerid, COLOR_WHITE, string);
		        	Info[playerid][pSaldo] += strval(inputtext);
		        	Bought(playerid, strval(inputtext));
		        	businessVariables[businessID][bVault] += strval(inputtext);
					SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
		        	return 1;
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Saldo]:{5ABAFF} No tienes suficiente dinero.");
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Saldo]:{5ABAFF} Has cancelado el diálogo.");
                ShowPlayerDialog(playerid, STOREMENU, DIALOG_STYLE_LIST, "24-7", "Loteria\t\t\t$10\nCigarros\t\t$40\nEncendedor\t\t$20\nFlores\t\t\t$7\nSprunk\t\t\t$8\nSeguro Alarma\t$500\nSeguro Industrial\t$2000\nTeléfono\t\t$800\nAgenda\t\t$20\nCamara\t\t$160\nRadio Portable\t\t$800\nIPOD\t\t\t$850\nBoombox\t\t$750\n{00D300}Recargar Saldo", "Comprar", "Cancelar");
		    }
		}
		case D_SPEEDCAMRANGE:
		{
			if(response)
			{
				if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara - Rango","Sólo números.\nEscribe el rango que alcanzará la cámara.","Ok","Cancelar");
				new id = GetPVarInt(playerid, "IDSpeedCam");
				new range = strval(inputtext);
				if(range < 5 || range > 30) return ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara - Rango","* Rango no mayor de 30.\n* Rango no menor de 5.\nEscribe el rango que alcanzará la cámara.","Ok","Cancelar");
				vCameraInfo[id][vCameraRange] = range;
				SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el rango de la cámara.");
        		saveSpeedCam();
        		DeletePVar(playerid,"IDSpeedCam");
			}
			else return DeletePVar(playerid,"IDSpeedCam");
		}
		case D_SPEEDCAMLIMIT:
		{
			if(response)
			{
				if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","Sólo números.\nEscribe el límite de velocidad que podrán pasar los coches.","Ok","Cancelar");
				new id = GetPVarInt(playerid, "IDSpeedCam");
				new text_info[64], limit = strval(inputtext);
				if(limit < 10 || limit > 250) return ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","* Límite no mayor de 250.\n* Límite no menor de 10.\nEscribe el límite de velocidad que podrán pasar los coches.","Ok","Cancelar");
				vCameraInfo[id][vCameraLimit] = limit;
				SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el Límite de la cámara, puedes verlo en el 3dlabel.");
        		saveSpeedCam();
        		DeletePVar(playerid,"IDSpeedCam");
   				switch(vCameraInfo[id][vCameraStatus])
   				{
   					case 0: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\nLímite: MPH {FFC800}%d", id,vCameraInfo[id][vCameraLimit]);
					case 1: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\n{FF0000}(DESACTIVADA)", id);
   				}
				UpdateDynamic3DTextLabelText(vCameraInfo[id][vCameraLabel],-1,text_info);
			}
			else return DeletePVar(playerid,"IDSpeedCam");
		}
		case D_SPEEDCAMSTATUS:
		{
    		if(response)
    		{
        		new id = GetPVarInt(playerid, "IDSpeedCam"), text_info[64];
   				switch(listitem)
   				{
   					case 0:
   					{
		  	 			vCameraInfo[id][vCameraStatus] = 0;
			   			format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\nLímite: MPH {FFC800}%d", id,vCameraInfo[id][vCameraLimit]);
					}
   					case 1:
					{
			   			vCameraInfo[id][vCameraStatus] = 1;
			   			format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\n{FF0000}(DESACTIVADA)", id);
					}
 				}
				UpdateDynamic3DTextLabelText(vCameraInfo[id][vCameraLabel],-1,text_info);
    			SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el estado de la cámara, puedes verlo en el 3dlabel.");
        		saveSpeedCam();
        		DeletePVar(playerid,"IDSpeedCam");
   			}
   			else return DeletePVar(playerid,"IDSpeedCam");
		}
		case D_SPEEDCAMFINE:
		{
    		if(response)
    		{
        		if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","Sólo números.\nEscribe la multa que dará la cámara.","Ok","Cancelar");
        		new id = GetPVarInt(playerid, "IDSpeedCam");
        		new fine = strval(inputtext);
        		if(fine < 100 || fine > 15000) return ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara - Multa","* Multa no mayor de 15000.\n* Límite no menor de 100.\nEscribe la multa que dará la cámara.","Ok","Cancelar");
        		vCameraInfo[id][vCameraTicket] = fine;
				SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste la multa de la cámara.");
        		saveSpeedCam();
        		DeletePVar(playerid,"IDSpeedCam");
   			}
   			else return DeletePVar(playerid,"IDSpeedCam");
		}
	    case IPAD:
        {
		    if(response)
		    {
		    	new Float:X, Float:Y, Float:Z, Float:Distance = 1.0;
		        GetPlayerPos(playerid, X, Y, Z);
		        Ipadon[playerid] = 1;
		    	if(listitem == 0)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=119715", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Drum and Bass HD - {FF8000}Género: Drum and Bass");
				}
		    	if(listitem == 1)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=372869", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Reggaeton 24/7 - {FF8000}Género: Reggeaton");
				}
		    	if(listitem == 2)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1698972", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF} Metal Time - {FF8000}Género: Rock & Metal");
				}
		    	if(listitem == 3)
		    	{
		    		StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=96567", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}FM - Rock Classic - {FF8000}Género: Rock");
				}
		    	if(listitem == 4)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=197109", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}La Mega FM - {FF8000}Género: Reggaeton");
				}
		    	if(listitem == 5)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181500", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Rap Gansta - {FF8000}Género: Rap");
				}
		    	if(listitem == 6)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=2560862", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Bachata Radio - {FF8000}Género: Bachata");
				}
		    	if(listitem == 7)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=228614", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Radio Mambo - {FF8000}Género: Salsa");
				}
		    	if(listitem == 8)
		    	{
		    		StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=85652", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Slap Back Radio - {FF8000}Género: Rap & Otros.");
				}
				if(listitem == 9)
		    	{
		    		StopAudioStreamForPlayer(playerid);
		    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=198255", X, Y, Z, Distance, 0);
					SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Maxima FM - {FF8000}Género: Public radio.");
				}
				if(listitem == 10)
		    	{
		    	    StopAudioStreamForPlayer(playerid);
					SendClientMessageEx(playerid, COLOR_WHITE, "Apaste tu IpodMusic");
					Ipadon[playerid] = 0;
				}
			}
			else
			{
			    format(string, sizeof(string), "* %s guarda su Ipod.", GetPlayerNameEx(playerid));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
	    case DIALOG_SHOPFISH:
		{
		    if(response)
		    {
		        new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
				if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
		    	if(listitem == 0)
		    	{
		    	    if(Carnada[playerid] > 20) return SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}PESCA:{FFFFFF} Ya has comprado 20 carnadas para pescar, gastalas.");
		    	    if(CheckMoney(playerid,15))
		    	    {
		    	        GivePlayerCash(playerid, -15);
		    	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[PESCA]:{FFFFFF} Compraste una lata de carnadas. (20)");
		    	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	        	businessVariables[businessID][bVault] += 15;
	    	        	businessVariables[businessID][bStock]--;
		    	        Carnada[playerid] += 20;
		    	    }
		    	}
		    	if(listitem == 1)
		    	{
		    	    if(Lineas[playerid] > 20 ) return SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[PESCA]:{FFFFFF} Ya has comprado 20 lineas para pescar, gastalas.");
		    	    if(CheckMoney(playerid,30))
		    	    {
		    	        GivePlayerCash(playerid, -30);
		    	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[PESCA]:{FFFFFF} Compraste 10 lineas para la caña de pesca.");
		    	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    	        	businessVariables[businessID][bVault] += 30;
	    	        	businessVariables[businessID][bStock]--;
		    	        Lineas[playerid] += 10;
		    	    }
		    	}
		    }
		    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
 	    	SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	    	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
		}
		case DIALOG_AMMU:
		{
		    if(response)
		    {
		        new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
        		if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
		        if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Tienes restricción de armas las 2 primeras horas de juego");
		        if(Info[playerid][pGunLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Vendedor dice: Es imposible venderte armas, no tienes licencia para portarlas");
		    	if(listitem == 0)
		    	{
		    	    if(CheckMoney(playerid,25))
		    	    {
		    	        Bought(playerid, 25);
		    	        businessVariables[businessID][bVault] += 25;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 1);
                	}
		    	}
		    	if(listitem == 1)
		    	{
		    	    if(CheckMoney(playerid,50))
		    	    {
		    	        Bought(playerid, 50);
		    	        businessVariables[businessID][bVault] += 50;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 5);
                	}
		    	}
		    	if(listitem == 2)
		    	{
		    	    if(CheckMoney(playerid,5000))
		    	    {
		    	        Bought(playerid, 5000);
		    	        businessVariables[businessID][bVault] += 5000;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 24);
                	}
		    	}
		    	if(listitem == 3)
		    	{
		    	    if(CheckMoney(playerid,10000))
		    	    {
		    	        Bought(playerid, 10000);
		    	        businessVariables[businessID][bVault] += 10000;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 29);
                	}
		    	}
		    	if(listitem == 4)
		    	{
		    	    if(CheckMoney(playerid,4000))
		    	    {
		    	        Bought(playerid, 4000);
		    	        businessVariables[businessID][bVault] += 4000;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 22);
                	}
		    	}
                if(listitem == 5)
		    	{
		    	    if(CheckMoney(playerid,9000))
		    	    {
		    	        Bought(playerid, 9000);
		    	        businessVariables[businessID][bVault] += 9000;
		    	        businessVariables[businessID][bStock]--;
                		GivePlayerValidWeapon(playerid, 33);
                	}
		    	}
		    }
		    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
 	    	SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	    	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
		}
		case PLANM:
		{
 			if(response == 1)
   			{
     			if(GetPlayerMoney(playerid) < 500) return Message(playerid, COLOR_GRAD2, "No tienes suficiente dinero");
       			if(Info[playerid][pPlan] == 1) return Message(playerid, COLOR_GRAD2, "Ya tienes un plan médico activo");
        		Info[playerid][pPlan] = 1;
	        	Message(playerid, COLOR_LIGHTBLUE, "Has adquirido un plan médico con éxito");
				Bought(playerid, 500);
				Tax += 500;
   			}
    		else
			{
				if(Info[playerid][pPlan] == 0) return Message(playerid, COLOR_GRAD2, "Tu no tienes un plan médico activo");
   				Info[playerid][pPlan] = 0;
      			Earn(playerid, 500);
        		Message(playerid, COLOR_GRAD3, "Has removido tu plan médico y te devolvimos tu dinero");
         	}
		}
		case TEST_1:
		{
	    	if(response == 1)
	    	{
        		switch(listitem)
				{
					case 0: // Correcta PowerGaming
					{
						//Mensaje(playerid, COLOR_YELLOW, "La pregunta #1 ha sido contestada de forma correcta.");
						Correctas[playerid] += 1;
					}
				}
				SafeDialogEx(playerid, TEST_2, DIALOG_STYLE_LIST, "{008EC1}¿Para qué sirve el comando /duda?", "1) {FFFFFF}Es para hablar por el chat de mi facción.\n2) {FFFFFF}Es para reportar a un usuario por cheat/anti-rol.\n3) {FFFFFF}Es para saber quien fué el último que me mató.\n4) {FFFFFF}Es para dudas relacionadas con la GameMode.", "Aceptar", "");
			}
			else
			{

			}
		}
		case TEST_2:
		{
	    	if(response == 1)
	    	{
        		switch(listitem)
				{
					case 3: // Correcta DeathMatch
					{
						//Mensaje(playerid, COLOR_YELLOW, "La pregunta #2 ha sido contestada de forma correcta.");
						Correctas[playerid] += 1;
					}
				}
				SafeDialogEx(playerid, TEST_3, DIALOG_STYLE_LIST, "{008EC1}¿Estaría bien vengarte luego de haber muerto?", "1) {FFFFFF}Sí, para recobrar mi honor y no quedar como un cobarde.\n2) {FFFFFF}No, ya que sería RevengeKill y podría quedar sancionado.\n3) {FFFFFF}No lo sé, otra pregunta.\n4) {FFFFFF}Podría ser, de todos modos sale perdiendo el que me mató.", "Aceptar", "");
			}
			else
			{

			}
		}
		case TEST_3:
		{
	    	if(response == 1)
	    	{
        		switch(listitem)
				{
					case 1: // Correcta BugAbuse
					{
						//Mensaje(playerid, COLOR_YELLOW, "La pregunta #3 ha sido contestada de forma correcta.");
						Correctas[playerid] += 1;
					}
				}
				SafeDialogEx(playerid, TEST_4, DIALOG_STYLE_LIST, "{008EC1}¿Qué es Meta Gaming?", "1) {FFFFFF}Es cuando hago cosas que son imposibles a la vida real).\n2) {FFFFFF}Es usar información dentro del jugador (IC) para mi beneficio fuera del jugador (OOC).\n3) Es la confusión de canales IC con OOC o viceversa.\n4) Consiste atropellar a un usuario y dejarlo debajo del coche hasta matarlo.", "Aceptar", "");
			}
			else
			{

			}
		}
		case TEST_4:
		{
	    	if(response)
	    	{
        		switch(listitem)
				{
					case 1: // Correcta de "¿Cómo llamar a un admin?".
					{
						//Mensaje(playerid, COLOR_YELLOW, "La pregunta #4 ha sido contestada de forma correcta.");
						Correctas[playerid] += 1;
					}
				}
				SafeDialogEx(playerid, TEST_5, DIALOG_STYLE_LIST, "{008EC1}¿Qué hago si veo a un cheat o Anti-Rol?", "1) {FFFFFF}Le pido dinero y armas, así me aprovecho de él y seremos buenos amigos.\n2) {FFFFFF}Hacemos Anti-Rol los dos juntos, ya que dos son mejor que uno.\n3) {FFFFFF}Tomo ScreenShot (F8) y utilizo el comando /re [ID] [Razón] para reportarlo al Staff.\n4) {FFFFFF}Hago como el que no vi nada y dejo que sigan en lo suyo.", "Aceptar", "");
			}
		}
		case TEST_5:
	    {
	    	if(response)
	    	{
        		switch(listitem)
				{
					case 2: // Correcta de "¿Qué hago si veo un cheat?".
					{
						//Mensaje(playerid, COLOR_YELLOW, "La pregunta #5 ha sido contestada de forma correcta.");
						Correctas[playerid] += 1;
					}
			 	}
				new Conteo[MAX_PLAYERS];
				Conteo[playerid] = (Correctas[playerid] * 20);
				new end[200];
				if(Correctas[playerid] >= 3)
				{
				format(end, sizeof(end), "{FFFFFF}Total de Preguntas: 5\nCorrectas: %d (%d%%)\nFelicidades, Ha completado el test satisfactoriamente!\nAhora podrás disfrutar del servidor, buena suerte.", Correctas[playerid], Conteo[playerid]);
				SafeDialogEx(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Resultado del Test", end, "Cerrar", "");
    			gOoc[playerid] = 0; 	gNews[playerid] = 0;
				gFam[playerid] = 0; 	TutStep[playerid] = 0;
				gNewbie[playerid]=0;	 Muted[playerid] = 0;
				TutTime[playerid] = 0;
   				SetPosEx(playerid, 1499.6842,-2286.1821,13.5856,276.2685,0,0);
	            ClearChatbox(playerid);
	            ClearChatbox(playerid);
	            ClearChatbox(playerid);
	            SendClientMessageEx(playerid, COLOR_BLUE, "----------------------------------------------------------------------------");
	           	SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido a Perfect City Roleplay");
	           	SendClientMessageEx(playerid, COLOR_WHITE, "Invita a tus amigos {07D400}y serás recompensado{FFFFFF}.");
              	SendClientMessageEx(playerid, COLOR_WHITE, "Tus stats se han dado, $300.000 en efectivo, nivel 4.");
               	SendClientMessageEx(playerid, COLOR_WHITE, "Si ves un anti-rol o hacker, no dudes en reportarlo con /re.");
    			SendClientMessageEx(playerid, COLOR_WHITE, "Usa /actualizaciones para saber las novedades del servidor.");
      			SendClientMessageEx(playerid, COLOR_WHITE, "Para ver tu inventario usa {F89A00}/inventario{FFFFFF}.");
      			SendClientMessageEx(playerid, COLOR_BLUE, "----------------------------------------------------------------------------");
      			SetHP(playerid, 100);
        		StopAudioStreamForPlayer(playerid);
        		ResetPlayerWeaponsEx(playerid);
				SetCameraBehindPlayer(playerid);
  				Info[playerid][pWRestricted] = 0;
      			Info[playerid][pTut] = 1;
   		    	Info[playerid][pNMute] = 0;
    		    Info[playerid][pPTR] = 0;
         		TogglePlayerControllable(playerid, 1);
          		SetPlayerVirtualWorld(playerid, 0);
           		ClearAnimations(playerid);
    		    Info[playerid][pLevel] = 4;
         		Info[playerid][pArmsSkill] = 50;
           		GivePlayerCash(playerid, 300000);
	            OnPlayerSavedStats(playerid);
            	TextDrawShowForPlayer(playerid, Textgame0);
  	 			}
      			else
			 	{
     			ClearChatbox(playerid);
	            ClearChatbox(playerid);
	            ClearChatbox(playerid);
                Message(playerid, COLOR_RED, "No has podido responder las preguntas correctamente, vuelvelo a intentarlo.");
                Correctas[playerid] = 0;
	 			SetTimerEx("TEST_ROL", 3000, 0, "d", playerid);
			 	//GameTextForPlayer(i, "CARGANDO TEST DE ROL",3000,5);
	         	}
			}
		}
		case DIALOG_REG_TUT:
		{
	    	if(response == 1)
	    	{
      			Info[playerid][pReg] = 1;
	        	ClearChatbox(playerid);
	        	TutStep[playerid] = 1;
				TutTime[playerid] = 1;
				Tutorial_Inside(playerid);
	        	SendClientMessageEx(playerid, 	COLOR_YELLOW2, "* Bien, ahora verás el tutorial te tomará sólo 5 minutos.");
         		SendClientMessageEx(playerid,	COLOR_YELLOW2, "* Tu cuenta ha sido registrada exitósamente en nuestra base de datos.");
				SendClientMessageEx(playerid,	COLOR_YELLOW2, "* Pulsa la letra Y de tu teclado para pasar el tema del tutorial.");
			}
			else
			{
			     SetTimerEx("TEST_ROL", 3000, 0, "d", playerid);
   				 GameTextForPlayer(playerid, "CARGANDO TEST DE ROL",3000,5);
			}
		}
		case REPORTSMENU:
		{
		    if(response)
		    {
		        if(CancelReport[playerid] == listitem) return 1;
				new reportid = ListItemReportId[playerid][listitem];
		        if(Reports[reportid][BeingUsed] == 0)
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Ese reporte ya fue revisado!");
				    return 1;
				}
				if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} El que reportó se ha desconectado !");
				    Reports[reportid][ReportFrom] = 999;
				    Reports[reportid][BeingUsed] = 0;
				    return 1;
				}
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s aceptó el reporte de %s (ID: %i, RID: %i).", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
				ABroadCast(COLOR_WHITE, string, 2);
				if(Info[playerid][pAdminZC] == 89650)
				{
				    SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, "Un administrador ha aceptado tu reporte, puedes usar /reply para explicar tu reporte. [T: 60 Seg.]");
				}
				else
				{
				    format(string, sizeof(string), "%s ha aceptado tu reporte, puedes usar {A2DC35}/reply{FFFFFF} para explicar tu reporte. (T: 60 Seg.)", GetPlayerNameEx(playerid));
				    SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
				}
				Reports[reportid][ReplyTimerr] = SetTimerEx("ReplyTimer", 60000, 0, "d", reportid);
				Reports[reportid][CheckingReport] = playerid;
				Reports[reportid][BeingUsed] = 0;
				Reports[reportid][TimeToExpire] = 0;
	    	}
	    	else
	    	{
	    	    if(CancelReport[playerid] == listitem) return 1;
	    	    new reportid = ListItemReportId[playerid][listitem];
	    	    if(Reports[reportid][BeingUsed] == 0)
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Ese reporta ya fue revisado!");
				    return 1;
				}
				if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} El que reportó se ha desconectado !");
				    Reports[reportid][ReportFrom] = 999;
				    Reports[reportid][BeingUsed] = 0;
				    return 1;
				}
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s rechazó el reporte de %s (RID: %i).", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
				ABroadCast(COLOR_GENERAL, string, 2);
				if(Info[playerid][pAdminZC] == 89650)
				{
				    SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, "Un administrador a marcado tu reporte como inválido. Usa y lee muy bien {FF0000}/retips{FFFFFF} antes de reportar.");
				}
				else
				{
       				format(string, sizeof(string), "%s marcó tu reporte como invalido. Usa y lee muy bien {FF0000}/retips{FFFFFF} antes de reportar.", GetPlayerNameEx(playerid));
				    SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
				}
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				Reports[reportid][TimeToExpire] = 0;
				new reportdialog[1000], itemid = 0;
				for(new i = 0; i < MAX_REPORTS; i++)
				{
				    if(Reports[i][BeingUsed] == 1 && itemid < 40)
				    {
				        ListItemReportId[playerid][itemid] = i;
				        itemid++;
				        format(reportdialog, sizeof(reportdialog), "%s%s(ID:%i) | RID:%i | Reporte: %s", reportdialog, GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire]);
						format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
					}
				}
				CancelReport[playerid] = itemid;
				format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
				format(reportdialog, sizeof(reportdialog), "%sSalir", reportdialog);
				SafeDialogEx(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "{A2DC35}Reportes", reportdialog, "Aceptar", "Rechazar");
	    	}
		}
	    case DIALOG_REG_MSN:
    	{
    	    if(response == 1)
    	    {
				new rt[] = "{FFFFFF}Gracias por confirmar los datos de tu personaje.\n\nAhora verás el tutorial para saber de que va el servidor, si sabes las reglas pulsa No Ver";
		        SafeDialogEx(playerid,DIALOG_REG_TUT,DIALOG_STYLE_MSGBOX,"{008EC1}Fin del registro", rt,"Ver","No Ver");
    	    }
	        else
	        {
	    		SetTimerEx("FreezePlayer", 1000, false, "i", playerid);
		        ClearChatbox(playerid);
		        ClearChatbox(playerid);
				gNewbie[playerid]=1; gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
				SetPosEx(playerid,1543.6002,-1352.6063,329.4753,269.3891,0,playerid);
				InterpolateCameraPos(playerid,1750.9696, -1344.6992, 311.3649, 1750.9696, -1344.6992, 311.3649, 20000, CAMERA_MOVE);
				InterpolateCameraLookAt(playerid,1750.6149, -1345.6239, 310.1200, 1750.0208, -1344.9828, 311.0901, 20000, CAMERA_MOVE);
				Info[playerid][pAge] = 30; Info[playerid][pSex] = 1;
				new sex[]= "{FFFFFF}En primer lugar, selecciona el género que tendrá tu personaje:";
				SafeDialogEx(playerid,REG_SEX,DIALOG_STYLE_MSGBOX, "{008EC1}1.- Seleccionar tu Sexo:", sex, "Masculino", "Femenino");
	        }
 		}
		case DLOGIN:
		{
        	if(response == 1)
        	{
				if(udb_hash(inputtext) == Info[playerid][pKey])
				{
					InsideMainMenu[playerid] = false;
					INI_ParseFile(UserPath(playerid), "LoadUser_data", .bExtra = true, .extra = playerid);
					PlayerLogin(playerid);
				}
				else
				{
	        		//new ip[32];
	        		//new string[128];
	        		SetPVarInt(playerid, "IntentosIngreso", GetPVarInt(playerid, "IntentosIngreso")+1);
	        		format(string, sizeof(string), " La contraseña introducida es incorrecta. (%d/%d)", GetPVarInt(playerid, "IntentosIngreso"), LIMITE_INTENTOS_INGRESO);
		    		SendClientMessageEx(playerid, COLOR_GREY, string);
		           	if (GetPVarInt(playerid, "IntentosIngreso") == LIMITE_INTENTOS_INGRESO)
		    		{
			        	Message(playerid, COLOR_ORANGE, "Has sido kickeado automáticamente. (Razón: Límite de intentos de ingreso)");
			        	SetTimerEx("KickxD",500,0,"d",playerid);
						return 1;
					}
	        		new titlestring[64];
					format(titlestring, sizeof(titlestring), "{008EC1}%s", GetPlayerNameEx(playerid));
		        	SafeDialogEx(playerid,DLOGIN,DIALOG_STYLE_PASSWORD ,titlestring,"¡Hola de nuevo!\n\nIngresa tu contraseña, tienes tres intentos:\n","Entrar","Salir");
		        	SetPlayerVirtualWorld(playerid, 20);
                	return 1;
				}
        	}
        	else
			{
			    SendClientMessageEx(playerid, COLOR_GENERAL, "Fuiste expulsado del servidor automáticamente.");
            	Kick(playerid);
        	}
        	return 1;
    	}
		case DREGISTER:
    	{
        	if (response == 1)
        	{
            	if(strlen(inputtext) > 12)
            	{
		        	//new ip[32];
		        	new titlestring[64];
		        	//GetPlayerIp(playerid, ip, 32);
		        	format(titlestring, sizeof(titlestring), "{A2DC35}Error: {FFFFFF}%s", GetPlayerNameEx(playerid));
		        	format(string, sizeof(string), "{FFFFFF}Contraseña con un máximo de 12 carácteres!\n\n%s Ingresa una contraseña valida para registrarte en el servidor:\n\n{FF0000}Contraseña:", GetPlayerNameEx(playerid));
		        	SafeDialogEx(playerid,DREGISTER,DIALOG_STYLE_PASSWORD ,titlestring,string,"Registrar","Salir");
	            	SetPlayerVirtualWorld(playerid, 20);
                	return 1;
            	}
            	if(isnull(inputtext))
            	{
		        	//new ip[32];
		        	new titlestring[64];
		        	//GetPlayerIp(playerid, ip, 32);
					format(titlestring, sizeof(titlestring), "{008EC1}Registro: {FFFFFF}%s", GetPlayerNameEx(playerid));
					//format(string, sizeof(string), "{008EC1}Direccion IP: %s\nBienvenido a Perfect City\nIngresa una contraseña para registrarte en el servidor.\n\n{FF0000}Contraseña.", ip);
					//SafeDialogEx(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,titlestring,string,"Registrar","Salir");
					SafeDialogEx(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,titlestring,"Bienvenido al servidor\n\nIngresa tu contraseña para registrarte:\n","Registrar","Salir");
                	return 1;
            	}
            	InsideMainMenu[playerid] = false;
				OnPlayerRegister(playerid,inputtext);
            	return 1;
        	}
        	else
        	{
        	    SendClientMessageEx(playerid, COLOR_GENERAL, "Fuiste expulsado del servidor automáticamente.");
            	Kick(playerid);
        	}
			return 1;
    	}
     	case CARSPAWN:
    	{
         if (response == 1)
        	{
        		if(PlayerVehicleInfo[playerid][listitem][pvImpounded] == 1) return SendClientMessageEx(playerid,COLOR_WHITE,"El auto que intenta spawnear está embargado.");
		    	if(PlayerVehicleInfo[playerid][listitem][pvImpounded] >= 2) PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
	        	if(PlayerVehicleInfo[playerid][listitem][pvModelId] != 0 && PlayerVehicleInfo[playerid][listitem][pvImpounded] == 0 && PlayerVehicleInfo[playerid][listitem][pvSpawned]== 0)
	        	{
	        	    if(carsforplayer[playerid] == 4) return SendClientMessageEx(playerid,COLOR_WHITE,"* Sólo puedes tener 4 coches spawneados");
	            	PlayerCars++;
	            	carsforplayer[playerid]++;
					new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
					PlayerVehicleInfo[playerid][listitem][pvId] = carcreated;
					VehicleFuel[carcreated] = PlayerVehicleInfo[playerid][listitem][pvFuel];
					SetVehicleHealth(carcreated, PlayerVehicleInfo[playerid][listitem][pvHealth]);
					SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][listitem][pvVW]);
					PlayerVehicleInfo[playerid][listitem][pvSpawned] = 1;
					SendClientMessageEx(playerid,COLOR_WHITE,"Vehiculo spawneado correctamente, en la última posición que lo estacionaste. (/gps)");
					if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1)
					LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);
                    LoadPlayerVehicleMods(playerid, listitem);
					return 1;

				}
	        	else if(PlayerVehicleInfo[playerid][listitem][pvSpawned] == 1)
	        	{
				    new playername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, playername, sizeof(playername));
         			new Float:health;
            		GetVehicleHealth(PlayerVehicleInfo[playerid][listitem][pvId], health);
            		if(health < 500) return SendClientMessageEx(playerid, COLOR_GREY, "{FF0000}[ATENCION]:{FFFFFF} El vehiculo está muy dañado para ser guardado.");
                    if(IsVehicleBusy(PlayerVehicleInfo[playerid][listitem][pvId])) return SendClientMessageEx(playerid, COLOR_GREY, " El vehiculo está ocupado por otra persona y no puede ser guardado.");
					if(PlayerVehicleInfo[playerid][listitem][pvImpounded] >= 2) PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
					if(PlayerVehicleInfo[playerid][listitem][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][listitem][pvImpounded] == 0 && PlayerVehicleInfo[playerid][listitem][pvSpawned]== 1)
					{
		            	PlayerCars--;
		            	carsforplayer[playerid]--;
            			if(LockStatus[PlayerVehicleInfo[playerid][listitem][pvId]] != 0) LockStatus[PlayerVehicleInfo[playerid][listitem][pvId]] = 0;
           		 		UpdatePlayerVehicleMods(playerid, listitem);
						DestroyVehicle(PlayerVehicleInfo[playerid][listitem][pvId]);
						VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = 200;
						PlayerVehicleInfo[playerid][listitem][pvId] = INVALID_PLAYER_VEHICLE_ID;
						PlayerVehicleInfo[playerid][listitem][pvSpawned] = 0;
						SendClientMessageEx(playerid,COLOR_WHITE,"Vehiculo fue guardado correctamente.");
						if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != INVALID_PLAYER_ID)
	    				{
	    	    			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
	    	    			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
	    					PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = INVALID_PLAYER_ID;
	    				}
	    			}
	            }
			}
	    }
	}
	//*********************
	if(dialogid == 999)
 	{
  		if(response)
    	{
 			SendClientMessage(playerid,COLOR_LIGHTBLUE, "* Comienza a trabajar talando el bosque, posicionate sobre los Pickups y lleva la madera al aserradero");
 			talar[playerid] = 1;
			SetPlayerSkin(playerid, 260);
    		SetPVarInt(playerid,"PlayerStartDrova",1);
      	}
    }
    if(dialogid == 578)
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0: { ShowPlayerDialog(playerid, BAR_MENU_TAPAS, DIALOG_STYLE_LIST, "{A2DC35}Platos del Día", "Huevos con Chorizo (20$)\nJamón Ibérico (30$)\nSopa de Marisco (25$)\nMacarrones a la Bolognesa (15$)\nEnsalada (10$)", "Pedir", "Atrás"); return 1; }
					case 1: { ShowPlayerDialog(playerid, BAR_MENU_BEBIDAS, DIALOG_STYLE_LIST, "{A2DC35}Bebidas y refrescos", "Cerveza (3$)\nVino tinto (5$)\nChampagne (6$)\nCoca-Cola (2$)\nAgua (1$)", "Pedir", "Atrás"); return 1; }
				}
			}
		}
		if(dialogid == 579)
		{
			if(response)
		    {
		        new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    		if(businessVariables[businessID][bStock] <= 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
	    	    switch(listitem)
	        	{
		            case 0:
		            {
        	     		new Float:Health;
					 	GetPlayerHealth(playerid, Health);
		        	    if(Health < 101)	{	SetHP(playerid, Health+20); 	}
         				format(string, sizeof(string), "* %s come un plato de Huevos con Chorizo", GetPlayerNameEx(playerid));
		            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	Bought(playerid, 20);
 	            		businessVariables[businessID][bVault] += 20;
            			businessVariables[businessID][bStock] -= 4;
		            	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
		            	if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 1:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+30); 	}
	                	format(string, sizeof(string), "* %s come un plato de Jamón Ibérico", GetPlayerNameEx(playerid));
	                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 30);
    	            	businessVariables[businessID][bVault] += 30;
            			businessVariables[businessID][bStock] -= 4;
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+25); 	}
	                	format(string, sizeof(string), "* %s come un plato de Sopa de Marisco", GetPlayerNameEx(playerid));
	                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Bought(playerid, 25);
     					businessVariables[businessID][bVault] += 25;
            			businessVariables[businessID][bStock] -= 2;
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 3:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+15); 	}
		                format(string, sizeof(string), "* %s come un plato de Macarrones a la Bolognesa", GetPlayerNameEx(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	            Bought(playerid, 15);
                 		businessVariables[businessID][bVault] += 15;
            			businessVariables[businessID][bStock] -= 2;
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	            	    if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 4:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+10); 	}
		                format(string, sizeof(string), "* %s come un plato de Ensalada", GetPlayerNameEx(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	            Bought(playerid, 10);
                 		businessVariables[businessID][bVault] += 10;
            			businessVariables[businessID][bStock]--;
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	            	    if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
			 	}
    			SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			}
		}
		if(dialogid == 580)
		{
			if(response)
		    {
		        new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    		if(businessVariables[businessID][bStock] <= 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
	    	    switch(listitem)
	        	{
		            case 0:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+3); 	}
	                	format(string, sizeof(string), "* %s se bebe una Cerveza.", GetPlayerNameEx(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                Bought(playerid, 3);
                		businessVariables[businessID][bVault] += 3;
            			businessVariables[businessID][bStock] -= 2;
	    	            PlayerDrunk[playerid] += 2;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	            	    if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    PlayerDrunk[playerid]  += 1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	    	        }
	        	    case 1:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+5); 	}
	        	        format(string, sizeof(string), "* %s se bebe una copa de Vino.", GetPlayerNameEx(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 5);
                		businessVariables[businessID][bVault] += 5;
            			businessVariables[businessID][bStock] -= 3;
                  		PlayerDrunk[playerid] += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	    	            if(PlayerDrunk[playerid] > 10)
		    	        {
			    	        SetHP(playerid, 20);
	               			format(string, sizeof(string), "* %s vomita lo que ha bebido.", GetPlayerNameEx(playerid));
		                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                PlayerDrunk[playerid]  += 1;
		    	            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		        	        ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+6); 	}
	                	format(string, sizeof(string), "* %s se bebe una copa de Champagne.", GetPlayerNameEx(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                Bought(playerid, 6);
                		businessVariables[businessID][bVault] += 6;
            			businessVariables[businessID][bStock] -= 4;
	    	            PlayerDrunk[playerid] += 3;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	            	    if(PlayerDrunk[playerid] > 10)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", GetPlayerNameEx(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	    PlayerDrunk[playerid]  += 1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	    	        }
	        	    case 3:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+2); 	}
	        	        format(string, sizeof(string), "* %s se bebe una Coca-Cola.", GetPlayerNameEx(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 2);
                		businessVariables[businessID][bVault] += 2;
            			businessVariables[businessID][bStock] -= 2;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		                if(PlayerDrunk[playerid] > 10)
			            {
				            SetHP(playerid, 20);
	            	   		format(string, sizeof(string), "* %s vomita lo que ha bebido.", GetPlayerNameEx(playerid));
		            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                	PlayerDrunk[playerid]  += 1;
			                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	        	    }
	            	case 4:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+1); 	}
	        	        format(string, sizeof(string), "* %s se bebe una botella pequeña de agua.", GetPlayerNameEx(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 1);
                		businessVariables[businessID][bVault] += 1;
            			businessVariables[businessID][bStock] -= 3;
	                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	                	if(PlayerDrunk[playerid] > 0)
		            	{
			                PlayerDrunk[playerid]  -= 1;
						}
	    	        }
		 		}
    			SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			}
		}
		if(dialogid == 964)
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 32 || strfind(inputtext, "_", true) != -1)
		        {
		            ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"{A2DC35}Traficante DNI Falso", "Ingresa el nombre que quieres usar, Ejemplo: Jonathan Torres", "Aceptar", "Cancelar");
          		}
          		else{
          		    strmid(DNIName[playerid], inputtext, 0, strlen(inputtext), 32);
          			format(string, sizeof(string), "¿Estás seguro que quieres usar el nombre de\n\t%s en tu DNI falso? Precio: 15.000$", DNIName[playerid]);
					ShowPlayerDialog(playerid,DNI_CONFIRM,DIALOG_STYLE_MSGBOX,"{A2DC35}DNI Falso", string, "Aceptar", "Cancelar");
				}
			}
  		}
  		if(dialogid == 965)
  		{
  		    if(response)
  		    {
				strmid(Info[playerid][pDNIName], DNIName[playerid], 0, strlen(DNIName[playerid]), 32);
				new dni = 100000 + random(899999);  Info[playerid][pDNIFalse] = dni;
				format(string, sizeof(string), "* Compraste una identificación falsa (/docfalso para mostrarlo) con el nombre de {41FF2F}%s{FFFFFF}.", Info[playerid][pDNIName]);
				Message(playerid, COLOR_WHITE, string);
				GivePlayerCash(playerid, -15000);
  		    }
  		}
  		return 1;
}

IsVehicleBusy(vehicleid) // The_Chaoz ¿?¿?¿
{
    for(new i; i<GetMaxPlayers(); i++)
    	if(IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid))
    		return 1;
    return 0;
}

function BroadCast(color, string[])
{
	foreach(Player, i)
	{
		if(Info[i][pLevel] >= 1 && AdminChat[i] == 0)
		{
		    SendClientMessageEx(i, color, string);
		}
	}
	return 1;
}

function SendVIPMessage(color, string[])
{
	foreach(Player, i)
	{
		if((Info[i][pVIP] >= 1 || Info[i][pAdminZC] >= 2) && Info[i][pVIPCHAT] >= 1)
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

stock ShopTechBroadCast(color,string[])
{
	foreach(Player, i)
	{
		if (Info[i][pShopTech] == 1 || Info[i][pAdminZC] >= 1338)
		{
			SendClientMessageEx(i, color, string);
		}
	}
	return 1;
}

stock ABroadCast(color,string[],level)
{
	foreach(Player, i)
	{
		if (Info[i][pAdminZC] >= level && AdminChat[i] == 0)
		{
			SendClientMessageEx(i, color, string);
			//printf("%s", string);
		}
	}
	return 1;
}

stock CBroadCast(color,string[],level)
{
	foreach(Player, i)
	{
		if (Info[i][pHelper] >= level)
		{
			SendClientMessageEx(i, color, string);
			//printf("%s", string);
		}
	}
	return 1;
}

function SendDutyAdvisorMessage(color, string[])
{
	foreach(Player, i)
	{
		if(Info[i][pHelper] >= 1 && papillah[i] == 1)
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

function SendAdvisorMessage(color, string[])
{
	foreach(Player, i)
	{
			if((Info[i][pHelper] >= 1 || Info[i][pPublicista] == 1 || Info[i][pVIP] == 5) && advisorchat[i])
			{
				SendClientMessageEx(i, color, string);
			}
			else
			{
			    if(Info[i][pAdminZC] >= 1 && advisorchat[i])
			    {
			        SendClientMessageEx(i, color, string);
			    }
			}
	}
}

function OOCOff(color, string[])
{
	foreach(Player, i)
	{
		if(!gOoc[i])
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

function OOCNews(color,string[])
{
	foreach(Player, i)
	{
		if(!gNews[i])
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

function SendRadioMessage(member, color, string[])
{
	foreach(Player, i)
	{
		if(Info[i][pMember] == member)
		{
			if(RadioOn[i])
            {
				SendClientMessageEx(i, color, string);
			}
		}
	}
}

function SendNewFamilyMessage(family, color, string[])
{
	foreach(Player, i)
	{
			if(Info[i][pFMember] == family)
			{
				if(!gFam[i])
				{
					SendClientMessageEx(i, color, string);
				}
			}
	}
}

function SendFamilyMessage(family, color, string[])
{
	foreach(Player, i)
	{
		if(Info[i][pMember] == family || Info[i][pLeader] == family)
		{
			if(!gFam[i])
			{
				SendClientMessageEx(i, color, string);
			}
		}
	}
}

stock SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Info[i][pAdminZC] >= 1 && AdminChat[i] == 0)
		    {
				SendClientMessageEx(i, color, string);
			}
		}
	}
}

stock SendAD(from, advert[], number)
{
    new bool:breakingloop = false, newid = -1;

	for(new i=0;i<MAX_AD;i++)
	{
		if(!breakingloop)
		{
			if(ADInfo[i][aActive] == 0)
			{
				breakingloop = true;
				newid = i;
			}
		}
    }
    if(newid != -1)
    {
        strmid(ADInfo[newid][aAdvert], advert, 0, strlen(advert), 128);
        strmid(ADInfo[newid][aResume], advert, 0, strlen(advert), 15);
        ADInfo[newid][aOther] = from;
        ADInfo[newid][aActive] = 1;
        ADInfo[newid][aNumber] = number;
        Info[from][pAdverID] = newid;
        new PlayerName[MAX_PLAYER_NAME];
     	GetPlayerName(from, PlayerName, sizeof(PlayerName));
     	strmid(ADInfo[newid][aContact], PlayerName, 0, strlen(PlayerName), MAX_PLAYER_NAME);
    }
    else
    {
		SendClientMessageEx(from, COLOR_WHITE,"* Tienes que esperar, el espacio de anuncios está lleno.");
    }
    return 1;
}
stock ClearAd(id)
{
	strmid(ADInfo[id][aAdvert], "Nada", 0, 4, 4);
	strmid(ADInfo[id][aResume], "Nada", 0, 4, 4);
	Info[ADInfo[id][aOther]][pAdverID] = -1;
    ADInfo[id][aOther] = 0;
    ADInfo[id][aActive] = 0;
    ADInfo[id][aNumber] = 0;
}

stock businessTypeMessages(const businessid, const playerid)
{
	switch(businessVariables[businessid][bType])
	{
		case 1:        	SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar comida debes usar el comando /comprar.");
		case 2: 		SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar ropa o toys debes usar el comando /cropa y /ctoys.");
		default: 		SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar aquí usa /comprar");
	}
	return 1;
}
getPlayerBusinessID(const playerid)
{
	new x;
    while(x < MAX_BUSINESS)
	{
		if(strlen(businessVariables[x][bOwner]) >= 1)
		{
	        if(!strcmp(businessVariables[x][bOwner], Info[playerid][pNormalName], true)){return x;}
		}
		x++;
	}
    return 0;
}
//******************************CMDS INICIO******************************
zcmd(cerrajear, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
     		if(Info[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más vehículos!");
			new engine, lights, alarm, doors, bonnet, boot, objective, string[128], car = IsPlayerInVehicleRadio(playerid, 5);
   			if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
      		if(PlayerVehicleInfo[playerid][car][pvLocked] == 0) return Message(playerid,COLOR_WHITE, "Este coche no está trabado");
			if(Info[playerid][pGanzuas] == 1)
			{
				GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
 				format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y lo logra", GetPlayerNameEx(playerid), GetVehicleName(car));
				ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
				Message(playerid, COLOR_GREEN, "Vehículo abierto");
				vehicle_unlock_doors(car);
				Info[playerid][pRob]++;
				SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
				format(string, sizeof(string), "* Se oirá una alarma de un coche (%s)",GetVehicleName(car));
				ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
				Info[playerid][pGanzuas] = 0;
			} else Message(playerid, COLOR_WHITE, "No tienes ganzúas");
		} else Message(playerid, COLOR_WHITE, "No estás conectado.");
		return 1;
	}
zcmd(camaras, playerid, params[])
{
if(PlayerToPoint(5.0, playerid, 267.3825,119.5380,1004.6172))
{
Camara[playerid] = 1;
ShowPlayerDialog(playerid, Camarasss, DIALOG_STYLE_LIST, "{33CCFF}Camaras SAPD","{33CCFF}Camara 1 {FFFFFF}(Banco A)\n{33CCFF}Camara 2 {FFFFFF}(Banco B)\n{33CCFF}Camara 3 {FFFFFF}(Tienda Electronica)\n{33CCFF}Camara 4 {FFFFFF}(Taller Mecánico)\n{33CCFF}Camara 5 {FFFFFF}(24-7 Unity)\n{33CCFF}Camara 6 {FFFFFF}(24-7 Vinewood)\n{33CCFF}Camara 7 {FFFFFF}(24-7 Ayuntamiento)","Seleccionar", "Salir");
}
return 1;
}

zcmd(salircam, playerid, params[])
{
if(Camara[playerid] == 0) return SendClientMessage(playerid, -1,"No estas en una camara!");
{
TogglePlayerControllable(playerid, 1);
Camara[playerid] = 0;
SetCameraBehindPlayer(playerid);
DeletePVar(playerid, "IsFrozen");
Quitarcam(playerid);
SetPlayerPos(playerid,267.3825,119.5380,1004.6172);
SetPlayerVirtualWorld(playerid, 500);
SetPlayerInterior(playerid, 10);
Info[playerid][pInt] = 6;
            foreach(Player, i){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
}
return 1;
}
//Cheques
zcmd(cochebomba, playerid, params[])
{
    if(Info[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_WHITE, "* Debes ser mínimo nivel 4 para usar este comando.");
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(pbomba[playerid] == 0) return Message(playerid, COLOR_WHITE, "No tienes una bomba");
		Bomba[playerid] = 1;
		pbomba[playerid] = 0;
		SetTimerEx("ExplodeCar", 30000, false, "ud", playerid, GetPlayerVehicleID(playerid));
		SendClientMessageEx(playerid, COLOR_WHITE, "* Has agregado una bomba en este vehículo, tienes 30 segundos para huir.");
		return 1;
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estas en un vehículo!");
	return 1;
}
	zcmd(dnifalso, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_WHITE, "Utiliza: /docfalso (PlayerID)");
        if(!IsPlayerConnected(params[0]))  return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(Info[playerid][pDNIFalse] == 0)    return Message(playerid, COLOR_GRAD2, "No posees un DNI falso.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
            new string[90];
            ShowDNIFalse(playerid, params[0]);
            format(string, sizeof(string), "* %s le muestra sus documentos a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        return 1;
    }

zcmd(payday, playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new string[64];
		format(string, sizeof(string), "* Faltan {FF0000}%d{FFFFFF} minutos para obtener el PayDay.",PayDayLeft);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	return 1;
}
    zcmd(setpayday, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(!sscanf(params, "i", params[0]))
        {
            new string[128];
            PayDayLeft = params[0];
            format(string, sizeof(string), "[AdmCmdExe]: %s estableció los minutos del PayDay a %d.", GetPlayerNameEx(playerid), PayDayLeft);
            ABroadCast(COLOR_GENERAL, string, 2);
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /setpayday (Minutos)");
        return 1;
    }
   	zcmd(dropa, playerid, params[])
    {
    if(!IsAtjob(playerid)) return Message(playerid, COLOR_WHITE, "* No estas en el lugar donde te uniste al trabajo!");
    SetPlayerSkin(playerid, Info[playerid][pgskin]);
    return 1;
    }
	zcmd(panum, playerid, params[])
    {
        if(Team_LSTV(playerid))
		{
        SafeDialogEx(playerid, DIALOG_ADPLACEP, DIALOG_STYLE_INPUT, "{008EC1}Anuncios LSRTV","Nota: Tamaño del texto sólo será máximo 128 Letras.", "Enviar", "Atrás");
		}
        return 1;
    }
    zcmd(gcomprar, playerid, params[])
    {
    	if(!IsAtGasT(playerid))
		{
		SendClientMessageEx(playerid, COLOR_WHITE, "* No estás en una gasolinera !");
		return 1;
		}
        ShowPlayerDialog(playerid, GASMENU, DIALOG_STYLE_LIST, "{A2DC35}Gasolinera", "Bidón de gasolina.\t\t$200\nBolsa Patatas\t\t$30\nRefresco\t\t$20\nCigarros\t\t$40\nEncendedor\t\t$20", "Comprar", "Cancelar");
        return 1;
    }
    zcmd(usarbidon, playerid, params[])
    {
        if(Info[playerid][pSacoBidon] == 0) return Message(playerid, COLOR_WHITE, "No tienes bidón en tu mano, usa /sacarbidon.");
   		new idcar = GetPlayerVehicleID(playerid),string[128];
    	if(autorepara[playerid] == 1)
    	{
    		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
 				format(string, sizeof(string), "* %s llena el tanque de su vehículo y tira su bidón.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Message(playerid, COLOR_LIGHTBLUE, "Has usado tu bidón.");
				VehicleFuel[idcar] = 40;
				autorepara[playerid] = 0;
				Info[playerid][pSacoBidon] = 0;
				RemovePlayerAttachedObject(playerid, 1);
 			}
		}
		else
		{
			Message(playerid, COLOR_WHITE, "Usted no tiene un bidón.");
		}
		return 1;
    }
    zcmd(tirarbidon, playerid, params[])
    {
    	new string[128];
    	if(Info[playerid][pSacoBidon] == 0) return Message(playerid, COLOR_WHITE, "¡Tienes que tener el bidón en tu mano! (/sacarbidon).");
    	if(autorepara[playerid] == 1)
    	{
			format(string, sizeof(string), "* %s tira su bidón al suelo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Message(playerid, COLOR_LIGHTBLUE, "Has tirado tu bidón.");
			Info[playerid][pSacoBidon] = 0;
			autorepara[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
		}
		else
		{
			Message(playerid, COLOR_WHITE, "Usted no tiene un bidón.");
		}
		return 1;
    }
    zcmd(sacarbidon, playerid, params[])
    {
    	new string[128];
    	if(Info[playerid][pSacoBidon] == 1) return Message(playerid, COLOR_WHITE, "Ya tienes un bidón en tu mano.");
    	if(autorepara[playerid] == 1)
    	{
			format(string, sizeof(string), "* %s saca su bidón y le quita la tapa.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Message(playerid, COLOR_LIGHTBLUE, "Ahora utiliza /usarbidon dentro de tu vehículo para llenar el depósito.");
			Message(playerid, COLOR_WHITE, "Si quieres guardalo utiliza {FC0000}/guardarbidon.");
			SetPlayerAttachedObject(playerid,1,1650,6,0.118000,0.000000,0.019999,7.900002,-99.200004,0.000000,1.000000,1.000000,1.000000);
			Info[playerid][pSacoBidon] = 1;
		}
		else
		{
			Message(playerid, COLOR_WHITE, "Usted no tiene un bidón.");
		}
		return 1;
    }
    zcmd(guardarbidon, playerid, params[])
    {
    	new string[128];
    	if(Info[playerid][pSacoBidon] == 0) return Message(playerid, COLOR_WHITE, "Ya tienes un bidón guardado.");
    	if(autorepara[playerid] == 1)
    	{
			format(string, sizeof(string), "* %s tapa su bidón y lo guarda.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Message(playerid, COLOR_LIGHTBLUE, "Has guardado tu bidón.");
			Message(playerid, COLOR_WHITE, "Si quieres sacarlo utiliza {FC0000}/sacarbidon.");
			RemovePlayerAttachedObject(playerid, 1);
			Info[playerid][pSacoBidon] = 0;
		}
		else
		{
			Message(playerid, COLOR_WHITE, "Usted no tiene un bidón.");
		}
		return 1;
    }
    zcmd(ayudabidon, playerid, params[])
    {
        Message(playerid, COLOR_WHITE, "{A2DC35}[INFO-BIDON]:{FFFFFF} El bidón sirve para llenar el depósito de tu auto, lo puedes adquirir en las gasolineras de la ciudad.");
        Message(playerid, COLOR_WHITE, "{A2DC35}[INFO-BIDON]:{FFFFFF} Comandos disponibles: /sacarbidon /guardarbidon /usarbidon /tirarbidon.");
		return 1;
    }
    zcmd(quitardni, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] < 3) return Message(playerid, COLOR_WHITE, "No autorizado.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_WHITE, "Utiliza: /quitardni (PlayerID)");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_WHITE, "Jugador no conectado.");
        if(Info[params[0]][pDNIFalse] != 0)
        {
            new string[128];
	        Info[params[0]][pDNIFalse] = 0;
    	    strmid(Info[params[0]][pDNIName], "Ninguno", 0, strlen("Ninguno"), 12);
            format(string, sizeof(string), "* Le has quitado el DNI Falso a {5ABAFF}%s{FFFFFF}.", GetPlayerNameEx(params[0]));
            Message(playerid, COLOR_WHITE, string);
        } else Message(playerid, COLOR_WHITE, "Esa persona no tiene un DNI Falso.");
        return 1;
    }
	 zcmd(rendirse, playerid, params[])
 	{
 	    if(PlayerDrunk[playerid] > 9) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
 	    if(GetPVarInt(playerid, "IsFrozen") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto porque estás congelado.");
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid, "Injured") == 0)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
  	  		return 1;
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
	}
	zcmd(comer, playerid, params[]){
        if(!IsAtBarr(playerid)) return Message(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estas en un lugar donde Comer.");
        if(GetPlayerMoney(playerid) < 0) return Message(playerid, COLOR_FADE2, "Bartender dice: Vete a otro lugar a comer gratis.");
	    if(IsPlayerConnected(playerid)){
		    ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "{A2DC35}Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
	    } else Message(playerid, COLOR_WHITE, " Usted no esta conectado.");
	    return 1;
	}
   	CMD:desbugmanos(playerid, params[]) {
			YaRobo[playerid] = 0;
		    DejarRobo(playerid);
			SendClientMessageEx(playerid, COLOR_GENERAL, "[SERVER] {FFFFFF}Manos Desbugeadas.");
			return 1;
}
	CMD:ant(playerid, params[])
	{
		if(Team_LSPD(playerid) || Team_FBI(playerid) || Team_SAEM(playerid) || Team_Judicial(playerid))
		{
			new string[128], giveplayerid, reason[32];
			if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ant [player] [texto]");
			if(strlen(reason) > 32) return SendClientMessageEx(playerid, COLOR_WHITE, "El antecedente solo puede tener 32 caracteres");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(Info[giveplayerid][pAntecedenteID1] == 0)
			    {
			        Info[giveplayerid][pAntecedente1] = reason;
			        format(string, sizeof(string), "* Has colocado a %s su primer antecedente (%s)", GetPlayerNameEx(giveplayerid),reason);
			        SendClientMessageEx(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "* %s te ha colocado tu primer antecedente (%s)", GetPlayerNameEx(playerid),reason);
                    SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(1, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(2, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(3, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(9, 0x8D8DFFFF, string);
                	Info[giveplayerid][pAntecedenteID1] = 1;
                	return 1;
			    }
			    if(Info[giveplayerid][pAntecedenteID2] == 0)
			    {
			        Info[giveplayerid][pAntecedente2] = reason;
			        format(string, sizeof(string), "* Has colocado a %s su segundo antecedente (%s)", GetPlayerNameEx(giveplayerid),reason);
                    format(string, sizeof(string), "* %s te ha colocado tu segundo antecedente (%s)", GetPlayerNameEx(playerid),reason);
                    SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(1, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(2, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(3, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(9, 0x8D8DFFFF, string);
                	Info[giveplayerid][pAntecedenteID2] = 1;
                	return 1;
			    }
			    if(Info[giveplayerid][pAntecedenteID3] == 0)
			    {
			        Info[giveplayerid][pAntecedente3] = reason;
			        format(string, sizeof(string), "* Has colocado a %s su tercer antecedente (%s)", GetPlayerNameEx(giveplayerid),reason);
			        SendClientMessageEx(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "* %s te ha colocado tu tercer antecedente (%s)", GetPlayerNameEx(playerid),reason);
                    SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(1, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(2, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(3, 0x8D8DFFFF, string);
                	format(string, sizeof(string), "* Central: %s ha puesto un antecedente a %s (%s)", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
                	SendRadioMessage(9, 0x8D8DFFFF, string);
                	Info[giveplayerid][pAntecedenteID3] = 1;
                	return 1;
			    }
			    else SendClientMessageEx(playerid, COLOR_GRAD1, "Este usuario no puede tener más antecedentes");
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Esa ID es inválida.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "No eres de las fuerzas de la ley.");
		return 1; 
	}
	CMD:escudo(playerid, params[])
	{
	    if(!IsACop(playerid)) return Message(playerid, COLOR_WHITE, "No eres de las fuerzas de la ley.");
	    {
	        if(Info[playerid][pPusoEscudo] == 0)
	        {
	            SetPlayerAttachedObject(playerid,2,18637,5,-0.041999,0.084000,-0.161999,113.499969,13.899991,93.700004,1.031999,1.000000,0.987000);
	            Message(playerid, COLOR_LIGHTBLUE, "Te has puesto un escudo.");
	            Message(playerid, COLOR_WHITE, "Usa /escudo para quitartelo.");
	            ResetPlayerWeapons(playerid);
				Info[playerid][pPusoEscudo] = 1;
	        }
	        else
	        {
	            SetPlayerWeaponsEx(playerid);
	            RemovePlayerAttachedObject(playerid, 2);
	            Message(playerid, COLOR_LIGHTBLUE, "Te has quitado el escudo.");
	            Info[playerid][pPusoEscudo] = 0;
	        }
		}
		return 1;
	}
	CMD:his(playerid, params[])
	{
		if(IsACop(playerid))
		{
			new string[128], giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /his [player]");
			if(IsPlayerConnected(giveplayerid))
			{
			    format(string, sizeof(string), "%s", GetPlayerNameEx(giveplayerid));
				PlayerTextDrawSetString(playerid, HISLSPD3[playerid], string);

				new sex[18];
			    if(Info[giveplayerid][pSex] == 1) { sex = "hombre"; }
		   		if(Info[giveplayerid][pSex] == 2) { sex = "mujer"; }
				format(string, sizeof(string), "%s", sex);
				PlayerTextDrawSetString(playerid, HISLSPD5[playerid], string);

				format(string, sizeof(string), "%d", Info[giveplayerid][pAge]);
				PlayerTextDrawSetString(playerid,HISLSPD7[playerid], string);

				format(string, sizeof(string), "%s", Info[giveplayerid][pAntecedente1]);
				PlayerTextDrawSetString(playerid,HISLSPD9[playerid], string);

				format(string, sizeof(string), "%s", Info[giveplayerid][pAntecedente2]);
				PlayerTextDrawSetString(playerid,HISLSPD10[playerid], string);

				format(string, sizeof(string), "%s", Info[giveplayerid][pAntecedente3]);
				PlayerTextDrawSetString(playerid,HISLSPD11[playerid], string);

			    PlayerTextDrawSetPreviewModel(playerid, HISLSPD1[playerid], Info[giveplayerid][pChar]);
			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    PlayerTextDrawShow(playerid, HISLSPD0[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD1[playerid]);
			     PlayerTextDrawShow(playerid, HISLSPD2[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD3[playerid]);
			     PlayerTextDrawShow(playerid, HISLSPD4[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD5[playerid]);
			     PlayerTextDrawShow(playerid, HISLSPD6[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD7[playerid]);
			     PlayerTextDrawShow(playerid, HISLSPD8[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD9[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD10[playerid]);
			    PlayerTextDrawShow(playerid, HISLSPD11[playerid]);
			     PlayerTextDrawShow(playerid, HISLSPD12[playerid]);

			    SetTimerEx("qhistorial",10000,false,"i",playerid);
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Esa ID es inválida.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "No eres de las fuerzas de la ley");
		return 1;
	}
	CMD:crearcamara(playerid, params[])
{
	if (Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID;
	if(sscanf(params, "d", ID)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearcamara [SpeedCam ID]");
	if(ID < 0 || ID > MAX_vCAMERAS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de cámara inválida! (0 - 15)");
	if(vCameraInfo[ID][vCameraLimit] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya está siendo utilizada.");
	new Float:x,Float:y,Float:z,Float:angle;
	GetPlayerPos(playerid,x,y,z); GetPlayerFacingAngle(playerid,angle);
	angle = angle + 180;if(angle > 360){angle = angle - 360;}
	CreateSpeedCam(ID,x,y,z-2,angle,1,10,0);
	SetPlayerPos(playerid,x,y+2,z);
	SendClientMessageEx(playerid, COLOR_GREY, "* Cámara creada exitósamente, usa /editarcamara para editar su rango, limite y multa.");
	return 1;
}
CMD:editarcamara(playerid, params[])
{
	if (Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID,opcion;
	if(sscanf(params, "dd", ID,opcion))
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "1: Rango - 2: Limite - 3: Estado - 4: Multa");
		return SendClientMessageEx(playerid, COLOR_GREY, "USA: /editarcamara [SpeedCam ID] [Número de opción]");
	}
	if(ID < 0 || ID > MAX_vCAMERAS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de cámara inválida! (0 - 15)");
	if(vCameraInfo[ID][vCameraLimit] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes editar está cámara, primero créala.");
	switch(opcion)
	{
	    case 1:
	    {
	        ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe el rango que medirá la velocidad de lo coches.\n\nMin: 5 -- Max: 30","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
	    case 2:
	    {
			ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe el límite de la velocidad que podrán pasar los coches.\n\nMin: 10 -- Max: 250","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
	    case 3:
	    {
			ShowPlayerDialog(playerid,D_SPEEDCAMSTATUS,DIALOG_STYLE_LIST,"Editar Cámara - Selecciona","Activar Cámara\nDesactivar Cámara","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
		case 4:
		{
			ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe la multa que dará al pasarse el máximo de velocidad.\n\nMin: 100 -- Max: 15000","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
		}
	}
	return 1;
}
CMD:borrarcamara(playerid, params[])
{
	if (Info[playerid][pAdminZC] < 5000) 		return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID;
	if(sscanf(params, "d", ID)) 			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /borrarcamara [SpeedCam ID]");
	if(ID < 0 || ID > MAX_vCAMERAS) 		return SendClientMessageEx(playerid, COLOR_GREY, "* ID de vehículo inválida! (0 - 40)");
	if(vCameraInfo[ID][vCameraLimit] == 0) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya no está siendo utilizada.");
	DeleteSpeedCam(ID);
	return 1;
}
CMD:asellnegocio(playerid, params[])
{
    if(Info[playerid][pAdminZC] >= 5000)
	{
        new businessID = strval(params);
		if(!isnull(params))
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");
	        new labelString[96];
	        format(businessVariables[businessID][bOwner], MAX_PLAYER_NAME, "");
	        DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
	        DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
			format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
			businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
			businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
			businessVariables[businessID][bLocked] = 0;
			format(labelString, sizeof(labelString), "* Vendiste con comando administrativo el negocio ID %d.", businessID);
			SendClientMessageEx(playerid, COLOR_WHITE, labelString);
		    saveBusiness(businessID);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /asellnegocio [businessid]");
    }
    return 1;
}
CMD:vendernegocio(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnected(playerid))
	{
	    new businessID = getPlayerBusinessID(playerid);
	    if(businessID < 1) return 1;
	    new labelString[96];
		GivePlayerCash(playerid, businessVariables[businessID][bPrice]/2);
		Tax -= businessVariables[businessID][bPrice]/2;
        format(businessVariables[businessID][bOwner], MAX_PLAYER_NAME, "");
        format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
        DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
        DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
		businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
		businessVariables[businessID][bLocked] = 0;
		format(labelString, sizeof(labelString), "Negocio Vendido! El estado te pagó %d por tu local.", businessVariables[businessID][bPrice]/2);
		SendClientMessageEx(playerid, COLOR_WHITE, labelString);
		saveBusiness(businessID);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "No estás Conectado");
	return 1;
}
CMD:crearnegocio(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás Conectado");
    if(Info[playerid][pAdminZC] >= 5000)
	{
    	new Float: floatPos[3];

		if(!strcmp(params, "exterior", true))
		{
	        GetPlayerPos(playerid, floatPos[0], floatPos[1], floatPos[2]);
            SetPVarFloat(playerid, "pBeX", floatPos[0]);
            SetPVarFloat(playerid, "pBeY", floatPos[1]);
            SetPVarFloat(playerid, "pBeZ", floatPos[2]);
            SetPVarInt(playerid, "bExt", 1);
            SendClientMessageEx(playerid, COLOR_WHITE, "* Exterior de negocio configurado.");
		}
        else if(!strcmp(params, "interior", true))
		{
        	GetPlayerPos(playerid, floatPos[0], floatPos[1], floatPos[2]);

            SetPVarFloat(playerid, "pBiX", floatPos[0]);
            SetPVarFloat(playerid, "pBiY", floatPos[1]);
            SetPVarFloat(playerid, "pBiZ", floatPos[2]);
			SetPVarInt(playerid, "pBiID", GetPlayerInterior(playerid));
            SetPVarInt(playerid, "bInt", 1);
            SendClientMessageEx(playerid, COLOR_WHITE, "* Interior de negocio configurado.");
		}
        else if(!strcmp(params, "completar", true))
		{
        	if(GetPVarInt(playerid, "bExt") != 1 || GetPVarInt(playerid, "bInt") != 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Todavia no has configurado el interior/exterior del negocio.");
		    new i,labelString[96];
			for(new x = 1; x < MAX_BUSINESS; x++)
			{
			    if(businessVariables[x][bType] == 0)
			    {
			        i = x;
			        printf("ID LIBRE %d",x);
			        break;
				}
			}
			if(businessVariables[i][bType] == 0)
			{
				businessVariables[i][bExteriorPos][0] = GetPVarFloat(playerid, "pBeX");
			    businessVariables[i][bExteriorPos][1] = GetPVarFloat(playerid, "pBeY");
			    businessVariables[i][bExteriorPos][2] = GetPVarFloat(playerid, "pBeZ");

			    businessVariables[i][bInteriorPos][0] = GetPVarFloat(playerid, "pBiX");
			    businessVariables[i][bInteriorPos][1] = GetPVarFloat(playerid, "pBiY");
			    businessVariables[i][bInteriorPos][2] = GetPVarFloat(playerid, "pBiZ");

			    businessVariables[i][bInterior] = GetPVarInt(playerid, "pBiID");

 		        format(businessVariables[i][bOwner], MAX_PLAYER_NAME, "");
 		        format(businessVariables[i][bName], 48, "Ninguno");

 		        businessVariables[i][bLocked] = 1;

		        format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{B90000}(Cerrado)", businessVariables[i][bName], i, businessVariables[i][bPrice]);

		        businessVariables[i][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
				businessVariables[i][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2], 0, 0, -1, 250);

				saveBusiness(i);

			    DeletePVar(playerid, "pBeX");
			    DeletePVar(playerid, "pBeY");
			    DeletePVar(playerid, "pBeZ");
			    DeletePVar(playerid, "pBiX");
			    DeletePVar(playerid, "pBeY");
			    DeletePVar(playerid, "pBeZ");
			    DeletePVar(playerid, "pBiID");

			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2]);
		        return SendClientMessageEx(playerid, COLOR_WHITE, "* Negocio creado!");

			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ya no hay slots disponibles para crear negocios.");

		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearnegocio [interior/exterior/completar]");
	}
	else Message(playerid, COLOR_WHITE, "No Autorizado");
	return 1;
}
CMD:nprecio(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 5000)
	{
	    new businessID,businessPrice;
		if(sscanf(params, "dd", businessID, businessPrice))
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nprecio [businessid] [precio]");
		}
		else
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS){return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");}
		    else
			{
			    new szMessage[1024];
				format(szMessage, sizeof(szMessage), "Cambiaste el precio del negocio ID %d a $%d.", businessID, businessPrice);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				businessVariables[businessID][bPrice] = businessPrice;
				if(strlen(businessVariables[businessID][bOwner]) == 0)
				{
					switch(businessVariables[businessID][bLocked])
					{
						case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{B90000}(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
						case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
					}
				}
				else
				{
					switch(businessVariables[businessID][bLocked])
					{
					    case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{B90000}(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
						case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
					}
				}
				UpdateDynamic3DTextLabelText(businessVariables[businessID][bLabelID], -1, szMessage);
                SaveVarBusiness(1,businessID, "Precio",businessVariables[businessID][bPrice]);
			}
		}
	}
	else Message(playerid, COLOR_WHITE, "No Autorizado");
	return 1;
}
CMD:nstock(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 5000)
	{
	    new businessID,businessStock,szMessage[128];
		if(sscanf(params, "dd", businessID, businessStock)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nstock [businessid] [stock]");
		if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");
		format(szMessage, sizeof(szMessage), "Cambiaste el stock del negocio ID %d a %d.", businessID, businessStock);
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		businessVariables[businessID][bStock] = businessStock;
		SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	}
	else Message(playerid, COLOR_WHITE, "No Autorizado");
	return 1;
}
CMD:comprarnegocio(playerid, params[])
{
    #pragma unused params
    if(IsPlayerConnected(playerid))
	{
        for(new x = 0; x < MAX_BUSINESS; x++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]))
			{
				if(!strcmp(businessVariables[x][bOwner], "", true))
				{
				    if(businessVariables[x][bPrice] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* Este negocio ha sido bloqueado por un administrador.");
					if(getPlayerBusinessID(playerid) >= 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya eres dueño de un negocio.");
					if(GetPlayerCash(playerid) >= businessVariables[x][bPrice])
					{
						GivePlayerCash(playerid,-businessVariables[x][bPrice]);
						Tax += businessVariables[x][bPrice];
						new labelString[96];
						strcpy(businessVariables[x][bOwner], Info[playerid][pNormalName], MAX_PLAYER_NAME);
						DestroyDynamicPickup(businessVariables[x][bPickupID]);
						switch(businessVariables[x][bLocked])
						{
						    case 1: format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n{B90000}(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
							case 0: format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
						}
						UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, labelString);
						businessVariables[x][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2], 0, 0, -1, 250);
						SendClientMessageEx(playerid, COLOR_GREY, "* Felicitaciones por tu compra!");
						saveBusiness(x);
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero para comprar este negocio.");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes comprar un negocio con dueño.");
			}
		}
    }
	return 1;
}
CMD:gotonegocio(playerid, params[])
{
if(Info[playerid][pAdminZC] >= 5000)
{
	new businessID;
	if(sscanf(params, "d", businessID)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /gotohouse [housenumber]");

	SetPlayerPos(playerid,businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2]);
	GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
	SetPlayerInterior(playerid, 0);
	Info[playerid][pInt] = 0;
}
return 1;
}
CMD:ntipo(playerid, params[])
{
    if(Info[playerid][pAdminZC] >= 5000)
	{
        new bCID,bCType;
		if(sscanf(params, "dd", bCID, bCType))
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "USA: /ntipo [businessid] [tipo]");
            SendClientMessageEx(playerid, COLOR_GREY, "Comida 1, Ropa y Toys 2, 24/7 3, SexShop 4, Objetos 5, Armas 6, Fish Items 7.");
			return 1;
		}

		if(!isnull(businessVariables[bCID][bOwner]))
		{
		    new szMessage[256];
		    format(szMessage, sizeof(szMessage), "Cambiaste el tipo del negocio ID %d al tipo %d.", bCID, bCType);
		    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		    businessVariables[bCID][bType] = bCType;
		    SaveVarBusiness(1,bCID, "Tipo",businessVariables[bCID][bType]);

		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválida o primero tienes que crear el negocio.");
	}
	else Message(playerid, COLOR_WHITE, "No Autorizado");
	return 1;
}

CMD:ncaja(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
		new businessID = getPlayerBusinessID(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 30.0, businessVariables[businessID][bInteriorPos][0], businessVariables[businessID][bInteriorPos][1], businessVariables[businessID][bInteriorPos][2]))
		{
			GetPlayerPos(playerid, businessVariables[businessID][bMiscPos][0], businessVariables[businessID][bMiscPos][1], businessVariables[businessID][bMiscPos][2]);
			SendClientMessageEx(playerid, COLOR_WHITE, "Configuraste la posición de la caja fuerte de tu negocio. Recuerda donde está.");
   			saveBusiness(businessID);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Debes poner la caja fuerte en el interior de tu negocio.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}

CMD:movernegocio(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 5000)
	{
	    new businessID, subject[32];
		if(sscanf(params, "ds[32]", businessID, subject))
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "USA: /movernegocio [ID de Negocio] [exterior/interior]");
		}
		else
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessage(playerid, COLOR_GREY, "* ID de negocio invalida.");
            if(strcmp(subject, "exterior", true) == 0)
			{
			    GetPlayerPos(playerid, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2]);
			    DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
			    DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
				if(!strcmp(businessVariables[businessID][bOwner], "", true) && strlen(businessVariables[businessID][bOwner]) >= 1)
				{
				    new labelString[96];
				    switch(businessVariables[businessID][bLocked])
				    {
				        case 1: 	format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n{B90000}(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
				        case 0: 	format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
				    }
				    businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
					businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
				}
				else
				{
				    new labelString[96];
				    switch(businessVariables[businessID][bLocked])
				    {
						case 1:    format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{B90000}(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
						case 0:    format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n{008EC1}Presiona H para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
				    }

				    businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
					businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
				}
				SendClientMessage(playerid, COLOR_WHITE, "El exterior del negocio ha sido cambiado.");
			}
			else if(strcmp(subject, "interior", true) == 0)
			{
			    GetPlayerPos(playerid, businessVariables[businessID][bInteriorPos][0], businessVariables[businessID][bInteriorPos][1], businessVariables[businessID][bInteriorPos][2]);
			    businessVariables[businessID][bInterior] = GetPlayerInterior(playerid);
			    SendClientMessage(playerid, COLOR_WHITE, "El interior del negocio ha sido cambiado.");
			}
			saveBusiness(businessID);
		}
	}

	return 1;
}

CMD:nombrenegocio(playerid, params[])
{
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nombrenegocio [Nombre]");
	    if(strlen(params) >= 33 || strlen(params) < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Muchos carácteres sólo 1 - 32.");
	    new x = getPlayerBusinessID(playerid);
	    new szMessage[1024];
	    format(szMessage, sizeof(szMessage), "Cambiaste el nombre de tu negocio a '%s'.", params);
	    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		format(businessVariables[x][bName], 32, params);
	    switch(businessVariables[x][bLocked])
		{
			case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{B90000}(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
			case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
		}
		UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
		saveBusiness(x);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:abrir(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    new x = getPlayerBusinessID(playerid);
	    switch(businessVariables[x][bLocked])
		{
			case 0: return SendClientMessageEx(playerid, COLOR_WHITE, "Usa /cerrar.");
			case 1:
			{
			    new szMessage[256];
				format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{008EC1}Presiona H para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
                UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
				businessVariables[x][bLocked] = 0;
			    SendClientMessageEx(playerid, COLOR_WHITE, "Negocio abierto.");
			    SaveVarBusiness(1,x, "Locked",businessVariables[x][bLocked]);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:cerrar(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    new x = getPlayerBusinessID(playerid);
	    switch(businessVariables[x][bLocked])
		{
			case 0:
			{
			    new szMessage[1024];
				format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n{B90000}{B90000}(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
                UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
				businessVariables[x][bLocked] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Negocio cerrado.");
				SaveVarBusiness(1,x, "Locked",businessVariables[x][bLocked]);
			}
			case 1: return SendClientMessageEx(playerid, COLOR_WHITE, "Usa /abrir.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:minegocio(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnected(playerid))
	{
        new x = getPlayerBusinessID(playerid);
        if(x < 1) return 1;
        if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bMiscPos][0], businessVariables[x][bMiscPos][1], businessVariables[x][bMiscPos][2]))
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[x][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "* No estás cerca de la caja fuerte de tu negocio.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "No estás Conectado");
	return 1;
}
CMD:textos(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(barras[playerid] == 0)
	    {
	    	barras[playerid] = 1;
	    	Message(playerid, COLOR_WHITE, "Has ocultado los textos, para volverla a aparecer usa /textos.");
	    	TextDrawHideForPlayer(playerid, Textgame0);
			//TextDrawHideForPlayer(playerid, Experiencia[playerid]); //sistema experiencia//
			TextDrawHideForPlayer(playerid, Text:TiempoD);
		}
		else
		{
 			barras[playerid] = 0;
	    	Message(playerid, COLOR_WHITE, "Has aparecido los textos, para volverla a ocultar usa /textos.");
	    	TextDrawShowForPlayer(playerid, Textgame0);
			//TextDrawShowForPlayer(playerid, Experiencia[playerid]); //sistema experiencia//
			TextDrawShowForPlayer(playerid, Text:TiempoD);
		}
	}
	else Message(playerid, COLOR_WHITE, "No estás conectado.");
	return 1;
}
CMD:callsign(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
    if(Info[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 5.");
	new veh = GetPlayerVehicleID(playerid);
 	if(IsPlayerInAnyVehicle(playerid))
    {
    	if(isnull(params)) return SendClientMessage(playerid,COLOR_ORANGE,"INFO: {FFFFFF}/callsign [Texto]");
     	if(!Vehiculo_Nombrarp_Estado[veh])
        {
        	new string[128];
        	format(string,sizeof(string), "%s",params);
        	Texto_NombrarP[veh] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
        	Attach3DTextLabelToVehicle( Texto_NombrarP[veh], veh, -0.7, -1.9, -0.3);
        	Vehiculo_Nombrarp_Estado[veh] = 1;
         }
         else
         {
         	Delete3DTextLabel(Texto_NombrarP[veh]);
          	Vehiculo_Nombrarp_Estado[veh] = 0;
           	return 1;
         }
    }
    else
    {
    SendClientMessage(playerid,COLOR_ORANGE,"ERROR: {FFFFFF}No estas en un vehiculo!");
    return 1;
    }
return 1;
}
CMD:sacarspray(playerid, params[])
{
	new string[128];
    if(Team_Mecanicos(playerid)){
    if(!IsPlayerInRangeOfPoint(playerid, 3, 2517.5764,-2079.5603,13.5469)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás en el lugar adecuado.");
    if(Info[playerid][pSpraycan] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Todavía tienes sprays, úsalos.");
	format(string, sizeof(string), "* %s coge varios botes de spray de su armario.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Info[playerid][pSpraycan] += 3;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no eres mecánico.");
	return 1;
}
CMD:ayuntamiento(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_RED, "No estás conectado");
    if(IsPlayerInRangeOfPoint(playerid,5.0,375.8133,-64.7353,-93.8500))
    {
        ProxDetector(20.0, playerid,"Enrique Hurtado dice: Bienvenido al ayuntamiento ¿en qué trámite le puedo ayudar?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        ShowPlayerDialog(playerid,DIALOG_AYUNTA,DIALOG_STYLE_LIST,"{008EC1}Ayuntamiento - {DA4500}Trámites","Licencias\nVender Autos (2da Mano)\n{EF0058}Seguro Medico","Seleccionar", "Cancelar");
	}
	else
	{
		Message(playerid, COLOR_GRAD2, "No estás en el ayuntamiento");
	}
	return 1;
}
CMD:comprar(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
	{
	    new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    if(businessVariables[businessID][bType] == 0) return 1;
	    new titlestring[32];
	    format(titlestring, sizeof(titlestring), "%s",businessVariables[businessID][bName]);
		switch(businessVariables[businessID][bType])
		{
			case 1: ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, titlestring, "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
			case 3: ShowPlayerDialog(playerid, STOREMENU, DIALOG_STYLE_LIST, titlestring, "Loteria\t\t\t$10\nCigarros\t\t$40\nEncendedor\t\t$20\nFlores\t\t\t$7\nSprunk\t\t\t$8\nSeguro Alarma\t$500\nSeguro Industrial\t$2000\nTeléfono\t\t$800\nAgenda\t\t$20\nCamara\t\t$160\nRadio Portable\t\t$800\nIPOD\t\t\t$850\nBoombox\t\t$750\n{00D300}Recargar Saldo", "Comprar", "Cancelar");
			case 4: ShowPlayerDialog(playerid, SEXMENU, DIALOG_STYLE_LIST, titlestring,"Dildo morado (60$)\nDildo normal (30$)\nVibrador normal (50$)\nVibrador de plata (100$)", "Seleccionar", "Salir");
			case 5: ShowModelSelectionMenu(playerid, MueblesObj, "Muebles", 0x4A5A6BBB, 0x88888899, 0xFAFAFA);
            case 6: ShowPlayerDialog(playerid, DIALOG_AMMU, DIALOG_STYLE_LIST, titlestring,"Puño Americano ($25)\nBate de Beisbol ($50)\nDesert Eagle ($5000)\nMP5 ($10000)\n9 milimetros ($4000)\nRifle de caza ($8000)", "Comprar", "Salir");
			case 7: ShowPlayerDialog(playerid, DIALOG_SHOPFISH, DIALOG_STYLE_LIST, titlestring,"Carnada\nLineas", "Comprar", "Salir");
		}
	}
	return 1;
}
CMD:motor(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto si estás en este tipo de vehiculos.");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
		{
			SetVehicleEngine(vehicleid, playerid);
		}
		else if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
		{
			GameTextForPlayer(playerid, "~w~Encendiendo Motor..", 1500, 3);
			SetTimerEx("SetVehicleEngine", 1000, 0, "dd",  vehicleid, playerid);
			return 1;
		}
	}
	return 1;
}
CMD:chalecobomba(playerid, params[])
{
	new string[128];
    if(Info[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_WHITE, "* Debes ser mínimo nivel 4 para usar este comando.");
    if(pbomba[playerid] != 1) return SendClientMessageEx(playerid,COLOR_WHITE,"No tienes una bomba.");
 	if(IsPlayerConnected(playerid))
  	{
   		if(Info[playerid][pPusoChaleco] == 0)
     	{
  	    	SetPlayerAttachedObject(playerid,9,1242,1,0.043999,0.036000,0.000000,0.000000,86.900001,0.000000,1.575000,1.758999,1.708999);
  	    	Message(playerid, COLOR_LIGHTBLUE, "Te has puesto un chaleco bomba, usa /suicidiobomba para detonarte.");
  	    	format(string, sizeof(string), "* %s se pone un chaleco con bombas en su cuerpo.", GetPlayerNameEx(playerid));
    		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    		Info[playerid][pPusoChaleco] = 1;

		}
		else
		{
			RemovePlayerAttachedObject(playerid, 9);
		    Message(playerid, COLOR_LIGHTBLUE, "Te has quitado un chaleco bomba, ya no podrás detonarte.");
  	    	format(string, sizeof(string), "* %s se quita un chaleco con bombas de su cuerpo.", GetPlayerNameEx(playerid));
    		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    		Info[playerid][pPusoChaleco] = 0;
		}
  	}
  	return 1;
}
CMD:suicidiobomba(playerid, params[])
{
	new string[128];
	if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en prisión.");
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en el paintball.");
 	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un evento.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
	if(Info[playerid][pPusoChaleco] == 0) return Message(playerid, COLOR_WHITE, "Primero usa /chalecobomba.");
	if(Info[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_WHITE, "* Debes ser mínimo nivel 4 para usar este comando.");
 	if(IsPlayerConnected(playerid))
  	{
   		if(pbomba[playerid] != 1) return SendClientMessageEx(playerid,COLOR_WHITE,"No tienes una bomba.");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		CreateExplosion(X,Y,Z,0,9999999);
		CreateExplosion(X,Y,Z,1,9999999);
		CreateExplosion(X,Y,Z,2,9999999);
		CreateExplosion(X,Y,Z,3,9999999);
		CreateExplosion(X,Y,Z,4,9999999);
		CreateExplosion(X,Y,Z,5,9999999);
		CreateExplosion(X,Y,Z,6,9999999);
		CreateExplosion(X,Y,Z,7,9999999);
		CreateExplosion(X,Y,Z,8,9999999);
		CreateExplosion(X,Y,Z,9,9999999);
		CreateExplosion(X,Y,Z,10,9999999);
		CreateExplosion(X,Y,Z,11,9999999);
		CreateExplosion(X,Y,Z,12,9999999);
		CreateExplosion(X,Y,Z,13,9999999);
		SetHP(playerid, 0.0);
		format(string, sizeof(string), "%s grita: ¡¡Allahu Akbar!!", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
		pbomba[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "Te has suicidado con una bomba");
  		format(string, sizeof(string), "[LSRTV] Posible terrorista identificado como {FFFFFF}%s {FFA500} se ha suicidado con una bomba.", GetPlayerNameEx(playerid));
		OOCNews(COLOR_NEWS2,string);
	}
	return 1;
}
CMD:fps(playerid, params[])
{
	if(camaraon[playerid] == 0)
 	{
  		camaraon[playerid] = 1;
    	SendClientMessage(playerid, -1, "{9ACD32}Perfect City: {00CED3}Has puesto la cámara de primera persona.");
     	AttachObjectToPlayer(FPS[playerid], playerid, 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
      	AttachCameraToObject(playerid, FPS[playerid]);
	}
 	else if(camaraon[playerid] == 1)
  	{
   		camaraon[playerid] = 0;
        SendClientMessage(playerid, -1, "{9ACD32}Perfect City: {00CED3}Has puesto la cámara de tercera persona (normal).");
        SetCameraBehindPlayer(playerid);
    }
    return 1;
}
CMD:estado(playerid, params[])
{
	new string[128];
	if(Info[playerid][pPusoEstado] == 1) return SendClientMessageEx(playerid, COLOR_WHITE , "Ya tienes un estado puesto, usa /quitarestado.");
	if(!sscanf(params, "s[128]", params[0]))
	{
        Delete3DTextLabel(LabelYo[playerid]); // En caso de haber cambiado el nombre del new, se lo cambian en esta linea
        LabelYo[playerid] = Create3DTextLabel(params[0], COLOR_LIGHTBLUE, 0.0, 0.0, 0.0, 50.0, 0, 1); // En caso de haber cambiado el nombre del new, se lo cambian en esta linea
        Attach3DTextLabelToPlayer(LabelYo[playerid], playerid, 0.0, 0.0, 0.4); // En caso de haber cambiado el nombre del new, se lo cambian en esta linea
        format(string, sizeof(string), "Tú nuevo estado: %s", params[0]);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        Info[playerid][pPusoEstado] = 1;
 	}
    else SendClientMessageEx(playerid, COLOR_WHITE , "USA: /estado <estado / descripción>");
    return 1;
}
CMD:quitarestado(playerid, params[])
{
    if(Info[playerid][pPusoEstado] == 0) return SendClientMessageEx(playerid, COLOR_WHITE , "No tienes ningún estado puesto.");
    Delete3DTextLabel(LabelYo[playerid]); // En caso de haber cambiado el nombre del new, cambiarselo en esta línea.
    SendClientMessageEx(playerid, COLOR_WHITE, "Estado borrado");
    Info[playerid][pPusoEstado] = 0;
    return 1;
}
CMD:talar(playerid, params[]) 
{
    if (Info[playerid][pJob] == 3 || Info[playerid][pJob2] == 3)
    {
		if(!IsPlayerInRangeOfPoint(playerid,3.0,-572.4534,-1498.0902,11.0859)) return SendClientMessageEx(playerid, COLOR_WHITE , "No estás en el lugar adecuado.");
		if(GetPVarInt(playerid,"PlayerStartDrova") == 1) return SendClientMessageEx(playerid, COLOR_WHITE , "Ya estás talando, utiliza /dtalar.");
		ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"[LEÑADOR]","Empezar a cortar madera?","Si","No");
	}
	else Message(playerid, COLOR_WHITE, "No eres leñador.");
	return 1;
}
CMD:dtalar(playerid, params[])
{
	if (Info[playerid][pJob] == 3 || Info[playerid][pJob2] == 3)
    {
		if(GetPVarInt(playerid,"PlayerStartDrova") == 0) return SendClientMessageEx(playerid, COLOR_WHITE , "No estás talando todavía, utiliza /talar.");
		SendClientMessageEx(playerid, COLOR_WHITE , "Has dejado de talar.");
		SetPVarInt(playerid,"PlayerStartDrova",0);
		talar[playerid] = 0;
		SetPlayerSkin(playerid, Info[playerid][pChar]);
	}
	else Message(playerid, COLOR_WHITE, "No eres leñador.");
	return 1;
}
CMD:rolesposas(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Usted no es de las fuerzas de la ley");
	{
		new string[128];
  		format(string, sizeof(string), "* %s retira sus esposas de su cinturon tactico e intenta esposar al sujeto", GetPlayerNameEx(playerid));
    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	format(string, sizeof(string), "* ¿El sujeto ejerce resistencia? (( %s )).", GetPlayerNameEx(playerid));
     	ProxDetector(30.0, playerid, string, COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN);
	}
	return 1;
}
CMD:pbalasg(playerid, params[])
    {
    	if(!Team_LSPD(playerid)) return SendClientMessageEx(playerid, COLOR_LIGHTRED, "[ERROR] Usted no forma parte del Departamento de Policía.");
    	if(GetPlayerWeapon(playerid) == 25)
  		{
    		if(BalasDeGoma[playerid] == 0)
            {
                 BalasDeGoma[playerid] = 1;
                 SendClientMessageEx(playerid, COLOR_GREEN, "Usted activó el modo de escopeta de balas de goma. Cuando tome una escopeta normal, al disparar paralizará al jugador que recibió el disparo.");
                 SendClientMessageEx(playerid, 0xFFFFFFFF, "Para desactivar el modo de escopeta de balas de goma, utilice nuevamente el comando '/pbalasg'.");
            }
            else
      		{
      			 BalasDeGoma[playerid] = 0;
                 SendClientMessageEx(playerid, COLOR_GENERAL, "Usted desactivó el modo de escopeta de balas de goma. Para activarlo de nuevo, utilice el comando '/pbalasg'.");
            }
  		}
		else SendClientMessageEx(playerid, 0xFFFFFFFF, "No tienes una escopeta.");
  		return 1;
    }
CMD:desbug(playerid, params[])
{
    if(Info[playerid][pJailed] >= 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Información: No puedes usar este comando mientras estás en prisión.");
	if(GetPVarInt(playerid, "IsInArena") > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Información: No puedes usar este comando en el Paintball!");
	if(IsPlayerConnected(playerid))
	{
	  SetPlayerInterior(playerid,0);
	  SetPlayerVirtualWorld(playerid, 0);
	    Info[playerid][pInt] = 0;
	    Info[playerid][pVW] = 0;
	    SendClientMessageEx(playerid, -1, "Administración: Esperamos que su problema haya sido solucionado o reloguea.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, " Usted no esta logeado.");
    return 1;
}
	zcmd(escapar, playerid, params[])
	{
	    if(IsPlayerInRangeOfPoint(playerid,3,1498.7604,-1564.1198,-22.0759))
		{
		new string[128];
		SetTimerEx("TimerESCAPE",60000,false,"d",playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Espera 1 minuto para poder escapar.");
		ApplyAnimation(playerid,"CARRY","putdwn",1,0,0,1,60000,0);
		format(string, sizeof(string), "* %s empieza a trepar por la cuerda.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}

	zcmd(explotarpuerta, playerid, params[])
	{
		if(IsPlayerInRangeOfPoint(playerid,3,1502.6974,-1564.3524,-22.0759))
		{
	    if(pbomba[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE,"No tienes una bomba.");
		new Float:x,Float:y,Float:z,string[128];
		GetPlayerPos(playerid, x, y, z);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
		BOMBA[playerid] = CreateObject(1252, x, y-0.5, z-0.5, 0,0,0,0);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
		SendClientMessage(playerid,COLOR_WHITE,"La bomba fue plantada, ¡apartate va a explotar!");
		format(string, sizeof(string), "* %s programa una bomba C4 a diez segundos y la coloca en la puerta.", GetPlayerNameEx(playerid));
		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		bombap[playerid] = 1;
		SetTimerEx("TimerBANK",10000,false,"d",playerid);
		}
		return 1;
	}
	zcmd(tirarrobo, playerid, params[])
 	{
 	    if(YaRobo[playerid] == 1)
  		{
  		YaRobo[playerid] = 0;
  		DejarRobo(playerid);
  		SendClientMessageEx(playerid, COLOR_GRAD2, "Tiraste el objeto robado al suelo.");
		}
		return 1;
	}

	zcmd(cticket, playerid, params[])
 	{
	 	if(IsPlayerInRangeOfPoint(playerid, 5.0,359.3290,-2032.0443,7.8359))
		{
		Vortex[playerid] = 1;
		SetTimerEx("TimerTICKET",420000,false,"d",playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un ticket, sube al coche de choque!");
		GivePlayerCash(playerid, -50);
		}
		return 1;
	}
	zcmd(cbomba, playerid, params[])
 	{
 	    if(GetPlayerMoney(playerid) < 20000) return SendClientMessage(playerid,COLOR_RED,"No tienes suficiente dinero.");
	 	if(pbomba[playerid] == 0)
	 	{
	 	    if(bombap[playerid] == 0)
	 	    {
		 	   	if(!IsPlayerInRangeOfPoint(playerid,2.0,2351.4546,-648.1740,128.0547)) return SendClientMessage(playerid,COLOR_WHITE,"No estas en la zona de compra."); // Cambien x,y,z por las coordenadas del lugar donde quieren que se compre la bomba
				{
				if(GetPlayerMoney(playerid) < 4999) return SendClientMessage(playerid,COLOR_WHITE,"No tienes suficiente dinero.");
				pbomba[playerid] = 1;
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Has comprado una c4 por 20,000$, usa /bomba para colocarla.");
				GivePlayerCash(playerid,-20000);
				}
			}
		}
		return 1;
	}
	zcmd(bomba, playerid, params[])
 	{
 	    if(pbomba[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE,"No tienes una bomba.");
		new Float:x,Float:y,Float:z; //aquí identificamos la coordenadas X,Y,Z para luego usarlas en el Objeto de la bomba y la explosión.
		GetPlayerPos(playerid, x, y, z);//con esto obtendremos la posición del jugador(X,Y,Z), para luego usarla en la bomba.
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);//La animación de planteando la bomba.
		BOMBA[playerid] = CreateObject(1252, x, y-0.5, z-0.5, 0,0,0,0);//El Objeto que sera la bomba.
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); //Nuevamente la animación, en caso que no funcione la otra.
		SendClientMessage(playerid,COLOR_WHITE,"La bomba fue plantada, explotala usando: {FF0000}/detonar{FFFFFF}.");//El Mensaje que mostrara cuando tengas la bomba plantada.
		bombap[playerid] = 1;
		pbomba[playerid] = 0;
		return 1;
	}
	zcmd(detonar, playerid, params[])
 	{
 	  	if(bombap[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE,"No tienes ninguna bomba plantada.");
		new Float:x, Float:y, Float:z;
		GetObjectPos(BOMBA[playerid], x, y, z);//Identifica cual es la posición del objeto.
		CreateExplosion(x, y, z, 7, 2.0); //Crea la explosion.
		DestroyObject(BOMBA[playerid]); //Destruye el objeto de la bomba.
		SendClientMessage(playerid,COLOR_WHITE,"La bomba fue detonada.");//Mensaje que la bomba fue detonada
		pbomba[playerid] = 0;
		bombap[playerid] = 0;
		return 1;
	}
 	zcmd(dejarrobo, playerid, params[])
 	{
 	if(IsPlayerInRangeOfPoint(playerid,2,2447.9905,-1975.9823,13.5469))
		{
		    if(YaRobo[playerid] == 1)
		    {
      		YaRobo[playerid] = 0;
		        	if(ArtRobado(playerid) == TVPobre)
		        	{
				    SendClientMessage(playerid,-1,"Ganas $450 por traer esta television vieja.");
				    GivePlayerCash(playerid,450);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == TVBuena)
					{
				    SendClientMessage(playerid,-1,"Ganas $900 por traer esta television en buen estado.");
				    GivePlayerCash(playerid,900);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == PlayVieja)
					{
				    SendClientMessage(playerid,-1,"Ganas $350 por traer esta playstation vieja.");
				    GivePlayerCash(playerid,350);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == PlayBuena)
					{
				    SendClientMessage(playerid,-1,"Ganas $700 por traer esta playstation en buen estado.");
				    GivePlayerCash(playerid,700);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == VideoVieja)
					{
				    SendClientMessage(playerid,-1,"Ganas $270 por traer esta videograbadora vieja.");
				    GivePlayerCash(playerid,270);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == VideoBuena)
					{
				    SendClientMessage(playerid,-1,"Ganas $800 por traer esta videograbadora en buen estado.");
				    GivePlayerCash(playerid,800);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == PC)
					{
				    SendClientMessage(playerid,-1,"Ganas $1000 por traer esta PC.");
				    GivePlayerCash(playerid,1000);
				    DisablePlayerCheckpoint(playerid);
					}
					if(ArtRobado(playerid) == Caja)
					{
				    SendClientMessage(playerid,-1,"Ganas $500 por traer esta caja.");
				    GivePlayerCash(playerid,500);
				    DisablePlayerCheckpoint(playerid);
					}
			 	   DejarRobo(playerid);
			 	   return 1;
			}
			return SendClientMessage(playerid,COLOR_WHITE,"No robaste nada.");
		}
    return 0;
	}

	zcmd(robarshop, playerid, params[])
 	{
 	if(Info[playerid][pMaskuse] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Necesitas tener puesta una máscara para poder robar la tienda.");
 	if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Debes tener nivel 3 para poder robar la tienda.");
 	if(Info[playerid][probita] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Solo puedes robar 1 vez cada 20 minutos.");
   		if(IsPlayerInRangeOfPoint(playerid,5,1009.2381,48.5105,55.3221))
		{
				if(YaRobo[playerid] == 0)
			 	{
			 	new string[128];
			 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		 		SendRadioMessage(1, 0x8D8DFFFF, "* Central: Estan robando en la tienda de electrónica.");
	   			format(string, sizeof(string), "* Sospechoso identificado como: %s.", GetPlayerNameEx(playerid));
	   			SendRadioMessage(1,COLOR_VIP,string);
				SendClientMessage(playerid, COLOR_GENERAL,"LA ALARMA HA COMENZADO A SONAR!, SAPD ESTARÁ EN CAMINO.");
    			GameTextForPlayer(playerid,"~r~PERMANECE 2 MINUTOS EN LA TIENDA PARA ROBAR UN OBJETO!",7000,3);
    			SendClientMessage(playerid, COLOR_GENERAL,"Si sales de la tienda no lograrás robar el objeto.");
			 	SetTimerEx("RobadoCosas",100000,0,"i",playerid);
			 	Info[playerid][probita] = 1;
			 	SetTimerEx("TimerROB",1200000,false,"d",playerid);
			 	LoadMoneyy[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
				SetProgressBarValue(LoadMoneyy[playerid], 100.0);
				ShowProgressBarForPlayer(playerid, LoadMoneyy[playerid]);
				SetTimerEx("LoadMonn", 1000, 0, "d", playerid);
			  	return 1;
				}
				return SendClientMessage(playerid,COLOR_WHITE,"Ya robaste algo!");
  		}
  		return 0;
	}
	zcmd(recogercesped, playerid, params[])
	{
		if(Info[playerid][pJob] == 13 || Info[playerid][pJob2] == 13)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2013.0183,-1282.8282,23.9762))
			{
			Info[playerid][pgskin] = GetPlayerSkin(playerid);
			OldskinJ[playerid] = GetPlayerSkin(playerid);
			SetPlayerSkin(playerid, 73);
			SendClientMessageEx(playerid, COLOR_WHITE, "Aceptaste el trabajo,sube a un cortacesped para comenzar.!");
			recojercesped[playerid]=1;
			}
  		}
  		return 1;
	}
	zcmd(adminduty, playerid, params[])
	{
	if(Info[playerid][pAdminZC] >= 2)
	{
		if(papilla[playerid] == 0)
		{
			new string[256];
			papilla[playerid] = 1;
			SetHP(playerid, 100000);
			if (Info[playerid][pSex] == 1)
			SetPlayerSkin(playerid, 217);
			else
			SetPlayerSkin(playerid, 211);
			AdminDuty[playerid] = 1;
			if (Info[playerid][pAdminZC] == 2)
		    {
    		SetPlayerColor(playerid,COLOR_ADMIN2);
    		}
    		else if (Info[playerid][pAdminZC] == 3)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN3);
    		}
			else if (Info[playerid][pAdminZC] == 4)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4);
    		}
    		else if (Info[playerid][pAdminZC] == 5)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN5);
    		}
    		else if (Info[playerid][pAdminZC] == 6)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN6);
    		}
    		else if (Info[playerid][pAdminZC] == 1338)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN1338);
    		}
    		else if (Info[playerid][pAdminZC] == 4000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4000);
    		}
    		else if (Info[playerid][pAdminZC] == 4001)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4001);
    		}
    		else if (Info[playerid][pAdminZC] == 4002)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4002);
    		}
    		else if (Info[playerid][pAdminZC] == 5000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN5000);
    		}
    		else if (Info[playerid][pAdminZC] == 6000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN6000);
    		}
    		else if (Info[playerid][pAdminZC] == 89648)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89648);
    		}
    		else if (Info[playerid][pAdminZC] == 89649)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89649);
    		}
    		else if (Info[playerid][pAdminZC] == 89650)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89650);
    		}
    		else if (Info[playerid][pAdminZC] == 89651)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89651);
    		}
    		format(string, sizeof(string), "{FFDB00}%s se dispone a atender dudas y reportes (ID: %d)", GetPlayerNameEx(playerid), playerid);
            ABroadCast(COLOR_GENERAL, string, 2);
		 	//SendClientMessageToAllEx(COLOR_WHITE, string);
		}
		else
		{
		    new string[256];
			AdminDuty[playerid] = 0;
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
	        //SetPlayerSkin(playerid, Info[playerid][pChar]);
	        SetHP(playerid, 100);
        	papilla[playerid]= 0;
  			format(string, sizeof(string), "{FFDB00}%s dejó de atender dudas y reportes, ahora estará en rol (ID: %d)", GetPlayerNameEx(playerid), playerid);
            ABroadCast(COLOR_GENERAL, string, 2);
			//SendClientMessageToAllEx(COLOR_WHITE, string);
		}
	}
	return 1;
	}
    zcmd(sentarse, playerid, params[])
	{
	    new anim;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /sentarse (1-5)");
        switch(anim){
			case 1: LoopingAnim(playerid,"BEACH","bather",4.0,1,0,0,0,0);
			case 2: LoopingAnim(playerid,"BEACH","Lay_Bac_Loop",4.0,1,0,0,0,0);
			case 3: LoopingAnim(playerid,"BEACH","ParkSit_W_loop",4.0,1,0,0,0,0);
			case 4: LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0);
			case 5: LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0);
			case 6: LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0,1,0,0,0,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /sentarse (1-6)");
		}
		return 1;
	}
	zcmd(orinar, playerid, params[]){
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
	    if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
		SetPlayerSpecialAction(playerid, 68);
		return 1;
	}
    zcmd(dj, playerid, params[]){
	    new anim;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /dj [1-4]");
        switch(anim){
			case 1: LoopingAnim(playerid,"SCRATCHING","scdldlp",4.0,1,0,0,0,0);
			case 2: LoopingAnim(playerid,"SCRATCHING","scdlulp",4.0,1,0,0,0,0);
			case 3: LoopingAnim(playerid,"SCRATCHING","scdrdlp",4.0,1,0,0,0,0);
			case 4: LoopingAnim(playerid,"SCRATCHING","scdrulp",4.0,1,0,0,0,0);
		 	default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /dj [1-4]");
		}
		return 1;
	}
	zcmd(sinaliento, playerid, params[]){
		new anim;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /sinaliento [1-2]");
        switch(anim){
			case 1: LoopingAnim(playerid,"PED","IDLE_tired",4.0,1,0,0,0,0);
			case 2: LoopingAnim(playerid,"FAT","IDLE_tired",4.0,1,0,0,0,0);
            default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /sinaliento [1-2]");
		}
		return 1;
	}
	zcmd(poli, playerid, params[]){
		new anim;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /poli (1-2)");
		switch(anim){
			case 1:LoopingAnim(playerid,"POLICE","CopTraf_Come",4.0,0,0,0,0,0);
			case 2:LoopingAnim(playerid,"POLICE","CopTraf_Stop",4.0,0,0,0,0,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /poli (1-2)");
		}
		return 1;
	}
    zcmd(asiento, playerid, params[]){
    	new anim;
		if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /asiento (1-7)");
		if(anim < 1 || anim > 7) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /asiento (1-7)");
		switch(anim){
			case 1: LoopingAnim(playerid,"Attractors","Stepsit_in",4.0,0,0,0,1,0);// Not looping
			case 2: LoopingAnim(playerid,"CRIB","PED_Console_Loop",4.0,1,0,0,0,0);
			case 3: LoopingAnim(playerid,"INT_HOUSE","LOU_In",4.0,0,0,0,1,0); // Not looping
			case 4: LoopingAnim(playerid,"MISC","SEAT_LR",4.0,1,0,0,0,0);
			case 5: LoopingAnim(playerid,"MISC","Seat_talk_01",4.0,1,0,0,0,0);
			case 6: LoopingAnim(playerid,"MISC","Seat_talk_02",4.0,1,0,0,0,0);
			case 7: LoopingAnim(playerid,"ped","SEAT_down",4.0,0,0,0,1,0); // Not looping
		}
		return 1;
	}
    zcmd(bailar, playerid, params[]){
 		new dancestyle;
		if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
        if(sscanf(params, "d", dancestyle)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /bailar (1-3)");
 		switch(dancestyle){
			case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		}
	   	return 1;
	}
    zcmd(cruzar, playerid, params[]){
    	new anim;
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /cruzar [1-5]");
		if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
 		switch(anim){
			case 1: LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
			case 2: LoopingAnim(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
			case 3: LoopingAnim(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1);
			case 4: LoopingAnim(playerid,"GRAVEYARD","mrnM_loop",4.0,1,0,0,0,0);
			case 5: LoopingAnim(playerid,"GRAVEYARD","prst_loopa",4.0,1,0,0,0,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /cruzar (1-5)");
		}
		return 1;
	}
    zcmd(jiggy, playerid, params[])
	{
		new anim;
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /jiggy (1-10)");
        if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
 		switch(anim){
			case 1: LoopingAnim(playerid,"DANCING","DAN_Down_A",4.0,1,0,0,0,0);
			case 2: LoopingAnim(playerid,"DANCING","DAN_Left_A",4.0,1,0,0,0,0);
			case 3: LoopingAnim(playerid,"DANCING","DAN_Loop_A",4.0,1,0,0,0,0);
			case 4: LoopingAnim(playerid,"DANCING","DAN_Right_A",4.0,1,0,0,0,0);
			case 5: LoopingAnim(playerid,"DANCING","DAN_Up_A",4.0,1,0,0,0,0);
			case 6: LoopingAnim(playerid,"DANCING","dnce_M_a",4.0,1,0,0,0,0);
			case 7: LoopingAnim(playerid,"DANCING","dnce_M_b",4.0,1,0,0,0,0);
			case 8: LoopingAnim(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);
			case 9: LoopingAnim(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);
			case 10: LoopingAnim(playerid,"DANCING","dnce_M_d",4.0,1,0,0,0,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /jiggy (1-10)");
		}
		return 1;
	}
	zcmd(ped, playerid, params[]){
		new anim;
        if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /ped (1-26)");
        if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
 		switch(anim){
			case 1: LoopingAnim(playerid,"PED","JOG_femaleA",4.0,1,1,1,1,1);
			case 2: LoopingAnim(playerid,"PED","JOG_maleA",4.0,1,1,1,1,1);
			case 3: LoopingAnim(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);
			case 4: LoopingAnim(playerid,"PED","run_fat",4.0,1,1,1,1,1);
			case 5: LoopingAnim(playerid,"PED","run_fatold",4.0,1,1,1,1,1);
			case 6: LoopingAnim(playerid,"PED","run_old",4.0,1,1,1,1,1);
			case 7: LoopingAnim(playerid,"PED","Run_Wuzi",4.0,1,1,1,1,1);
			case 8: LoopingAnim(playerid,"PED","swat_run",4.0,1,1,1,1,1);
			case 9: LoopingAnim(playerid,"PED","WALK_fat",4.0,1,1,1,1,1);
			case 10: LoopingAnim(playerid,"PED","WALK_fatold",4.0,1,1,1,1,1);
			case 11: LoopingAnim(playerid,"PED","WALK_gang1",4.0,1,1,1,1,1);
			case 12: LoopingAnim(playerid,"PED","WALK_gang2",4.0,1,1,1,1,1);
			case 13: LoopingAnim(playerid,"PED","WALK_old",4.0,1,1,1,1,1);
			case 14: LoopingAnim(playerid,"PED","WALK_shuffle",4.0,1,1,1,1,1);
			case 15: LoopingAnim(playerid,"PED","woman_run",4.0,1,1,1,1,1);
			case 16: LoopingAnim(playerid,"PED","WOMAN_runbusy",4.0,1,1,1,1,1);
			case 17: LoopingAnim(playerid,"PED","WOMAN_runfatold",4.0,1,1,1,1,1);
			case 18: LoopingAnim(playerid,"PED","woman_runpanic",4.0,1,1,1,1,1);
			case 19: LoopingAnim(playerid,"PED","WOMAN_runsexy",4.0,1,1,1,1,1);
			case 20: LoopingAnim(playerid,"PED","WOMAN_walkbusy",4.0,1,1,1,1,1);
			case 21: LoopingAnim(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);
			case 22: LoopingAnim(playerid,"PED","WOMAN_walknorm",4.0,1,1,1,1,1);
			case 23: LoopingAnim(playerid,"PED","WOMAN_walkold",4.0,1,1,1,1,1);
			case 24: LoopingAnim(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,1);
			case 25: LoopingAnim(playerid,"PED","WOMAN_walksexy",4.0,1,1,1,1,1);
			case 26: LoopingAnim(playerid,"PED","WOMAN_walkshop",4.0,1,1,1,1,1);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /ped (1-26)");
		}
		return 1;
	}
	zcmd(rap, playerid, params[]){
		new rapstyle;
        if(sscanf(params, "d", rapstyle)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /rap (1-3)");
		if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
 		switch(rapstyle){
			case 1: LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,1,1,1,0);
			case 2: LoopingAnim(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0);
			case 3: LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /rap [1-3]");
		}
	   	return 1;
	}
	zcmd(gesto, playerid, params[]){
		new gesto;
        if(sscanf(params, "d", gesto)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gesto (1-15)");
        if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
 		switch(gesto){
			case 1: OnePlayAnim(playerid,"GHANDS","gsign1",4.0,0,0,0,0,0);
			case 2: OnePlayAnim(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			case 3: OnePlayAnim(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);
			case 4: OnePlayAnim(playerid,"GHANDS","gsign2LH",4.0,0,0,0,0,0);
			case 5: OnePlayAnim(playerid,"GHANDS","gsign3",4.0,0,0,0,0,0);
			case 6: OnePlayAnim(playerid,"GHANDS","gsign3LH",4.0,0,0,0,0,0);
			case 7: OnePlayAnim(playerid,"GHANDS","gsign4",4.0,0,0,0,0,0);
			case 8: OnePlayAnim(playerid,"GHANDS","gsign4LH",4.0,0,0,0,0,0);
			case 9: OnePlayAnim(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
			case 10: OnePlayAnim(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
			case 11: OnePlayAnim(playerid,"GHANDS","gsign5LH",4.0,0,0,0,0,0);
			case 12: OnePlayAnim(playerid,"GANGS","Invite_No",4.0,0,0,0,0,0);
			case 13: OnePlayAnim(playerid,"GANGS","Invite_Yes",4.0,0,0,0,0,0);
			case 14: OnePlayAnim(playerid,"GANGS","prtial_gngtlkD",4.0,0,0,0,0,0);
			case 15: OnePlayAnim(playerid,"GANGS","smkcig_prtl",4.0,0,0,0,0,0);
			default: return SendClientMessageEx(playerid,COLOR_WHITE,"Utiliza: /gesto (1-15)");
		}
		return 1;
	}
    zcmd(sexo, playerid, params[]){
    	new sexstyle;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora !");
        if(sscanf(params, "d", sexstyle)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sexo (1-6)");
 		switch(sexstyle){
			case 1: LoopingAnim(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,0);
			case 2: LoopingAnim(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,0);
			case 3: LoopingAnim(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,0);
			case 4: LoopingAnim(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,0);
			case 5: LoopingAnim(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,0);
			case 6: LoopingAnim(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,0);
			default: return SendClientMessageEx(playerid,0xFF0000FF,"Utiliza: /sexo (1-8)");
		}
 	  	return 1;
	}
	zcmd(fumar, playerid, params[]){
        new gesto;
	    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora !");
        if(sscanf(params, "d", gesto)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fumar (1-2)");
		switch(gesto){
			case 1: OnePlayAnim(playerid,"SMOKING","M_smk_in",4.0,0,0,0,0,0);
			case 2: LoopingAnim(playerid,"SMOKING","M_smklean_loop",4.0,1,0,0,0,0);
			default: return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fumar (1-2)");
		}
		return 1;
	}
	zcmd(chora, playerid, params[])
	 {
	 OnePlayAnim(playerid, "COP_AMBIENT", "Coplook_watch",4.0,0,0,0,0,0);
	  return 1;
	  }
	zcmd(relax, playerid, params[])
	{
	LoopingAnim(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
	 return 1;
	  }
	zcmd(saludo2, playerid, params[])
	 {
	 OnePlayAnim(playerid,"ON_LOOKERS","Pointup_loop",4.0,0,0,0,0,0);
	 return 1;
	  }
	zcmd(llorar, playerid, params[])
	 {
	 LoopingAnim(playerid,"GRAVEYARD","mrnF_loop",4.0,1,0,0,0,0);
	 return 1;
	 }
    zcmd(saludo, playerid, params[])
	 {
	 ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0);
	 return 1;
	 }
    zcmd(quieto, playerid, params[])
	 {
	 LoopingAnim(playerid,"WUZI","Wuzi_stand_loop", 4.0, 1, 0, 0, 0, 0);
	  return 1;
	   }
    zcmd(enganche, playerid, params[])
	 {
      LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0);
	  return 1;
	   }
    zcmd(cpr, playerid, params[])
	 {
	 OnePlayAnim(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
	  return 1;
	   }
    zcmd(borracho, playerid, params[])
	 {
	 LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
	   return 1;
	    }
    zcmd(arobar, playerid, params[])
	 {
	 LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, 0);
	  return 1;
	   }
    zcmd(reir, playerid, params[])
	 {
	 ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	  return 1;
	  }
    zcmd(robman, playerid, params[])
	 {
	 LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	  return 1;
	  }
    zcmd(esconder, playerid, params[])
	 {
	 LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	  return 1;
	  }

	zcmd(vomitar, playerid, params[])
	{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	return 1;
	}
    zcmd(crack, playerid, params[])
	 {
	 LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	  return 1;
	   }
    zcmd(jodete, playerid, params[]) { ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0); return 1; }
    zcmd(taichi, playerid, params[])
	{
	LoopingAnim(playerid,"PARK","Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
	 return 1;
	  }
    zcmd(beso, playerid, params[]) { ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.0,0,0,0,0,0); return 1; }
    zcmd(responder, playerid, params[])
    {
    	if(!sscanf(params, "us[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
	      		if(Info[playerid][pHelper] > 0)
	        	{
	        	    if(Info[params[0]][pHelper] > 0 || Info[params[0]][pAdminZC] >= 1) return Message(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} ¡No puedes responder a usuarios que son Administradores o Ayudantes!");
	        	    new string[128];
	        	    format(string, sizeof(string), "Respondes a %s (%d): %s", GetPlayerNameEx(params[0]), params[0] ,params[1]);
					SendClientMessage(playerid,  0x00FF00FF, string);
					format(string, sizeof(string), "Respuesta de %s (%d): %s", GetPlayerNameEx(playerid), playerid, params[1]);
					SendClientMessage(params[0], 0x00FF00FF, string);
					if(Info[playerid][pAdminZC]  >=6000 && Info[params[0]][pAdminZC] >= 6000)
					{
	    				for(new i = 0; i < MAX_PLAYERS; i++)
				    	{
        					if(Info[i][pAdminZC] >= 89650)
				    	    {
            					if(See_MP[i] == 1)
				        	    {
                					format(string, sizeof(string), ":MP: %s(%d) a %s(%d): %s", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(params[0]), params[0], params[1]);
				                	SendClientMessage(i, 0x00FF00FF, string);
					            }
					        }
					    }
 					}
 				}
 				else SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} ¡No eres un Ayudante!");
 			}
 			else SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} ID no válida");
 		}
 		return 1;
 	}
    zcmd(w, playerid, params[])
    {
        if(!sscanf(params, "us[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
	      		if(Info[playerid][pAdminZC] > 0 || Info[playerid][pAdminZC] == 0 && Info[params[0]][pAdminZC] > 0)
	        	{
	         		if(HidePM[params[0]] == 1 && Info[playerid][pAdminZC] < 6000) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} Este administrador/ayudante tiene los susurros bloqueados!");
	         		new string[128];
					format(string, sizeof(string), "Mensaje de %s (%d): {FFFFFF}%s", GetPlayerNameEx(playerid), playerid, params[1]);
					SendClientMessage(params[0], 0x00FF00FF, string);
					format(string, sizeof(string), "Susurras a %s (%d): {FFFFFF}%s", GetPlayerNameEx(params[0]), params[0] ,params[1]);
					SendClientMessage(playerid,  0x00FF00FF, string);
					if(Info[playerid][pAdminZC] != 6000 && Info[params[0]][pAdminZC] != 6000)
					{
	    				for(new i = 0; i < MAX_PLAYERS; i++)
				    	{
        					if(Info[i][pAdminZC] >= 89650)
				    	    {
            					if(See_MP[i] == 1)
				        	    {
                					format(string, sizeof(string), ":MP: %s(%d) a %s(%d): %s", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(params[0]), params[0], params[1]);
				                	SendClientMessage(i, 0x00FF00FF, string);
					            }
					        }
					    }
 					}
				}
				else SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Susurros solo ha administradores!");
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Jugador no conectado.");
        }
		else SendClientMessage(playerid, COLOR_WHITE, "Utiliza: /w (PlayerID) (Texto)");
        return 1;
    }
	CMD:venderarma(playerid,params[])
	{
	new cliente,precio, weapon, id;
	if(Team_LSPD(playerid) || Team_FBI(playerid) || Team_SAEM(playerid))
	{
			SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No puedes vender armas siendo policia, FBI ni del ejército!");
			return 1;
		}
		if (Info[playerid][pJob] == 7 || Info[playerid][pJob2] == 7)
		{
	    	if(!sscanf(params,"ii",cliente,precio))
	    	{
	        	if(IsPlayerConnected(cliente))
	        	{
	            	if(precio >= 0)
	            	{
     	       			manubrio[playerid] = 1;
						SetTimerEx("Timermanubrio",900000,false,"d",playerid);
	            	    weapon = GetPlayerWeapon(playerid);
	              		new string[200],name[MAX_PLAYER_NAME+1];
	                	GetPlayerName(playerid, name, sizeof(name));
		                format(string,sizeof(string),"* %s quiere venderte su %s por %i$. Usa /aceptararma para comprarla",name,WeaponNames[weapon],precio);
		                SendClientMessage(cliente,COLOR_LIGHTBLUE,string);
		                GetPlayerName(cliente, name, sizeof(name));
		                format(string,sizeof(string),"* Has ofrecido un %s a %s por %i$. Espera a que acepte.",WeaponNames[weapon],name,precio);
		                SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						SetPVarInt(id,"gunID",playerid);
						SetPVarInt(playerid,"gun",weapon);
						SetPVarInt(playerid,"slot",GetWeaponSlot(weapon));
		                VentaDeArmaCon[cliente][0] = playerid;
		                VentaDeArmaCon[cliente][1] = precio;
					}
	            	else
	            	{
	                SendClientMessage(playerid,-1,"{FFFF00}[ERROR]:{FFFFFF} El precio no puede ser negativo.");
	            	}
        		}
        		else
        		{
            	SendClientMessage(playerid,COLOR_WHITE,"Ese jugador no está conectado.");
        		}
			}
    		else
    		{
        	SendClientMessage(playerid,COLOR_WHITE,"Utiliza: /venderarma (ID) (precio)");
    		}
		}
		else
		{
 		SendClientMessage(playerid,COLOR_WHITE,"No eres Armero.");
		}
    return 1;
}

CMD:aceptararma(playerid,params[])
{
	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} No puedes obtener armas debido a tu restricción de dos horas!");
    if(VentaDeArmaCon[playerid][0] != -1)
    {
        if(GetPlayerMoney(playerid) >= VentaDeArmaCon[playerid][1])
        {
        new
					playerOffering = GetPVarInt(playerid,"gunID"),
					weaponOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"gun"),
					slotOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"slot");
            if(weaponOffering != 0 && slotOffering != 0)
			{
            new string[200],name[MAX_PLAYER_NAME+1];
            GetPlayerName(VentaDeArmaCon[playerid][0], name, sizeof(name));
            format(string,sizeof(string),"* Has comprado el arma %s que te ofreció %s por %i$",WeaponNames[weaponOffering],name,VentaDeArmaCon[playerid][1]);
            SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
            GetPlayerName(playerid, name, sizeof(name));
            format(string,sizeof(string),"* %s te ha comprado el arma %s que le ofreciste por %i$.",name,WeaponNames[weaponOffering],VentaDeArmaCon[playerid][1]);
            SendClientMessage(VentaDeArmaCon[playerid][0],COLOR_LIGHTBLUE,string);
            GivePlayerCash(playerid,-VentaDeArmaCon[playerid][1]);
            GivePlayerCash(VentaDeArmaCon[playerid][0],VentaDeArmaCon[playerid][1]);
           	RemovePlayerWeapon(playerOffering, weaponOffering);
			GivePlayerValidWeapon(playerid, weaponOffering);
            VentaDeArmaCon[playerid][0] = -1;
            VentaDeArmaCon[playerid][1] = 0;
            DeletePVar(playerOffering,"gun");
			DeletePVar(playerid,"gunID");
			DeletePVar(playerOffering,"slot");
			}
        }
        else
        {
            SendClientMessage(playerid,COLOR_WHITE,"No puedes pagar ese precio");
        }
    }
    else
    {
        SendClientMessage(playerid,COLOR_WHITE,"Nadie te ha ofrecido armas.");
    }
    return 1;
}
	/*CMD:matriculas(playerid, params[])
	{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Color_Rojo, "{FF0000}[ATENCION]:{FFFFFF} Debe estar en un vehículo a utilizar este comando.");
	else
	{
		ShowPlayerDialog(playerid, 5876, DIALOG_STYLE_LIST, "{008EC1}Seleccione color de la placa", "{FF0000}Rojo\n{00FF00}Verde\n{0000FF}Azul\n{FFFF00}Amarillo\n{00FFFF}Cyan\n{FF00FF}Rosado\n{F0F0F0}Blanco\n{0F0F0F}Negro", "Ok", "Cancelar");
	}
	return 1;
	}*/
	CMD:robarbanco(playerid, params[])
	{
	    if(Banco_Activo == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF}Tienes que pedir permiso de un administrador para robar el banco!");
		if(IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GRAD2,"Policías no pueden robar el banco.");
		if(Info[playerid][pMaskuse] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas tener una máscara puesta para robar el banco.");
		if(Info[playerid][pFMember] < 255 && Info[playerid][pRank] == 6) //ahora las familias pueden robar
        {
	        if(robobanco[playerid] == 0)
	        {
 		       	if(robobanco[playerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Solo puedes robar el banco una vez por hora.");
				if(IsPlayerInRangeOfPoint(playerid, 5.0, 1518.2928,-1564.0775,-22.1879))
				{
				new string[256];
				//SetTimerEx("Tiempo", 300000, false, "i", playerid);
				SendRadioMessage(1, 0x8D8DFFFF, "* Central: Aviso a todas las unidades, están robando en el banco central.");
				SendRadioMessage(2, 0x8D8DFFFF, "* Central: Aviso a todas los agentes, están robando en el banco central.");
				format(string, sizeof(string), "* Sospechoso identificado como: %s.", GetPlayerNameEx(playerid));
				SendRadioMessage(1,COLOR_VIP,string);
    			SendClientMessage(playerid, COLOR_GENERAL,"LA ALARMA HA COMENZADO A SONAR, SAPD ESTARÁ EN CAMINO.");
    			GameTextForPlayer(playerid,"~r~PERMANECE 3 MINUTOS EN LA CAJA FUERTE PARA REUNIR EL DINERO.",4500,3);
    			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); //animacion
    			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); //otra por si no la hace
    			format(string, sizeof(string), "* %s logra abrir la caja fuerte, acto seguido empieza a tomar fajos de billetes y los mete en su bolso.", GetPlayerNameEx(playerid));
    			ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				robobanco[playerid] = 1;
				SetTimerEx("TimerBANCO", 7200000, 0, "d", playerid);
				LoadMoney[playerid] = CreateProgressBar(252.00, 268.00, 122.50, 13.50, COLOR_GREEN, 100.0);
				SetProgressBarValue(LoadMoney[playerid], 100.0);
				ShowProgressBarForPlayer(playerid, LoadMoney[playerid]);
				SetTimerEx("LoadMon", 1000, 0, "d", playerid);
				}
			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "No eres de una banda/familia.");
		return 1;
	}
    CMD:apelear(playerid, params[])
	{
        if(PlayerToPoint(10, playerid, 767.6719,13.6320,1000.7010))
		{
	        SafeDialogEx(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, "{008EC1}¿Qué le gustaría aprender?", "Me gustaría aprender Knee Head\t 1500$\nMe gustaría aprender Kung Fu\t 1000$\nMe gustaría aprender Boxeo\t 800$\nMe gustaría aprender pelea callejera\t 800$\nMe gustaría aprender pelea de codos\t 800$", "Sí", "No");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estas en el GYM.");
		return 1;
	}
	CMD:aceptar(playerid, params[])
	{
	    new sendername[MAX_PLAYER_NAME];
		new giveplayer[MAX_PLAYER_NAME];
		new string[128];
	    if(IsPlayerConnected(playerid))
		{
	        if(isnull(params))
			{
	            SendClientMessageEx(playerid, COLOR_WHITE, "USA: /aceptar (nombre)");
	            SendClientMessageEx(playerid, COLOR_WHITE, "Nombres: telefono - multa - materiales - matrimonio - coche - fichasg");
	            SendClientMessageEx(playerid, COLOR_WHITE, "Nombres: taxi - mecanico - familia - fix - recarga - vip - fichasvip");
	            return 1;
	        }
        	if(strcmp(params,"familia",true) == 0)
			{
            	if(InviteOffer[playerid] < 999)
				{
                	if(IsPlayerConnected(InviteOffer[playerid]))
					{
                    	if(InviteFaction[playerid] == 0 && InviteFamily[playerid] != 255)
						{
                        	if(GetPVarInt(playerid, "IsInArena") == 1)
							{
                            	SendClientMessageEx(playerid, COLOR_WHITE, "Por favor primero sal del paintball arena.");
                          	  	return 1;
	                        }
	                        if(Info[playerid][pJailTime] > 1)
							{
	                            SendClientMessageEx(playerid, COLOR_WHITE, "No puedes ser invitado estando en prisión.");
	                            return 1;
	                        }
                        	if( Info[playerid][pMember] >= 3 || Info[playerid][pFMember] != 255 || Info[playerid][pLeader] >= 3 || Info[playerid][pLeader] == 1 || Info[playerid][pMember] == 1 || Info[playerid][pMember] == 2 && Info[playerid][pDivision] >= 3 || Info[playerid][pMember] == 2 && Info[playerid][pDivision] == 1)
							{
                        	    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes aceptar esta invitación, porque ya estás en una familia o facción.");
                        	}
                        	else
							{
                            	Info[playerid][pFMember] = InviteFamily[playerid];
                            	Info[playerid][pRank] = 1;
                            	fINFO[InviteFamily[playerid]][FamilyMembers] ++;
                            	saveFamilies();
                            	format(string, sizeof(string), "   Aceptaste unirte a %s, fuiste invitado por %s.", fINFO[InviteFamily[playerid]][FamilyName], GetPlayerNameEx(InviteOffer[playerid]));
                            	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                            	format(string, sizeof(string), "   %s aceptó la invitación para unirse a %s.", GetPlayerNameEx(playerid),fINFO[InviteFamily[playerid]][FamilyName]);
                            	SendClientMessageEx(InviteOffer[playerid], COLOR_LIGHTBLUE, string);
               	             	SendClientMessageEx(playerid, COLOR_WHITE, "Usa (/f) para hablar por el chat de familias. /ayuda familia");
    	                        InviteOffer[playerid] = 999;
    	                        InviteFaction[playerid] = 0;
    	                        InviteFamily[playerid] = 255;
    	                    }
    	                }
    	            }
    	        }
    	        else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Nadie te ha invitado a unirte a una familia.");
	        }
	        else if(strcmp(params,"fix",true) == 0)
			{
    	        if(RepairOffer[playerid] < 999){
        	        if(GetPlayerCash(playerid) > RepairPrice[playerid]){
            	        if(IsPlayerInAnyVehicle(playerid)){
                	        if(IsPlayerConnected(RepairOffer[playerid])){
                	            RepairCar[playerid] = GetPlayerVehicleID(playerid);

                	            RepairVehicle(RepairCar[playerid]);
                	            SetVehicleHealth(RepairCar[playerid], 1000.0);
	                            GivePlayerCash(RepairOffer[playerid], RepairPrice[playerid]);
	                            GivePlayerCash(playerid, -RepairPrice[playerid]);
	                            new ip[32], ipex[32];
	                            GetPlayerIp(playerid, ip, sizeof(ip));
	                            GetPlayerIp(RepairOffer[playerid], ipex, sizeof(ipex));
	                            format(string, sizeof(string), "%s(IP:%s) has repaired the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RepairOffer[playerid]), ipex, RepairPrice[playerid]);
	                            Log("logs/pay.log", string);
	                            format(string, sizeof(string), "* %s repara el vehiculo de %s.", GetPlayerNameEx(RepairOffer[playerid]), GetPlayerNameEx(playerid));
	                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                            format(string, sizeof(string), "* Tu coche fue reparado por $%d, por el mecánico %s.",RepairPrice[playerid],GetPlayerNameEx(RepairOffer[playerid]));
	                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);

	                            format(string, sizeof(string), "* Reparaste el coche de %s, sumaste $%d!",GetPlayerNameEx(playerid),RepairPrice[playerid]);
	                            SendClientMessageEx(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
	                            RepairOffer[playerid] = 999;
	                            RepairPrice[playerid] = 0;
	                            return 1;
	                        }
	                        return 1;
	                    }
	                    return 1;
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero para pagar esto.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Nadie te ha ofrecido reparar tu vehiculo.");
	        }
		    else if(strcmp(params, "saludo",true) == 0){
	        	new Count;
		        foreach(Player, i){
	               	if(GetPVarInt(i, "shrequest") == playerid){
                    	new
                        	Float: ppFloats[3];

                    	GetPlayerPos(i, ppFloats[0], ppFloats[1], ppFloats[2]);

                    	if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2])){
     						Count++;
                   	    	SendClientMessageEx(playerid, COLOR_WHITE, "Estás demasiado lejos. No puedes aceptar el saludo ahora.");
                    	}
                    	else
						{
                        	switch(GetPVarInt(i, "shstyle"))
							{
                            	case 1:
                            	{
                            	    Count++;
                            	    PlayerFacePlayer( playerid, i );
                            	    ApplyAnimation( playerid, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000,1);
                            	    ApplyAnimation( i, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000,1);
                            	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	    format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	    DeletePVar(i, "shstyle");
                            	}
                           	 	case 2:
                            	{
                            	    Count++;
                            	    PlayerFacePlayer( playerid, i );
                            	    ApplyAnimation( playerid, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000,1);
                            	    ApplyAnimation( i, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000,1);
                            	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	    format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	    DeletePVar(i, "shstyle");
                            	}
                            	case 3:
                            	{
                                	Count++;
                                	PlayerFacePlayer( playerid, i );
                                	ApplyAnimation( playerid, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                                	ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                                	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                                	format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                	DeletePVar(i, "shstyle");
                            	}
                            	case 4:
                            	{
                                	Count++;
                                	PlayerFacePlayer( playerid, i );
                                	ApplyAnimation( playerid, "GANGS", "hndshkcb", 4.0, 1, 1, 1, 0, 1000,1);
                                	ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                                	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                                	format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                	DeletePVar(i, "shstyle");
                            	}
                            	case 5:
                            	{
                           	    	Count++;
                            	   	PlayerFacePlayer( playerid, i );
                            	    ApplyAnimation( playerid, "GANGS", "hndshkda", 4.0, 1, 1, 1, 0, 1000,1);
                            	    ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                            	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	    format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	    DeletePVar(i, "shstyle");
                            	}
                            	case 6:
                            	{
                            	    Count++;
                            	    PlayerFacePlayer( playerid, i );
                            	    ApplyAnimation( playerid, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600,1);
                            	    ApplyAnimation( i, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600,1);
                            	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	    format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	    DeletePVar(i, "shstyle");
                            	}
                            	case 7:
                            	{
                            	    Count++;
                            	    PlayerFacePlayer( playerid, i );
                            	    ApplyAnimation( playerid, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250,1);
                            	    ApplyAnimation( i, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250,1);
                            	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	    format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	    DeletePVar(i, "shstyle");
                            	}
                            	case 8:
                            	{
                                	Count++;
                                	PlayerFacePlayer( playerid, i );
                                	ApplyAnimation( playerid, "GANGS", "prtial_hndshk_biz_01", 3.7, 1, 1, 1, 0, 2200,1);
                                	ApplyAnimation( i, "GANGS", "prtial_hndshk_biz_01", 3.5, 1, 1, 1, 0, 2200,1);
                                	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                                	format(string, sizeof(string), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                	DeletePVar(i, "shstyle");
                            	}
                        	}
                    	}
                	}
            	}
        	    if(Count == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha saludado.");
    	        return 1;
	        }
	        else if(strcmp(params,"entrevista",true) == 0)
			{
	            if(LiveOffer[playerid] < 999)
				{
	                if(IsPlayerConnected(LiveOffer[playerid]))
					{
	                    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
	                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Estarás congelado hasta que termine la entrevista.");
	                        TalkingLive[playerid] = LiveOffer[playerid];
	                        TalkingLive[LiveOffer[playerid]] = playerid;
	                        LiveOffer[playerid] = 999;
	                        return 1;
	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "Estás lejos del reportero.");
	                }
	                return 1;
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha invitado a una entrevista.");
	        }
	        else if(strcmp(params,"recarga",true) == 0){
    	        if(RefillOffer[playerid] < 999){
        	        if(GetPlayerCash(playerid) > RefillPrice[playerid]){
            	        if(IsPlayerInAnyVehicle(playerid)){
                	        if(IsPlayerConnected(RefillOffer[playerid])){
                            	new vehicleid = GetPlayerVehicleID(playerid);
                            	VehicleFuel[vehicleid] = 200;
                            	if(VehicleFuel[vehicleid] > 200) VehicleFuel[vehicleid] = 200;
                            	GivePlayerCash(RefillOffer[playerid], RefillPrice[playerid]);
                            	GivePlayerCash(playerid, -RefillPrice[playerid]);
                            	new ip[32], ipex[32];
                            	GetPlayerIp(playerid, ip, sizeof(ip));
                            	GetPlayerIp(RefillOffer[playerid], ipex, sizeof(ipex));
                            	format(string, sizeof(string), "%s(IP:%s) has refilled the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RefillOffer[playerid]), ipex, RefillPrice[playerid]);
                            	Log("logs/pay.log", string);

                            	format(string, sizeof(string), "* %s llenó el tanque del vehículo de %s.", GetPlayerNameEx(RefillOffer[playerid]), GetPlayerNameEx(playerid));
                            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

                            	format(string, sizeof(string), "* Tu vehiculo fue llenado por $%d por el mecánico %s.",RefillPrice[playerid],GetPlayerNameEx(RefillOffer[playerid]));
                            	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);

                            	format(string, sizeof(string), "* Llenaste el tanque del vehículo de %s por $%d, lo sumaste al bolsillo!", GetPlayerNameEx(playerid),RefillPrice[playerid]);
                            	SendClientMessageEx(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
	                            RefillOffer[playerid] = 999;
	                            RefillPrice[playerid] = 0;
	                            return 1;
	                        }
	                        return 1;
	                    }
	                    return 1;
	                }
	                else return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido llenar el tanque de tu coche.");
			}
        	else if(strcmp(params,"medico",true) == 0) {
            	if(Info[playerid][pMember] == 4 || Info[playerid][pLeader] == 4){
                	if(MedicCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ya aceptaste una llamada.");
                	if(GetPVarInt(playerid, "Packages") >= 1 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1){
                    	SendClientMessageEx(playerid, COLOR_WHITE, "Asegurate de que no hay ningún checkpoint activado en este momento.");
                    	return 1;
                	}
                	if(MedicCall < 999){
                    	if(IsPlayerConnected(MedicCall))
						{
                        	format(string, sizeof(string), "* Aceptaste una llamada de %s",GetPlayerNameEx(MedicCall));
                        	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                        	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Después de 45 segundos en checkpoint desaparecerá.");
                        	format(string, sizeof(string), "* Médico %s aceptó tu llamada espera en tu actual posición.",GetPlayerNameEx(playerid));
                        	SendClientMessageEx(MedicCall, COLOR_LIGHTBLUE, string);
                        	new Float:X,Float:Y,Float:Z;
                        	GetPlayerPos(MedicCall, X, Y, Z);
                        	SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                        	new zone[MAX_ZONE_NAME];
                        	GetPlayer3DZone(MedicCall, zone, sizeof(zone));
                        	format(string, sizeof(string), "{FF8000}[INDICACION]:{FFFFFF} %s fue localizado en %s", GetPlayerNameEx(MedicCall), zone);
                        	SendClientMessageEx(playerid, COLOR_WHITE, string);
                        	MedicCallTime[playerid] = 1;
                        	MedicAccepted[playerid] = MedicCall;
                        	MedicCall = 999;
                        	return 1;
                    	}
                    	return 1;
                	}
                	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie a llamado un médico.");
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No eres un médico.");
        	}
	        if(strcmp(params,"casa",true) == 0){
	            if(HouseOffer[playerid] < 999){
	                if(IsPlayerConnected(HouseOffer[playerid])){
	                    if(Info[HouseOffer[playerid]][pPhousekey] == INVALID_HOUSE_ID && Info[HouseOffer[playerid]][pPhousekey2] == INVALID_HOUSE_ID){
	                        SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene ninguna casa.");
	                        return 1;
	                    }
	                    if(GetPlayerCash(playerid) > HousePrice[playerid]){

	                        new house;
	                        if(House[playerid] == 1) house = Info[HouseOffer[playerid]][pPhousekey];
	                        else if(House[playerid] == 2) house = Info[HouseOffer[playerid]][pPhousekey2];
	                        else return SendClientMessageEx(playerid, COLOR_RED, "{FFFF00}[ERROR]:{FFFFFF} Casa no especificada.");
	                        ClearHouse(house);
	                        HouseInfo[house][hLock] = 1;
	                        format( HouseInfo[house][hOwner], 128, "Nobody" );
	                        sendername = GetPlayerNameEx(HouseOffer[playerid]);
	                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                        format(string, sizeof(string), "~w~Felicitaciones~n~ Has vendido tu propiedad por ~n~~g~$%d", HousePrice[playerid]);
	                        GameTextForPlayer(HouseOffer[playerid], string, 4000, 3);
	                        if(House[playerid] == 1) Info[HouseOffer[playerid]][pPhousekey] = INVALID_HOUSE_ID;
	                        else Info[HouseOffer[playerid]][pPhousekey2] = INVALID_HOUSE_ID;
	                        SaveHouses();
	                        OnPlayerUpdate(HouseOffer[playerid]);
	                        DestroyDynamicPickup(HouseInfo[house][hPickupID]);
	                        HouseInfo[house][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
	                        GivePlayerCash(HouseOffer[playerid],HousePrice[playerid]);

	                        Info[playerid][pPhousekey] = house;
	                        HouseInfo[house][hOwned] = 1;
	                        GetPlayerName(playerid, sendername, sizeof(sendername));
	                        strmid(HouseInfo[house][hOwner], sendername, 0, strlen(sendername), 255);
	                        GivePlayerCash(playerid,-HousePrice[playerid]);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones por tu nueva compra.");
	                        SendClientMessageEx(playerid, COLOR_WHITE, "Usa /ayuda para ver los comandos disponibles.");
	                        SaveHouses();
	                        OnPlayerUpdate(playerid);
	                        DestroyDynamicPickup(HouseInfo[house][hPickupID]);
	                        HouseInfo[house][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
	                        format(string, sizeof(string), "{FFFFFF}Propiedad Privada:\n{008EC1}%s\n{FFFFFF}Nivel: {008EC1}%d\n{FFFFFF}ID: {008EC1}%d",HouseInfo[house][hOwner],HouseInfo[house][hLevel],house);
	                        UpdateDynamic3DTextLabelText(HouseInfo[house][hTextID], -1, string);

	                        new ip[32], ipex[32];
	                        GetPlayerIp(HouseOffer[playerid],ip,sizeof(ip));
	                        GetPlayerIp(playerid,ipex,sizeof(ipex));
	                        format(string,sizeof(string),"%s (IP: %s) has sold their house (ID %d) to %s (IP: %s) for $%d.",GetPlayerNameEx(HouseOffer[playerid]),ip,house,GetPlayerNameEx(playerid),ipex,HousePrice[playerid]);
	                        Log("logs/house.log", string);

	                        HouseOffer[playerid] = 999;
	                        HousePrice[playerid] = 0;
	                        House[playerid] = 0;
	                    }
	                    else{
	                        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes pagar esta casa.");
	                        HouseOffer[playerid] = 999;
	                        HousePrice[playerid] = 0;
	                        House[playerid] = 0;
	                        return 1;
	                    }
	                }
	                return 1;
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te a ofrecido una casa.");
	        }
	        else if(strcmp(params,"mecanico",true) == 0){
	            if(Team_Mecanicos(playerid)){
				if(MechanicCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ya aceptaste una llamada.");
	            if(GetPVarInt(playerid, "Packages") >= 1 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor primero termina de llegar al otro checkpoint (Estás en una llamada o algo que activó un marcador rojo.");
	            if(MechanicCall < 999)
				{
	                if(IsPlayerConnected(MechanicCall))
					{
	                    if(playerid == MechanicCall) return 1;
	                    format(string, sizeof(string), "* Aceptaste la llamada de %s, tienes 60 segundos para ir allá.",GetPlayerNameEx(MechanicCall));
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Después de 60 Segundos el marcador rojo desaparecerá.");
	                    format(string, sizeof(string), "* Mecánico %s aceptó tu llamada por favor, espera en tu posición actual.",GetPlayerNameEx(playerid));
	                    SendClientMessageEx(MechanicCall, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "** %s aceptó la llamada reciente de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(MechanicCall));
						SendFamilyMessage(6, TEAM_AZTECAS_COLOR, string);
						new Float:X,Float:Y,Float:Z;
	                    GetPlayerPos(MechanicCall, X, Y, Z);
	                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
	                    GameTextForPlayer(playerid, "~r~Ve al Marcador rojo", 5000, 1);
		                MechanicCallTime[playerid] = 1;
                    	MechanicCall = 999;
                    	return 1;
                	}
                	return 1;
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie a llamado un mecanico.");
            	}
        	}
	        else if(strcmp(params,"taxi",true) == 0){
	            if(TransportDuty[playerid] != 1) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en servicio.");
	            if(TaxiCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ya aceptaste una llamada.");
	            if(TaxiCall < 999){
	                if(IsPlayerConnected(TaxiCall)){
	                    format(string, sizeof(string), "* Aceptaste la llamada de %s, puedes ir al marcador rojo para recogerlo.",GetPlayerNameEx(TaxiCall));
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                    format(string, sizeof(string), "* Taxista %s aceptó tu llamada; por favor espera en tu posición actual.",GetPlayerNameEx(playerid));
	                    SendClientMessageEx(TaxiCall, COLOR_LIGHTBLUE, string);
	                    GameTextForPlayer(playerid, "~n~~r~Ve al CheckPoint.", 5000, 1);
	                    new Float:X,Float:Y,Float:Z;
	                    GetPlayerPos(TaxiCall, X, Y, Z);
	                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						TaxiCallTime[playerid] = 1;
	                    TaxiAccepted[playerid] = TaxiCall;
	                    TaxiCall = 999;
	                }
	                return 1;
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie ha llamado a un taxista.");
	        }
			if(strcmp(params,"multa",true) == 0){
			    if(TicketOffer[playerid] == 999) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Nadie te multado.");
			    format(string, sizeof(string), "* %s paga una multa", GetPlayerNameEx(playerid));
   				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
   				format(string, sizeof(string), " %s pagó una multa de %d$.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
   				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
   				SendClientMessageEx(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
   				Bought(playerid, TicketMoney[playerid]);
   				Tax += TicketMoney[playerid];
   				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
			}
	        else if(strcmp(params,"matrimonio",true) == 0) {
	            if(ProposeOffer[playerid] < 999) {
	                if(IsPlayerConnected(ProposeOffer[playerid])) {
	                    if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) {
	                        if(MarryWitness[ProposeOffer[playerid]] == 999) return SendClientMessageEx(playerid, COLOR_WHITE, "El proponente no tiene un testigo de matrimonio!");
	                        if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]])) {
	                            if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) {
	                                if(!IsPlayerInRangeOfPoint(playerid, 1.0, 1963.9612, -369.1851, 1093.7289))
									{
    	                                format(string, sizeof(string), "* Aceptaste la petición de matrimonio a %s.", GetPlayerNameEx(ProposeOffer[playerid]));
	    	                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
       	                             	format(string, sizeof(string), "* %s ha aceptado la solicitud de ser tu esposa", GetPlayerNameEx(playerid));
                                    	SendClientMessageEx(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
                                    	format(string, sizeof(string), "Sacerdote: %s, aceptas a %s como tu marido por siempre? (Escribe 'si', que otro caracter arruinará el matrimonio.)", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposeOffer[playerid]));
                                    	SendClientMessageEx(playerid, COLOR_WHITE, string);
                                    	MarriageCeremoney[playerid] = 1;
                                    	ProposedTo[ProposeOffer[playerid]] = playerid;
                                    	GotProposedBy[playerid] = ProposeOffer[playerid];
                                    	MarryWitness[ProposeOffer[playerid]] = 999;
                                    	ProposeOffer[playerid] = 999;
                                    	return 1;
                                	}
                                	else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás en la iglesia.");
                            	}
                            	else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El testigo del matrimonio no está cerca de su proponente!");
                        	}
                        	return 1;
                    	}
                    	else return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador que propuso no está cerca de ti!");
                	}
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha propuesto matrimonio!");
        	}
        	if(strcmp(params,"coche",true) == 0) {
            	if(VehicleOffer[playerid] < 999) {
                	if(IsPlayerConnected(VehicleOffer[playerid])) {
                    	if(GetPlayerCash(playerid) > VehiclePrice[playerid]) {
                        	if(IsPlayerInVehicle(VehicleOffer[playerid], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]))
							{
                            	if(!ProxDetectorS(8.0, VehicleOffer[playerid], playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás cerca del que te va a vender");
                            	new playervehicleid = GetPlayerFreeVehicleId(playerid);
                            	new carsamount = VehicleCount(playerid);
                            	if(Info[playerid][pVIP] == 0 && carsamount >= 3) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, usuarios normales sólo pueden tener 2 coches.");
                            	if(Info[playerid][pVIP] == 1 && carsamount >= 5) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, BVIP Sólo puede tener 4 coches.");
                            	if(Info[playerid][pVIP] == 2 && carsamount >= 6) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, SVIP Sólo puede tener 5 coches.");
                            	if(Info[playerid][pVIP] == 3 && carsamount >= 9) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, GVIP Sólo puede tener 7 coches.");
                                if(Info[playerid][pVIP] == 4 && carsamount >= 12) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más coches, PVIP Sólo puede tener 8 coches.");
								if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes tener más autos.");
                            	new ip[32], ipex[32];
                            	GetPlayerIp(playerid, ip, sizeof(ip));
                            	GetPlayerIp(VehicleOffer[playerid], ipex, sizeof(ipex));
                            	format(string, sizeof(string), "[CAR] %s (IP: %s) pagó $%d a %s por el %s (IP: %s)", GetPlayerNameEx(playerid), ip, VehiclePrice[playerid], GetPlayerNameEx(VehicleOffer[playerid]), GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), ipex);
                            	Log("logs/pay.log", string);
                            	GetPlayerName(VehicleOffer[playerid], giveplayer, sizeof(giveplayer));
                            	GetPlayerName(playerid, sendername, sizeof(sendername));
                            	format(string, sizeof(string), "* Has pagado por un %s, $%d, de %s. (Usa /ayuda coche para más información)", GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), VehiclePrice[playerid],giveplayer);
                            	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                            	format(string, sizeof(string), "* Vendiste tu %s a %s por $%d.",GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), sendername,VehiclePrice[playerid]);
                            	SendClientMessageEx(VehicleOffer[playerid], COLOR_LIGHTBLUE, string);
                            	GivePlayerCash( VehicleOffer[playerid], VehiclePrice[playerid] );
                            	GivePlayerCash(playerid, -VehiclePrice[playerid]);
                            	RemovePlayerFromVehicle(VehicleOffer[playerid]);
                            	new Float:slx, Float:sly, Float:slz;
                            	GetPlayerPos(VehicleOffer[playerid], slx, sly, slz);
                            	SetPlayerPos(VehicleOffer[playerid], slx, sly, slz+2);
                            	PlayerVehicleInfo[playerid][playervehicleid][pvId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle];
                                PlayerVehicleInfo[playerid][playervehicleid][pvVW] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW];
								PlayerVehicleInfo[playerid][playervehicleid][pvLock] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvLocked] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2];
                            	strmid(PlayerVehicleInfo[playerid][playervehicleid][pvAllowPlayer], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer], 0, strlen(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer]), 255);
                            	PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPark] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPrice];
                            	PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
                            	carsforplayer[playerid]++;
                            	for(new m = 0; m < MAX_MODS; m++){
                            	    PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m];
                            	}
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId] = 0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId] = 0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX] = 0.0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY] = 0.0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ] = 0.0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle] = 0.0;
                                PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW] = 0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock] = 0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked] = 0;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob] = -1;
                            	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1] = 0;
								PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvImpounded] = 0;
               	             	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2] = 0;
             	             	strmid(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer], "Nadie", 0, strlen("Nadie"), 255);
                	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId] = INVALID_PLAYER_ID;
                	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark] = 0;
                	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPrice] = 0;
                	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSpawned] = 0;
                	            carsforplayer[VehicleOffer[playerid]]++;
                	            for(new m = 0; m < MAX_MODS; m++) {
                	                PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m] = 0;
                	            }
                	            VehicleOffer[playerid] = 999;
                	            VehiclePrice[playerid] = 0;
                	            return 1;
                	        }
                	        else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El que te va a vender no está en el coche.");
                	    }
                	    else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar este coche!");
                	}
                	return 1;
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido un coche!");
        	}
			else if(strcmp(params,"crack",true) == 0){
	            if(CrackOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) > CrackPrice[playerid]){
	                    if(Info[playerid][pCrack] < 60){
	                        if(IsPlayerConnected(CrackOffer[playerid])){
	                            new ip[32], ipex[32];
	                            GetPlayerIp(playerid, ip, sizeof(ip));
	                            GetPlayerIp(CrackOffer[playerid], ipex, sizeof(ipex));
	                            format(string, sizeof(string), "[CRACK DEAL (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", CrackGram[playerid], GetPlayerNameEx(playerid), ip, CrackPrice[playerid], GetPlayerNameEx(CrackOffer[playerid]), ipex);
	                            Log("logs/pay.log", string);

	                            GivePlayerCash(playerid, -CrackPrice[playerid]);
	                            GivePlayerCash(CrackOffer[playerid], CrackPrice[playerid]);
	                            format(string, sizeof(string), "* Le compraste %d gramos por $%d al vendedor %s.",CrackGram[playerid],CrackPrice[playerid],GetPlayerNameEx(CrackOffer[playerid]));
	                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                            format(string, sizeof(string), "* %s ha comprado %d gramos, se ha añadido $%d a tu bolsillo.",GetPlayerNameEx(playerid),CrackGram[playerid],CrackPrice[playerid]);
	                            SendClientMessageEx(CrackOffer[playerid], COLOR_LIGHTBLUE, string);
	                            Info[playerid][pCrack] += CrackGram[playerid];
                                Info[CrackOffer[playerid]][pCrack] -= CrackGram[playerid];
	        					if(Info[CrackOffer[playerid]][pDobleExp] == 0)
								{
              						Info[CrackOffer[playerid]][pDrugsSkill]++;
								}
								else
								{
									Info[CrackOffer[playerid]][pDrugsSkill] += 2;
									SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Ganaste 2 puntos de habilidad por tener horas de doble experiencia.");
								}
            	                if(Info[CrackOffer[playerid]][pDrugsSkill] == 50)
            	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 2, puedes comprar más gramos y más barato."); }
            	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 100)
            	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 3, puedes comprar más gramos y más barato."); }
            	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 200)
            	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 4, puedes comprar más gramos y más barato."); }
            	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 400)
            	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 5, puedes comprar más gramos y más barato."); }
								CrackOffer[playerid] = 999;
	                            CrackPrice[playerid] = 0;
	                            CrackGram[playerid] = 0;
	                            return 1;
	                        }
	                        return 1;
	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "Estás muy cargado de droga.");
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar esa cantidad.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido droga.");
	        }
	        else if(strcmp(params,"hierba",true) == 0) {
	            if(PotOffer[playerid] < 999) {
	                if(GetPlayerCash(playerid) > PotPrice[playerid]) {
	                    if(Info[playerid][pPot] < 25) {
	                        if(IsPlayerConnected(PotOffer[playerid])) {
								if(Info[PotOffer[playerid]][pPot] < PotGram[playerid])
								{
							    	SendClientMessageEx(playerid,COLOR_WHITE, "Ese jugador no tiene esa cantidad de hierba.");
							    	return 1;
								}
	                            new ip[32], ipex[32];
	                            GetPlayerIp(playerid, ip, sizeof(ip));
	                            GetPlayerIp(PotOffer[playerid], ipex, sizeof(ipex));
	                            format(string, sizeof(string), "[HIERBA (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", PotGram[playerid], GetPlayerNameEx(playerid), ip, PotPrice[playerid], GetPlayerNameEx(PotOffer[playerid]), ipex);
	                            Log("logs/pay.log", string);
            	                format(string, sizeof(string), "* Le Compraste %d gramos por $%d a %s.",PotGram[playerid],PotPrice[playerid],GetPlayerNameEx(PotOffer[playerid]));
            	                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
            	                format(string, sizeof(string), "* %s te compro %d gramos, sumaste $%d a tu bolsillo.",GetPlayerNameEx(playerid),PotGram[playerid],PotPrice[playerid]);
            	                SendClientMessageEx(PotOffer[playerid], COLOR_LIGHTBLUE, string);
            	                SetPVarInt(PotOffer[playerid], "Cash", GetPVarInt(PotOffer[playerid], "Cash")+PotPrice[playerid]);
								if(Info[PotOffer[playerid]][pDobleExp] == 0)
								{
              						Info[PotOffer[playerid]][pDrugsSkill]++;
								}
								else
								{
									Info[PotOffer[playerid]][pDrugsSkill] += 2;
									SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Ganaste 2 puntos de habilidad por tener horas de doble experiencia.");
								}
            	                GivePlayerCash(playerid, -PotPrice[playerid]);
            	                Info[playerid][pPot] += PotGram[playerid];
            	                Info[PotOffer[playerid]][pPot] -= PotGram[playerid];
            	                if(Info[PotOffer[playerid]][pDrugsSkill] == 50)
            	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 2, puedes comprar más gramos y más barato."); }
            	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 100)
            	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 3, puedes comprar más gramos y más barato."); }
            	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 200)
            	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 4, puedes comprar más gramos y más barato."); }
            	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 400)
            	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 5, puedes comprar más gramos y más barato."); }
            	                PotOffer[playerid] = 999;
            	                PotPrice[playerid] = 0;
            	                PotGram[playerid] = 0;
            	                return 1;
            	            }
            	            return 1;
            	        }
            	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Estás totalmente cargado con hierba, utilízala primero.");
            	    }
            	    else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar estos gramos de hierba.");
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido hierba.");
       	 	}
	        else if(strcmp(params,"chaleco",true) == 0) {
	            if(GuardOffer[playerid] < 999) {
	                if(GetPlayerCash(playerid) > GuardPrice[playerid]) {
	                    if(IsPlayerConnected(GuardOffer[playerid]))
						{
	                        if(ProxDetectorS(6.0, playerid, GuardOffer[playerid])) {
	                            new Float:armour;
	                            GetPlayerArmour(playerid, armour);
	                            if(armour >= 100)
								{
	                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ya tienes un chaleco.");
	                                return 1;
	                            }
	                            new ip[32], ipex[32];
	                            GetPlayerIp(playerid, ip, sizeof(ip));
	                            GetPlayerIp(GuardOffer[playerid], ipex, sizeof(ipex));
	                            format(string, sizeof(string), "[Chaleco] %s (IP:%s) has paid $%d to %s (IP:%s)", GetPlayerNameEx(playerid), ip, GuardPrice[playerid], GetPlayerNameEx(GuardOffer[playerid]), ipex);
	                            Log("logs/pay.log", string);
	                            SetPlayerArmour(playerid, 100);
	                            format(string, sizeof(string), "* Aceptaste la protección por $%d de %s.",GuardPrice[playerid],GetPlayerNameEx(GuardOffer[playerid]));
	                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                            format(string, sizeof(string), "* %s acepto tu protección, y te pagó $%d.",GetPlayerNameEx(playerid),GuardPrice[playerid]);
	                            SendClientMessageEx(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
	                            GivePlayerCash(GuardOffer[playerid], GuardPrice[playerid]);
	                            GivePlayerCash(playerid, -GuardPrice[playerid]);
	                            GuardOffer[playerid] = 999;
	                            GuardPrice[playerid] = 0;
	                            return 1;
	                        }
	                        else return SendClientMessageEx(playerid, COLOR_WHITE, "No estás cerca de la persona que te va a vender.");
	                    }
	                    return 1;
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar este Chaleco!");
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido Ningun Chaleco.");
	        }
	        else if(strcmp(params,"spray",true) == 0){
	            if(SprayOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) >= SprayPrice[playerid]){
	                    if(Info[playerid][pLevel] >= 1){
	                        if(IsPlayerConnected(SprayOffer[playerid])){
	                            new ip[32], ipex[32];
	                            GetPlayerIp(playerid, ip, sizeof(ip));
	                            GetPlayerIp(SprayOffer[playerid], ipex, sizeof(ipex));
	                            format(string, sizeof(string), "[SPRAY DEAL (%d HIERBAS)] %s (IP:%s) has paid $%d to %s (IP:%s)", SprayGram[playerid], GetPlayerNameEx(playerid), ip, SprayPrice[playerid], GetPlayerNameEx(SprayOffer[playerid]), ipex);
	                            Log("logs/pay.log", string);

	                            GivePlayerCash(playerid, -SprayPrice[playerid]);
	                            GivePlayerCash(SprayOffer[playerid], SprayPrice[playerid]);
	                            format(string, sizeof(string), "* Le compraste %d potes por $%d al vendedor %s. (Puedes usar /colorcoche y /pintarcoche para pintar tu coche.",SprayGram[playerid],SprayPrice[playerid],GetPlayerNameEx(SprayOffer[playerid]));
	                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                            format(string, sizeof(string), "* %s ha comprado %d potes, se ha añadido $%d a tu bolsillo.",GetPlayerNameEx(playerid),SprayGram[playerid],SprayPrice[playerid]);
	                            SendClientMessageEx(SprayOffer[playerid], COLOR_LIGHTBLUE, string);
	                            Info[playerid][pSpraycan] += SprayGram[playerid];
								SprayOffer[playerid] = 999;
	                            SprayPrice[playerid] = 0;
	                            SprayGram[playerid] = 0;
	                            return 1;
	                        }
	                        return 1;
	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto.");
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pagar esa cantidad.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido sprays.");
	        }
			else if(strcmp(params, "arma", true) == 0) {

				new
					playerOffering = GetPVarInt(playerid,"gunID"),
					weaponOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"gun"),
					slotOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"slot"),
					wstring[128];

		   		if(weaponOffering != 0 && slotOffering != 0) {
					if(ProxDetectorS(6.0, playerid, playerOffering) && !IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(playerOffering)) {
						if(Info[playerOffering][pEstado]!=0) {
							return SendClientMessage(playerid, COLOR_WHITE, "El jugador que quiere venderte está tazeado, esposado o congelado.");
						}
						else if(Info[playerid][pEstado]!=0) {
							return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto mientras estas tazeado, esposado o congelado.");
						}
						else {
							RemovePlayerWeapon(playerOffering, weaponOffering);
							GivePlayerValidWeapon(playerid, weaponOffering);
							format(wstring, sizeof(wstring), "Aceptas el %s de %s.", WeaponNames[weaponOffering], GetPlayerNameEx(playerOffering));
							SendClientMessage(playerid, COLOR_WHITE, wstring);
							format(wstring, sizeof(wstring), "%s aceptó tu %s que le ofreciste.", GetPlayerNameEx(playerid), WeaponNames[weaponOffering]);
							SendClientMessage(playerOffering, COLOR_WHITE, wstring);
							format(wstring, sizeof(wstring), "* %s le da su %s a %s.", GetPlayerNameEx(playerOffering), WeaponNames[weaponOffering], GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, wstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							DeletePVar(playerOffering,"gun");
							DeletePVar(playerid,"gunID");
							DeletePVar(playerOffering,"slot");
						}
			    	}
			    	else SendClientMessage(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Estás muy lejos de la persona o está en un vehículo.");
			    }
		    	else SendClientMessage(playerid, COLOR_WHITE, "Nadie te ha ofrecido un arma.");
			}
            else if(strcmp(params,"objeto",true) == 0)
			{
			    if(CraftOffer[playerid] < 999)
				{
					if(IsPlayerConnected(CraftOffer[playerid]))
					{
					    if (ProxDetectorS(5.0, playerid, CraftOffer[playerid]))
					    {
                        	new weaponname[50];
                        	format(weaponname, 50, "%s", CraftName[playerid]);
                        	switch(CraftId[playerid])
							{
								case 1:
								{
									Info[playerid][pScrewdriver]++;
									return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/creararma");
								}
								case 2:
								{
									Info[playerid][pSurveillance]++;
									return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/ponercam /quitarcam /vercam");
								}
								case 3:
								{
									Info[playerid][pFirstaid]++;
									return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/hpsave");
								}
								case 4:
								{
									return GivePlayerValidWeapon(playerid, 46);
								}
							}
                        	Info[CraftOffer[playerid]][pMats] -= CraftMats[playerid];
                        	Info[CraftOffer[playerid]][pArmsSkill]++;
                        	format(string, sizeof(string), "Le diste a %s una %s.", GetPlayerNameEx(playerid),weaponname);
                        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        	SendClientMessageEx(CraftOffer[playerid], COLOR_GRAD1, string);
                        	format(string, sizeof(string), "Recibiste una %s de %s.", weaponname, GetPlayerNameEx(CraftOffer[playerid]));
                        	SendClientMessageEx(playerid, COLOR_GRAD1, string);
                        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        	format(string, sizeof(string), "* %s crea algo de materiales, y se lo da a %s.", GetPlayerNameEx(CraftOffer[playerid]), GetPlayerNameEx(playerid));
                        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	CraftOffer[playerid] = 999;
                        	CraftId[playerid] = 0;
                        	CraftMats[playerid] = 0;
					    }
                   		else return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar cerca de la persona para aceptar el objeto.");
					}
					return 1;
				}
				return 1;
			}
	        else if(strcmp(params,"testigo",true) == 0) {
	            if(MarryWitnessOffer[playerid] < 999) {
	                if(IsPlayerConnected(MarryWitnessOffer[playerid])) {
	                    if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])){
	                        format(string, sizeof(string), "* Aceptaste la solicitud de %s, para ser tu testigo de matrimonio.", GetPlayerNameEx(MarryWitnessOffer[playerid]));
	                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                        format(string, sizeof(string), "* %s aceptó tu solicitud para ser tu testigo de matrimonio.", GetPlayerNameEx(playerid));
	                        SendClientMessageEx(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
	                        MarryWitness[MarryWitnessOffer[playerid]] = playerid;
	                        MarryWitnessOffer[playerid] = 999;
	                        return 1;
	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador que te ha pedido que seas su testigo de matrimonio no está cerca de ti.");
	                }
	                return 1;
    	        }
    	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te pidió ser testigo de matrimonio.");
    	    }
	        else if(strcmp(params,"divorcio",true) == 0){
	            if(DivorceOffer[playerid] < 999){
	                if(IsPlayerConnected(DivorceOffer[playerid])){
	                    if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid])){
	                        format(string, sizeof(string), "* Firmaste los papeles del divorcio de %s, ahora estás solo(a) de nuevo.", GetPlayerNameEx(DivorceOffer[playerid]));
	                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	                        format(string, sizeof(string), "* %s firmó los papeles del divorcio, ahora estás solo(a) de nuevo.", GetPlayerNameEx(playerid));
	                        SendClientMessageEx(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
	                        ClearMarriage(playerid);
	                        ClearMarriage(DivorceOffer[playerid]);
	                        Info[playerid][pPhousekey] = 999;
	                        return 1;
	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador que te propuso el divorcio no está cerca tuyo.");
                	}
                	return 1;
            	}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te propuso el divorcio.");
        	}
			else if(strcmp(params,"materiales",true) == 0){
	            if(MatsOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) >= MatsPrice[playerid]){
						if(IsPlayerConnected(MatsOffer[playerid])){
							if(Info[MatsOffer[playerid]][pMats] < MatsAmount[playerid]) return SendClientMessageEx(playerid,COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tiene los materiales suficientes.");

	         				format(string, sizeof(string), "* Compraste %d materiales por $%d, de  %s.", MatsAmount[playerid], MatsPrice[playerid], GetPlayerNameEx(MatsOffer[playerid]));
	            			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	              			format(string, sizeof(string), "* %s has vendido %d materiales, sumaste $%d a tu bolsillo.", GetPlayerNameEx(playerid), MatsAmount[playerid], MatsPrice[playerid]);
	                		SendClientMessageEx(MatsOffer[playerid], COLOR_LIGHTBLUE, string);

	                  		GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
							GivePlayerCash(playerid, -MatsPrice[playerid]);
	                    	Info[playerid][pMats] += MatsAmount[playerid];
	                    	Info[MatsOffer[playerid]][pMats] -= MatsAmount[playerid];

	                        new ip[32], ipex[32];
	                        GetPlayerIp(playerid, ip, sizeof(ip));
	                        GetPlayerIp(MatsOffer[playerid], ipex, sizeof(ipex));
	                        format(string, sizeof(string), "[MATS DEAL] %s(IP:%s) pagó %d materiales de %s(IP:%s)", GetPlayerNameEx(playerid), ip, MatsAmount[playerid], GetPlayerNameEx(MatsOffer[playerid]), ipex);
	                        Log("logs/pay.log", string);

                            SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
	                    	MatsOffer[playerid] = 999;
	                    	MatsPrice[playerid] = 0;
	                    	MatsAmount[playerid] = 0;
	                    }
	                }
	                else return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente.");
				}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido materiales.");
			}
			else if(strcmp(params,"fichasvip",true) == 0){
	            if(FOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) >= FPrice[playerid]){
						if(IsPlayerConnected(FOffer[playerid])){
							if(Info[FOffer[playerid]][pVTokens] < FAmount[playerid]) return SendClientMessageEx(playerid,COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tiene las fichas suficientes.");

	         				format(string, sizeof(string), "* Compraste %d fichas VIP por $%d, de %s.", FAmount[playerid], FPrice[playerid], GetPlayerNameEx(FOffer[playerid]));
	            			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	              			format(string, sizeof(string), "* %s has vendido %d fichas VIP, ganaste $%d de dinero.", GetPlayerNameEx(playerid), FAmount[playerid], FPrice[playerid]);
	                		SendClientMessageEx(FOffer[playerid], COLOR_LIGHTBLUE, string);

	                  		GivePlayerCash(FOffer[playerid], FPrice[playerid]);
							GivePlayerCash(playerid, -FPrice[playerid]);
	                    	Info[playerid][pVTokens] += FAmount[playerid];
                            Info[FOffer[playerid]][pVTokens] -= FAmount[playerid];
	                    	FOffer[playerid] = 999;
	                    	FPrice[playerid] = 0;
	                    	FAmount[playerid] = 0;
	                    }
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente.");
				}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido fichas del Gold Gift.");
			}
			else if(strcmp(params,"vip",true) == 0){
	            if(VIPOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) >= VIPPrice[playerid]){
						if(IsPlayerConnected(VIPOffer[playerid])){
							if(Info[VIPOffer[playerid]][pVIP] == 0) return SendClientMessageEx(playerid,COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese usuario no es Premium.");
    			    		new viptype[10];
			   			 	switch(Info[VIPOffer[playerid]][pVIP])
			    			{
			        			case 1: viptype = "Bronce";
			        			case 2: viptype = "Silver";
			        			case 3: viptype = "Gold";
			        			case 4: viptype = "Platinum";
			    			}
							format(string, sizeof(string), "* Compraste el VIP %s de %s por $%d.",viptype,GetPlayerNameEx(VIPOffer[playerid]),VIPPrice[playerid]);
	            			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	              			format(string, sizeof(string), "* %s le has vendido tu VIP %s y ganaste $%d de dinero.",GetPlayerNameEx(playerid),viptype,VIPPrice[playerid]);
	                		SendClientMessageEx(VIPOffer[playerid], COLOR_LIGHTBLUE, string);
	                        new ip[32], ipex[32];
	                        GetPlayerIp(playerid, ip, sizeof(ip));
	                        GetPlayerIp(VIPOffer[playerid], ipex, sizeof(ipex));
	                        format(string, sizeof(string), "[VIP DEAL] %s(IP:%s) pagó VIP %s por $%d de %s(IP:%s)", GetPlayerNameEx(playerid), ip, viptype, VIPPrice[playerid],GetPlayerNameEx(VIPOffer[playerid]), ipex);
	                        Log("logs/pay.log", string);
              		        new year, month,day;
    						getdate(year, month, day);
	                        format(string, sizeof(string), "[[COMPRA IG] VIP EXCHANGE] %s dejo de ser VIP %s, razón: compra a %s (%d/%d/%d)",GetPlayerNameEx(VIPOffer[playerid]),viptype,GetPlayerNameEx(playerid),year,month,day);
	                        Log("logs/setvip.log", string);

							new level = Info[VIPOffer[playerid]][pVIP],
                				dExpire = Info[VIPOffer[playerid]][pVIPDateD],
                				mExpire = Info[VIPOffer[playerid]][pVIPDateM];

	                  		GivePlayerCash(VIPOffer[playerid], VIPPrice[playerid]);
							GivePlayerCash(playerid, -VIPPrice[playerid]);
							// buyer
	                    	Info[playerid][pVIP] = level;
	                    	Info[playerid][pVIPDateM] = mExpire;
	                    	Info[playerid][pVIPDateD] = dExpire;
	                    	Info[playerid][pBuddyInvited] = 0;
	                    	Info[playerid][pTempVIP] = 0;
	                    	// Offer
	                    	Info[VIPOffer[playerid]][pVIP] = 0;
	                    	Info[VIPOffer[playerid]][pVIPDateM] = -1;
	                    	Info[VIPOffer[playerid]][pVIPDateD] = -1;

	                    	VIPOffer[playerid] = 999;
	                    	VIPPrice[playerid] = 0;

	                    }
	                    else return SendClientMessageEx(playerid, COLOR_WHITE, "La persona que te ofreció se desconectó.");
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente.");
				}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido fichas del Gold Gift.");
			}
			else if(strcmp(params,"fichasg",true) == 0){
	            if(GGOffer[playerid] < 999){
	                if(GetPlayerCash(playerid) >= GGPrice[playerid]){
						if(IsPlayerConnected(GGOffer[playerid])){
							if(Info[GGOffer[playerid]][pGTokens] < GGAmount[playerid]) return SendClientMessageEx(playerid,COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tiene las fichas suficientes.");

	         				format(string, sizeof(string), "* Compraste %d fichas del Gold Gift por $%d, de %s.", GGAmount[playerid], GGPrice[playerid], GetPlayerNameEx(GGOffer[playerid]));
	            			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	              			format(string, sizeof(string), "* %s has vendido %d fichas del Gold Gift, ganaste $%d de dinero.", GetPlayerNameEx(playerid), GGAmount[playerid], GGPrice[playerid]);
	                		SendClientMessageEx(GGOffer[playerid], COLOR_LIGHTBLUE, string);

	                  		GivePlayerCash(GGOffer[playerid], GGPrice[playerid]);
							GivePlayerCash(playerid, -GGPrice[playerid]);
	                    	Info[playerid][pGTokens] += GGAmount[playerid];
                            Info[GGOffer[playerid]][pGTokens] -= GGAmount[playerid];
	                    	GGOffer[playerid] = 999;
	                    	GGPrice[playerid] = 0;
	                    	GGAmount[playerid] = 0;
	                    }
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero suficiente.");
				}
            	else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha ofrecido fichas del Gold Gift.");
			}
        	else { return 1; }
    	}
   	 	return 1;
	}
    zcmd(cfumar, playerid, params[])
    {
    	if(Info[playerid][pCigarettes] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, 		"No tienes cigarros.");
	    else if(Info[playerid][pLighter] == 0) 	return SendClientMessageEx(playerid, COLOR_WHITE, 		"No tienes encendedor.");
	    else if(IsSmoking[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, 		"Ya estas fumando. Utiliza: /dfumar");
	    else
    	{
	        new randsmoke = random(6);
	        if(randsmoke < 5)
     	   {
				new string[128];
				Info[playerid][pCigarettes]--;
				IsSmoking[playerid] = 1;
	    		format(string, sizeof(string), "* %s saca un cigarro y lo enciende.", GetPlayerNameEx(playerid));
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				SendClientMessageEx(playerid, COLOR_WHITE, "Estás Fumando. Ahora puedes utilizar {A2DC35}/dfumar{FFFFFF} para dejar de fumar.");
	        }
	        else
    	    {
    			SendClientMessageEx(playerid, COLOR_WHITE, "Mucho viento, no lograste encender el cigarro.");
	        }
	    }
	    return 1;
	}
    zcmd(dfumar, playerid, params[])
	{
        if(IsSmoking[playerid] > 0)
		{
            new string[128];
        	IsSmoking[playerid] = 0;
         	format(string, sizeof(string), "* %s tira el cigarro al suelo y lo pisa.", GetPlayerNameEx(playerid));
         	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
          	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
          	ClearAnimations(playerid);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "No está fumando.");
        return 1;
    }
	//Toys
    zcmd(ctoys,playerid, params[])
    {
		new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
    	if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
    	{
        	if(businessVariables[businessID][bType] == 2)
        	{
        		ShowPlayerDialog(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido a la tienda de accesorios! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás","Normal", "VIP");
				return 1;
			}
		}
    	return 1;
	}
    zcmd(ayudatoys,playerid, params[])
    {
        SendClientMessageEx(playerid, COLOR_GENERAL,"{A2DC35}Ayuda - Accesorios (Toys)");
        SendClientMessageEx(playerid, COLOR_WHITE,"Para comprar un toy en la tienda usa: /ctoys");
        SendClientMessageEx(playerid, COLOR_WHITE,"Para ponerte y editar un toy usa: /toys");
        SendClientMessageEx(playerid, COLOR_WHITE,"Para ponerte todos tus toy usa: /ptoys");
        //SendClientMessageEx(playerid, COLOR_WHITE,"Para quitarte todos tus toy usa: /qtoys");
        SendClientMessageEx(playerid, COLOR_WHITE,"Para poner o quitar un determinado toy usa: /toy (0-9 slot)");
        return 1;
    }
	CMD:ayudacajafam(playerid, params[])
	{
	    SendClientMessageEx(playerid, COLOR_GENERAL,"{A2DC35}Ayuda - Caja Fuerte (Familia)");
		SendClientMessageEx(playerid, COLOR_WHITE, "C. Fuerte: /cfdepositar /cfretirar /fgarma /fsarma /cfbalance");
		return 1;
	}
	CMD:ayuda(playerid, params[]) return SafeDialogEx(playerid, MENUAYUDA, DIALOG_STYLE_LIST, "{008EC1}Ayuda","General\nFacción\nChat\nLider\nTelefono\nCasa\nCoche\nBanco\nPremium\nMatrimonio\nArmas\nNegocios\nFamilia\nTrabajo\nReanimador\nPuntos de Rol", "Ok", "Cancelar");
	CMD:admincasa(playerid, params[])
	{
		if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
	    if(Info[playerid][pAdminZC] >= 4000)
	    {
	    	SendClientMessageEx(playerid, COLOR_GENERAL,"{A2DC35}Ayuda - Comandos Administrativos Casa");
			SendClientMessageEx(playerid, COLOR_WHITE, "/gotohouse - /goinhouse - /casasiguiente - /editar - /editarcasa - /nombrecasa /staffvcasa");
   		}
		return 1;
	}
	CMD:adminnegocio(playerid, params[])
	{
    	#pragma unused params
    	if(Info[playerid][pAdminZC] >= 5000)
    	{
    		SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Comandos Administrativos Negocios");
			SendClientMessageEx(playerid, COLOR_WHITE, "/asellnegocio - /crearnegocio - /nprecio - /ntipo - /nstock - /gotonegocio");
		}
		return 1;
	}
	CMD:adminfam(playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
	    if(Info[playerid][pAdminZC] >= 4000 || Info[playerid][pGangModerator] == 1)
	    {
	    	SendClientMessageEx(playerid, COLOR_GENERAL,"{A2DC35}Ayuda - Comandos Administrativos Familia");
			SendClientMessageEx(playerid, COLOR_WHITE, "/fameditor /editarhqfam /familias /festado /fdepositar /fretirar /fgarma /fsarma");
			SendClientMessageEx(playerid, COLOR_WHITE, "/cfdepositar /cjretirar /ajustar /anombrerango /crearfam");
			SendClientMessageEx(playerid, COLOR_WHITE, "/borrarfam /crearautofam /borrarautofam /darliderfam /fseguro /fllaves");
   		}
		return 1;
	}
    zcmd(toys,playerid, params[])
    {
	    SafeDialogEx( playerid, TOYS, DIALOG_STYLE_LIST, "{008EC1}Toy Menu", "Poner/Quitar un toy\nEditar un toy\nEliminar un toy","OK", "Cancelar" );
	    return 1;
    }
    zcmd(ptoys,playerid, params[])
    {
	    SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste todos los toys.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ],
			PlayerToyInfo[playerid][x][ftscaleX], PlayerToyInfo[playerid][x][ftscaleY], PlayerToyInfo[playerid][x][ftscaleZ]);
	    }
	    return 1;
    }
    /*zcmd(qtoys,playerid, params[])
    {
        if(Info[playerid][pPusoEscudo] == 1) return Message(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
        if(Info[playerid][pPusoChaleco] == 1) return Message(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
        if(Info[playerid][pSacoBidon] == 1) return Message(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
	    SendClientMessageEx(playerid, COLOR_WHITE, "Te quitaste todos los toys.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    RemovePlayerAttachedObject(playerid, x);
        }
        return 1;
    }*/
    zcmd(sentadilla,playerid,params[])
	{
    	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
		AplicaAnim(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
		}
		return 1;
	}
    // Nombre Temporal Admin
	CMD:adminnombre(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /adminnombre (Nuevo Nombre)");
		if (Info[playerid][pAdminZC] >= 1)
		{
			if(GetPVarInt(playerid, "TempName") == 0)
			{
				if(!INI_Exist(params))
				{
				    format(string, sizeof(string), "[AdmCmdExe]: %s está temporalmente con el nombre de %s.",GetPlayerNameEx(playerid), params);
				    ABroadCast(COLOR_GENERAL, string, 2);
					format(string, sizeof(string), "Estás temporalmente con el nombre de {5ABAFF}%s{FFFFFF}.", params);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[NOTA]:{FFFFFF} No se guardarán ningún stat con este nombre.");
					SetPVarInt(playerid, "TempName", 1);
					new name[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					SetPVarString(playerid, "TempNameName", name);
					SetPlayerName(playerid, params);
					format(string, sizeof(string), "%s ha cambiado su nombre a {5ABAFF}%s{FFFFFF}.", name, params);
					Log("logs/changename.log", string);
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "Este nombre ya está registrado.");
			}
			else
			{
				new name[MAX_PLAYER_NAME];
				format(string, sizeof(string), "[AdmCmdExe]: %s volvió a usar su nombre anterior.",GetPlayerNameEx(playerid));
				ABroadCast(COLOR_GENERAL, string, 2);
				GetPVarString(playerid, "TempNameName", name, sizeof(name));
				format(string, sizeof(string), "Tu nombre a sido cambiado al anterior: {5ABAFF}%s{FFFFFF}.", name);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[NOTA]:{FFFFFF} Ahora tus stats se guardarán.");
				SetPVarInt(playerid, "TempName", 0);
				SetPlayerName(playerid, name);
			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
		return 1;
	}
	//Canales
	zcmd(togac, playerid, params[]){
        if(Info[playerid][pAdminZC] >= 2){
            if(!AdminChat[playerid]){
		        AdminChat[playerid] = 1;
		        SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} Canal de administración desactivado.");
		    }
		    else{
		        AdminChat[playerid] = 0;
		        SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} Canal de administración activado.");
		    }
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
    }
	zcmd(togpm, playerid, params[]){
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres administrador.");
		if (!HidePM[playerid]){
			HidePM[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ADM]:{FFFFFF} PMs Bloqueados.");
		}
		else if (HidePM[playerid]){
			HidePM[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ADM]:{FFFFFF} PMs Habilitados.");
		}
        return 1;
    }
    zcmd(togfam, playerid, params[]){
        if(!gFam[playerid]){
			gFam[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Chat de Facción desactivado.");
		}
		else{
			gFam[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Chat de Facción activado.");
		}
        return 1;
    }
    zcmd(tognews, playerid, params[]){
        if(!gNews[playerid]){
			gNews[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Chat de radio y anuncios desactivado.");
		}
		else{
			gNews[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Chat de radio y anuncios activado.");
		}
        return 1;
    }
	zcmd(togphone, playerid, params[]){
        if (!PhoneOnline[playerid]){
			PhoneOnline[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Teléfono apagado.");
		}
		else{
			PhoneOnline[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Teléfono encendido.");
		}
        return 1;
    }
	zcmd(tognewbie, playerid, params[]){
		if (!gOoc[playerid]){
			gOoc[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Desactivaste el chat de ayuda.");
		}
		else{
			gOoc[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Activaste el chat de ayuda.");
		}
		return 1;
	}
    zcmd(removegps, playerid, params[]){
		if(IsPlayerConnected(playerid)) DisablePlayerCheckpoint(playerid);
		return 1;
	}
	zcmd(saltartutorial, playerid, params[])
	{
    	if(TutStep[playerid] > 0)
    	{
  			//Tutorial_Inside(playerid);
			TutTime[playerid] = 13;
		}
		else SendClientMessageEx(playerid, -1, "No estás en el tutorial!");
		return 1;
	}
    zcmd(jetpack, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if (Info[playerid][pAdminZC] < 6) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(IsPlayerConnected(playerid))
        {
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        	JetPack[playerid] = 1;
		 	SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Has sacado un JetPack.");
        }
		return 1;
    }
	zcmd(eject, playerid, params[])
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new State = GetPlayerState(playerid), string[90], giveplayerid;
            if(State!=PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres conductor.");
            if(!sscanf(params, "d", giveplayerid))
            {
                if(IsPlayerConnected(giveplayerid))
				{
    				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No te puedes echar ati mismo.");
        			if(IsPlayerInAnyVehicle(giveplayerid))
			        {
						if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(giveplayerid))
						{
	      					format(string, sizeof(string), "* %s agarra fuertemente a %s y lo expulsa del vehículo", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    	    RemovePlayerFromVehicle(giveplayerid);
						} else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} El jugador no está en tu vehículo.");
					} else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} El jugador no está en un vehículo.");
				} else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
            } else SendClientMessageEx(playerid, COLOR_WHITE, "*Utiliza: /eject (ID)");
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en ningún vehículo!");
        return 1;
    }
    // Other's
    zcmd(tlc, playerid, params[])
    {
        if(Team_LSPD(playerid))
        {
        	if(pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
         	{
                SendClientMessageEx(playerid, 0xFF8080FF, " >** Estableciendo contacto**<");
	            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[GPS]:{FFFFFF} Servicio no Disponible.");
	        }
	        else SendClientMessageEx(playerid, COLOR_WHITE, "Error en la localizacion de la persona que llama.");
		}
	    else if(Team_SAMD(playerid))
        {
        	if(emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
         	{
	            SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[GPS]:{FFFFFF} Servicio no Disponible.");
	        } else SendClientMessageEx(playerid, COLOR_WHITE, "Error al localizar!");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
	zcmd(entrar, playerid, params[])
	{
	    if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
	    if(IsPlayerConnected(playerid))
		{
		    for(new i = 0; i < sizeof(DDoorsInfo); i++)
			{
	        	if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW])
				{
	            	if(DDoorsInfo[i][ddVIP] > 0 && Info[playerid][pVIP] < DDoorsInfo[i][ddVIP])
					{
	                	SendClientMessageEx(playerid, COLOR_WHITE, "No puedes entrar necesitas ser un mayor nivel de VIP.");
	                	return 1;
	            	}
	            	if(DDoorsInfo[i][ddFamily] > 0)
					{
	                	if(Info[playerid][pFMember] != DDoorsInfo[i][ddFamily]-1)
						{
	                    	SendClientMessageEx(playerid, COLOR_WHITE, "No puedes entrar, sólo para miembros de la familia.");
	    					return 1;
	    				}
	   	            }
		            if(DDoorsInfo[i][ddFaction] > 0)
					{
						if(DDoorsInfo[i][ddFaction] >= 1 && DDoorsInfo[i][ddFaction] <= 3)
						{
							if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes entrar, esta puerta está restringida. (Sólo Policías)");
						}
						else if(DDoorsInfo[i][ddFaction] < 32 && Info[playerid][pMember] != DDoorsInfo[i][ddFaction])
						{
							return	SendClientMessageEx(playerid, COLOR_WHITE, "Sólo ingreso a miembros de la facción.");
						}
		            }
		            if(DDoorsInfo[i][ddAdmin] > 0 && Info[playerid][pAdminZC] < DDoorsInfo[i][ddAdmin])
					{
		                return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes entrar, necesitas ser de más nivel administrativo.");
		            }

		            if(DDoorsInfo[i][ddWanted] > 0 && Info[playerid][pWantedLevel] != 0)
					{
		                return SendClientMessageEx(playerid, COLOR_WHITE, "Esta puerta esta restringida a personas con nivel de búsqueda.");
		            }

					if(DDoorsInfo[i][dLocked] == 1)
					{
					    return SendClientMessageEx(playerid, COLOR_WHITE, "Esta puerta está bloqueada.");
					}
            		SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
            		Info[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
            		Info[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
            		SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
            		if(DDoorsInfo[i][ddCustomInterior])
					{
            		   LoadObjects(playerid);
            		}
            		if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
            	    	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
            	    	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
            	    	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
            	    	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
            		}
            		else
					{
                		SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                		SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
                		SetCameraBehindPlayer(playerid);
            		}
            		if(DDoorsInfo[i][dMusic] == 0) return 1;
            		else
            		{
            		    switch(DDoorsInfo[i][dMusic])
            		    {
            		        case 1: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349", 1, 1, 1, 1, 0); // Reggeaton
                            case 2: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=860870", 1, 1, 1, 1, 0); // Electro
                            case 3: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200", 1, 1, 1, 1, 0); // Techno
                            case 4: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016", 1, 1, 1, 1, 0); // Hip hop
                            case 5: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366", 1, 1, 1, 1, 0); // Variada
                        }
                    }
					return 1;
        		}
		    }
		    for(new i = 0; i < sizeof(fINFO); i++)
			{
        		if (IsPlayerInRangeOfPoint(playerid,3.0,fINFO[i][FamilyEntrance][0], fINFO[i][FamilyEntrance][1], fINFO[i][FamilyEntrance][2]))
				{
    				LoadObjects(playerid);
	            	SetPlayerInterior(playerid,fINFO[i][FamilyInterior]);
            		Info[playerid][pInt] = fINFO[i][FamilyInterior];
            		Info[playerid][pVW] = fINFO[i][FamilyVirtualWorld];
            		SetPlayerVirtualWorld(playerid, fINFO[i][FamilyVirtualWorld]);
            		if(fINFO[i][FamilyCustomMap])
					{
                		LoadObjects(playerid);
            		}
            		Streamer_UpdateEx(playerid, fINFO[i][FamilyExit][0],fINFO[i][FamilyExit][1],fINFO[i][FamilyExit][2]);
            		SetPlayerPos(playerid,fINFO[i][FamilyExit][0],fINFO[i][FamilyExit][1],fINFO[i][FamilyExit][2]);
            		SetPlayerFacingAngle(playerid,fINFO[i][FamilyExit][3]);
        	    	return 1;
        		}
			}
			if (IsPlayerInRangeOfPoint(playerid,3,2281.1748,-1724.4528,13.2521)) //  GARAGE 1
			{
            	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                	SetVehiclePos(GetPlayerVehicleID(playerid),  2233.9280,-1758.3882,2031.3885);
                	SetVehicleZAngle(GetPlayerVehicleID(playerid),  11.4);
                	Streamer_Update(playerid);
                }
                else{
					SetPlayerPos(playerid, 2235.1851,-1763.5916,2032.9728);
					SetPlayerFacingAngle(playerid, 14.9);
					SetCameraBehindPlayer(playerid);
					LoadObjects(playerid);
				}
				return 1;
			}
			if (IsPlayerInRangeOfPoint(playerid,3,1242.2382,-1732.4800,13.2911)) //  GARAGE 2
			{

            	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                	SetVehiclePos(GetPlayerVehicleID(playerid),  1134.0381,-1591.4459,6602.5879);
                	SetVehicleZAngle(GetPlayerVehicleID(playerid),  176.3030);
                	Streamer_Update(playerid);
                }
                else{
					SetPlayerPos(playerid, 1134.0381,-1591.4459,6602.5879);
					SetPlayerFacingAngle(playerid, 14.9);
					SetCameraBehindPlayer(playerid);
					LoadObjects(playerid);
				}
				return 1;
			}
			if (IsPlayerInRangeOfPoint(playerid,3,853.3862,-1387.1884,13.7470)) //  GARAGE VIP
			{

				if(Info[playerid][pVIP] == 0) return GameTextForPlayer(playerid, "~r~No eres VIP", 2000, 4);
            	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
                	SetVehiclePos(GetPlayerVehicleID(playerid),  855.6053,-1412.6117,4202.1577);
                	SetVehicleZAngle(GetPlayerVehicleID(playerid),  NORTE);
                	Streamer_Update(playerid);
                }
                else{
					SetPlayerPos(playerid, 855.6053,-1412.6117,4202.1577);
					SetPlayerFacingAngle(playerid, NORTE);
					SetCameraBehindPlayer(playerid);
					LoadObjects(playerid);
				}
				return 1;
			}
		    for(new i = 0; i < sizeof(HouseInfo); i++){
        		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ])){
            		if(Info[playerid][pPhousekey] == i || Info[playerid][pPhousekey2] == i || HouseInfo[i][hLock] == 0 || Info[playerid][pRenting] == i){
				        LoadObjects(playerid);
                		SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
                		Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
                		Info[playerid][pVW] = i+6000;
                		SetPlayerVirtualWorld(playerid, i+6000);
                		if(HouseInfo[i][hCustomInterior] == 1){
                    		LoadObjects(playerid);
                		}
                		SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                		SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorA]);
                		SetCameraBehindPlayer(playerid);
                		GameTextForPlayer(playerid, "~w~Bienvenido", 5000, 1);
						Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
            		}
            		else
					{
                		GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
            		}
            		return 1;
            	}
        	}
    	}
		return 1;
	}
	zcmd(salir, playerid, params[])
	{
	    if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora.");
	    if(GetPVarInt(playerid, "IsInArena") == 1) {
	        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en la arena!");
	        return 1;
	    }
	    if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
    	for(new i = 0; i <  sizeof(DDoorsInfo); i++)
		{
        	if (IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
			{
            	SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
            	Info[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
            	SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
            	Info[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
            	if(DDoorsInfo[i][ddCustomExterior])
				{
					LoadObjects(playerid);
            	}
            	if(DDoorsInfo[i][dMusic] != 0) StopAudioStreamForPlayer(playerid);
            	if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
                	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
                	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
                	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
            	}
            	else
				{
                	SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                	SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
                	SetCameraBehindPlayer(playerid);
                	return 1;
            	}
        	}
    	}
    	for(new i = 0; i < sizeof(fINFO); i++)
		{
        	if (IsPlayerInRangeOfPoint(playerid,3.0,fINFO[i][FamilyExit][0], fINFO[i][FamilyExit][1], fINFO[i][FamilyExit][2]) && Info[playerid][pVW] == fINFO[i][FamilyVirtualWorld]) {
            	Info[playerid][pInt] = 0;
            	SetPlayerVirtualWorld(playerid, 0);
            	SetPlayerInterior(playerid,0);
            	Streamer_UpdateEx(playerid, fINFO[i][FamilyEntrance][0],fINFO[i][FamilyEntrance][1],fINFO[i][FamilyEntrance][2]);
            	SetPlayerPos(playerid,fINFO[i][FamilyEntrance][0],fINFO[i][FamilyEntrance][1],fINFO[i][FamilyEntrance][2]);
            	SetPlayerFacingAngle(playerid,fINFO[i][FamilyEntrance][3]);
            	return 1;
        	}
    	}
		if (IsPlayerInRangeOfPoint(playerid,8,2233.9280,-1758.3882,2031.3885)) //  GARAGE 1
		{
           	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
               	SetVehiclePos(GetPlayerVehicleID(playerid),  2281.1748,-1724.4528,13.2521);
               	SetVehicleZAngle(GetPlayerVehicleID(playerid),  179.93);
               	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 2280.5620,-1722.8878,13.5469);
				SetPlayerFacingAngle(playerid, 181);
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,8,1140.7430,-1592.1893,6602.4922)) //  GARAGE 1
		{
           	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
               	SetVehiclePos(GetPlayerVehicleID(playerid),  1242.2382,-1732.4800,13.2911);
               	SetVehicleZAngle(GetPlayerVehicleID(playerid),  359.47);
               	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 1241.9020,-1734.0985,13.5899);
				SetPlayerFacingAngle(playerid, 354.9746);
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,8,855.6053,-1412.6117,4202.1577)) //  GARAGE VIP
		{
           	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
               	SetVehiclePos(GetPlayerVehicleID(playerid),  853.3862,-1387.1884,13.7470);
               	SetVehicleZAngle(GetPlayerVehicleID(playerid),  182.4513);
               	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 853.3862,-1387.1884,13.7470);
				SetPlayerFacingAngle(playerid, 182.4513);
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}
	    for(new i = 0; i <  sizeof(HouseInfo); i++)
		{
	        if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && Info[playerid][pVW] == i+6000)
			{
				SetPlayerInterior(playerid,0);
	            Info[playerid][pInt] = 0;
	            if(HouseInfo[i][hCustomExterior])
				{
	                LoadObjects(i);
	            }
	            SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
	            SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorA]);
	            SetCameraBehindPlayer(playerid);
	            SetPlayerVirtualWorld(playerid, 0);
	            Info[playerid][pVW] = 0;
	            return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
	        }
	    }
    	return 1;
    }
	CMD:ip(playerid, params[]){
		if(Info[playerid][pAdminZC] >= 4000){
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ip (ip)");

			new string[128], IP[32];

			foreach(Player, i){
				GetPlayerIp(i, IP, sizeof(IP));
				if(strfind(IP, params, true) != -1){
					format(string, sizeof(string),
					 "Player: %s (ID: %d) | IP: %s",
					  GetPlayerNameEx(i),
					  i,
					  IP);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
			}
		}

		return 1;
	}
	zcmd(radio, playerid, params[])
	{
        if(OnDuty[playerid] == 0 && !Team_Judicial(playerid) && !Team_BomberosLS(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, " No estás en servicio.");
        if(!RadioOn[playerid])
		{
			RadioOn[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Prendiste tu radio");
		}
		else
		{
			RadioOn[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Apagaste tu radio");
		}
        return 1;
    }
    zcmd(emduty, playerid, params[])
    {
    if(Team_SAEM(playerid)){
		if(OnDuty[playerid] == 1){
			OnDuty[playerid] = 0;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora serás visto como fuera de servicio.");
		}
		else{
			OnDuty[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora serás visto como en servicio.");
		}
	}
	return 1;
}
	zcmd(gobduty, playerid, params[])
	{
        if(Gobierno(playerid))
		{
            if(OnDuty[playerid]== 0)
			{
  				OnDuty[playerid] = 1;
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estas en servicio.");
      		}
      		else
			{
        		OnDuty[playerid] = 0;
        		SetPlayerToTeamColor(playerid);
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora ya no estas en servicio.");
      		}
		}
        else SendClientMessageEx(playerid, -1, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
   	zcmd(mdduty, playerid, params[])
	{
        if(Team_SAMD(playerid))
		{
            if(OnDuty[playerid]== 0)
			{
  				OnDuty[playerid] = 1;
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estas en servicio.");
      		}
      		else
			{
        		OnDuty[playerid] = 0;
        		SetPlayerToTeamColor(playerid);
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora ya no estas en servicio.");
      		}
		}
        else SendClientMessageEx(playerid, -1, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
   	zcmd(sjduty, playerid, params[])
	{
        if(Team_Judicial(playerid))
		{
            if(OnDuty[playerid]== 0)
			{
  				OnDuty[playerid] = 1;
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estas en servicio.");
      		}
      		else
			{
        		OnDuty[playerid] = 0;
        		SetPlayerToTeamColor(playerid);
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estaras como fuera de servicio.");
      		}
		}
        else SendClientMessageEx(playerid, -1, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
    zcmd(bomduty, playerid, params[])
	{
        if(Team_BomberosLS(playerid))
		{
            if(OnDuty[playerid]== 0)
			{
  				OnDuty[playerid] = 1;
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estas en servicio.");
      		}
      		else
			{
        		OnDuty[playerid] = 0;
        		SetPlayerToTeamColor(playerid);
        		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora ya no estas en servicio.");
      		}
		}
        else SendClientMessageEx(playerid, -1, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
    zcmd(frecuencia, playerid, params[])
	{
		new string[128], frequency;
		if(sscanf(params, "d", frequency))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /frecuencia [frecuencia]");
			SendClientMessageEx(playerid, COLOR_WHITE, "* Ajusta la frecuencia de tu radio - 0 Si no quieres oir nada.");
			return 1;
		}
        if(frequency > 9999999 || frequency < -9999999) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Frecuencia no debe ser menor a -9999999 y mayor 9999999."); return 1; }
		if (Info[playerid][pRadio] == 1)
		{
			Info[playerid][pRadioFreq] = frequency;
			format(string, sizeof(string), "Ajustaste la frecuencia de tu radio portable a %d khz.",frequency);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
        else SendClientMessageEx(playerid, COLOR_WHITE, "No tiene una Radio Portable.");
        return 1;
    }
    zcmd(pr, playerid, params[]){
		if(Info[playerid][pRadio] == 1){
            if(Info[playerid][pRadioFreq] >= 1 || Info[playerid][pRadioFreq] <= -1){
				if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /pr (chat)");
				if(GetPVarInt(playerid, "Injured") != 0||Info[playerid][pEstado] !=0) return SendClientMessageEx (playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto ahora.");
				RadioBroadCast(playerid, COLOR_GREY, params);
            }
            else SendClientMessageEx(playerid, COLOR_WHITE, "* Primero ajusta la frecuencia. /frecuencia'");
        }
        else SendClientMessageEx(playerid, COLOR_WHITE, "* Primero necesitas tener una radio portatil, comprala en el 24/7");
        return 1;
    }
	zcmd(togpr, playerid, params[])
	{
		if(Info[playerid][pRadio] == 1)
		{
 			if (gRadio[playerid] == 0)
   			{
   		    	new string[128];
     			gRadio[playerid] = 1;
       			format(string,sizeof(string),"Has prendido tu radio portátil, y está sincronizada a %d khz.",Info[playerid][pRadioFreq]);
	        	SendClientMessageEx(playerid,COLOR_WHITE,string);
	    	}
	    	else
	    	{
     			gRadio[playerid] = 0;
       			SendClientMessageEx(playerid,COLOR_WHITE,"Has apagado su radio portátil.");
	    	}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una Radio portátil.");
  		return 1;
	}
	zcmd(f, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás conectado.");
	    if(nofac == 1 && Info[playerid][pLeader] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "El Chat de faccion esta bloqueado");
        if(!isnull(params))
	    {
            new string[128];
			if (Info[playerid][pLeader] > 0 || Info[playerid][pMember] > 0 || Info[playerid][pFMember] < 255)
			{
			    new member = Info[playerid][pMember];
			    new fam = Info[playerid][pFMember];
			    if(member==1)//SAPD
			    {
			        if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Comandante %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Teniente %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sargento %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Detective %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Oficial %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Cadete %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Cadete %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
			    }
				else if(member==2)//FBI
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director %s: %s ))  **", GetPlayerNameEx(playerid), params); }
                    else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sub-Director %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Agente Especializado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
                    else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Agente Especial %s: %s ))  **", GetPlayerNameEx(playerid), params); }
                    else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Agente Superior %s: %s ))  **", GetPlayerNameEx(playerid), params); }
                    else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Agente %s: %s ))  **", GetPlayerNameEx(playerid), params); }
                    SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
			    else if(member==3)//SAEM
			    {
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Coronel %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mayor %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Capitan %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sargento %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Cabo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Cadete %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    else if(member==4)//SAMD
			    {
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Responsable técnico %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Supervisor %s: %s )) **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Médico %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Paramédico %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Práctico %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Práctico %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
			    }
				else if(member==5) //LSTV
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director CNN %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Presentador %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Enviado Especial %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Periodista %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Redactor %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Becario %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Becario %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==6)//Crazy Motors
			    {
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Supervisor %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ingeniero %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Mecánico %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Trucker %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Ayudante %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Ayudante %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==7) //Gobierno
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Gobernador %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Alcalde %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ministro %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Burócrata %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Secretario %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Staff %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Ministro %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==8) //Hitman
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Cabezilla %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Matón %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Asesino Serial %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sicario %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Ingrándose %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Iniciado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Iniciado %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==9) //S Judicial
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director G. %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Asociado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Juez %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Fiscal %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Secretario %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Abogado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Abogado %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==10) // Bomberos LS
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Director %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sub Director %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sargento Mayor %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sargento %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Bachillerato %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Bombero ESO %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Bombero ESO%s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==11) // La Cosa Nostra
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Capi Di Tutti Capi %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sottocapo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Consigliere %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Capo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldati %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Giovane d' Honore %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Giovane d' Honore%s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==12) // Yakuza
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Oyabun %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sumiyoshi %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Saiko Komon %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Senpai Kohai %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Wakashu %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Kyodai %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Kyodai%s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==13) // Mafia Rusa
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Don %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Zamestitel %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Konsul'tant %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Kapo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldat %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** ((  Assotsiirovat %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** ((  Assotsiirovat%s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==14) // Ndrangheta
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Capi di tutti capi %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sottocapo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Consigliere %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Capo %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldati %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Giovane d´ honore %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** ((  Giovane d´ honore %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
			   else if(member==15) //Groove
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Lider %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Asesino %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Escolta %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Aprendiz %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novato %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Novato %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
                 else if(member==16) //Ballas
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Lider %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Asesino %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Escolta %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Aprendiz %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novato %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Novato %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				 else if(member==17) //Sureños
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Lider %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Asesino %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Escolta %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Aprendiz %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novato %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Novato %s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==18) // Fsociety
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** (( Mr.Robot %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Hacker lider %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Hacker experimentado %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Hacker %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Hacker novato %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Aprendiz %s: %s ))  **", GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (( Aprendiz%s: %s )) **", GetPlayerNameEx(playerid), params); }
					SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
				}

	            if(Info[playerid][pFMember] < 255)
				{
					if(Info[playerid][pRank] == 6) { format(string, sizeof(string), "{04FFFF}** %s %s: %s **", fINFO[fam][FamilyRank6], GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 5) { format(string, sizeof(string), "** %s %s: %s **", fINFO[fam][FamilyRank5], GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 4) { format(string, sizeof(string), "** %s %s: %s  **", fINFO[fam][FamilyRank4], GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 3) { format(string, sizeof(string), "** %s %s: %s  **", fINFO[fam][FamilyRank3], GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 2) { format(string, sizeof(string), "** %s %s: %s  **", fINFO[fam][FamilyRank2], GetPlayerNameEx(playerid), params); }
					else if(Info[playerid][pRank] == 1) { format(string, sizeof(string), "** %s %s: %s  **", fINFO[fam][FamilyRank1], GetPlayerNameEx(playerid), params); }
					else { format(string, sizeof(string), "** (0) %s %s: %s **", fINFO[fam][FamilyRank1], GetPlayerNameEx(playerid), params); }
					SendNewFamilyMessage(Info[playerid][pFMember], TEAM_AZTECAS_COLOR, string);
				}
				return 1;
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una facción.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /f (texto)");
		return 1;
	}
	zcmd(d, playerid, params[])
	{
	new string[256], rank[64], div[16];
	if(RadioOn[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu radio está apagada.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /d (radio chat)");
	    switch (Info[playerid][pMember])
	    {
	        case 1:
	        {
                switch(Info[playerid][pRank])
                {
				case 1: rank = "Cadete";
				case 2: rank = "Oficial";
				case 3: rank = "Detective";
				case 4: rank = "Sargento";
				case 5: rank = "Teniente";
				case 6: rank = "Comandante";
				default: rank = "[Error]";
				}
				switch(Info[playerid][pDivision])
				{
				case 2: div = " (DIVCRI)";
				case 3: div = " (DIVOES)";
				case 4: div = " (DIVANDRO)";
				case 5: div = " (SWAT)";
				case 6: div = " (UL)";
				case 7: div = " (SHERIFF)";
				default: div = "";
				}
				format(string, sizeof(string), "** [SAPD] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
			case 2:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Agente";
					case 2: rank = "Agente Superior";
					case 3: rank = "Agente Especial";
					case 4: rank = "Criminalista";
					case 5: rank = "Sub/Director";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
 				switch(Info[playerid][pDivision])
				{
					case 2: div = " (OS)";
					case 3: div = " (UCO)";
					case 4: div = " (UI)";
					case 5: div = " (UAE)";
					default: div = "";
				}
                format(string, sizeof(string), "** [FBI] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
            case 3:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Cabo";
					case 2: rank = "Soldado";
					case 3: rank = "Sargento";
					case 4: rank = "Capitán";
					case 5: rank = "Mayor";
					case 6: rank = "Coronel";
					default: rank = "[Error]";
				}
				switch(Info[playerid][pDivision])
				{
					case 2: div = " (FASA)";
					case 3: div = " (EMSA)";
					case 4: div = " (BO)";
					case 5: div = " (FMSA)";
					default: div = "";
				}
                format(string, sizeof(string), "** [EUEM] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
			case 4:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Practicante";
					case 2: rank = "Paramédico";
					case 3: rank = "Médico";
					case 4: rank = "Supervisor";
					case 5: rank = "Técnico";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** [SAMD] %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
			}
			case 7:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Staff";
					case 2: rank = "Secretario";
					case 3: rank = "Burócrata";
					case 4: rank = "Ministro de";
					case 5: rank = "Alcalde";
					case 6: rank = "Gobernador";
					default: rank = "[Error]";
				}
  				switch(Info[playerid][pDivision])
				{
					case 2: div = " (Chofer)";
					case 3: div = " (UG)";
					case 4: div = " Defensa";
					case 5: div = " Justicia";
					case 6: div = " Economía";
					default: div = "";
				}
				format(string, sizeof(string), "** [GOB] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
			case 9:
			{
				switch(Info[playerid][pRank])
				{
					case 1: rank = "Abogado";
					case 2: rank = "Secretario";
					case 3: rank = "Fiscal";
					case 4: rank = "Juez";
					case 5: rank = "Asociado";
					case 6: rank = "Director General";
					default: rank = "Abogado";
				}
				format(string, sizeof(string), "** [S.JUD] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
			case 10:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Bombero ESO";
				    case 2: rank = "Bachillerato";
				    case 3: rank = "Sargento";
				    case 4: rank = "Sargento Mayor";
				    case 5: rank = "Subdirector";
				    case 6: rank = "Director";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** [LSFD] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			}
			
			default:
			{
				SendClientMessageEx(playerid,COLOR_GRAD2,"{FFFF00}[ERROR]:{FFFFFF} No tienes autorización para usar este comando.");
				return 1;
			}
		}
  		SendRadioMessage(1, COLOR_ALLDEPT, string);
  		SendRadioMessage(2, COLOR_ALLDEPT, string);
  		SendRadioMessage(3, COLOR_ALLDEPT, string);
  		SendRadioMessage(4, COLOR_ALLDEPT, string);
  		SendRadioMessage(7, COLOR_ALLDEPT, string);
  		SendRadioMessage(9, COLOR_ALLDEPT, string);
  		SendRadioMessage(10, COLOR_ALLDEPT, string);
		format(string, sizeof(string), "(radio) %s",params);
	    SetPlayerChatBubble(playerid,string,COLOR_WHITE,15.0,5000);
	    return 1;
	}
	zcmd(r, playerid, params[])
	{
	new string[128], rank[64], div[16];
	if(RadioOn[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu radio está apagada.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /r (radio chat)");

		switch (Info[playerid][pMember]) // employer/rank/division data is pulled from here
		{
			case 1:
			{
				switch(Info[playerid][pRank])
				{
					case 1: rank = "Cadete";
					case 2: rank = "Oficial";
					case 3: rank = "Detective";
					case 4: rank = "Sargento";
					case 5: rank = "Teniente";
					case 6: rank = "Comandante";
					default: rank = "[Error]";
				}
				switch(Info[playerid][pDivision])
				{
					case 2: div = " (DIVCRI)";
					case 3: div = " (DIVOES)";
					case 4: div = " (DIVANDRO)";
					case 5: div = " (SWAT)";
					case 6: div = " (UL)";
					case 7: div = " (SHERIFF)";
					default: div = "";
				}
				format(string, sizeof(string), "** %s%s %s: {FFFFFF}%s", rank,div, GetPlayerNameEx(playerid), params);
				SendRadioMessage(1, TEAM_RADIO_COLOR, string);
			}
			case 2:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Agente";
					case 2: rank = "Agente Superior";
					case 3: rank = "Agente Especial";
					case 4: rank = "Agente Especializado";
					case 5: rank = "Sub/Director";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
  				switch(Info[playerid][pDivision])
				{
					case 2: div = " (OS)";
					case 3: div = " (UCO)";
					case 4: div = " (UI)";
					case 5: div = " (UAE)";
					default: div = "";
				}
				format(string, sizeof(string), "** %s%s %s: {FFFFFF}%s", rank,div, GetPlayerNameEx(playerid), params);
				SendRadioMessage(2, TEAM_RADIO_COLOR, string);
			}
            case 3:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Cabo";
					case 2: rank = "Soldado";
					case 3: rank = "Sargento";
					case 4: rank = "Capitán";
					case 5: rank = "Mayor";
					case 6: rank = "Coronel";
					default: rank = "[Error]";
				}
				switch(Info[playerid][pDivision])
				{
					case 2: div = " (FASA)";
					case 3: div = " (EMSA)";
					case 4: div = " (BO)";
					case 5: div = " (FMSA)";
					default: div = "";
				}
                format(string, sizeof(string), "** %s%s %s: {FFFFFF}%s", rank,div, GetPlayerNameEx(playerid), params);
				SendRadioMessage(3, TEAM_RADIO_COLOR, string);
			}
			case 4:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Practicante";
					case 2: rank = "Paramédico";
					case 3: rank = "Médico";
					case 4: rank = "Supervisor";
					case 5: rank = "Técnico";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** %s %s: {FFFFFF}%s", rank, GetPlayerNameEx(playerid), params);
				SendRadioMessage(4, TEAM_RADIO_COLOR, string);
			}
			case 5:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Fotógrafo";
					case 2: rank = "Redactor";
					case 3: rank = "Periodista";
					case 4: rank = "Administrador";
					case 5: rank = "Gerente";
					case 6: rank = "Director CNN";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** %s %s: {FFFFFF}%s", rank, GetPlayerNameEx(playerid), params);
				SendRadioMessage(5, TEAM_RADIO_COLOR, string);
			}
			case 6:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Ayudante";
					case 2: rank = "Trucker";
					case 3: rank = "Mecánico";
					case 4: rank = "Ingeniero";
					case 5: rank = "Supervisor";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** %s %s: {FFFFFF}%s", rank, GetPlayerNameEx(playerid), params);
				SendRadioMessage(6, TEAM_RADIO_COLOR, string);
			}
			case 7:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Staff";
					case 2: rank = "Secretario";
					case 3: rank = "Burócrata";
					case 4: rank = "Ministro de";
					case 5: rank = "Alcalde";
					case 6: rank = "Gobernador";
					default: rank = "[Error]";
				}
  				switch(Info[playerid][pDivision])
				{
					case 2: div = " (Chofer)";
					case 3: div = " (UG)";
					case 4: div = " Defensa";
					case 5: div = " Justicia";
					case 6: div = " Economía";
					default: div = "";
				}
				format(string, sizeof(string), "** %s%s %s: {FFFFFF}%s", rank,div, GetPlayerNameEx(playerid), params);
				SendRadioMessage(7, TEAM_RADIO_COLOR, string);
			}
			case 9:
			{
				switch(Info[playerid][pRank])
				{
					case 1: rank = "Abogado";
					case 2: rank = "Secretario";
					case 3: rank = "Fiscal";
					case 4: rank = "Juez";
					case 5: rank = "Asociado";
					case 6: rank = "Director General";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** %s %s: {FFFFFF}%s", rank, GetPlayerNameEx(playerid), params);
				SendRadioMessage(9, TEAM_RADIO_COLOR, string);
			}
			case 10:
			{
			    switch(Info[playerid][pRank])
			    {
					case 1: rank = "Bombero ESO";
					case 2: rank = "Bachillerato";
					case 3: rank = "Sargente";
					case 4: rank = "Sargento Mayor";
					case 5: rank = "Sub Director";
					case 6: rank = "Director";
					default: rank = "[Error]";
				}
				format(string, sizeof(string), "** %s%s %s: {FFFFFF}%s", rank,div, GetPlayerNameEx(playerid), params);
				SendRadioMessage(10, TEAM_RADIO_COLOR, string);
			}
			default:
			{
				SendClientMessageEx(playerid,COLOR_GRAD2,"Tu facción no tiene radio. Puedes comprar un radio portable en un 24/7.");
				return 1;
			}
		}
		format(string, sizeof(string), "(radio) %s",params);
	    SetPlayerChatBubble(playerid,string,COLOR_WHITE,15.0,5000);
	    return 1;
	}
	zcmd(pddiv, playerid, params[])
	{
		if(Info[playerid][pLeader] == 1)
		{
			new string[256], giveplayerid, division;
			if(sscanf(params, "dd", giveplayerid, division))
			{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /pddiv (playerid) (división)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones SAPD: 1 (Ninguna), 2 {5ABAFF}(DIV-CRI){FFFFFF}, 3 {5ABAFF}(DIV-OES){FFFFFF}, 4 {5ABAFF}(DIV-ANDRO){FFFFFF}, 5 {5ABAFF}(SWAT){FFFFFF}, 6 {5ABAFF}(UL), 6 {5ABAFF}(Sheriff)");
			return 1;
			}

			if (Info[playerid][pRank] == 6)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(Info[giveplayerid][pMember] == 1)
					{
						if(division == 3)
						{
							Info[giveplayerid][pDivision] = 3;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la División de Operaciones Especiales [DIVOES].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la División de Operaciones Especiales [DIVOES].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 2)
						{
							Info[giveplayerid][pDivision] = 2;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la División de Criminalistica [DIVCRI].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la División de Criminalistica [DIVCRI].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 4)
						{
							Info[giveplayerid][pDivision] = 4;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la División de Anti-Drogas [DIVANDRO].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la División de Anti-Drogas [DIVANDRO].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 5)
						{
							Info[giveplayerid][pDivision] = 5;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la SWAT.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la SWAT.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 6)
						{
							Info[giveplayerid][pDivision] = 6;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Unidad de Licencieros.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Unidad de Licencieros.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 7)
						{
							Info[giveplayerid][pDivision] = 7;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la división de Sheriff.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la división de Sheriff.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 1)
						{
							Info[giveplayerid][pDivision] = 1;
							format(string, sizeof(string), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador no pertenece a LSPD.");
				}
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para hacer divisiones en SAPD.");
		}
		return 1;
	}
	zcmd(fbidiv, playerid, params[])
	{
		if(Info[playerid][pLeader] == 2)
		{
			new string[256], giveplayerid, division;
			if(sscanf(params, "dd", giveplayerid, division))
			{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fbidiv (playerid) (división)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones FBI: 1 (Ninguna), 2 {5ABAFF}(DIV-HO){FFFFFF}, 3 {5ABAFF}(UCO){FFFFFF}, 4 {5ABAFF}(UI){FFFFFF}, 5 {5ABAFF}(RR.HH)");
			return 1;
			}

			if (Info[playerid][pRank] == 6)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(Info[giveplayerid][pMember] == 2)
					{
						if(division == 3)
						{
							Info[giveplayerid][pDivision] = 3;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Unidad de Crimen Organizado [UCO].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Unidad de Crimen Organizado [UCO].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 2)
						{
							Info[giveplayerid][pDivision] = 2;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la División de Homicidios [DIVHO].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la División de Homicidios [DIVHO].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 4)
						{
							Info[giveplayerid][pDivision] = 4;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Unidad de Investigación [UI].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Unidad de Investigación [UI].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 5)
						{
							Info[giveplayerid][pDivision] = 5;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Unidad de Agentes Especiales [UAE].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Unidad de Agentes Especiales [UAE].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 1)
						{
							Info[giveplayerid][pDivision] = 1;
							format(string, sizeof(string), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador no pertenece al FBI.");
				}
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para hacer divisiones en FBI.");
		}
		return 1;
	}
	zcmd(emdiv, playerid, params[])
	{
		if(Info[playerid][pLeader] == 3)
		{
			new string[256], giveplayerid, division;
			if(sscanf(params, "dd", giveplayerid, division))
			{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /emdiv (playerid) (división)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones SAEM: 1 (Ninguna), 2 {5ABAFF}(FASA){FFFFFF}, 3 {5ABAFF}(EMM){FFFFFF}, 4 {5ABAFF}(BO){FFFFFF}, 5 {5ABAFF}(FMSA)");
			return 1;
			}
			if (Info[playerid][pRank] == 6)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(Info[giveplayerid][pMember] == 3)
					{
						if(division == 3)
						{
							Info[giveplayerid][pDivision] = 3;
							format(string, sizeof(string), "%s te ha invitado a formar parte del Equipo Médico Militar [EMM].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse al Equipo Médico Militar [EMM].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 2)
						{
							Info[giveplayerid][pDivision] = 2;
							format(string, sizeof(string), "%s te ha invitado a formar parte de las Fuerzas Aéreas de San Andreas [FASA].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a las Fuerzas Aéreas de San Andreas [FASA].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 4)
						{
							Info[giveplayerid][pDivision] = 4;
							format(string, sizeof(string), "%s te ha invitado a formar parte de los Black Ops [BO].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a los Black Ops [BO].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 5)
						{
							Info[giveplayerid][pDivision] = 5;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Fuerza Marítima de San Andreas [FMSA].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Fuerza Marítima de San Andreas [FMSA].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 1)
						{
							Info[giveplayerid][pDivision] = 1;
							format(string, sizeof(string), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
					} else SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador no pertenece a Guardia Nacional");
				}
			} else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para hacer divisiones en Guardia Nacional.");
		}
		return 1;
	}
	zcmd(gobdiv, playerid, params[])
	{
		if(Presidente(playerid))
		{
			new string[256], giveplayerid, division;
			if(sscanf(params, "dd", giveplayerid, division))
			{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gobdiv (playerid) (división)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFFFF}Divisiones Staff: 1 (Ninguna), 2 {5ABAFF}(Chofer){FFFFFF}, 3 {5ABAFF}(UG)(Guardaespaldas)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones Ministros: {FFFFFF}4 {5ABAFF}(Defensa){FFFFFF}, 5 {5ABAFF}(Justicia){FFFFFF}, 6 {5ABAFF}(Economía)");
			return 1;
			}

			if (Info[playerid][pRank] == 6)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(Info[giveplayerid][pMember] == 7)
					{
						if(division == 2)
						{
							Info[giveplayerid][pDivision] = 2;
							format(string, sizeof(string), "%s te ha invitado a formar parte de los choféres del gobierno.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a los choféres del gobierno.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 3)
						{
							Info[giveplayerid][pDivision] = 3;
							format(string, sizeof(string), "%s te ha invitado a formar parte de la Unidad de Guardaespaldas [UG].", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has invitado a %s para unirse a la Unidad de Guardaespaldas [UG].", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 4)
						{
							Info[giveplayerid][pDivision] = 4;
							format(string, sizeof(string), "%s te ha nombrado Ministro de Defensa.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has nombrado a %s Ministro de Defensa.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 5)
						{
							Info[giveplayerid][pDivision] = 5;
							format(string, sizeof(string), "%s te ha nombrado Ministro de Justicia.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has nombrado a %s Ministro de Justicia.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 6)
						{
							Info[giveplayerid][pDivision] = 6;
							format(string, sizeof(string), "%s te ha nombrado Ministro de Economía.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has nombrado a %s Ministro de Economía.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(division == 1)
						{
							Info[giveplayerid][pDivision] = 1;
							format(string, sizeof(string), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						}
					} else SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador no pertenece al FBI");
				}
			}else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para hacer divisiones en FBI.");
		}
		return 1;
	}
 	zcmd(contratar, playerid, params[]){
        if(Info[playerid][pLeader] > 0){
            new giveplayerid;
        	if(!sscanf(params, "d", giveplayerid)){
        	    if(IsPlayerConnected(giveplayerid)){
        	        if(ProxDetectorS(8.0, playerid, giveplayerid)){
	            	    if(giveplayerid == playerid) 		return	SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes invitarte ati mismo.");
	            	    if(Info[giveplayerid][pFMember] < 255)	return	SendClientMessageEx(playerid, COLOR_WHITE, "No puedes invitar a una persona que está en una banda o familia.");
	            	    if(Facturing[giveplayerid] > 0)    return 	SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Este jugador está en otra tarea, espera.");
	            	    if(Info[giveplayerid][pMember] > 0 || Info[giveplayerid][pLeader] > 0) return 	SendClientMessageEx(playerid, COLOR_WHITE, "Este jugador ya tiene facción.");
						new string[256];
	            	    switch(Info[playerid][pLeader]){
						    case 1: 	ReqF_Name[giveplayerid] = "San Andreas Police Department";
						    case 2: 	ReqF_Name[giveplayerid] = "Federal Bureau of Investigation";
						    case 3: 	ReqF_Name[giveplayerid] = "Ejercito Militar";
						    case 4: 	ReqF_Name[giveplayerid] = "Centro Medico de LS";
						    case 5:     ReqF_Name[giveplayerid] = "Los Santos Radio y Television";
						    case 6: 	ReqF_Name[giveplayerid] = "Mecanicos de LS";
						    case 7: 	ReqF_Name[giveplayerid] = "Gobierno Estatal de Los Santos";
                            case 8: 	ReqF_Name[giveplayerid] = "Sicarios";
                            case 9: 	ReqF_Name[giveplayerid] = "Sistema Judicial";
                            case 10:    ReqF_Name[giveplayerid] = "Departamento de Bomberos LS";
						}
                        ReqF_Faction[giveplayerid] = Info[playerid][pLeader];
                        Facturing[giveplayerid] = 1;
						format(string, sizeof(string), "\t\tContrato\n\n\t%s te ofrece un contrato en %s\n\t¿Quieres aceptarlo y pertenecer a esta organización?", GetPlayerNameEx(playerid), ReqF_Name[giveplayerid]);
		        		SafeDialogEx(giveplayerid, REQF_ACCEPT, DIALOG_STYLE_MSGBOX, "{008EC1}Contrato de Trabajo", string, "Aceptar", "Rechazar");
	            	}else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
        	    }else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
			}else SendClientMessageEx(playerid, COLOR_WHITE, "* /contratar (jugador)");
		}else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no es lider de facción.");
		return 1;
	}
    zcmd(despedir, playerid, params[]){
		new give;
        if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted no es lider de facción.");
		if(sscanf(params, "d", give)) return SendClientMessageEx(playerid, COLOR_WHITE, "* /despedir (jugador)");
		if(!IsPlayerConnected(give)) return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
        if(Info[playerid][pLeader] == Info[give][pMember]){
			new string[80];
			format(string, sizeof(string), "  El líder %s te ha echado de la facción.", GetPlayerNameEx(playerid));
			SendClientMessageEx(give, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "  Echaste de la facción a %s", GetPlayerNameEx(give));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			Info[give][pMember] = 0;
			Info[give][pRank] = 0;
			Info[give][pDivision] = 0;
			pTazer[give] = 0;
			if(Info[give][pVIP] < 3) for(new iToyIter; iToyIter < MAX_PLAYER_ATTACHED_OBJECTS; ++iToyIter){
				for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsCop); ++LoopRapist){
					if(HoldingObjectsCop[LoopRapist][holdingmodelid] == PlayerToyInfo[give][iToyIter][ptModelID]){
						PlayerToyInfo[give][iToyIter][ptModelID] = 0;
						PlayerToyInfo[give][iToyIter][ptBone] = 0;
						PlayerToyInfo[give][iToyIter][ptPosX] = 0.0;
						PlayerToyInfo[give][iToyIter][ptPosY] = 0.0;
						PlayerToyInfo[give][iToyIter][ptPosZ] = 0.0;
						PlayerToyInfo[give][iToyIter][ptPosX] = 0.0;
						PlayerToyInfo[give][iToyIter][ptPosY] = 0.0;
						PlayerToyInfo[give][iToyIter][ptPosZ] = 0.0;
						PlayerToyInfo[give][iToyIter][ftscaleX] = 0.0;
						PlayerToyInfo[give][iToyIter][ftscaleY] = 0.0;
						PlayerToyInfo[give][iToyIter][ftscaleZ] = 0.0;
					}
				}
			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} El jugador no pertenece a tu facción.");
        return 1;
    }
	zcmd(darrango, playerid, params[])
    {
        new giveplayerid, rank;
        if(!sscanf(params, "di", giveplayerid, rank))
		{
            if(rank > 6 || rank < 0) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No hay rango tan alto."); return 1; }
		    if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres líder de facción.");
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(Info[giveplayerid][pLeader] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes asignar rango a un líder");
          		if(Info[playerid][pLeader] == Info[giveplayerid][pMember])
            	{
            	    new string[128];
            	    Info[giveplayerid][pRank] = rank;
            	    format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s", GetPlayerNameEx(playerid), Info[giveplayerid][pRank], GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
            	}
            	else SendClientMessageEx(playerid, COLOR_WHITE, "Este miembro no es de tu facción.");
		    }
		    else SendClientMessageEx(playerid, COLOR_WHITE, "Jugado desconectado.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "* /darrango (jugador) (rango)");
        return 1;
    }
	zcmd(equipo, playerid, params[])
	{
	    //*******************Facciones legales*******************
	    if(Team_SAMD(playerid))
		{
			if(PlayerToPoint(5, playerid, 1188.8640,-1351.4312,2423.2649))
			{
			    new eq[] = "Traje Doctor\nTraje Médico Blanco\nTraje Médico Azul\nTraje Médico Verde\nIndumentario Normal";
			    SafeDialogEx(playerid,EQUIPO_DOC,DIALOG_STYLE_LIST,"{008EC1}Equipo SAMD",eq,"Equipar","Cancelar");
			}
		}
		else if(Team_LSTV(playerid))
		{
		    if(PlayerToPoint(5, playerid, 1792.5287,-1710.1592,13.5950))
		    {
		        new cnn[] = "Periodista\nRopa Normal";
		        SafeDialogEx(playerid,EQUIPO_CNN,DIALOG_STYLE_LIST,"{008EC1}Equipo LSRTV",cnn,"Equipar","Cancelar");
		    }
		}
		else if(Team_Mecanicos(playerid))
		{
			if(PlayerToPoint(5, playerid, 2509.4067,-2079.5461,13.5469))
			{
				new mec[] = "Ayudante\nTrucker\nMecanico\nSupervisor\nMujer\nDirector\nRopa Normal";
			    SafeDialogEx(playerid,EQUIPO_MECANICO,DIALOG_STYLE_LIST,"{008EC1}Equipo Mecánico <<",mec,"Equipar","Cancelar");
   			}
		}
		if(Gobierno(playerid))
		{
		    if(PlayerToPoint(5, playerid, 362.1189,-52.2308,-93.8500))
		    {
		        new gob[] = "Seguridad Negro\nSeguridad Blanco\nChofér\nBurócrata\nSecretario\nMinistro\nAlcalde\nGobernador\nRopa normal";
		        SafeDialogEx(playerid,EQUIPO_GOB,DIALOG_STYLE_LIST,"{008EC1}Equipo Gobierno",gob,"Equipar","Cancelar");
		    }
		}
        else if(Team_Judicial(playerid))
		{
		    if(PlayerToPoint(5, playerid, 2135.5605,1300.7083,7698.8999))
		    {
		        new SistemaJ[] = "Director\nAbogado\nRopa Normal";
		        SafeDialogEx(playerid,EQUIPO_SistemaJ,DIALOG_STYLE_LIST,"{008EC1}Equipo Sistema Judicial",SistemaJ,"Equipar","Cancelar");
		    }
		}
		else if(Team_BomberosLS(playerid))
		{
		    if(PlayerToPoint(5, playerid, -1683.8572,-2074.3633,19.2459))
		    {
		        new bom[] = "Ayudante\nIntermedio\nDirector\nRopa Normal";
		        SafeDialogEx(playerid,EQUIPO_BOMBEROS,DIALOG_STYLE_LIST,"{008EC1}Equipo LSFD",bom,"Equipar","Cancelar");
		    }
		}
		//*******************Facciones Ilegales*******************
        if(Hitman(playerid))
		{
	    	if(PlayerToPoint(5, playerid, -283.1366,-2174.5459,28.6632))
		   {
	  			new eqh[] = "Silenced 9mm\nCuchillo\nMascara\nSniper Rifle";
			  	SafeDialogEx(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,"{008EC1}Equipo Sicarios",eqh,"Equipar","Cancelar");
		   }
		}
		else if(Team_LCN(playerid))
		{
		    if(PlayerToPoint(5, playerid, 1201.6417,-2015.9741,71.6094))
		    {
		        new bom[] = "9mm silenciada\nCuchillo\nMascara\nSniper Rifle";
		        SafeDialogEx(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,"{008EC1}Equipo LCN",bom,"Equipar","Cancelar");
		    }
		}
		else if(Team_RUSA(playerid))
		{
		    if(PlayerToPoint(5, playerid, 688.3789, -1267.5032, 12.5460))
		    {
		        new bom[] = "9mm silenciada\nCuchillo\nMascara\nSniper Rifle";
		        SafeDialogEx(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,"{008EC1}Equipo Mafia Rusa",bom,"Equipar","Cancelar");
		    }
		}
		else if(Team_YAK(playerid))
		{
		    if(PlayerToPoint(5, playerid, 305.0333, -1160.6010, 80.5505))
		    {
		        new bom[] = "9mm silenciada\nCuchillo\nMascara\nSniper Rifle";
		        SafeDialogEx(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,"{008EC1}Equipo Yakuza",bom,"Equipar","Cancelar");
		    }
		}
		else if(Team_NDRA(playerid))
		{
		    if(PlayerToPoint(5, playerid, 3065.7185, -1849.9324, 6.1719))
		    {
		        new bom[] = "9mm silenciada\nCuchillo\nMascara\nSniper Rifle";
		        SafeDialogEx(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,"{008EC1}Equipo Ndrangheta ",bom,"Equipar","Cancelar");
		    }
		}
	    return 1;
	}
	zcmd(moneda, playerid, params[])
	{
	    new coin = random(2)+1, string[90], coinname[10];
	    if(coin == 1) 	coinname = "cara";
	    else 			coinname = "cruz";
	    format(string, sizeof(string), "*** %s lanza una moneda al aire y cae %s", GetPlayerNameEx(playerid), coinname);
	    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    return 1;
	}
	zcmd(ven, playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			new string[128];
            if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
		       format(string, sizeof(string), "* %s baja la ventana.", GetPlayerNameEx(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
            else if(VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
		       format(string, sizeof(string), "* %s sube la ventanilla.", GetPlayerNameEx(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
	    }
	    else SendClientMessageEx(playerid, COLOR_GREY, "Usted necesita estar en el vehiculo para utilizar esta función.");
        return 1;
	}
   	zcmd(nokear, playerid, params[])
	{
	    if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
			return 1;
		}
	    if(sscanf(params, "d", params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /nokear (ID)");
        if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Usted debe ser mayor al nivel 2.");
		if(KnockedDown[playerid] == 0 || IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))
		{
			if(ProxDetectorS(3.0, playerid, params[0]))
			{
				new rands = random(2)+1, string[128];
				format(string, sizeof(string), "* %s agarra una piedra.", GetPlayerNameEx(playerid));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
            	KnockedDown[playerid] = 100;

            	if(rands == 1)
				{
					ApplyAnimation(params[0], "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetTimerEx("ClearKnock", 60000, false, "i", params[0]);
					SetTimerEx("ClearKnock", 60000, false, "i", playerid);
					KnockedDown[params[0]] = 1;
                    format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y lo consige.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
					ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
					format(string, sizeof(string), "* %s queda inconsciente.", GetPlayerNameEx(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y le da muy suave.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
					ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
				}
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "El jugador está muy lejos de usted.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no puede utilizar este comando ahora.");
		return 1;
	}
	//SAEM
    zcmd(misil, playerid, params[])
	{
	    new Float:M_X, Float:M_Y, Float:M_Z, Float:radius;
	    if(Team_SAEM(playerid))
		{
	        if(Misile_Launcher < 3)
			{
	            new string[128];
		        if(PlayerToPoint(5.0,playerid,2740.2664,-2423.1470,43.7594))
				{
			        if(!sscanf(params, "fffiii",M_X,M_Y,M_Z,radius,params[1],params[2])){
			            if(Info[playerid][pRank] > 3){
			                if(radius > 100 || radius < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Radio máximo 100");
			                if(params[1] > 13  || params[1] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tipo explosión 0-13");
			                if(params[2] > 60  || params[1] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
			            	SetTimerEx("MissileLaunchEx", params[2]*1000, false, "fffii", M_X,M_Y,M_Z,radius,params[1]);
							Misile_Launcher ++;
							SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), " %s ejecutará Lanzamiento de misil en %d segundos, destino: %0.2f - %0.2f - %0.2f, radio: %d",
                            GetPlayerNameEx(playerid),params[2],M_X,M_Y,M_Z,radius,params[1]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
						} else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Necesitas ser mayor de rango 3.");
			        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /misil (coordenada X) (coordenada Y) (coordenada Z) (radio) (tipo) (tiempo)");
				}
				else if(PlayerToPoint(1.0,playerid,275.4055,2044.6295,46.5048))
				{
				    if(!sscanf(params, "id",params[0], params[1]))
					{
			            if(Info[playerid][pRank] > 3)
						{
			                if(params[0] > MAX_VEHICLES || params[0] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Vehículo incorrecto.");
			                SetTimerEx("MissileLaunch", params[1]*1000, false, "i", params[0]);
			                Misile_Launcher ++;
			                SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), " %s ejecutará Lanzamiento de misil en %d Segundos, Objetivo Vehículo %d", GetPlayerNameEx(playerid), params[1], params[0]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
			            } else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Necesitas ser mayor de rango 3.");
			        } else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /misil (vehículo) (tiempo)");
				} else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en ningún lanzamisiles.");
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Aún no han detonado los otros misiles.");
	    } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
	    return 1;
	}
 CMD:su(playerid, params[]){
	new string[170];
	if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessageEx(playerid, COLOR_WHITE, "No estas en servicio.");
	if(!sscanf(params,"ii", params[0], params[1]))
		{
		 GetPlayerName(params[0], cargos, sizeof(cargos));
		 GetPlayerName(playerid, cargos2, sizeof(cargos2));
		 switch(params[1])
		{
		  case 1:
			{
			 format(string, sizeof(string), "Oficial {FFFFFF}%s quiere hablar contigo, no intentes escapar.", GetPlayerNameEx(playerid));
		     SendClientMessageEx(params[0], TEAM_BLUE_COLOR, string);
			 Info[params[0]][pWantedLevel] = 1;
		     SetPlayerWantedLevel(params[0], 1);
			 for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
		     SetPlayerMarkerForPlayer(i, params[0], c1_color);
		     format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}parece sospechoso, voy a interrogarlo.", cargos2, cargos);
		     SendRadioMessage(1, TEAM_BLUE_COLOR, string);
		     format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}parece sospechoso, voy a interrogarlo.", cargos2, cargos);
		     SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		case 2:
			{
			 Info[params[0]][pWantedLevel] = 2;
			 SetPlayerWantedLevel(params[0], 2);
			 for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
			 SetPlayerMarkerForPlayer(i, params[0], c2_color);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}se resistió al arresto, procedemos a su persecución.", cargos2, cargos);
			 SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}se resistió al arresto, procedemos a su persecución.", cargos2, cargos);
			 SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		case 3:
			{
			 Info[params[0]][pWantedLevel] = 3;
			 SetPlayerWantedLevel(params[0], 3);
			 for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
			 SetPlayerMarkerForPlayer(i, params[0], c3_color);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}se encuentra armado, procedan con precaución.", cargos2, cargos);
			 SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}se encuentra armado, procedan con precaución.", cargos2, cargos);
			 SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		case 4:
			{
			 Info[params[0]][pWantedLevel] = 4;
			 SetPlayerWantedLevel(params[0], 4);
			 for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
			 SetPlayerMarkerForPlayer(i, params[0], c4_color);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}abrió fuego, necesito refuerzos.", cargos2, cargos);
			 SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}abrió fuego, necesito refuerzos.", cargos2, cargos);
			 SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		case 5:
			{
		     Info[params[0]][pWantedLevel] = 5;
			 SetPlayerWantedLevel(params[0], 5);
			 for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
			 SetPlayerMarkerForPlayer(i, params[0], c5_color);
		   	 format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}asesinó, detener vivo o muerto.", cargos2, cargos);
			 SendRadioMessage(1, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}asesinó, detener vivo o muerto.", cargos2, cargos);
			 SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		case 6:
			{
			 Info[params[0]][pWantedLevel] = 6;
			 SetPlayerWantedLevel(params[0], 6);
		     for(new i = 0; i < GetMaxPlayers(); i++)
			 if(IsACop(playerid))
			 SetPlayerMarkerForPlayer(i, params[0], c6_color);
			 format(string, sizeof(string), "[Radio] {FFFFFF}(Oficial %s) dice: {00D2CF}%s {FFFFFF}es extremadamente peligroso, disparen a matar.", cargos2, cargos);
			 SendRadioMessage(1, TEAM_BLUE_COLOR, string);
	 		 format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: {00D2CF}%s {FFFFFF}es extremadamente peligroso, disparen a matar.", cargos2, cargos);
			 SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			}
		}
	  }
		else SendClientMessage(playerid, -1, "Utiliza: /su [id] [1-6]");
	return 1;
	}
forward Policia(member, color, string[]);
public Policia(member, color, string[])
{
 for(new i = 0; i < MAX_PLAYERS; i++)
	{
	 if(IsPlayerConnected(i))
		{
	     if(IsACop(i))
		 {
		 SendClientMessage(i, color, string);
		 }
		}
	}
}
	CMD:sospechosos(playerid, params[])
	{
		if(IsACop(playerid))
		{
			new string[128], x;

			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Sospechosos buscados:");
			foreach(Player, i)
			{
				if(Info[i][pWantedLevel] >= 1)
				{
					format(string, sizeof(string), "%s%s: %d", string,GetPlayerNameEx(i),Info[i][pWantedLevel]);
					x++;
					if(x > 3)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						x = 0;
						format(string, sizeof(string), " ");
					}
					else
					{
						format(string, sizeof(string), "%s, ", string);
					}
				}
			}
			if(x <= 3 && x > 0)
			{
				string[strlen(string)-2] = '.';
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
		else
		{
			 SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
		}
		return 1;
	}
    zcmd(bk, playerid, params[])
	{
        if(Info[playerid][pRequestingBackup] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Ya tienes un pedido de ayuda.");
        if(IsAPolice(playerid) || Team_FBI(playerid) || Team_SAEM(playerid))
		{
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
  			if(IsAPolice(playerid) || Team_FBI(playerid) || Team_SAEM(playerid))
			{
			    Info[playerid][pRequestingBackup] = 1;
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", GetPlayerNameEx(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
			    format(string, sizeof(string), "* A todas los agentes, %s necesita refuerzos (Información marcada).", GetPlayerNameEx(playerid));
			    SendRadioMessage(2, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
    					if(IsAPolice(i) || Team_FBI(i) || Team_SAEM(i))
						{
							SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
							if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
						}
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Utiliza /bkc, para cancelar los refuerzos.");
				SetTimerEx("BackupClear", 180000, false, "iii", playerid, 1, 1);
			}
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
    }
    zcmd(bkc, playerid, params[])
	{
        if(Team_LSPD(playerid) || Team_SAEM(playerid) || Team_FBI(playerid)) BackupClear(playerid, 1, 0);
        else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
	}
    zcmd(bks, playerid, params[])
	{
        if(Info[playerid][pRequestingBackup] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Ya tienes un pedido de ayuda.");
        if(Team_SAEM(playerid))
		{
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
			if(Team_SAEM(playerid))
			{
			    Info[playerid][pRequestingBackup] = 1;
			    format(string, sizeof(string), "* A todos los soldados, %s necesita ayuda (Información marcada).", GetPlayerNameEx(playerid));
			    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Team_SAEM(i) && OnDuty[i] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
							if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
						}
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Utiliza /bkc, para cancelar los refuerzos.");
				SetTimerEx("BackupClear", 180000, false, "iii", playerid, 1, 1);
			}
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
    }
    zcmd(multar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_SAEM(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No formas parte del cuerpo policial.");
        if(OnDuty[playerid] == 0 && !Team_SAEM(playerid)) return  SendClientMessageEx(playerid, COLOR_WHITE, "No estas en servicio.");
        if(!sscanf(params, "dis[64]", params[0], params[1], params[2]))
        {
            if(params[1] < 0 || params[1] > 10000) return SendClientMessageEx(playerid, COLOR_WHITE, "El máximo de multa son 10000$");
            if(IsPlayerConnected(params[0]))
			{
			    if(Facturing[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este jugador ya tiene una petición pendiente.");
			    if(!ProxDetectorS(8.0,playerid,params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Muy lejos de el jugador.");
			    new string[128];
			    if(GetPlayerCash(params[0]) < params[1])
				{
    				format(string, sizeof(string), "* El infractor no tiene {FFFF00}%d${FFFFFF} para pagar la multa.", params[1]);
					return SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
				else
				{
				    ClearChatbox(playerid);
				    SendClientMessageEx(params[0], -1, "Estado de Perfect City");
				    format(string, sizeof(string), "Demandante: %s", GetPlayerNameEx(playerid));
					SendClientMessageEx(params[0], -1, string);
					format(string, sizeof(string), "Infracción: %s", params[2]);
					SendClientMessageEx(params[0], -1, string);
					format(string, sizeof(string), "Multa: %d$", params[1]);
					SendClientMessageEx(params[0], -1, string);
					SendClientMessageEx(playerid, COLOR_WHITE, "* Espera la respuesta del sujeto");
					SendClientMessageEx(params[0], COLOR_WHITE, "Te han multado. Utiliza /aceptar multa ó /cancelar multa, para pagar la multa.");
					TicketOffer[params[0]] = playerid;
					TicketMoney[params[0]] = params[1];
					Facturing[params[0]] = 1;
				}
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /multar (ID) (precio) (razón)");
        return 1;
    }
     zcmd(m, playerid, params[])
    {
        if(sscanf(params, "s[128]", params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /m (texto)");
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo.");
		if(Team_SAMD(playerid) || IsACop(playerid) || Team_SAEM(playerid) || Team_BomberosLS(playerid) || Team_FBI(playerid))
        {
			new string[128];
			format(string, sizeof(string), "(Megáfono) %s: o< %s",GetPlayerNameEx(playerid), params[0]);
			ProxDetector(60.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes utilizar este comando.");
        return 1;
    }
    zcmd(dni, playerid, params[])
    {
        if(sscanf(params, "d", params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dni (id)");
        if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
	        new string[90];
	        Reg_ShowDNI(playerid, params[0]);
	        format(string, sizeof(string), "* %s le muestra sus documentos a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
		return 1;
    }
    zcmd(encontrar, playerid, params[])
    {
        if(!Team_FBI(playerid) || Info[playerid][pDivision] != 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a la Unidad de Investigación.");
        if(UsedFind[playerid] > 1) return SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Central: Ahora es imposible, prueba de aquí a unos segundos");
		if(!sscanf(params, "d", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
                new string[128];
			    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
			    SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "Estableciendo conexión...");
			    format(string, sizeof(string), "** Conectado con Satélite #%d Cobertura(%d)", sat,luck);
			    SendClientMessageEx(playerid, COLOR_WHITE,string);
			    format(string, sizeof(string), "** Persona a buscar: %s", GetPlayerNameEx(params[0]));
			    SendClientMessageEx(playerid, COLOR_WHITE,string);
				if(luck > 10 && Info[params[0]][pSex] == 1) 		SendClientMessageEx(playerid, COLOR_WHITE,"Sexo: Masculino");
				if(luck > 10 && Info[params[0]][pSex] == 2) 		SendClientMessageEx(playerid, COLOR_WHITE,"Sexo: Femenino");
				if(luck > 13 && IsPlayerInAnyVehicle(params[0])) 		SendClientMessageEx(playerid, COLOR_WHITE,"Estado: En Automóvil");
				if(luck > 17 && Info[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", Info[params[0]][pPnumber]); SendClientMessageEx(playerid, COLOR_WHITE,string);
    			SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			UsedFind[playerid] = reuse_time;
				WhoFind[playerid] = params[0];
				format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
    			SendClientMessageEx(playerid, COLOR_WHITE,string);
    			format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
    			SendClientMessageEx(playerid, COLOR_WHITE,string);
    			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /encontrar (jugador)");
        return 1;
    }
    zcmd(encontrarveh, playerid, params[])
    {
        if(!Team_FBI(playerid) || Info[playerid][pDivision] != 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a la Unidad de Investigación.");
        if(UsedFind[playerid] > 1) return SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Central: Ahora es imposible, prueba de aquí a unos segundos");
		if(!sscanf(params, "i", params[0]))
		{
            new string[128];
		    if(params[0] < 0 || params[0] > MAX_VEHICLES) return SendClientMessageEx(playerid, COLOR_GRAD2, "Error ID.");
		    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
		    SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "* Estableciendo conexión...");
		    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
		    SendClientMessageEx(playerid, COLOR_WHITE,string);
		    format(string, sizeof(string), "ID Vehículo: %d",params[0]);
		    SendClientMessageEx(playerid, COLOR_WHITE,string);
			if(luck > 13)
			{
   				format(string, sizeof(string), "Modelo Vehículo: %s", GetVehicleFriendlyName(params[0]));
		    	SendClientMessageEx(playerid, COLOR_WHITE,string);
			}
   			SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "_____________________________________");
			UsedFind[playerid] = reuse_time;
			WhoFind[playerid] = params[0];
			format(string, sizeof(string), "La información se marcará en el mapa en: %d segundos.", sat+luck);
	   		SendClientMessageEx(playerid, COLOR_YELLOW,string);
	   		format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
	   		SendClientMessageEx(playerid, COLOR_YELLOW,string);
	   		SetTimerEx("Detective_FindCar", sat+luck*1000, false, "i", playerid);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /encontrar (vehículo)");
        return 1;
    }
    zcmd(pagar, playerid, params[])
    {
        new string[128];
        if(Info[playerid][pConnectTime] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes que tener mínimo 2 Horas de juego para dar dinero.");
        if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto aquí.");
        if(!sscanf(params, "di", params[0], params[1]))
		{
            if(params[1] > GetPlayerCash(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No posees esa cantidad.");
            if(params[1] < 5 || params[1] > 40000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Máximo: $40,000");
            if(IsPlayerConnected(params[0]))
			{
                if (GetPVarInt(playerid, "GiveMoneyTimer") > 0)
				{
				format(string, sizeof(string), "Tienes que esperar {FF0000}%d{FFFFFF} segundos después de pagado.", GetPVarInt(playerid, "GiveMoneyTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
				}
				if(ProxDetectorS(5.0, playerid, params[0]))
				{
    			SetPVarInt(playerid, "GiveMoneyTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PAYTIMER);
				Bought(playerid, params[1]);
				Earn(params[0], params[1]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "* %s saca un poco de dinero (%d$) y se lo da a %s", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "* %s pagó %d$ a %s", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
    			Log("logs/pagos.log", string);
                }
				else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
            }
			else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /pagar (jugador) (cantidad)");
        return 1;
    }
	zcmd(vehid, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No has logueado.");
        if(IsPlayerInAnyVehicle(playerid))
		{
			new string[12];
	        format(string, sizeof(string), "* Vehiculo ID: %d.", GetPlayerVehicleID(playerid));
	        SendClientMessageEx(playerid, COLOR_GREY, string);
	    } else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehiculo");
	    return 1;
	}
    zcmd(desrentarauto, playerid, params[]){
        new idcar = GetPlayerVehicleID(playerid);
        if(IsaRent[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No has rentado ningún auto.");
		if(IsARentCar(idcar) && HireKey[playerid] == idcar)
		{
		    SetVehicleParamsEx(idcar,0,0,0,0,0,0,0);
  			SetVehicleToRespawn(HireKey[playerid]);
  			SendClientMessageEx(playerid, COLOR_WHITE, "Gracias, así ayudas a mantener en orden la ciudad.");
  			IsaRent[playerid] = 0;
  			RentTime[playerid] = 0; HireKey[playerid] = 9999;
		}
        return 1;
    }
    zcmd(subirnivel, playerid, params[])
	{
	    if(Info[playerid][pLevel] >= 0)
		{
			new nxtlevel = Info[playerid][pLevel]+1;
			new expamount = nxtlevel*explevel;
			if(Info[playerid][pExp] < expamount)
			{
			    new infostring[128];
				format(infostring, 128, "Necesitas %d puntos para subir de nivel, tienes %d.",expamount,Info[playerid][pExp]);
				SendClientMessageEx(playerid, COLOR_GRAD1, infostring);
				return 1;
			}
			else
			{
			    new infostring[64];
				format(infostring, sizeof(infostring), "{008E5D}¡Felicitaciones! {FFFFFF}Has subido al nivel {A2DC35}%d", nxtlevel);
				SendClientMessageEx(playerid, COLOR_WHITE, infostring);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				Info[playerid][pLevel]++;
				Info[playerid][pExp] = Info[playerid][pExp]-expamount;
				Info[playerid][pBoatLic] = 0;
				Info[playerid][pCarLic] = 0;
				Info[playerid][pFlyLic] = 0;
				//Info[playerid][pGunLic] = 0;
				OnPlayerSavedStats(playerid);
				SendClientMessageEx(playerid, COLOR_GRAD1, "{A2DC35}[INFO]:{FFFFFF} Como subiste de nivel, tus licencias han expirado excepto la de Armas");
				if(Info[playerid][pLevel] == 5) SendClientMessageEx(playerid, COLOR_GRAD1, "{A2DC35}[LVL5]:{FFFFFF} El canal de ayuda será deshabilitado automáticamente al ingresar al servidor.");
			}
		}
	    return 1;
 	}
    zcmd(quitar, playerid, params[])
    {
		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
			return 1;
		}
        if(!IsACop(playerid) && !Team_SAEM(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización para usar este comando.");
        new item[32], string[128], giveplayerid;
        if(!sscanf(params, "ds[32]",giveplayerid,item))
        {
            if(!IsPlayerConnected(giveplayerid))               return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no conectado.");
			if(GetPlayerSpecialAction(giveplayerid) != SPECIAL_ACTION_HANDSUP && Info[giveplayerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes revisar a una persona si no tiene las manos arriba (/rendirse) o si está detenida.");
			if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(strcmp(item,"lconduccion",true) == 0)
			{
			    Info[giveplayerid][pCarLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"lvuelo",true) == 0)
			{
			    Info[giveplayerid][pFlyLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"larma",true) == 0)
			{
			    Info[giveplayerid][pGunLic] = 0;
		        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"drogas",true) == 0)
			{
                Info[giveplayerid][pCrack] = 0;
                Info[giveplayerid][pPot] = 0;
			    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"materiales",true) == 0)
			{
                Info[giveplayerid][pMats] = 0;
			    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"telefono",true) == 0)
			{
                Info[giveplayerid][pPnumber] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"pasaporte",true) == 0)
			{
                Info[giveplayerid][pPasaporte] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el pasaporte a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"armas",true) == 0)
			{
			    ResetPlayerWeaponsEx(giveplayerid);
       			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
       			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else SendClientMessageEx(playerid, COLOR_GRAD2, "Item incorrecto.");
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GRAD2, "* /quitar <jugador> <item>");
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas, pasaporte");
		}
        return 1;
	}
    zcmd(obtenerip, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 4000) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        if(!sscanf(params, "d", params[0]))
        {
            new ip[20], string[64];
            GetPlayerIp(params[0],ip,sizeof(ip));
            format(string, sizeof(string), "* La IP de %s es %s", GetPlayerNameEx(params[0]), ip);
            SendClientMessageEx(playerid, COLOR_GRAD2, string);
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza /obtenerip (jugador)");
        return 1;
    }
	CMD:desbanip(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pBanAppealer] == 1)
		{
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /desbanip (ip)");
			if(IsValidIP(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa IP no es válida!");
			new string[128], year, month,day;
			getdate(year, month, day);
			RemoveBan(params);
			format(string, 128, "[AdmCmd]: %s desbaneó la IP %s", GetPlayerNameEx(playerid), params);
			ABroadCast(COLOR_GENERAL,string,2);
			format(string, sizeof(string), "AdmCmdExe: %s desbaneó la IP %s (%d-%d-%d)", GetPlayerNameEx(playerid), params, month, day, year);
			Log("logs/desbanip.log", string);
		}
		return 1;
	}
 CMD:desban(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
  		if(Info[playerid][pBanAppealer] == 1)
		{
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /desban (Nombre_Apellido)");
			if(INI_Exist(params))
			{
				new PlayerFile[ 13 + MAX_PLAYER_NAME + 1], string[128]; //tmpunban[32], stringfile[32]
	    		format( PlayerFile , sizeof PlayerFile, USERFILE, params);
	    		new INI:File = INI_Open(PlayerFile);
	    		INI_SetTag(File,"data");
	    		INI_WriteInt(File,"AdminZC",0);
	    		INI_WriteInt(File,"BanAppealer",0);
				INI_WriteInt(File,"FactionModerator",0);
				INI_WriteInt(File,"GangModerator",0);
				INI_WriteInt(File,"AdminNivelZC",0);
				INI_WriteInt(File,"Helper",0);
				INI_WriteInt(File,"Publicista",0);
				INI_WriteInt(File,"BanZC",0);
				INI_WriteInt(File,"ShopTech",0);
				INI_Close(File);
				format(string, 128, "[AdmCmdExe]: %s fue desbaneado por %s.", params, GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED, string, 2);
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "[LOG] %s fue desbaneado por %s. (%d-%d-%d)", params, GetPlayerNameEx(playerid),month,day,year);
				Log("logs/desban.log", string);
			}
			else SendClientMessageEx( playerid, COLOR_WHITE, "Esa cuenta no existe." );
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando");
		return 1;
	}
    zcmd(expulsarstaff, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 6000 || Info[playerid][pModStaff] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /expulsarstaff (Nombre_Apellido)");
  		if(INI_Exist(params))
		{
 			new PlayerFile[MAX_PLAYER_NAME + 32];
	    	format( PlayerFile , sizeof PlayerFile, USERFILE, params);
	    	new INI:File = INI_Open(PlayerFile);
    		INI_SetTag(File,"data");
    		INI_WriteInt(File,"Publicista",0);
	    	INI_WriteInt(File,"Helper",0);
        	INI_WriteInt(File,"AdminZC",0);
        	INI_WriteInt(File,"AdminNivelZC",0);
    		INI_WriteInt(File,"BanAppealer",0);
    		INI_WriteInt(File,"FactionModerator",0);
    		INI_WriteInt(File,"GangModerator",0);
    		INI_WriteInt(File,"ShopTech",0);
    		INI_Close(File);
           	format(string, sizeof(string), "Perfect City: %s expulsó del staff a %s (CMD OFFLINE)", GetPlayerNameEx(playerid), params);
           	ABroadCast(COLOR_GENERAL,string,4);
           	Log("logs/admin.log", string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Está cuenta no existe.");
		return 1;
	}
    zcmd(banoffline, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
	  	if(Info[playerid][pAdminZC] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
		new string[128], playername[MAX_PLAYER_NAME], reason[64];
		if(sscanf(params, "ss", playername, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /banear (Nombre_Apellido) (Razón)");
  		if(INI_Exist(playername))
		{
				new PlayerFile[MAX_PLAYER_NAME + 32];
	    		format( PlayerFile , sizeof PlayerFile, USERFILE, playername);
	    		new INI:File = INI_Open(PlayerFile);

	    		INI_SetTag(File,"data");
	    		INI_WriteInt(File,"Publicista",0);
	    		INI_WriteInt(File,"AdminZC",0);
	    		INI_WriteInt(File,"Helper",0);
	    		INI_WriteInt(File,"AdminNivelZC",0);
	    		INI_WriteInt(File,"BanZC",1);
	    		INI_Close(File);
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "AdmCmd: %s fue baneado por %s, razón: %s (%d-%d-%d)", playername, GetPlayerNameEx(playerid), reason, month, day, year);
				Log("logs/offban.log", string);
				format(string, 128, "[AdmCmd]: %s fue baneado por %s, razón: %s [CMD OFFLINE]", playername, GetPlayerNameEx(playerid), reason);
				ABroadCast(COLOR_LIGHTRED,string,2);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Esa cuenta no existe." );
		return 1;
	}
	/*CMD:changepass(playerid, params[])
	{
		if (gPlayerLogged{playerid})
		{
			SafeDialogEx(playerid, CPASS, DIALOG_STYLE_PASSWORD, "{008EC1}Cambiar Clave", "Por favor pon tu contraseña nueva:", "Cambiar", "Atrás" );
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Debes de estar conectado para usar este comando.");
		return 1;
	}*/
	CMD:ipod(playerid, params[])
	{
	    if(Info[playerid][pIpadMusic] == 1)
	    {
	        new string[128];
			SafeDialogEx(playerid, IPAD, DIALOG_STYLE_LIST, "{008EC1}Ipod", "Drum and Bass HD\nReggaeton 24/7\nMetal Time\nRock and Roll\nLa Mega\nRap Gansta\nBachata radio\nRadio Mambo\nSlap Back Radio\n Maxima FM\nApagar IpodMusic", "Play", "Guardar");
            format(string, sizeof(string), "* %s saca su Ipod del bolsillo.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes un IpodMusic, puedes conseguirlo en un 24/7");
		return 1;
	}
 	zcmd(cuenta, playerid, params[]){
		if(Info[playerid][pLevel] >= 1)
		{
			ShowStats(playerid,playerid);
		}
		return 1;
	}
	zcmd(est, playerid, params[])
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Comando removido, ahora es /cuenta.");
		return 1;
	}
	zcmd(gob, playerid, params[])
	{
	    new string[128];
		if(isnull(params))
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /gob (texto)");
			return 1;
		}		if(Info[playerid][pLeader] == 1 || Gobierno(playerid) || Info[playerid][pLeader] == 2 || Info[playerid][pLeader] == 3 || Info[playerid][pLeader] == 4 || Info[playerid][pLeader] == 7 || Info[playerid][pLeader] == 10)
		{
			if(Info[playerid][pLeader] == 1)
	    	{
			    format(string, sizeof(string), "[SAPD] Comandante %s: %s", GetPlayerNameEx(playerid), params[0]);
				SendClientMessageToAllEx(0x2641FEAA, string);
	    	}
			else if(Info[playerid][pLeader] == 2)
	    	{
			    format(string, sizeof(string), "[FBI] Director %s: %s", GetPlayerNameEx(playerid), params[0]);
				SendClientMessageToAllEx(0x2641FEAA, string);
	    	}
	    	else if(Info[playerid][pLeader] == 3)
	        {
			    format(string, sizeof(string), "[Ejército Militar] Coronel %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(0x2641FEAA, string);
	        }
   	    	else if(Info[playerid][pLeader] == 18 && Hackeargob == 1)
	        {
			    format(string, sizeof(string), "[Mr.Robot %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(COLOR_ADMIN5000, string);
	        }
   	    	else if(Info[playerid][pMember] == 18 && Hackeargob == 1)
	        {
			    format(string, sizeof(string), "[Hacker %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(COLOR_ADMIN5000, string);
	        }
            else if(Info[playerid][pLeader] == 4)
	    	{
			    format(string, sizeof(string), "[SAMD] Director %s: %s", GetPlayerNameEx(playerid), params[0]);
				SendClientMessageToAllEx(0x2641FEAA, string);
	    	}
	        else if(Presidente(playerid))
	        {
			    format(string, sizeof(string), "[GOBIERNO] Gobernador %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(0x2641FEAA, string);
			}
			else if(Gobierno(playerid) && Info[playerid][pRank] == 5)
			{
			    format(string, sizeof(string), "[GOBIERNO] Alcalde %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(0x2641FEAA, string);
			}
			else if(Info[playerid][pLeader] == 9)
			{
			    format(string, sizeof(string), "[S.JUD] Magistrado %s: %s", GetPlayerNameEx(playerid), params[0]);
			    SendClientMessageToAllEx(0x2641FEAA, string);
			}
	    	else if(Info[playerid][pLeader] == 10)
	    	{
			    format(string, sizeof(string), "[LSFD] Director %s: %s", GetPlayerNameEx(playerid), params[0]);
				SendClientMessageToAllEx(0x2641FEAA, string);
	    	}
  		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización para usar este comando.");
		return 1;
	}
 	zcmd(impuesto, playerid, params[])
	{
	    if(Presidente(playerid))
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 0 || params[0] > 1000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Valor entre 1 - 1000");

	            new string[90];
	            TaxValue = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] {FFFFFF}Nuevo pago por impuesto. (%d$)", TaxValue);
				SendClientMessageToAllEx(0x00ACFFFF, string);

	        }
	        else SendClientMessageEx(playerid, COLOR_GRAD2, "* /impuesto <cantidad>");
	    }
	    else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización para usar este comando.");
	    return 1;
 	}
	zcmd(altavoz, playerid, params[])
	{
        if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted no tiene un telefono.");
        if(Mobile[playerid] == INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una llamada telefonica.");
        if(IsPlayerConnected(playerid))
        {
			if(Info[playerid][pSpeaker] == 0)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW2, "* Beep * El altavoz está conectado.");
				Info[playerid][pSpeaker] = 1;
				return 1;
			}
			if(Info[playerid][pSpeaker] == 1)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW2, "* Beep * El altavoz se ha desconectado.");
				Info[playerid][pSpeaker] = 0;
				return 1;
			}
		}
		return 1;
	}
    zcmd(derechos, playerid, params[])
    {
        if(IsACop(playerid))
        {
            new string[128];
	        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",GetPlayerNameEx(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",GetPlayerNameEx(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",GetPlayerNameEx(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",GetPlayerNameEx(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
    zcmd(robar, playerid, params[])
    {
        if(Hitman(playerid) || Team_GRO(playerid) || Team_BAL(playerid) || Team_SUR(playerid) || Team_RUSA(playerid) || Team_LCN(playerid) || Team_YAK(playerid) || Team_NDRA(playerid) || Info[playerid][pFMember] < 255)
        {
           if(IsAt247(playerid))
           {
              if(Info[playerid][pRob] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ya robaste, espera al próximo PayDay.");
              else
              {
              new string[128];
              new robmoney = random(15000);
              Earn(playerid, robmoney);
              ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
              format(string, sizeof(string), "* %s apunta con su arma al vendedor", GetPlayerNameEx(playerid));
              ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
              SendRadioMessage(1, 0x8D8DFFFF, "* Central: Unas de las tiendas del 24/7 está siendo robada.");
              format(string, sizeof(string), "* Sospechoso identificado como: %s.", GetPlayerNameEx(playerid));
		      Info[playerid][pRob] = 1;
		      SendClientMessageEx(playerid, COLOR_GENERAL, "{FFFF00}[Robo]:{FFFFFF} Has robado un 24-7 la policia va a por ti, huye.");
              }
            }
		 return 1;
		}
		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
			return 1;
		}
        if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar esto aquí.");
 		if(Hitman(playerid) || Team_GRO(playerid) || Team_BAL(playerid) || Team_SUR(playerid) || Team_RUSA(playerid) || Team_LCN(playerid) || Team_YAK(playerid) || Team_NDRA(playerid) || Info[playerid][pFMember] < 255)
        {
		    if(Info[playerid][pRob] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ya robaste, espera al próximo PayDay.");
		    if(!sscanf(params, "s[32]", params[0]))
		    {
		        new string[128];
		        if(strcmp(params[0],"persona",true) == 0)
		        {
		            new victim = GetClosestPlayer(playerid);
		            if(ProxDetectorS(2.0,playerid, victim))
		            {
                        if(GetPlayerWeapon(victim) == 41)
		    			{
	        				format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", GetPlayerNameEx(playerid), GetPlayerNameEx(victim));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s le rocía la cara con un spray anti-ladrones a %s.", GetPlayerNameEx(victim), GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Info[playerid][pRob] = 1;
							SendClientMessageEx(params[0], COLOR_YELLOW2, "-> ¡Evitaste que te robaran!");
					    }
					    new rob = random(2)+1;
					    if(rob == 1)
					    {
	        				Info[params[0]][pPnumber] = 0;
					        format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y lo logra", GetPlayerNameEx(playerid) ,GetPlayerNameEx(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
       						format(string, sizeof(string), "* %s se acerca hacia %s y le roba su teléfono.", GetPlayerNameEx(playerid) ,GetPlayerNameEx(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendClientMessageEx(params[0], COLOR_YELLOW2, "¡Te han robado el teléfono!");
							SendClientMessageEx(playerid, COLOR_YELLOW2, "¡Has robado un teléfono!");
							Info[playerid][pRob] = 1;
							TelfRob[playerid] += 1;
						}
						else
						{
      						format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s se da cuenta y le da un golpe de puño a %s.", GetPlayerNameEx(params[0]), GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendClientMessageEx(params[0], COLOR_GENERAL, "Has evitado que te roben.");
							SendClientMessageEx(playerid, COLOR_YELLOW, "Te han pillado, Menudo ostión te has llevado, ¡Corre!");
							Info[playerid][pRob] = 1;
						}
		            }
		        }
		        else if(strcmp(params[0],"24-7",true) == 0)
		        {
		            if(!IsAt247(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en el 24/7.");
		            else
		            {
		            	new robmoney = random(15000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
						Info[playerid][pRob] = 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendRadioMessage(1, 0x8D8DFFFF, "* Central: Unos de las tiendas del 24/7 está siendo robada.");
						format(string, sizeof(string), "* Sospechoso identificado como: %s.", GetPlayerNameEx(playerid));
		            }
		        }
		    }
		    else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /robar (24-7) ó (Persona)");
		}
        return 1;
    }
	CMD:ayudafichas(playerid, params[])
	{
    	SendClientMessageEx(playerid, COLOR_GREEN,"*** SOBRE FICHAS ***");
    	SendClientMessageEx(playerid, COLOR_WHITE,"Fichas VIP pueden ser canjeadas por armas en el VIP Locker.");
    	SendClientMessageEx(playerid, COLOR_WHITE,"Fichas VIP pueden ser ganadas en eventos o regalos.");
    	SendClientMessageEx(playerid, COLOR_WHITE,"Las armas cuestan de 1 a 5 fichas cada una.");
	    SendClientMessageEx(playerid, COLOR_WHITE,"Si tu deseas dar fichas VIP usa /darfichas");
	    SendClientMessageEx(playerid, COLOR_WHITE,"Si tu deseas vender fichas VIP usa /venderfichasvip");
	    return 1;
	}
    /*zcmd(hotdog, playerid, params[])
	{
        if(!IsAtHotDogCar(playerid))   return SendClientMessageEx(playerid, COLOR_WHITE, "No estas en un lugar donde comprar un Hot Dog.");
		if(GetPlayerMoney(playerid) < 30) return SendClientMessageEx(playerid, COLOR_FADE2, "Vendedor dice: ¡Vete a otro lugar a comer gratis!");

		 new string[200];
	     new Float:Health;
         GetPlayerHealth(playerid, Health);
	        if(Health < 101)
		    {
            SetHP(playerid, Health+20);
            }
	    format(string, sizeof(string), "* %s come un Hot Dog", GetPlayerNameEx(playerid));
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    GivePlayerCash(playerid, -30);
	    ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Te has comido un Hot Dog y has recuperado 20 puntos de HP.");
		return 1;
	}*/
	zcmd(irfacc, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] >= 3 || Info[playerid][pFactionModerator] == 1)
		{
  			new admintel[] = "SAPD\nFBI\nSAMD\nLSRTV\nEUEM\nMecanicos\nGobierno\nSicarios\nSistema Judicial\nLSFD\nLCN\nYakuza\nRusa";
            SafeDialogEx(playerid,TELEPORTS_FACCIONES,DIALOG_STYLE_LIST,"{008EC1}Teleports Facciones {FF0000}Perfect City",admintel,"Ir","Cancelar");
		}
		return 1;
	}
	zcmd(darlider, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] >= 6 && Info[playerid][pFactionModerator] == 1)
		{
		    if(!sscanf(params, "di", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > MAX_FACTION) 		return SendClientMessageEx(playerid, COLOR_WHITE, "ID facción incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessageEx(playerid, COLOR_WHITE, "Jugado desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{Info[params[0]][pRank] = 0; ftext = "Ninguna"; }
		            case 1: 	{Info[params[0]][pRank] = 6; ftext = "San Andreas Police Dep"; }
		            case 2: 	{Info[params[0]][pRank] = 6; ftext = "Federal Bureau Investigation"; }
		            case 3: 	{Info[params[0]][pRank] = 6; ftext = "Ejercito Militar"; }
		            case 4: 	{Info[params[0]][pRank] = 6; ftext = "San Andreas Dep Médico"; }
		            case 5:     {Info[params[0]][pRank] = 6; ftext = "Los Santos Radio y TV"; }
		            case 6:     {Info[params[0]][pRank] = 6; ftext = "Mecanicos"; }
		            case 7:     {Info[params[0]][pRank] = 6; ftext = "Gobierno de Los Santos"; }
                    case 8:     {Info[params[0]][pRank] = 6; ftext = "Sicarios"; }
                    case 9:     {Info[params[0]][pRank] = 6; ftext = "Sistema Judicial"; }
                    case 10:    {Info[params[0]][pRank] = 6; ftext = "Departamento de Bomberos"; }
                    case 11:    {Info[params[0]][pRank] = 6; ftext = "La Cosa Nostra"; }
                    case 12:    {Info[params[0]][pRank] = 6; ftext = "Yakuza"; }
                    case 13:    {Info[params[0]][pRank] = 6; ftext = "Mafia Rusa"; }
                    case 14:    {Info[params[0]][pRank] = 6; ftext = "Ndrangheta "; }
                    case 15:    {Info[params[0]][pRank] = 6; ftext = "Groove Street "; }
                    case 16:    {Info[params[0]][pRank] = 6; ftext = "Ballas "; }
                    case 17:    {Info[params[0]][pRank] = 6; ftext = "Sureños "; }
                    case 18:    {Info[params[0]][pRank] = 6; ftext = "FSociety "; }
		        }
		        new string[128];
		        pTazer[params[0]] = 0;
		        Info[params[0]][pLeader] = params[1];
		        Info[params[0]][pMember] = params[1];
		        format(string, sizeof(string), "Administrador %s te asignó el líder de la facción %s.", GetPlayerNameEx(playerid), ftext);
		        SendClientMessageEx(params[0], 0x6ADFFFFF, string);
		        format(string, sizeof(string), "[ADM]: %s asigno lider de la facción %s a %s.", GetPlayerNameEx(playerid), ftext, GetPlayerNameEx(params[0]));
				ABroadCast(COLOR_LIGHTGREEN, string, 3);
		    }
		    else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /darlider (jugador) (facción)");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "No autorizado.");
        return 1;
    }
    //zcmd - Bank
    zcmd(balance, playerid, params[])
	{
        if(IsAtATM(playerid))
	    {
            new string[64];
            SendClientMessageEx(playerid, COLOR_WHITE, "Banco de Los Santos");
			format(string, sizeof(string), "{A2DC35}[BANCO LS]:{FFFFFF} Saldo Disponible:  %d$",Info[playerid][pAccount]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		} else SendClientMessageEx(playerid, COLOR_GREY, "{FF0000}[ATENCION]:{FFFFFF} No estás en un cajero.");
		return 1;
	}
    zcmd(licencias, playerid, params[])
	{
	    new giveplayerid, item[32], string[84];
        if(!sscanf(params, "ds", giveplayerid, item))
		{
            if(IsPlayerConnected(giveplayerid))
			{
   				if(ProxDetectorS(5.0, playerid, giveplayerid))
   				{
   				    if(strcmp(item,	"conduccion",	true) == 0)
   				    {
   				        if(Info[playerid][pCarLic] > 0)
   				        {
   				            ShowLicencia(playerid,giveplayerid,1);
   				            format(string, sizeof(string), "* %s muestra su licencia de conducción a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
   				        }
   				        else
				   		{
						   SendClientMessageEx(playerid, -1, "* No tienes licencia, la persona a la que se la has mostrado sabe que no tienes licencia");
						   SendClientMessageEx(giveplayerid, -1, "* La persona que ha intentado mostrarte la licencia no tiene licencia");
						   return 1;
				   		}
   				    }
   				    if(strcmp(item,	"navegacion",	true) == 0)
   				    {
   				        if(Info[playerid][pBoatLic] > 0)
   				        {
   				            ShowLicencia(playerid,giveplayerid,2);
                            format(string, sizeof(string), "* %s muestra su licencia de navegación a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
   				        }
   				        else
				   		{
						   SendClientMessageEx(playerid, -1, "* No tienes licencia, la persona a la que se la has mostrado sabe que no tienes licencia");
						   SendClientMessageEx(giveplayerid, -1, "* La persona que ha intentado mostrarte la licencia no tiene licencia");
						   return 1;
				   		}
   				    }
   				    if(strcmp(item,	"aviacion",	true) == 0)
   				    {
   				        if(Info[playerid][pFlyLic] > 0)
   				        {
   				            ShowLicencia(playerid,giveplayerid,3);
                            format(string, sizeof(string), "* %s muestra su licencia de aviación a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
   				        }
   				        else
				   		{
				   		    ShowLicencia(playerid,giveplayerid,3);
						   SendClientMessageEx(playerid, -1, "* No tienes licencia, la persona a la que se la has mostrado sabe que no tienes licencia");
						   SendClientMessageEx(giveplayerid, -1, "* La persona que ha intentado mostrarte la licencia no tiene licencia");
						   return 1;
				   		}
   				    }
   				    if(strcmp(item,	"armas",	true) == 0)
   				    {
   				        if(Info[playerid][pGunLic] > 0)
   				        {
   				            ShowLicencia(playerid,giveplayerid,4);
                            format(string, sizeof(string), "* %s muestra su licencia de armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
   				        }
   				        else
				   		{
						   SendClientMessageEx(playerid, -1, "* No tienes licencia, la persona a la que se la has mostrado sabe que no tienes licencia");
						   SendClientMessageEx(giveplayerid, -1, "* La persona que ha intentado mostrarte la licencia no tiene licencia");
						   return 1;
				   		}
   				    }
   				    if(strcmp(item,	"taxista",	true) == 0)
   				    {
   				        if(Info[playerid][pTaxiLicense] > 0)
   				        {
   				            ShowLicencia(playerid,giveplayerid,5);
                            format(string, sizeof(string), "* %s muestra su licencia de taxista a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
   				        }
   				        else
				   		{
						   SendClientMessageEx(playerid, -1, "* No tienes licencia, la persona a la que se la has mostrado sabe que no tienes licencia");
						   SendClientMessageEx(giveplayerid, -1, "* La persona que ha intentado mostrarte la licencia no tiene licencia");
						   return 1;
				   		}
   				    }
					format(string, sizeof(string), "* %s muestra sus licencias a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
					ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    }else SendClientMessageEx(playerid, COLOR_WHITE, "Estás demasiado lejos del jugador.");
			}else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /licencias (jugador) (opcion: conduccion, navegacion, aviacion, armas, taxista).");
        return 1;
    }
	CMD:reportarbug(playerid, params[])
	{
	    if(Info[playerid][pBlockBug] == 0)
	    {
	   		SafeDialogEx(playerid,REBUG,DIALOG_STYLE_INPUT,"{008EC1}Reportar Bug","{FFFFFF}Escribe exactamente el bug que has encontrado, se quedará guardado en la base de datos\ncuando el equipo de desarrolladores lo revise, tratarán de solucionar el bug lo más rapido posible.\n\nGracias por reportar.", "Reportar", "Cancelar");
	   	}
	   	else SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} No puedes reportar bugs, estás bloqueado del comando. Razón: Abuso de Comando");
	   	return 1;
	}
	CMD:retips(playerid, params[])
	{
		SafeDialogEx(playerid,TIPRE,DIALOG_STYLE_MSGBOX,"{008EC1}Tips para Reportar","{FFFFFF}\n- Reporta lo que necesitas, no a quien necesitas.\n- Sé especifico y claro, reporta exactamente lo que necesitas.\n- No hacer falsos reportes [Advertencia].\n- No llames administradores.\n- Reporta sólo asuntos, In Game [IG].","Cerrar", "");
		return 1;
	}
    zcmd(reply, playerid, params[])
    {
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /reply (texto)");
		new string[128];
		new reportid = INVALID_REPORT_ID;
		for(new i = 0; i < MAX_REPORTS; i++)
		{
			if(Reports[i][ReportFrom] == playerid && Reports[i][CheckingReport] != 999)
			{
				reportid = i;
			}
		}
		if(reportid == INVALID_REPORT_ID)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un reporte ahora mismo.");
			return 1;
		}
		if (IsPlayerConnected(Reports[reportid][CheckingReport]))
		{
			format(string, sizeof(string), "{FF0000}[RID]{FFFFFF} %s(ID: %d): %s", GetPlayerNameEx(playerid), playerid, params);
			SendClientMessageEx(Reports[reportid][CheckingReport], COLOR_YELLOW, string);

			format(string, sizeof(string), "{008EC1}Respuesta enviada{FFFFFF} a %s: %s", GetPlayerNameEx(Reports[reportid][CheckingReport]), params);
			SendClientMessageEx(playerid,  COLOR_YELLOW, string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		return 1;
	}
	CMD:limpiarreportes(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
	    if (Info[playerid][pAdminZC] >= 1338)
		{
	        new string[128];
	        ClearReports();
	        SendClientMessageEx(playerid,COLOR_GRAD1, "Has limpiado todos los reportes activos.");
	        format(string, sizeof(string), "[AdmCmd]: %s ha limpiado todos los reportes activos.", GetPlayerNameEx(playerid));
	        ABroadCast(COLOR_GENERAL, string, 2);
	    }
	    else
		{
	        SendClientMessageEx(playerid, COLOR_WHITE, "No estas autorizado a usar este comando.");
	    }
	    return 1;
	}
		zcmd(re, playerid, params[])
    {
        if(Info[playerid][pRMuted] != 0) return SafeDialogEx(playerid,TIPRE,DIALOG_STYLE_MSGBOX,"{F95322}Reporte Bloqueado.","{FFFFFF}\n- Estas bloqueado de los reportes, tienes que esperar.\n- Reporta lo que necesitas, no a quien necesitas.\n- Se especifico y claro, reporta exactamente lo que necesitas.\n- No hacer falsos reportes [Advertencia].\n- No llames administradores.\n- Reporta sólo asuntos, In Game [IG].","Cerrar", "");
        if(AdminOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}No hay {FF0000}administradores online{FF0000} en este momento, intenta más tarde!");
        if(JustReported[playerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Espera 60 segundos para otro reporte.");
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /re (REPORTE)");

		SendReportToQue(playerid, params);
 		SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Tú reporte ha sido {00A900}enviado {FFFFFF}a la administración, en breve te atenderán.");
        JustReported[playerid] = 60;
        if(Info[playerid][pAccount] >= 50000) Info[playerid][pAccount] -= 1000;
        return 1;
    }
	CMD:creporte(playerid, params[])
	{
	    for(new i = 0; i < MAX_REPORTS; i++)
		{
		    if(Reports[i][ReportFrom] == playerid)
		    {
		        Reports[i][ReportFrom] = 999;
				Reports[i][BeingUsed] = 0;
				Reports[i][TimeToExpire] = 0;
				return SendClientMessageEx(playerid, COLOR_WHITE, "Cancelaste el reporte satisfactoriamente." );
			}
		}
		SendClientMessageEx(playerid, COLOR_GRAD2, "{FF0000}[ATENCION]:{FFFFFF} Actualmente no tienes reportes pendientes.");
		return 1;
	}
   zcmd(ar, playerid, params[])
	{
	  if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 1)
		{
			new string[128], reportid;
			if(sscanf(params, "d", reportid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ar (Reporte ID)");
			if(reportid < 0 || reportid > 50) { SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[AdmCmd]:{FFFFFF} ID del reporte no debe ser menor de 0 ni mayor de 499!"); return 1; }
			if(Reports[reportid][BeingUsed] == 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Ese RID ya fue atendido.");
				return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El que reportó se ha desconectado !");
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				return 1;
			}
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s aceptó el reporte de %s (ID: %i, RID: %i).", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]),Reports[reportid][ReportFrom],reportid);
				ABroadCast(COLOR_ORANGE, string, 2);
				format(string, sizeof(string), "%s ha aceptado tu reporte, Puedes usar {A2DC35}/reply{FFFFFF} para explicar tu reporte. [T: 60 Seg.]", GetPlayerNameEx(playerid));
				SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
				Reports[reportid][ReplyTimerr] = SetTimerEx("ReplyTimer", 60000, 0, "d", reportid);
				Reports[reportid][CheckingReport] = playerid;
				Reports[reportid][BeingUsed] = 0;
				Reports[reportid][TimeToExpire] = 0;
				strmid(Reports[reportid][Report], "None", 0, 4, 4);
		}
		return 1;
    }
    zcmd(rr, playerid, params[])
	{
	  if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 1)
		{
			new string[128], reportid;
			if(sscanf(params, "d", reportid)) return SendClientMessageEx(playerid, COLOR_WHITE,"USE: /rr [Report ID]");

			if(reportid < 0 || reportid > 499) { SendClientMessageEx(playerid, COLOR_WHITE, "ID del reporte no debe ser menor de 0 ni mayor de 499!"); return 1; }
			if(Reports[reportid][BeingUsed] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese RID ya fue atendido!");
				return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El que reportó se ha desconectado !");
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				return 1;
			}
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s rechazó el reporte de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]));
				ABroadCast(COLOR_ORANGE, string, 2);
				format(string, sizeof(string), "%s marcó tu reporte como invalido. Usa y lee muy bien {FF0000}/retips{FFFFFF} antes de reportar.", GetPlayerNameEx(playerid));
				SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				Reports[reportid][TimeToExpire] = 0;
				strmid(Reports[reportid][Report], "None", 0, 4, 4);
		}
		return 1;
	}
	CMD:nao(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 3)
		{
			new string[128], reportid;
			if(sscanf(params, "d", reportid)) return SendClientMessageEx(playerid, COLOR_WHITE,"Utiliza: /nao [Reporte ID (RID)]");

			if(reportid < 0 || reportid > 50) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} ID del reporte no debe ser menor de 0 ni mayor de 499!"); return 1; }
			if(Reports[reportid][BeingUsed] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Ese RID ya fue atendido.");
				return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} El que reportó se ha desconectado.");
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				return 1;
			}
			format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s ha revisado el reporte de %s (RID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
			ABroadCast(COLOR_GENERAL, string, 2);
			format(string, sizeof(string), "%s ha revisado tu reporte, y no podrá ayudarte debido a la ausencia de administradores de mayor rango.", GetPlayerNameEx(playerid));
			SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
			SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, "Puedes acercarte a nuestro foro para un mejor soporte, disculpa los inconvenientes.");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			Reports[reportid][TimeToExpire] = 0;
			strmid(Reports[reportid][Report], "None", 0, 4, 4);
		}
		return 1;
	}
    zcmd(aforo, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 3)
		{
			new string[128], reportid;
			if(sscanf(params, "d", reportid)) return SendClientMessageEx(playerid, COLOR_WHITE,"Utiliza: /aforo [Reporte ID (RID)]");

			if(reportid < 0 || reportid > 50) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} ID del reporte no debe ser menor de 0 ni mayor de 499."); return 1; }
			if(Reports[reportid][BeingUsed] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese RID ya fue atendido.");
				return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El que reportó se ha desconectado.");
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				return 1;
			}
				format(string, sizeof(string), "{FFFF00}Administración:{FF0000} %s revisó y señalo el reporte de %s como correspondiente al foro.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]));
				ABroadCast(COLOR_GENERAL, string, 2);
				format(string, sizeof(string), "%s marcó tu reporte como correspondiente al foro. Recuerda que en el foro puedes hacer reportes, quejas y dudas.", GetPlayerNameEx(playerid));
                SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
                SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE,"Nuestro foro es: {A2DC35}Pronto{FFFFFF} - Muchas Gracias");
				Reports[reportid][ReportFrom] = 999;
				Reports[reportid][BeingUsed] = 0;
				Reports[reportid][TimeToExpire] = 0;
				strmid(Reports[reportid][Report], "None", 0, 4, 4);
		}
		return 1;
	}
    CMD:mps(playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en servicio administrativo {008EC1}/adminduty{FFFFFF} para usar este comando.");
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        if(See_MP[playerid] == 1)
		{
			See_MP[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Notificación de respuestas administrativas desactivada.");
		}
        else
		{
            See_MP[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Notificación de respuestas administrativas activada.");
		}
        return 1;
    }
	CMD:tipduda(playerid, params[]){
	if(Info[playerid][pAdminZC] > 0){
	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}Tips para responder una duda.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Sé claro y directo, simplemente una respuesta clara");
	        SendClientMessageEx(playerid, COLOR_WHITE, "No es necesaria una conversación con el usuario, esto es sencillo, responde lo necesario.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Termina una y atiende otra, no te apresures.");
	        return 1;
	    }
	    else{
	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}Tips para enviar una duda.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Sé claro y directo con el administrador, no necesitas conversar con él.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Si no te dieron una respuesta clara tienes todo el derecho de mandar otra.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "No llames administradores y pregunta lo que buscas.");
	    }
	    return 1;
	}
	CMD:reportes(playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 2)
		{
			new reportdialog[1000], itemid = 0;
			for(new i = 0; i < MAX_REPORTS; i++)
			{
				if(Reports[i][BeingUsed] == 1 && itemid < 40)
				{
					ListItemReportId[playerid][itemid] = i;
					itemid++;
					format(reportdialog, sizeof(reportdialog), "%s%s(ID:%i) | RID:%i | Reporte: %s", reportdialog, GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire]);
					format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
				}
			}
			CancelReport[playerid] = itemid;
			format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
			format(reportdialog, sizeof(reportdialog), "%sSalir", reportdialog);
			SafeDialogEx(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "{008EC1}Reportes", reportdialog, "Aceptar", "Rechazar");
		}
		return 1;
	}
	zcmd(darvida, playerid, params[])
    {
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(!sscanf(params, "di", params[0], params[1]))
		{
		    if(IsPlayerConnected(params[0]))
		    {
		        if(Info[playerid][pAdminZC] >= 2)
		        {
		            new string[128];
		            SetHP(params[0],params[1]);
				 	format(string, sizeof(string), "[AdmCmd]: %s estableció la salud de %s a %dHP.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[1]);
				 	ABroadCast(COLOR_ORANGE, string, 2);
				 	return 1;
		        }
				else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres administrador!");
		    }
			else SendClientMessageEx(playerid,  COLOR_WHITE, "ID Inválida");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darvida (PlayerID) (HP)");
        return 1;
    }
    zcmd(darchaleco, playerid, params[])
    {
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(!sscanf(params, "di", params[0], params[1]))
		{
		    if(IsPlayerConnected(params[0]))
		    {
		        if(Info[playerid][pAdminZC] >= 3)
		        {
		            new string[128];
		            SetPlayerArmour(params[0],params[1]);
					format(string, sizeof(string), "[AdmCmd]: %s estableció el chaleco de %s a %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[1]);
				 	ABroadCast(COLOR_ORANGE, string, 2);
				 	return 1;
		        }
				else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres administrador!");
		    }
			else SendClientMessageEx(playerid,  COLOR_WHITE, "ID Inválida");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darchaleco (PlayerID) (armor)");
        return 1;
    }
    zcmd(loteria, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] < 5) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        else
        {
			new string[128];
            format(string, sizeof(string), "{2F99B5}[Lotería]:{FFFFFF} Hemos empezado la elección de la lotería.");
	        OOCNews(COLOR_WHITE, string);
	        new rand = random(250);
	        if(rand < 101) { rand += 3; }
	        Lotto(rand);
		}
        return 1;
    }
    zcmd(darstat, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        new string[128];
        if(CommandSpamTimes[playerid] == 8)
		{
          	format(string, sizeof(string), "[ATENCIÓN]: %s fue baneado automáticamente, razón: Flood Cmd darstat", GetPlayerNameEx(playerid));
	        ABroadCast(COLOR_GENERAL,string,2);
	        Log("logs/hackeraction.log", string);
	        Info[playerid][pBannedZC] = 2;
			Kick(playerid);
			return 1;
		}
        if(IsPlayerConnected(playerid)){
	        if(Info[playerid][pAdminZC] >=5000){
	            if(!sscanf(params, "dii", params[0],params[1],params[2])){
	                if(IsPlayerConnected(params[0])){
			    	    if(IsPlayerConnected(params[0])){
			    	        switch (params[1]){
								case 1:{
									Info[params[0]][pLevel] = params[2];
									format(string, sizeof(string), "Nivel: %d", params[2]);
								}
								case 2:
								{
									Info[params[0]][pAccount] = params[2];
									format(string, sizeof(string), "Cuenta bancaria: $%d", params[2]);
								}
								case 3:
								{
									Info[params[0]][pPnumber] = params[2];
									format(string, sizeof(string), "Teléfono: #%d", params[2]);
								}
								case 4:
								{
									Info[params[0]][pExp] = params[2];
									format(string, sizeof(string), "Puntos Respeto: %d", params[2]);
								}
								case 5:
								{
									Info[params[0]][pPhousekey] = params[2];
									format(string, sizeof(string), "Casa: %d", params[2]);
								}
								case 6:
								{
								    Info[params[0]][pPot] = params[2];
								    format(string, sizeof(string), "Hierba: %d", params[2]);
								}
								case 7:
								{
								    PlayerDrunk[playerid] = params[2];
								    format(string, sizeof(string), "Drunk: %d", params[2]);
									SetPlayerDrunkLevel(playerid, params[2]);
								}
								case 8:
								{
								    Info[params[0]][pRenting] = params[2];
								    format(string, sizeof(string), "Renta: %d", params[2]);
								}
								case 9:
								{
								    Info[params[0]][pFStyle] = params[2];
								    format(string, sizeof(string), "Tipo Lucha: %d", params[2]);
								}
								case 10:
								{
								    Info[params[0]][pMats] = params[2];
								    format(string, sizeof(string), "Materiales: %d", params[2]);
								}
								case 11:
								{
								    Info[params[0]][pCrack] = params[2];
								    format(string, sizeof(string), "Drogas: %d", params[2]);
								}
								case 12:
								{
								    Info[params[0]][pAge] = params[2];
								    format(string, sizeof(string), "Edad: %d", params[2]);
								}
								case 13:
								{
								    Info[params[0]][pJob] = params[2];
								    format(string, sizeof(string), "Trabajo: %d", params[2]);
								}
								case 14:
								{
                                    Info[params[0]][pCarKey2] = params[2];
                                    format(string, sizeof(string), "Auto2: %d", params[2]);
                                }
								case 15:
								{
                                    Info[params[0]][pNMute] = params[2];
                                    format(string, sizeof(string), "NMute: %d", params[2]);
                                }
								case 16:
								{
                                    Info[params[0]][pWarn] = params[2];
                                    format(string, sizeof(string), "Warns: %d", params[2]);
                                }
								case 17:
								{
									Info[params[0]][pConnectTime] = params[2];
									format(string, sizeof(string), "Connect Time: %d", params[2]);
								}
								case 18:{
									Info[params[0]][pJailAdmin] = params[2];
									format(string, sizeof(string), "Jails: %d", params[2]);
								}
								case 19:{
									Info[params[0]][pPhousekey2] = params[2];
									format(string, sizeof(string), "House 2: %d", params[2]);
								}
								case 20:{
									Info[params[0]][pArmsSkill] = params[2];
									format(string, sizeof(string), "habilidad Guns: %d", params[2]);
								}
								case 21:
								{
									SetPVarInt(params[0], "Packages",  params[2]);
									format(string, sizeof(string), "Paquetes: %d", params[2]);
								}
						 		case 22:
						 		{
								 	Info[params[0]][pCrates] = params[2];
								 	format(string, sizeof(string), "Pack Drug: %d", params[2]);
								}
						 		case 23:
						 		{
								 	Info[params[0]][pADMuteTotal] = params[2];
								 	format(string, sizeof(string), "Total Ad Mutes: %d.", params[2]);
								}
						 		case 24:
						 		{
								 	Info[params[0]][pRHours] = params[2];
								 	format(string, sizeof(string), "Hours R.: %d.", params[2]);
								}
								case 25:
								{
									Info[params[0]][pVIPDateD] = params[2];
									format(string, sizeof(string), "Dia VIP: %d.", params[2]);
								}
								case 26:
								{
									Info[params[0]][pVIPDateM] = params[2];
									format(string, sizeof(string), "Mes VIP: %d.", params[2]);
								}
								default: SendClientMessageEx(playerid, COLOR_WHITE, "Código inválido!");
							}
							CommandSpamTimes[playerid]++;
							CommandSpamUnmute[playerid] = 60;
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
							SendClientMessageEx(playerid, COLOR_GRAD2, string);
			    	    }
					}
					else SendClientMessageEx(playerid, COLOR_WHITE, "ID Inválida.");
	            }
	            else{
	                SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /darstat (playerid/nombre) (Numero) (valor)");
	                SendClientMessageEx(playerid, COLOR_GRAD1, "1 Nivel 2 $ Bank 3 Tlf. 4 Respeto 5 ID Casa 6 Hierba 7 Drunk 8 Renta 9 E. Pelea 10 Mats 11 Drogas 12 Edad 13 Trabajo");
	                SendClientMessageEx(playerid, COLOR_GRAD1, "14 ID Veh 2. 15 NMute 16 Warns 17 ConnectTime 18 Jails 19 ID Casa[2] 20 Habilidad Armero 21 Pack Mat 22 Pack Drug 23 Total AD Mutes");
	            }
	        } else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás autorizado para usar este comando.");
	    }
        return 1;
    }
    zcmd(check, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "d", params[0]))
		{
		    if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    ShowStats(playerid,params[0]);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza /check (ID)");
        return 1;
    }
    zcmd(verinventario, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "dd", params[0]))
		{
		    if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    ShowInventario(playerid, params[0]);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza /verinventario (ID)");
        return 1;
    }
    zcmd(cambiarint, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "dd", params[0],params[1]))
		{
		    if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    new string[64];
		    SetPlayerInterior(params[0], params[1]);
		    format(string, sizeof(string), "Interior de %s es ahora %d", GetPlayerNameEx(params[0]), params[1]);  SendClientMessageEx(playerid, COLOR_GRAD1, string);
			return SendClientMessageEx(params[0], COLOR_GRAD1, string);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cambiarint (PlayerID) (Interior)");
        return 1;
    }
    zcmd(cambiarvw, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "dd", params[0],params[1]))
		{
		    if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    new string[64];
		    SetPlayerVirtualWorld(params[0], params[1]);
		    format(string, sizeof(string), "VirtualWorld de %s ahora es %d", GetPlayerNameEx(params[0]), params[1]);  SendClientMessageEx(playerid, COLOR_GRAD1, string);
			return SendClientMessageEx(params[0], COLOR_GRAD1, string);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cambiarvw (PlayerID) (VirtualWorld)");
        return 1;
    }
    zcmd(autovw, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		new string[64];
    	if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "dd", params[0],params[1]))
		{
			SetVehicleVirtualWorld(params[0], params[1]);
		    format(string, sizeof(string), "VirtualWorld del Auto ID %dt, ahora es %d", params[0], params[1]);
			return SendClientMessageEx(playerid, COLOR_GRAD1, string);
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /autovw (Auto ID) (VirtualWorld)");
		return 1;
	}
    zcmd(silenciar, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "d", params[0]))
		{
		    if(!IsPlayerConnected(params[0])) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    new string[128];
		    if(Muted[params[0]] == 0)
			{
   				Muted[params[0]] = 1;
			    format(string, sizeof(string), "{AA3333}[AdmCmd]:{FFFF00} El Administrador %s ha silenciado al jugador %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
				SendClientMessageEx(params[0],COLOR_RED2,string);
				return ABroadCast(COLOR_GENERAL,string,2);
			}
			else
			{
				Muted[params[0]] = 0;
				format(string, sizeof(string), "{AA3333}[AdmCmd]:{FFFF00} El Administrador %s ha desilenciado al jugador %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
				SendClientMessageEx(params[0],COLOR_RED2,string);
				return ABroadCast(COLOR_GENERAL,string,2);
			}
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /silenciar (PlayerID)");
        return 1;
    }
    zcmd(warn, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		new string[128], reason[64];
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if(!sscanf(params, "ds[64]", params[0], reason))
		{
   			if(Info[params[0]][pAdminZC] >= 3)
			{
				return SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} No puedes hacer esto a administradores.");
			}
			if(Info[params[0]][pWarn] == 2)
			{
                new ip[32];
				GetPlayerIp(params[0],ip,sizeof(ip));
			    Info[params[0]][pBannedZC] = 2;
			    Info[params[0]][pWarn]= 0;
			    format(string, sizeof(string), "[AdmCmd]: %s fue baneado automaticamente, razón: Execesivas advertencias.", GetPlayerNameEx(params[0]));
				BroadCast(COLOR_LIGHTRED,string);
				AddBan(ip);
				Kick(params[0]);
			}
			Info[params[0]][pWarn]++;
			format(string, sizeof(string), "[AdmCmdExe]: %s dió una advertencia a %s, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]), reason);
			ABroadCast(COLOR_GENERAL,string,2);
			format(string, sizeof(string), "[AdmCmdExe]: %s te dió una advertencia [%d/3], razón: %s (TIP: A la 3ra serás baneado automaticamente)",GetPlayerNameEx(playerid), Info[params[0]][pWarn],reason);
			SendClientMessageEx(params[0], COLOR_LIGHTRED, string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /warn (PlayerID)");
        return 1;
    }
   	zcmd(admins, playerid, params[])
	{
	    new string[84];
	    SendClientMessageEx(playerid, COLOR_WHITE, "Administradores conectados:");
		foreach(Player, i)
		{
			if(Info[i][pAdminZC] >= 1)
			{
   				if(Info[i][pAdminZC] == 2)
				{
    				format(string, sizeof(string), "{0000FF}*Ayudante del Staff: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 3)
				{
    				format(string, sizeof(string), "{0000C8}*Moderador a Pruebas: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 4)
				{
    				format(string, sizeof(string), "{000096}*Moderador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 5)
				{
    				format(string, sizeof(string), "{000064}*Moderador Superior: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 6)
				{
    				format(string, sizeof(string), "{006500}*Administrador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 1338)
				{
    			format(string, sizeof(string), "{006400}*Administrador Superior: {FFFFFF}%s", GetPlayerNameEx(i));
    			}
       			else if(Info[i][pAdminZC] == 4000)
				{
    				format(string, sizeof(string), "{009600}*Técnico: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
                else if(Info[i][pAdminZC] == 4001)
				{
                	format(string, sizeof(string), "{00C800}*WebMaster: {FFFFFF}%s", GetPlayerNameEx(i));
    			}
       			else if(Info[i][pAdminZC] == 4002)
				{
    				format(string, sizeof(string), "{59FF00}*Sub-Dueño: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 5000)
				{
    				format(string, sizeof(string), "{950000}*Admin Dueño: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
        		else if(Info[i][pAdminZC] == 6000)
				{
    				format(string, sizeof(string), "{3104B4}*Fundador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
        		else if(Info[i][pAdminZC] == 89648)
				{
    				format(string, sizeof(string), "{00e4ff}*Fundador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
        		else if(Info[i][pAdminZC] == 89649)
				{
    				format(string, sizeof(string), "{9300ff}*Fundador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else if(Info[i][pAdminZC] == 89650)
				{
    				format(string, sizeof(string), "{FF8000}*Fundador: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
        		else if(Info[i][pAdminZC] == 89651)
				{
    				format(string, sizeof(string), "{FF0080}*Fundadora: {FFFFFF}%s", GetPlayerNameEx(i));
        		}
          		else
				{
    				format(string, sizeof(string), "*{FF00FF}Admin indefinido (%d): {FFFFFF}%s", Info[i][pAdminZC], GetPlayerNameEx(i));
        		}
          		SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
		return 1;
	}
	zcmd(tecnicos, playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] > 5000){
		    SendClientMessageEx(playerid, COLOR_GRAD1, "Tecnicos Online:");
  			foreach(Player, i){
  			    new string[84];
			    if(Info[i][pShopTech] >= 1){
  			    	if(Info[i][pShopTech] == 1){
					  format(string, sizeof(string), "*Shop Tecnico: %s", GetPlayerNameEx(i));
					}
					else{
	    			  format(string, sizeof(string), "*Undefined: %s", GetPlayerNameEx(i));
	    			}
  			    	SendClientMessageEx(playerid, COLOR_GRAD2, string);
  			    }
  			}
  		}
  		return 1;
	}
CMD:taxiduty(playerid, params[])
{
    if(IsAPizzabike(playerid) || Info[playerid][pJob] == 8  || Info[playerid][pJob2] == 8)
	{
        if(OnDuty[playerid] == 1)
		{
 			new string[128];
			format(string, sizeof(string), "[Taxi]: Taxista %s está fuera de servicio",GetPlayerNameEx(playerid));
			BroadCast(COLOR_YELLOW, string);
		    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ahora estás fuera servicio, ya no recibirás llamadas.");
            OnDuty[playerid] = 0;

        }
        else
		{
			new string[128];

			format(string, sizeof(string), "[Taxi]: Taxista %s está en servicio  (Tlf. %d)",GetPlayerNameEx(playerid), Info[playerid][pPnumber]);
			BroadCast(COLOR_YELLOW, string);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ahora estás en servicio, recibirás llamadas de la gente que te necesite.");
            OnDuty[playerid] = 1;

        }
    }
    else
	{

        SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando porque no eres Taxista.");
    }
    return 1;
}
zcmd(ayudantes, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		new string[128];
		if(Info[playerid][pAdminZC] >= 1338)
		{
		    SendClientMessageEx(playerid, COLOR_GRAD1, "Ayudantes Online:");
  			foreach(Player, i)
  			{
  				if(Info[i][pHelper] >= 1)
  				{
                    if(Info[i][pHelper] == 1)
					{
                        format(string, sizeof(string), "*Ayudante: %s", GetPlayerNameEx(i));
                    }
                    else if(Info[i][pHelper] == 2)
					{
                        format(string, sizeof(string), "*Lider de Ayudantes: %s", GetPlayerNameEx(i));
                    }
                    SendClientMessageEx(playerid, COLOR_GRAD2, string);
  				}
  			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes utilizar este comando.");
		return 1;
	}
	zcmd(publicistas, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
	new string[128];
	if(Info[playerid][pAdminZC] >= 1338 || Info[playerid][pPublicista] == 1)
		{
 			SendClientMessageEx(playerid, COLOR_GRAD1, "Publicistas Online:");
			foreach(Player, i)
			{
				if(Info[i][pPublicista] == 1)
				{
					format(string, sizeof(string), "*Publicista: %s", GetPlayerNameEx(i));
 				}
			}
		}
  		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes utilizar este comando.");
		return 1;
	}
    zcmd(creaunauto, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] < 6000)	return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(!sscanf(params, "iii", params[0], params[1], params[2]))
		{
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X,Y,Z);
            new carid = CreateVehicle(params[0], X+5,Y,Z, 0.0, params[1], params[2], 600000);
            new string[32];
            format(string, sizeof(string), ". Vehículo %d creado .", carid);
			SendClientMessageEx(playerid, COLOR_GREY, string);
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /creaunauto (id) (color1) (color2)");
        return 1;
    }
   zcmd(ir, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
		if(Info[playerid][pAdminZC] >= 2 || Info[playerid][pHelper] >= 2){
        	if(!sscanf(params, "d", params[0])){
		    	if(IsPlayerConnected(params[0])){
		        	new Float:p_x,Float:p_y,Float:p_z;
		        	GetPlayerPos(params[0], p_x,p_y,p_z);
		        	new interior = GetPlayerInterior(params[0]);
		        	new vw = GetPlayerVirtualWorld(params[0]);
          			SetPosEx(playerid, p_x,p_y,p_z,0,interior,vw);
          			return SendClientMessageEx(playerid, COLOR_WHITE, "Teleportado.");
		    	} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ir (PlayerID)");
        	return 1;
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
    zcmd(traer, playerid, params[]){
        new giveplayerid;
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(!sscanf(params, "d", giveplayerid)){
		    if(IsPlayerConnected(giveplayerid)){
		        //if(Info[giveplayerid][pAdminZC] > 1337) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando con este jugador.");
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(playerid, p_x,p_y,p_z);
		        new interior = GetPlayerInterior(playerid);
		        new vw = GetPlayerVirtualWorld(playerid);
          		SetPosEx(giveplayerid, p_x,p_y,p_z,0,interior,vw);
          		return SendClientMessageEx(giveplayerid, COLOR_WHITE, "Teleportado.");
		    } else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /traer (PlayerID)");
        return 1;
    }
    zcmd(verarmas, playerid, params[]){
        new giveplayerid;
        if(!sscanf(params, "d", giveplayerid)){
		    if(IsPlayerConnected(giveplayerid)){
				if(GetPVarInt(giveplayerid, "EventToken") != 0 || GetPVarInt(giveplayerid, "IsInArena") == 1) SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[INFO]:{FFFFFF} Estás armas son del paintball o un evento.");
		        new x,xweapon, xbalas, string[80],NombreArma[24];
			    format(string, sizeof(string), "Armas de %s:", GetPlayerNameEx(giveplayerid)); SendClientMessageEx(playerid, COLOR_GRAD1, string);
				for (new slot=0; slot<14; slot++){
				    GetPlayerWeaponData(giveplayerid, slot, xweapon, xbalas);
				    if(xweapon != 0){
                        GetWeaponName(xweapon,NombreArma,sizeof(NombreArma));
				        format(string, sizeof(string), "%s Balas: [%d]",NombreArma, xbalas);
				        x++;
				        SendClientMessageEx(playerid, COLOR_GRAD1, string);
				        if(x >= 5){
								SendClientMessageEx(playerid, COLOR_GRAD1, string);
								x = 0;
								format(string, sizeof(string), "");
							} else format(string, sizeof(string), "%s,  ", string);
						}
					}
		    } else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		    return 1;
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /verarmas (PlayerID)");
        return 1;
    }
    zcmd(facciones, playerid, params[]){
   	 if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
 		if(Info[playerid][pAdminZC] > 3 || Info[playerid][pFactionModerator] == 1){
			SendClientMessageEx(playerid, COLOR_ASKQ, "================== ID'S de Facciones ==================");
			SendClientMessageEx(playerid, -1, "1. SAPD - 2. FBI - 3. EUEM - 4. SAMD - 5. LSRTV - 6. Mecánicos");
			SendClientMessageEx(playerid, -1, "7. Gobierno - 8. Sicarios - 9. Sistema Judicial - 11. LCN - 12. Yakuza - 13.Rusa - 14. Ndrangheta ");
			SendClientMessageEx(playerid, -1, "15. Groove - 16. Ballas - 17. Sureños - 18. Fsociety ");
			SendClientMessageEx(playerid, -1, "Deshabilitada(s): 10. LSFD");
		 }
		 else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado");
		 return 1;
	}
    zcmd(limpiarchat, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        CleanScreen();
        new string[100];
		format(string, sizeof(string), "[ADM]: Limpieza de chat por %s", GetPlayerNameEx(playerid));
		return ABroadCast(COLOR_LIGHTBLUE,string,1);
    }
    zcmd(leetodo, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	  if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (!BigEar[playerid]){
            BigEar[playerid] = 1;
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Chat global activado.");
		}
		else{
			BigEar[playerid] = 0;
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Chat global desactivado.");
		}
    }
    zcmd(slap, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	   new giveplayerid;
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(!sscanf(params, "d", giveplayerid)){
			new Float:slx, Float:sly, Float:slz, string[128];
			if(IsPlayerConnected(giveplayerid)){
			    GetPlayerPos(giveplayerid, slx, sly, slz);
				SetPlayerPos(giveplayerid, slx, sly, slz+5);
				PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s golpeó a %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				return SendClientMessageEx(giveplayerid, COLOR_RED2, string);
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /slap (PlayerID)");
        return 1;
    }
    zcmd(slap2, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	   new giveplayerid;
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(!sscanf(params, "d", giveplayerid)){
			new Float:slx, Float:sly, Float:slz, string[128];
			if(IsPlayerConnected(giveplayerid)){
			    GetPlayerPos(giveplayerid, slx, sly, slz);
				SetPlayerPos(giveplayerid, slx, sly, slz-5);
				PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s golpeó a %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				return SendClientMessageEx(giveplayerid, COLOR_RED2, string);
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /slap2 (PlayerID)");
        return 1;
    }
    zcmd(darskin, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	  if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		new giveplayerid, skin;
		if(!sscanf(params, "di", giveplayerid, skin)){
		    if(IsPlayerConnected(giveplayerid)){
			    if(skin > 311 || skin < 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Skin ID incorrecto (0-311)");
			    new string[128];
			    Info[giveplayerid][pChar] = skin;
			    SetPlayerSkin(giveplayerid, Info[giveplayerid][pChar]);
			    format(string, sizeof(string), "[AdmCmdExe]: %s te cambió el skin, ID SKIN: %d.", GetPlayerNameEx(playerid), skin);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "[AdmCmdExe]: %s cambió el skin de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				return ABroadCast(COLOR_GENERAL,string,2);
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darskin (PlayerID) (SkinID)");
        return 1;
    }
    zcmd(vehslap, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	  if(Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		new alt, giveplayerid;
		if(!sscanf(params, "di", giveplayerid, alt)){
		    if(IsPlayerConnected(giveplayerid)){
			    new Float:slx, Float:sly, Float:slz, string[64];
			    GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
				SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+alt);
				PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+alt);
				format(string, sizeof(string), "[AdmCmdExe]:%s golpeó tu vehiculo.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_RED2, string);
				format(string, sizeof(string), "[AdmCmdExe]: %s golpeó el vehiculo de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				return ABroadCast(COLOR_GENERAL,string,3);
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vehslap (PlayerID) (Altitud)");
        return 1;
    }
    zcmd(irpunto, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (GetPlayerState(playerid) == 2){
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		else{SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);}
		return SendClientMessageEx(playerid, COLOR_WHITE, "Teleportado.");
    }
    zcmd(punto, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		return SendClientMessageEx(playerid, COLOR_WHITE, "Posición guardada.");
    }
    zcmd(traerauto, playerid, params[]){
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización a usar este comando.");
        new Float:plocx,Float:plocy,Float:plocz, vehicleid;
		if(!sscanf(params, "i", vehicleid)){
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
			return SetVehiclePos(vehicleid,plocx,plocy+4, plocz);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /traerauto (Auto ID)");
		return 1;
    }
    zcmd(irauto, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        new Float:cwx2,Float:cwy2,Float:cwz2,vehicleid;
        if(!sscanf(params, "i", vehicleid)){
			GetVehiclePos(vehicleid, cwx2, cwy2, cwz2);
			return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /irauto (Auto ID)");
		return 1;
    }
    zcmd(repararveh, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo.");
        SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    	RepairVehicle(GetPlayerVehicleID(playerid));
		return SendClientMessageEx(playerid, COLOR_WHITE, "Vehículo reparado.");
    }
    zcmd(mascara, playerid, params[]){
        if(Info[playerid][pMask] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes máscara.");
        if(Info[playerid][pMaskuse] == 0){
            foreach(Player, i){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
			SetTimerEx("ColocarMascara",5000,0,"d",playerid);
        }
        else{
            foreach(Player, i){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
			SetTimerEx("QuitarMascara",5000,0,"d",playerid);
        }
        return 1;
    }
 zcmd(ah, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Admin(2,playerid)){
            SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Ayudante del Staff:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/adminduty o /aoffduty /togac /togpm /ar /rr /tipduda /reportes /check /cambiarint /cambiarvw /silenciar /warn");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/staff /ir /traer /leetodo /slap /slap2 /darskin /irpunto /punto /repararveh /desarmar /jail /ls /sf /lv /aa /a");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/enmascarados /bloqre /desbloqre /checkllaves /mandarls /spec /liberar /(des)congelar /j /toghelper /noev ");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/nuevos /darrol /desmutearad /mutearad /aduda /rduda /kick /listaafk /avion /verinventario");
		 	SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(3,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Moderador a Pruebas:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/quitardni /adminnombre /irfacc /nao /aforo /autovw /limpiarchat /irauto /jailoffline /entrarauto /ao");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/armareset /darrehelper /mandarsf /revivir /qseguroveh /quitarrestriccion /respawntodo");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(4,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Moderador:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/banoffline /facciones /vehslap /traerauto /llenargas /recargarautos /respawncars /respawnauto");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/reparartodo /banear");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(5,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Moderador Superior:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/loteria /bloqbug /desbloqbug /cfuego /darestilopelea /cambiarhora /aborrarplanta /smstodos");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/banip ");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(6,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Administrador:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/darlider /nofac /anunciostaff /facchat /weaponr /jetpack /qfaccoff /activarbanco /irnegocio");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(1338,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Administrador Superior:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/limpiarreportes /ayudantes /qdinero /darfichaspball /darhelper /darliderhelper");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/quitarhelper /clima /climatodos /adminevento /darobjeto /venderfichasv /verregalo");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/limpiarregalo /darpuntosrol /quitarpuntosrol");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(4000,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Técnico:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/admincasa /adminfam /ip /obtenerip /gotoco /adminpuntos /shopdoor /famchat /serverstats");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(5000,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Admin Dueño:**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/darleadmin /mps /noduda /daref /darefam /dareban /crearregalo /regalararma /msjlogueo");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/regaloatodos /horaregalo /activofuego /desactivofuego /dartech /msjfacc /darstat /seteardinero");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/crearcamara /editarcamara /borrarcamara /adminnegocio");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(6000,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Fundador**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/setpayday /noac  /vipregalo /expdoble /quitarpublicista ");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/sfondos /expulsarstaff /deletecarro /venderlaser /darpublicista");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(89648,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Fundador**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/setpayday /noac  /vipregalo /expdoble /quitarpublicista/darauto/deletcarro ");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/sfondos /expulsarstaff /deletecarro /venderlaser /darpublicista/sfondos/cambiarclaveusuario");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
		if(Admin(89650,playerid)){
		    SendClientMessageEx(playerid, COLOR_GREEN, "**Comandos de Fundador**");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/setpayday /noac /darvip /vipregalo /adminconcesionario /expdoble /vendertodas /darestaff /guardarsv");
			SendClientMessageEx(playerid, COLOR_WHITE, "{2F99B5}/expulsarstaff /venderlaser /darpublicista /quitarpublicista /ddedit /ddpass /ddname");
			SendClientMessageEx(playerid, COLOR_BLUE, "_____________________________________________________________________________________________________");
		}
        return 1;
    }
    zcmd(cmdhelper, playerid, params[]){
	    switch(Info[playerid][pHelper]){
	        case 1: SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Comandos: {FFFFFF}/cduty - /aceptarayuda - /finalizarayuda - /n - /nmute - /nocanal - /aduda - /rduda - /responder");
	        case 2: SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Comandos: {FFFFFF}/quitarhelper - /darhelper");
	        default: SendClientMessageEx(playerid, COLOR_WHITE, "No puedes utilizar este comando.");
	    }
		return 1;
	}
    zcmd(bloqbug, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] >= 5){
			new string[128], giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /bloqbug (playerid)");
			if(IsPlayerConnected(giveplayerid)){
				format(string, sizeof(string), "[AdmCmdExe]: %s no podrá reportar nunca más un bug's, razón: Abuso de comando. Admin: %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				BroadCast(COLOR_LIGHTRED, string);
  				Log("logs/reportbug.log", string);
				Info[giveplayerid][pAdminZC] = 0;
				Info[giveplayerid][pBlockBug] = 1;
				Kick(giveplayerid);
			}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando");
		return 1;
	}
    zcmd(desbloqbug, playerid, params[]){
		if(Info[playerid][pAdminZC] >= 5){
			new string[128], giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USE: /unbloqbug [playerid]");
			if(IsPlayerConnected(giveplayerid)){
				format(string, sizeof(string), "[AdmCmdExe]: %s desbloqueó del comando [/reportarbug] a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_LIGHTRED, string,3);
 	 			Log("logs/reportbug.log", string);
				Info[giveplayerid][pBlockBug] = 0;
			}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando");
		return 1;
	}
    zcmd(quitarstaff, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		new string[128], giveplayerid;
		if(Info[playerid][pAdminZC] >= 89650 || Info[playerid][pModStaff] == 1){
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /quitarstaff (playerid)");
			if(IsPlayerConnected(giveplayerid)){
           		format(string, sizeof(string), "Perfect City: %s limpió variables administrativas a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
           		ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/admin.log", string);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Restearon tus variables de administrador a 0.");
    			Info[giveplayerid][pAdminZC] = 0;
    			Info[giveplayerid][pLvlAdminZC] = 0;
				Info[giveplayerid][pHelper] = 0;
				Info[giveplayerid][pFactionModerator] = 0;
				Info[giveplayerid][pModStaff] = 0;
				Info[giveplayerid][pBanAppealer] = 0;
				Info[giveplayerid][pGangModerator] = 0;
			}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando");
		return 1;
	}
    zcmd(noduda, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (!nod){
			nod = 1;
			return SendClientMessageToAllEx(COLOR_GRAD2,"{FFFF00}[ADM]:{FFFFFF} Canal de dudas ha sido desactivado.");
		}
		else{
			nod = 0;
			return SendClientMessageToAllEx(COLOR_GRAD2,"{FFFF00}[ADM]:{FFFFFF} Canal de dudas ha sido activado.");
		}
    }
	zcmd(removergps, playerid, params[]){
		if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Primero Conectate.");
		if(Info[playerid][pMember] == 1||Info[playerid][pLeader] == 1){
			DisablePlayerCheckpoint(playerid);
		}
		else if(Info[playerid][pMember] == 4||Info[playerid][pLeader] == 4){
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
    zcmd(noac, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización a usar este comando.");
        new string[80];
        if (!noac){
			noac = 1;
			format(string, sizeof(string), "Perfect City: [ADMIN CHAT BLOQUEADO Por %s]",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL,string,2);
		}
		else{
			noac = 0;
			format(string, sizeof(string), "Perfect City: [ADMIN CHAT DESBLOQUEADO Por %s]",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL,string,2);
		}
		return 1;
    }
    zcmd(nofac, playerid, params[]){
    	new string[80];
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] >= 6 || Info[playerid][pFactionModerator] == 1)
        if (!nofac){
			nofac = 1;
			format(string, sizeof(string), "{FF0000}[ATENCION]:{FFFFFF} Chat de Facción Bloqueado por %s ",GetPlayerNameEx(playerid));
			SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
		}
		else{
			nofac = 0;
			format(string, sizeof(string), "{FF0000}[ATENCION]:{FFFFFF} Chat de Facción desbloqueado por %s",GetPlayerNameEx(playerid));
			SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
		}
		return 1;
    }
    zcmd(guardarsv, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        saveAccounts();
        SaveHouses();
        SaveDynamicDoors();
        SaveMOTDs();
		foreach(Player, i){ OnPlayerSavedStats(i); }
		ABroadCast(COLOR_GENERAL,"Servidor Perfect City guardado correctamente.",2);
        return 1;
    }
    zcmd(stopanim, playerid, params[]){
    	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
		if(Info[playerid][pEstado] == 0) return ClearAnimations(playerid);
		else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto ahora.");
		return 1;
    }
    zcmd(darleadmin, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
      //new nick[MAX_PLAYER_NAME];
 		if(Info[playerid][pAdminZC] > 4002 && Info[playerid][pModStaff] == 1)
 		{
		new giveplayerid, level;
		if(!sscanf(params, "di", giveplayerid, level)){
            if(IsPlayerConnected(giveplayerid)){
               	new string[128];
			    Info[giveplayerid][pAdminZC] = level;
			    format(string, sizeof(string), "[AdmCmdExe]: %s lo ha asignado administrador nivel %d", GetPlayerNameEx(playerid), level);
			    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			    format(string, sizeof(string), "[AdmCmdExe]: %s ha asignado administrador nivel %d a %s", GetPlayerNameEx(playerid), level, GetPlayerNameEx(giveplayerid));
			    ABroadCast(COLOR_GENERAL,string,2);
			    format(string, sizeof(string), "* %s asignó a %s administrador nivel [%d]", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),level);
			    Log("logs/admins.log", string);
			    new log[255];
				format(log, 225, "* El usuario %s se le ha modificado su nivel administrativo a %d ", GetPlayerNameEx(giveplayerid), level);
    			Log("logs/Admins.log", log);
            }else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darleadmin (ID) (Nivel)");
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "No autorizado.");
        return 1;
    }
    zcmd(daref, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	    new string[128], giveplayerid;
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
        if(!sscanf(params, "d", giveplayerid)){
            if(IsPlayerConnected(giveplayerid)){
				Info[giveplayerid][pFactionModerator] = 1;
				format(string, sizeof(string), "%s lo ha asignado moderador de facciones.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s ha asignado moderador de facciones a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/security.log", string);
			}	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        }	else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /daref (ID)");
        return 1;
    }
    zcmd(darestaff, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	    new string[128], giveplayerid;
        if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
        if(!sscanf(params, "d", giveplayerid)){
            if(IsPlayerConnected(giveplayerid)){
				Info[giveplayerid][pModStaff] = 1;
				format(string, sizeof(string), "%s lo ha asignado Encargado de Staff.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s ha asignado Encargado de Staff a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/security.log", string);
			}	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        }	else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darestaff (ID)");
        return 1;
    }
    zcmd(dartech, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	    new string[128], giveplayerid;
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_WHITE, " No estás autorizado para usar este comando.");
        if(!sscanf(params, "d", giveplayerid))
		{
            if(IsPlayerConnected(giveplayerid))
			{
				Info[giveplayerid][pShopTech] = 1;
				format(string, sizeof(string), "%s lo ha asignado Técnico de la Tienda Online.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s ha asignado Técnico de la Tienda Online a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/security.log", string);
			}	else SendClientMessageEx(playerid, COLOR_WHITE, " Esa ID es inválida.");
        }	else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dartech (ID)");
        return 1;
    }
    zcmd(darefam, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	   	new string[128], giveplayerid;
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
        if(!sscanf(params, "d", giveplayerid))
		{
            if(IsPlayerConnected(giveplayerid))
			{
				Info[giveplayerid][pGangModerator] = 1;
				format(string, sizeof(string), "%s lo ha asignado moderador de familias y bandas.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s ha asignado moderador de familias y bandas a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/security.log", string);
			}	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
        }	else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darefam (ID)");
        return 1;
    }
    zcmd(dareban, playerid, params[])
	{
	    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	    new string[128], giveplayerid;
        if(Info[playerid][pAdminZC] < 5000) return SendClientMessageEx(playerid, COLOR_WHITE, " No autorizado.");
        if(!sscanf(params, "d", giveplayerid))
		{
            if(IsPlayerConnected(giveplayerid))
			{
				Info[giveplayerid][pBanAppealer] = 1;
				format(string, sizeof(string), "%s lo ha asignado Apelador a desbaneo.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s ha asignado Apelador de desbaneos a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_GENERAL,string,2);
				Log("logs/security.log", string);
			}	else SendClientMessageEx(playerid, COLOR_WHITE, " Esa ID es inválida.");
        }	else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dareban (ID)");
        return 1;
    }
	zcmd(desarmar, playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new giveplayerid;
        if (Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
		if(!sscanf(params, "d", giveplayerid))
		{
			if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
            new string[84];
            ResetPlayerWeaponsEx(giveplayerid);
            format(string, sizeof(string), "[AdmCmdExe]: %s limpio el inventario de armas de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
            ABroadCast(COLOR_GENERAL,string,2);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /desarmar (PlayerID)");
		return 1;
	}
	zcmd(qdinero, playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		new giveplayerid, money, reason[64];
        if (Info[playerid][pAdminZC] < 1338) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		if (!sscanf(params, "dds", giveplayerid, money, reason)){
            if(money > 99999999 || money < 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Sólo de 0 - 99999999 de dinero");
            if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
			new string[128];
            GivePlayerCash(giveplayerid, -money);
            format(string, sizeof(string), "[AdmCmdExe]: %s quitó $%d a %s, razón: %s.", GetPlayerNameEx(playerid), money,GetPlayerNameEx(giveplayerid),reason);
            BroadCast(COLOR_LIGHTRED,string);
            Log("logs/removemoney.log", string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /qdinero (PlayerID) (Dinero) (Razón)");
		return 1;
	}
zcmd(jail, playerid, params[]){
		new string[120], time, giveplayerid, reason[64];
		//if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(CommandSpamTimes[playerid] == 999){
          	format(string, sizeof(string), "Perfect City: %s fue baneado automáticamente, razón: Flood Cmd´s", GetPlayerNameEx(playerid));
	        ABroadCast(COLOR_ORANGE,string,2);
	        Log("logs/hackeraction.log", string);
	        Info[playerid][pBannedZC] = 0;
			Kick(playerid);
			return 1;
		}
        if (Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (!sscanf(params, "dds[64]", giveplayerid, time, reason)){
            if(IsPlayerConnected(giveplayerid)){
				SetPVarInt(giveplayerid, "IsInArena", 0);
				SetPVarInt(giveplayerid, "ArenaMode", 0);
              	CommandSpamTimes[playerid]++;
				CommandSpamUnmute[playerid] = 60;
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
                Info[giveplayerid][pJailAdmin] += 1;
		        Info[giveplayerid][pJailed] = 1;
		        PhoneOnline[giveplayerid] = 1;
				Info[giveplayerid][pJailTime] = time*60;
				ResetPlayerWeaponsEx(giveplayerid);
				new rand = random(sizeof(OOCJail));
				LoadObjects(giveplayerid);
				SetPlayerPos(giveplayerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
				SetPlayerToTeamColor(giveplayerid);
				SetPlayerInterior(giveplayerid, 0);
				SetPlayerVirtualWorld(giveplayerid, 1000);
				format(string, sizeof(string), "%s fué sancionado por %d minuto(s), razón: %s", GetPlayerNameEx(giveplayerid), time, reason);
				BroadCast(COLOR_LIGHTRED, string);
				format(string, sizeof(string), "[AdmCmd]: %s fué sancionado por %s, razón: %s, tiempo: %d minuto(s)", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason, time);
				Log("logs/sancionar.log", string);
				format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s sancionó a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_AZULL,string,1338);
				StopAudioStreamForPlayer(giveplayerid);
				return 1;
            }
			else SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
        }
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /jail (playerid) (minutos) (razón)");
        return 1;
    }
	CMD:jailoffline(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] >= 1){
			new string[128], name[MAX_PLAYER_NAME], minutes;
			if(sscanf(params, "s[24]d", name, minutes)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /jailoffline (Nombre_Apellido) (Minutos)");

			if(INI_Exist(name))
			{
				new PlayerFile[MAX_PLAYER_NAME + 32];
	    		format( PlayerFile , sizeof PlayerFile, USERFILE, name);
	    		new INI:File = INI_Open(PlayerFile);
	    		INI_SetTag(File,"data");
	    		INI_WriteInt(File,"Jailed",4);
	    		INI_WriteInt(File,"JailTime",minutes*60);
        		INI_WriteFloat(File,"Pos_x",172.82);
        		INI_WriteFloat(File,"Pos_y",1951.59);
        		INI_WriteFloat(File,"Pos_z",3870.5);
	    		INI_Close(File);
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "AdmCmd: %s fue jaileado por %s (%d-%d-%d) [CMD OFFLINE]", name, GetPlayerNameEx(playerid),month,day,year);
				Log("logs/admin.log", string);
				format(string, 128, "Perfect City: %s fue jaileado por %s. [CMD OFFLINE]", name, GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
			}
			else SendClientMessageEx( playerid, COLOR_WHITE, "Esa cuenta no existe." );
		}
		return 1;
	}
    zcmd(ls, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] >= 2 ){
        	if (GetPlayerState(playerid) == 2)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid), 1529.6,-1691.2,13.3);
			}
			else{
				SetPosEx(playerid, 1529.6,-1691.2,13.3, 0, 0 ,0);
			}
		}
		return 1;
    }
    zcmd(sf, playerid, params[]){
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), -2016.4399,-79.7714,35.3203);
		}
		else{
			SetPosEx(playerid, -2016.4399,-79.7714,35.3203, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(lv, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632);
		}
		else{
			SetPosEx(playerid, 1694.6566,1453.4523,10.7632, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(avion, playerid, params[]){
    	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 315.9254,984.3267,1959.0673);
		}
		else{
			SetPosEx(playerid, 315.9254,984.3267,1959.0673, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(entrarauto, playerid, params[]){
        new vehicleid;
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (!sscanf(params, "i", vehicleid)){
            PutPlayerInVehicle(playerid, vehicleid, 1);
			return SendClientMessageEx(playerid, COLOR_WHITE, "Teleportado.");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /entrarauto (VehicleID)");
        return 1;
    }
    zcmd(llenargas, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if (Info[playerid][pAdminZC] < 4) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        SendClientMessageToAllEx(COLOR_GREEN, "La gasolina de los vehículos fue llenada.");
  		for(new c=0;c<MAX_VEHICLES;c++) VehicleFuel[c] = 200;
        return 1;
    }
    zcmd(anunciostaff, playerid, params[]){
        new text[64], type;
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if (Info[playerid][pAdminZC] < 6) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        if (!sscanf(params, "is", type, text))
		{
            if(type == 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes elegir el numero 2.");
			for(new i = 0; i < MAX_PLAYERS; i++){ if(gPlayerLogged{i}){ GameTextForPlayer(i, text, 5000, type); } }
            new string[128];
            format(string, sizeof(string), "[AdmCmdExe]: %s usó el comando /anunciostaff.", GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL,string,4);
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /anunciostaff (Tipo) (Texto)");
        return 1;
    }
	zcmd(deposito, playerid, params[])
	{
		if(IsACop(playerid))
		{
       		if (PlayerToPoint(10, playerid,1619.69995117,-1852.59997559,12.50000000)){
  			MoveDynamicObject(depgate,1626.00000000,-1852.19995117,12.50000000, 4.0);
      		PlayerPlaySound(playerid, 1153, 0,0,0);
      		SetTimer("depositogate", 7000, 0);
			}
		}
		return 1;
	}
   zcmd(cerrarp, playerid, params[]) return CheckForCloseDoor(playerid);
   zcmd(sacarsangre, playerid, params[]){
        new giveplayerid;
        if(!sscanf(params, "d", giveplayerid)){
            if(OnDuty[playerid] == 0)   return SendClientMessageEx(playerid, COLOR_WHITE, "No estás de servicio.");
            if(IsPlayerConnected(giveplayerid)){
                if(Team_SAMD(playerid)){
                    if (ProxDetectorS(5.0, playerid, giveplayerid)){
            		    new Float:HP, string[128]; GetPlayerHealth(giveplayerid, HP);
            		    if(HP < 100) return SendClientMessageEx(playerid, COLOR_WHITE, "El paciente debe estar con el máximo de vida.");
            		    SetHP(giveplayerid, HP-80);
						SetPlayerDrunkLevel(giveplayerid, 3000);
						Blood += 80;
						format(string, sizeof(string), "* El doctor %s realiza una extracción de sangre a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "Información: Hay %d ml de sangre disponible.", Blood);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						SaveStuff();
            		} else SendClientMessageEx(playerid, COLOR_WHITE, "El jugador debe estar cerca de usted.");
                } else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No eres médico.");
            } else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no conectado.");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sacarsangre (jugador)");
        return 1;
    }
    zcmd(pcinfo, playerid, params[]){
        if(Team_SAMD(playerid)){
			new string[128];
        	ClearChatbox(playerid);
	        SendClientMessageEx(playerid, 0x00D535FF, "PCU (Loading ... )");
	        format(string, sizeof(string), "Sangre disponible: %d", Blood);
	        SendClientMessageEx(playerid, COLOR_WHITE, string);
	        format(string, sizeof(string), "Radiación TAC: No disponible");
	        SendClientMessageEx(playerid, COLOR_WHITE, string);
	        format(string, sizeof(string), "Fondos: No disponible");
	        SendClientMessageEx(playerid, COLOR_WHITE, string);
	        SendClientMessageEx(playerid, 0x00D535FF, "------------------------------");
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres médico.");
		return 1;
	}
    zcmd(atar, playerid, params[]){
		if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
		if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser nivel 2 para arriba.");
        if(Rope[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una cuerda.");
        new giveplayerid;
        if(playerid == giveplayerid) return Message(playerid, COLOR_GRAD2, "No puedes atarte a tí mismo");
		if(!sscanf(params, "d", giveplayerid)){
            if(IsPlayerConnected(giveplayerid)){
                if(ProxDetectorS(4.0,playerid,giveplayerid)){
                    new string[128];
                    if(Tied[giveplayerid] == 0){
                        Tied[giveplayerid] = 1;
						format(string, sizeof(string), "* %s agarra una cuerda y ata a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
                    else{
                        Tied[giveplayerid] = 0;
						format(string, sizeof(string), "* %s agarra una cuerda y desata a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(giveplayerid, 1);
                    }
                } else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
            } else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /atar (ID)");
        return 1;
    }
    zcmd(vendar, playerid, params[]){
		if(GetPVarInt(playerid, "Injured") == 0){
            if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser nivel 2 para arriba.");
            if(Rope[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes venda.");
            new giveplayerid;
            if(playerid == giveplayerid) return Message(playerid, COLOR_GRAD2, "No puedes atarte a tí mismo");
			if(!sscanf(params, "d", giveplayerid)){
                if(IsPlayerConnected(giveplayerid)){
                    if(ProxDetectorS(4.0,playerid,giveplayerid)){
                        new string[90];
                        if(Blinded[giveplayerid] == 0){
                            Blinded[giveplayerid] = 1;
							format(string, sizeof(string), "* %s venda los ojos de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerCameraPos(giveplayerid,0.0,0.0,1000);
							SetPlayerCameraLookAt(giveplayerid,0.0,0.0,5000);
							Info[playerid][pRob]++;
                        }
                        else{
                            Blinded[giveplayerid] = 0;
							format(string, sizeof(string), "* %s desvenda los ojos de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetCameraBehindPlayer(giveplayerid);
                        }
                    } else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador muy lejos.");
                } else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
            } else return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vendar (ID)");
        } else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
		return 1;
    }
	zcmd(cajero, playerid,parms[])
	{
	    if(!gPlayerLogged{playerid}) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás logeado.");
	    if(!IsAtATM(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un ATM/Banco.");

			if(Info[playerid][pTarjetaCredito] == 0)
            {
            SendClientMessageEx(playerid, COLOR_GRAD2, "{A2DC35}[ATM]:{FFFFFF} No tienes una tarjeta de crédito, consiguela en el banco se ha marcado un punto rojo en el mapa.");
            SetPlayerCheckpoint(playerid, 1498.5365,-1580.9977,13.5498,5.0);
            return 1;
            }
		//new string[128];
        SafeDialogEx(playerid,BANCO_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Banco de Los Santos", "{FFFFFF}Retirar dinero\n{FFFFFF}Depositar dinero\n{FFFFFF}Transferir dinero\n{FFFFFF}Balance de fondos", "Seleccionar", "Cancelar");
        return 1;
	}
    zcmd(sacartarjeta, playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		if (!PlayerToPoint(5, playerid,1492.1687,-1567.2876,-9.4108)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el banco para registrar tu tarjeta.");
    		if(Info[playerid][pTarjetaCredito] == 1)
   			{
    			SendClientMessageEx(playerid, COLOR_GREY, "Secretaria: Disculpe señor(a) pero sus datos indican que ya tiene una cuenta registrada en nuestro banco.");
    			return 1;
    		}
    		SendClientMessageEx(playerid, COLOR_WHITE, " Felicidades hemos registrado una nueva cuenta a su nombre en el banco. ");
    		Info[playerid][pTarjetaCredito] = 1;
    	}
    	return 1;
    }
  CMD:mccomprar(playerid, params[]){
	if (PlayerToPoint(10, playerid,2355.5916,-648.6025,128.0547)){
		return SafeDialogEx(playerid, MENUMC, DIALOG_STYLE_LIST, "{008EC1}Mercado negro","Puño americano [20$]\nMascara [50$]\nSoga + Venda [120$]\nDesert Eagle [$20.000]\nMP5 [$25.000]\nMP5 + SD [$30.000]\nGanzuas [$1.000]\nDNI Falso [$15.000]", "Ok", "Cancelar");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en el mercado negro!");
	return 1;
 	}
  	CMD:comprarh(playerid, params[])
  	{
		if (PlayerToPoint(5, playerid,664.7147,-568.5193,16.3433))
		{
			SafeDialogEx(playerid, MENUF, DIALOG_STYLE_LIST, "{008EC1}Ferretería","Pala [$600]\nCaña [$500]\nPalo de Golf [$700]\nPalo de Billar [$300]\nSpray [$500]", "Comprar", "Cancelar");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en la ferretería!");
		return 1;
 	}
	CMD:sms(playerid, params[]){
		if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
		new string[128], phonenumb, text[100];
		if(sscanf(params, "ds[100]", phonenumb, text)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sms (numero teléfonico) (texto)");
		if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes un teléfono.");
		if(Info[playerid][pSaldo] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficiente saldo para enviar un SMS.");
		if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en prisión.");
		foreach(Player, i){
			if(Info[i][pPnumber] == phonenumb && phonenumb != 0){
				new giveplayerid = i;
				if(Mobile[giveplayerid] != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador está en una llamada.");
				Mobile[playerid] = giveplayerid;
				if(IsPlayerConnected(giveplayerid)){
					if(giveplayerid != INVALID_PLAYER_ID){
						if(PhoneOnline[giveplayerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador tiene el teléfono apagado.");
						if(UnidentifedCall[playerid] == 1){
							format(string, sizeof(string), "SMS: %s, de: Numero Privado.", text,GetPlayerNameEx(playerid),Info[playerid][pPnumber]);
						}
						else{
							format(string, sizeof(string), "SMS: %s, de: %s (%d)", text,GetPlayerNameEx(playerid),Info[playerid][pPnumber]);
						}
						SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
						SendClientMessageEx(playerid, COLOR_YELLOW, string);
						SendClientMessageEx(playerid, COLOR_WHITE, "Mensaje de Texto Enviado.");
						Info[playerid][pSaldo] -= 2;
						format(string, sizeof(string), "* %s recibe un mensaje en su teléfono.", GetPlayerNameEx(i));
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(playerid, "~r~$-25", 5000, 1);
						GivePlayerCash(playerid,-25);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						Mobile[playerid] = INVALID_PLAYER_ID;
						if(strcmp(Info[giveplayerid][pAutoTextReply], "Nada", true) != 0){
							format(string, sizeof(string), "SMS: %s, Destinatario: %s [Auto Respuesta] (%d)", Info[giveplayerid][pAutoTextReply], GetPlayerNameEx(giveplayerid), Info[giveplayerid][pPnumber]);
							SendClientMessageEx(playerid, COLOR_YELLOW, string);
						}
						return 1;
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Envio de mensaje falló.");
		return 1;
	}
	CMD:numero(playerid, params[]){
		if(Info[playerid][pLevel] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "Sólo los usuarios nivel 3 para adelante pueden usar este comando.");
		if(Info[playerid][pPhoneBook] == 1){
			new
				iTarget;
			if(sscanf(params, "d", iTarget)) {
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /numero (playerid)");
			}
			else if(IsPlayerConnected(iTarget)) {
				new
					szNumber[16 + MAX_PLAYER_NAME];
                if(UnidentifedCall[iTarget] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Número privado.");
				format(szNumber, sizeof(szNumber), "* %s (%i)", GetPlayerNameEx(iTarget), Info[iTarget][pPnumber]);
				SendClientMessageEx(playerid, COLOR_GRAD1, szNumber);
			} else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un PhoneBook.");
		return 1;
	}
	CMD:bebersprunk(playerid, params[]){
		if(Info[playerid][pSprunk] > 0){
			if( Info[playerid][pEstado] >= 1 || GetPVarInt(playerid, "Injured") == 1 || GetPVarInt(playerid, "EventToken") != 0){
				SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto ahora.");
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes beber aqui, estás conduciendo.");
			new string[128];
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			format(string, sizeof(string), "* %s abre su sprunk para beberlo.", GetPlayerNameEx(playerid));
			ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "UsingSprunk", 1);
			Info[playerid][pSprunk]--;
			return 1;
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un sprunk, compralo en el 24/7.");
		return 1;
	}
	/*zcmd(estado, playerid, params[]) {
		if( !IsPlayerConnected( playerid ) ) return 0;

		if( !sscanf( params, "s[32]", params[ 0 ] ) ) {
			new szFormat[ 2 ][ 50 ];
			format( szFormat[ 0 ], 31, "%s", params[ 0 ] );
			format( szFormat[ 1 ], 49, "Te has puesto el Estado: %s.", szFormat[ 0 ] );
			SendClientMessageEx( playerid, COLOR_GRAD2, szFormat[ 1 ] );

			Delete3DTextLabel( giPlayerStatus[ playerid ] );
			giPlayerStatus[ playerid ] = Create3DTextLabel( szFormat[ 0 ], 0x00EEFFFF, 1.0, 1.0, 1.0, 15.0, 0, 1 );

			Attach3DTextLabelToPlayer( giPlayerStatus[ playerid ], playerid, 0.0, 0.0, 0.3 );
		}

		return 1;
	}
	zcmd(qestado, playerid, params[]) {
		if( !IsPlayerConnected( playerid ) ) return 0;
		Delete3DTextLabel( giPlayerStatus[ playerid ] );
		SendClientMessageEx( playerid, COLOR_GRAD2, "Te has quitado el Estado." );
		return 1;
	}*/
	CMD:activarlinea(playerid, params[]){
	    if(!Team_LSTV(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No formas parte de LSRTV.");
	    if(InLive == 0){
	        SendClientMessageEx(playerid, COLOR_GREEN, "* Activaste el número 757, la línea está abierta, ahora la gente puede llamar.");
	        return InLive = 1;
		}
		else{
	        InLive = 0;
	        SendClientMessageEx(playerid, COLOR_GREEN, "* Desactivaste el número 757, ahora la línea está cerrada.");
		}
		return 1;
	}
	CMD:llamar(playerid, params[])
	{
		new string[128], phonenumb;

		if(sscanf(params, "d", phonenumb)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /llamar (numero telefónico)");
		if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en prisión.");
		if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid,COLOR_WHITE,"No puedes usar tu teléfono.");
		if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un teléfono.");
		if(Info[playerid][pSaldo] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficiente saldo para realizar esta llamada.");
		if(PhoneOnline[playerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu telefono está apagado.");
		if(Mobile[playerid] != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_WHITE, " Ya se encuentra en una llamada.");
		if(Info[playerid][pJailed] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este numero no lo puedes usar en sancion.");
		format(string, sizeof(string), "* %s coge su teléfono y marca unos números.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerPlaySound(playerid, 3600, 0, 0, 0);
		if(phonenumb == 911){
            SetPlayerAttachedObject(playerid, 9, 330, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Ahora usa T, y habla por el chat por teléfono, usa /colgar para finalizar la llamada.");
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Operadora: ¿Qué servicio desea? Policia o Paramédico");
			Mobile[playerid] = 911;
			return 1;
		}
		if(phonenumb == 757){
            if(InLive == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "En este momento la línea está fuera de servicio u ocupada.");
			InLive = 0;
            Mobile[playerid] = 758;
			format(string,128,"Llamada entrante: Nombre: %s - Número: %d.", GetPlayerNameEx(playerid), Info[playerid][pPnumber]);
			SendFamilyMessage(5, COLOR_YELLOW, string);
            SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
            return SendClientMessageEx(playerid, COLOR_WHITE, "LSRTV: Hola, estás en línea, desde este momento puedes hablar.");
		}
		else if(phonenumb == 3900){
		   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Bienvenido. ¿Tiene algúna noticia, quiere participar?");
		   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Déjenos un mensaje después de la señal, ¡hasta la vista!");
		  	SendClientMessageEx(playerid, COLOR_WHITE, "Biiip!");
		   	return Mobile[playerid] = 3901;
		}
		if(phonenumb == Info[playerid][pPnumber]) return SendClientMessageEx(playerid, COLOR_WHITE, " Está ocupado.");
		foreach(Player, i){
			if(Info[i][pPnumber] == phonenumb && phonenumb != 0){
				new giveplayerid = i;
				Mobile[playerid] = giveplayerid;
				if(IsPlayerConnected(giveplayerid)){
					if(giveplayerid != INVALID_PLAYER_ID){
						if(GetPVarInt(giveplayerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador está en el paintball arena no puede recibir llamadas.");
						if(PhoneOnline[giveplayerid] > 0){
							SendClientMessageEx(playerid, COLOR_WHITE, "Tono a apagado.");
							Mobile[playerid] = INVALID_PLAYER_ID;
							return 1;
						}
						if(Mobile[giveplayerid] != INVALID_PLAYER_ID){
							SendClientMessageEx(playerid, COLOR_WHITE, "Tono a ocupado.");
							Mobile[playerid] = INVALID_PLAYER_ID;
							return 1;
						}
						if (Mobile[giveplayerid] == INVALID_PLAYER_ID){
						    SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
							format(string, sizeof(string), "Tu telefono está sonando - Usa /contestar para atender la llamada. [De: %s]", Info[playerid][pPnumber]);
							SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "* El teléfono de %s está sonando.", GetPlayerNameEx(i));
							ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INFO]:{FFFFFF} Usa T y habla por el teléfono, cuando termines usa /colgar.");
							CellTime[playerid] = 1;
       return 1;
						}
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Su llamada no puede darse por el numero marcado, por favor, compruebe el número e inténtelo nuevamente.");
		return 1;
	}
	CMD:contestar(playerid, params[]){
		new string[128];
		if(Mobile[playerid] != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_WHITE, "  Ya estás en una llamada.");
		foreach(Player, i){
			if(Mobile[i] == playerid){
				Mobile[playerid] = i;
				SendClientMessageEx(i,  COLOR_WHITE, "Contestaron su llamada.");
				Info[i][pSaldo] -= 2;
				format(string, sizeof(string), "* %s contesta la llamada de su teléfono.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                SetPlayerAttachedObject(playerid, 9, 330, 6);
				return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			}
		}
		return 1;
	}
	CMD:colgar(playerid,params[]){
		new string[128];
		if(Info[playerid][pEstado]!=0) return SendClientMessageEx (playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
		if(Mobile[playerid] == 758){
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
			InLive = 1;
			SendClientMessageEx (playerid, COLOR_WHITE, "* LSRTV: Gracias por llamar a Los Santos Radio y Televisión.");
			return Mobile[playerid] = INVALID_PLAYER_ID;
		}
		new caller = Mobile[playerid];
		if((IsPlayerConnected(caller) && caller != INVALID_PLAYER_ID)|| caller == 911 || caller == 3901){
			if(caller < 500){
				SendClientMessageEx(caller,  COLOR_WHITE, "Colgaron el teléfono.");
				format(string, sizeof(string), "* %s guarda su teléfono en su bolsillo.", GetPlayerNameEx(caller));
				ProxDetector(30.0, caller, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				CellTime[caller] = 0;
				Mobile[caller] = INVALID_PLAYER_ID;
			}
			CellTime[playerid] = 0;
			SendClientMessageEx(playerid,  COLOR_WHITE, "has colgado.");
			format(string, sizeof(string), "* %s guarda su teléfono en su bolsillo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Mobile[playerid] = INVALID_PLAYER_ID;
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(caller, 9);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
			return 1;
		}
		SendClientMessageEx(playerid,  COLOR_WHITE, "Tu teléfono está en el bolsillo.");
		return 1;
	}
    zcmd(enmascarados, playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(IsPlayerConnected(playerid))
	    if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");{
			SendClientMessageEx(playerid, COLOR_BLUE, "Enmascarados:");
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(IsPlayerConnected(i)) {
				    if(Info[i][pMaskuse] == 1) {
						new string[128];
						format(string, 128, "** ID: %d ** %s", i, GetPlayerNameEx(i));
						SendClientMessageEx(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
	// zcmd:job
    zcmd(unirse, playerid, params[])
    {
        if(Info[playerid][pJob] > 0) return Message(playerid, COLOR_GENERAL, "Ya tienes un trabajo usa /renunciar");
		if (PlayerToPoint(3.0, playerid, -564.4684,-1500.0900,9.2544)){
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Leñador! Usa /ayuda para ver los comandos disponibles.");
			return Info[playerid][pJob] = 3;
		}
		else if (PlayerToPoint(3.0, playerid, 2104.8408,-1810.0991,13.5547)){
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Pizzero! Usa /ayuda para ver los comandos disponibles.");
			return Info[playerid][pJob] = 4;
        }
        else if(IsPlayerInRangeOfPoint(playerid,3.0,2184.5562,-2251.8499,14.7700)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Camionero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob] = 6;
		}
        else if (PlayerToPoint(3.0, playerid, 2154.5103,-2268.6807,13.3025)){
            if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes restricción de armas las 2 primeras horas de juego.");
            if(Team_LSPD(playerid) || Team_FBI(playerid) || Team_SAEM(playerid) || Gobierno(playerid) || Team_Judicial(playerid)) return Message(playerid, COLOR_GRAD2, "No puedes ser armero siendo de una facción legal.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Armero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob] = 7;
		}
        else if (PlayerToPoint(3.0, playerid, 2246.6863,-1990.4323,13.5469)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Taxista! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob] = 8;
		}
        else if (PlayerToPoint(3.0, playerid, -100.0008,33.9278,3.1172)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Granjero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob] = 9;
		}
		else if (PlayerToPoint(3.0, playerid,2355.1594,-1169.2037,28.0057)){
		SendClientMessage(playerid, COLOR_GENERAL, "PerfectCity-RP: {FFFFFF}Ahora eres Traficante de Drogas! Usa /ayuda para ver los comandos disponibles.");
            SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Tu puedes obtener paquetes de drogas en un pueblo. (Vé al checkpoint)");
            SetPlayerCheckpoint(playerid, 646.7178,-511.4338,16.3359, 2);
            PlayerPlaySound(playerid, 1138, 0,0,0);
            return Info[playerid][pJob] = 10;
		}
        else if (IsPlayerInRangeOfPoint(playerid,3.0,2021.5721,-1274.4832,23.9810)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Jardinero! Usa /ayuda para ver los comandos disponibles.");
            SetPlayerSkin(playerid, 73);
			return Info[playerid][pJob] = 13;
        }
        else if (IsPlayerInRangeOfPoint(playerid,3.0,1423.9009,-1355.9692,13.2810)){
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Vendedor de Chalecos! Usa /ayuda para ver los comandos disponibles.");
			return Info[playerid][pJob] = 14;
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
		return 1;
	}
    zcmd(unirse2, playerid, params[])
    {
    if(Info[playerid][pVIP] > 1)
      {
        if(Info[playerid][pJob2] > 0) return Message(playerid, COLOR_GENERAL, "Ya tienes un trabajo usa /renunciar2");
		if (PlayerToPoint(3.0, playerid, -564.4684,-1500.0900,9.2544)){
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Leñador! Usa /ayuda para ver los comandos disponibles.");
			return Info[playerid][pJob2] = 3;
		}
		else if (PlayerToPoint(3.0, playerid, 2104.8408,-1810.0991,13.5547) || PlayerToPoint(3.0, playerid, -2325.9390,-140.0120,35.1734)){
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Pizzero! Usa /ayuda para ver los comandos disponibles.");
			return Info[playerid][pJob2] = 4;
        }
        else if(IsPlayerInRangeOfPoint(playerid,3.0,2184.5562,-2251.8499,14.7700)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Camionero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob2] = 6;
		}
        else if (PlayerToPoint(3.0, playerid, 2154.5103,-2268.6807,13.3025) || PlayerToPoint(3.0, playerid, -2539.8706,210.0188,10.8738)){
            if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes restricción de armas las 2 primeras horas de juego.");
            if(Team_LSPD(playerid) || Team_FBI(playerid) || Team_SAEM(playerid) || Gobierno(playerid) || Team_Judicial(playerid)) return Message(playerid, COLOR_GRAD2, "No puedes ser armero siendo de una facción legal.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Armero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob2] = 7;
		}
        else if (PlayerToPoint(3.0, playerid, 2246.6863,-1990.4323,13.5469)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Taxista! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob2] = 8;
		}
        else if (PlayerToPoint(3.0, playerid, -100.0008,33.9278,3.1172)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Granjero! Usa /ayuda para ver los comandos disponibles.");
            return Info[playerid][pJob2] = 9;
		}
        else if (PlayerToPoint(3.0, playerid,2355.1594,-1169.2037,28.0057)){
		SendClientMessage(playerid, COLOR_GENERAL, "PerfectCity-RP: {FFFFFF}Ahora eres Traficante de Drogas! Usa /ayuda para ver los comandos disponibles.");
            SendClientMessageEx(playerid, COLOR_YELLOW, "{FF8000}[INDICACION]:{FFFFFF} Tu puedes obtener paquetes de drogas en un pueblo. (Vé al checkpoint)");
            SetPlayerCheckpoint(playerid, 646.7178,-511.4338,16.3359, 2);
            PlayerPlaySound(playerid, 1138, 0,0,0);
            return Info[playerid][pJob2] = 10;
		}
        else if (IsPlayerInRangeOfPoint(playerid,3.0,2021.5721,-1274.4832,23.9810)){
        if(Info[playerid][pCarLic] == 0) return Message(playerid, COLOR_GRAD2, "No tienes licencia de coche, puedes adquirirla en el ayuntamiento.");
		SendClientMessage(playerid, COLOR_GENERAL, "[JOB]: {FFFFFF}Has firmado un contrato para ser Jardinero! Usa /ayuda para ver los comandos disponibles.");
            SetPlayerSkin(playerid, 73);
			return Info[playerid][pJob2] = 13;
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
	  }
	  else SendClientMessageEx(playerid, COLOR_WHITE, "No eres VIP silver para tener un segundo trabajo.");
      return 1;
	}
	zcmd(renunciar, playerid, params[])
	{
		if(Info[playerid][pJob] > 0)
		{
		    Info[playerid][pJob] = 0;
			return SendClientMessageEx(playerid, COLOR_WHITE, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");
		}
		else if(Info[playerid][pJob] == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "* Tu no tienes trabajo.");
		}
		return 1;
	}
	zcmd(renunciar2, playerid, params[])
	{
		if(Info[playerid][pJob2] > 0)
		{
		    Info[playerid][pJob2] = 0;
			return SendClientMessageEx(playerid, COLOR_WHITE, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");
		}
		else if(Info[playerid][pJob2] == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "* Tu no tienes segundo trabajo.");
		}
		return 1;
	}
	zcmd(cfuego, playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] >= 6 || Info[playerid][pFactionModerator] == 1)
		{
	   new Float:X, Float:Y, Float:Z, Float:A;
	   GetPlayerPos(playerid, X, Y, Z);
	   GetPlayerFacingAngle(playerid, A);
	   new block = CreateObject(18694, X, Y, Z -2.5, 0.0, 0.0, A);
	   CreatedBlocks[CreatedBlock] = block;
	   CreatedBlock++;
	   SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} Has provocado un incendio.");
	    }
	   return 1;
	}
	zcmd(qfuego, playerid, params[]){
       if(Team_BomberosLS(playerid))
	   for(new i = 0; i <= CreatedBlocks[i]; i++) DestroyObject(CreatedBlocks[i]);
	   return 1;
	}
    zcmd(cosechar, playerid, params[]){
        new idcar = GetPlayerVehicleID(playerid);
		if(Info[playerid][pJob] == 9 || Info[playerid][pJob2] == 9){
		    if(IsAHarvest(idcar)){
                if(DrugFarming[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[JOB]:{FFFFFF} Ya estás cosechando!");
	      	    DrugFarming[playerid] = 1;
				new randomize = random(sizeof(gDrugFarmVar));
	      		SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
	       	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} Dirígete a los Checkpoints y cosecha lo que necesites.");
	       	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} Cuando quieras dejar de cosechar usa /dcosechar.");
	       	} else return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[JOB]:{FFFFFF} No estás en una cosechadora!");
	    } else SendClientMessageEx(playerid, COLOR_WHITE, "No eres Granjero!");
        return 1;
    }
    zcmd(dcosechar, playerid, params[]){
        new idcar = GetPlayerVehicleID(playerid);
        if(!IsAHarvest(idcar)) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} No estás en una cosechadora.");
        if(DrugFarming[playerid] == 1){
	  	    if(DrugFarming[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} No estás cosechando.");
	  	    DrugFarming[playerid] = 0;
	  	    SetVehicleToRespawn(idcar);
	  	    SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[JOB]:{FFFFFF} Dejaste de cosechar! Puedes ver los Kg que hiciste (/inventario).");
	  	    DisablePlayerCheckpoint(playerid);
	    } else SendClientMessageEx(playerid, COLOR_WHITE, "No estás cosechando.");
        return 1;
    }
    //*******************Google*******************
    zcmd(google, playerid, params[]){
		if(PlayerToPoint(20.0,playerid,959.3875, -1443.0875, 13.6144)){
		 	return SafeDialogEx(playerid, GOOGLE, DIALOG_STYLE_INPUT, "{008EC1}Google Chrome", "{FFFFEE}www.{0077AA}G{FF2200}o{EE9900}o{0077AA}g{338800}l{FF2200}e{FFFFEE}.com - buscar online","Buscar","Salir");
		}
		return 1;
	}
    //*******************Mecanicos*******************
    zcmd(menu, playerid, params[]){
        if(Team_Mecanicos(playerid)) {
     		if(OnDuty[playerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás de servicio.");
	    	return SafeDialogEx(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "{008EC1}Mecánico - Menú", "Reparaciones\nLlenar Tanque\nPiezas Tunning", ">>", "<<");
		} else SendClientMessageEx(playerid, COLOR_WHITE, "No eres mecánico.");
		return 1;
    }
    /*zcmd(comprar, playerid, params[])
    {
    	if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
    	{
			if (PlayerToPoint(20, playerid,-22.3260,-138.6221,1003.5469)||PlayerToPoint(20, playerid,-25.6448,-56.6718,1003.5469)||PlayerToPoint(20, playerid,-29.3554,-28.8020,1003.5573)|| IsAt247(playerid))
			{
				ProxDetector(20.0, playerid,"Ismael_Garcia dice: Bienvenido a este 24-7 ¿qué desea?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
  				return SafeDialogEx(playerid, STOREMENU, DIALOG_STYLE_LIST, "{008EC1}24/7", "Loteria\t\t\t$10\n\nCigarros\t\t$40\nEncendedor\t\t$20\nFlores\t\t\t$7\nSprunk\t\t\t$8\nSeguro Alarma\t\t$500\nSeguro Industrial\t$2000", "Comprar", "Cancelar");
			}
			if (PlayerToPoint(20, playerid,1006.0530,52.7181,55.3221))
			{
				ProxDetector(20.0, playerid,"Aaron_Vargas dice: Bienvenido a la tienda de electrónica ¿qué desea?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				return SafeDialogEx(playerid, TIENDA_ELEC, DIALOG_STYLE_LIST, "{008EC1}Tienda electronica","Teléfono\t\t$250\nAgenda Telefónica\t\t$20\nCámara\t\t$160\nRadio Portable\t\t$800\nIpodMusic\t\t$850\nBoombox\t\t$750", "Comprar", "Salir");
			}
   		}
		return 1;
    }*/
 		zcmd(cropa, playerid, params[])
 		{
			new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
			if(businessVariables[businessID][bType] == 2)
        	{
        		if(IsPlayerConnected(playerid))
        		{
            		ShowModelSelectionMenu(playerid, skinlist, "Selecciona Tu Nuevo Skin");
            	}
            	else Message(playerid, COLOR_WHITE, "No estás conectado");
            }
            return 1;
		}
 	zcmd(acento, playerid, params[])
	{
		new accent;
		if(sscanf(params, "d", accent)){
			SendClientMessageEx(playerid, COLOR_BLUE, "USO: /acento [id acento]");
			SendClientMessageEx(playerid, COLOR_WHITE, "Acentos: [1]Normal, [2]Britanico, [3,4,5]Asiatico, [6]Venezolano, [7]Peruano, [8]Ruso, [9]Americano");
			SendClientMessageEx(playerid, COLOR_WHITE, "Acentos: [10]Español, [11]Colombiano, [12]Francés, [13]Italiano, [14]Gangster, [15]Uruguayo");
			SendClientMessageEx(playerid, COLOR_WHITE, "Acentos: [16]Brasilero, [17]Argentino, [18]Chileno, [19]Cubano, [20]Israeli, [21]Alemán, [22]Hippie");
			return 1;
		}
		switch(accent){
			case 1:{
				Info[playerid][pAccent] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Normal, usa /acento para cambiarlo." );
			}
			case 2:{
				Info[playerid][pAccent] = 2;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Britanico, usa /acento para cambiarlo." );
			}
			case 3:{
				Info[playerid][pAccent] = 3;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Japones, usa /acento para cambiarlo." );
			}
			case 4:{
				Info[playerid][pAccent] = 4;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Chino, usa /acento para cambiarlo." );
			}
			case 5:{
				Info[playerid][pAccent] = 5;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Koreano, usa /acento para cambiarlo." );
			}
			case 6:{
				Info[playerid][pAccent] = 6;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Venezolano, usa /acento para cambiarlo." );
			}
			case 7:{
				Info[playerid][pAccent] = 7;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Peruano, usa /acento para cambiarlo." );
			}
			case 8:{
				Info[playerid][pAccent] = 8;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Ruso, usa /acento para cambiarlo." );
			}
			case 9:{
				Info[playerid][pAccent] = 9;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Americano, usa /acento para cambiarlo." );
			}
			case 10:{
				Info[playerid][pAccent] = 10;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Español, usa /acento para cambiarlo." );
			}
			case 11:{
				Info[playerid][pAccent] = 11;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Colombiano, usa /acento para cambiarlo." );
			}
			case 12:{
				Info[playerid][pAccent] = 12;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Francés, usa /acento para cambiarlo." );
			}
			case 13:{
				Info[playerid][pAccent] = 13;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tu acento es Italiano, usa /acento para cambiarlo." );
			}
			case 14:{
				Info[playerid][pAccent] = 14;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Gangster, usa /acento para cambiarlo." );
			}
			case 15:{
				Info[playerid][pAccent] = 15;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Uruguayo, usa /acento para cambiarlo." );
			}
			case 16:{
				Info[playerid][pAccent] = 16;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Brasilero, usa /acento para cambiarlo." );
			}
			case 17:{
				Info[playerid][pAccent] = 17;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Argentino, usa /acento para cambiarlo." );
			}
			case 18:{
				Info[playerid][pAccent] = 18;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Chileno, usa /acento para cambiarlo." );
			}
			case 19:{
				Info[playerid][pAccent] = 19;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Cubano, usa /acento para cambiarlo." );
			}
			case 20:{
				Info[playerid][pAccent] = 20;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Israeli, usa /acento para cambiarlo." );
			}
			case 21:{
				Info[playerid][pAccent] = 21;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Alemán, usa /acento para cambiarlo." );
			}
			case 22:{
				Info[playerid][pAccent] = 22;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ahora tienes acento Hippie, usa /acento para cambiarlo." );
			}
		}
		return 1;
	}
	CMD:me(playerid, params[])
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /me (acción)");
  		new string[128];
  		if(Info[playerid][pMaskuse] == 1) 
		{
			format(string, sizeof(string), "* Desconocido %s.", params);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,15.0,5000);
			return 1;
		}
		else
		{
			format(string, sizeof(string), "* %s %s.", GetPlayerNameEx(playerid), params);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,15.0,5000);
		}
		return 1;
	}
	CMD:b(playerid, params[])
	{
		if(!gPlayerLogged{playerid}) return SendClientMessageEx(playerid, COLOR_GREY, "No estás logueado.");
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /b (ooc chat)");
		new string[128];
		if (GetPVarInt(playerid, "OOCTimer") > 0)
		{
			format(string, sizeof(string), "Tienes que esperar %d segundos despues de haber hablado por /b.", GetPVarInt(playerid, "OOCTimer"));
 			SendClientMessageEx(playerid,COLOR_GREY,string);
  			return 1;
   		}
   		else
   		{
		format(string, sizeof(string), "{FF0000}[OOC]{FFFFFF} %s:{FFFFFF} %s", GetPlayerNameEx(playerid), params);
		ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPVarInt(playerid, "OOCTimer", 6); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_OOC);
		}
		return 1;
	}
	zcmd(hackearcom, playerid, params[])
    {
    if(Team_FSO(playerid))
    {
	 	if (Hackeargob == 1) return SendClientMessage(playerid, COLOR_WHITE, "Espera 10 minutos para volver a utilizar este comando!");
	 	new randa = random(2)+1;
  		if(!sscanf(params, "s[128]", params[0]))
  		{
  		    new string[128];
   			{
   			    if(randa == 1)
   			    {
                    	format(string, sizeof(string), "{FF0000}* %s logro hackear las comunicaciones del gobierno", params[0]);
						ProxDetector(3.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
				}
				else
				{
						format(string, sizeof(string), "{FF0000}* %s no logro hackear las comunicaciones del gobierno", params[0]);
						ProxDetector(3.0, playerid, string,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
				}
				Hackeargob = 1;
				SetTimerEx("HackearTimer", 600000, false, "i", playerid);
           }
	    }
     	return 1;
    }

	}
				
	zcmd(intentar, playerid, params[])
    {
        if(Intentar[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Espera 10 segundos para volver a utilizar este comando!");
        new randa = random(2)+1;
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
			if(Info[playerid][pMaskuse] == 1)
			{
					if(randa == 1)
					{
						format(string, sizeof(string), "* Desconocido intenta %s y lo logra", params[0]);
						ProxDetector(3.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						format(string, sizeof(string), "* Desconocido intenta %s pero falla", params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			}
			else
			{
				    if(randa == 1)
					{
						format(string, sizeof(string), "* %s intenta %s y lo logra", GetPlayerNameEx(playerid), params[0]);
						ProxDetector(3.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						format(string, sizeof(string), "* %s intenta %s pero falla", GetPlayerNameEx(playerid), params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			}
		} else SendClientMessage(playerid, COLOR_WHITE, "Utilize: /intentar <Acción>");
		return 1;
    }
 	CMD:aa(playerid, params[])
	{
     if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(Info[playerid][pAdminZC] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes acceso a usar este comando.");
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /aa (texto)");
		new string[128];
		if(Info[playerid][pAdminZC] == 2) format(string, sizeof(string), "{A9BCF5}((Moderador %s: %s))", GetPlayerNameEx(playerid), params);
		else
   			if(Info[playerid][pAdminZC] == 5000) format(string, sizeof(string), "{FF0000}((Admin Dueño %s: %s))", GetPlayerNameEx(playerid), params);
   			else if(Info[playerid][pAdminZC] == 6000) format(string, sizeof(string), "{3104B4}((Fundador %s: %s))", GetPlayerNameEx(playerid), params);
   			else if(Info[playerid][pAdminZC] == 89648) format(string, sizeof(string), "{00e4ff}((Fundador %s: %s))", GetPlayerNameEx(playerid), params);
   			else if(Info[playerid][pAdminZC] == 89649) format(string, sizeof(string), "{9300ff}((Fundador %s: %s))", GetPlayerNameEx(playerid), params);
   			else if(Info[playerid][pAdminZC] == 89650) format(string, sizeof(string), "{FF8000}((Fundador %s: %s))", GetPlayerNameEx(playerid), params);
   			else if(Info[playerid][pAdminZC] == 89651) format(string, sizeof(string), "{FF0080}((Fundadora %s: %s))", GetPlayerNameEx(playerid), params);
		else format(string, sizeof(string), "{00FF00}((Administrador %s: %s)){FFFFFF} ", GetPlayerNameEx(playerid), params);
		ProxDetector(40.0, playerid, string,COLOR_CMDAA,COLOR_CMDAA,COLOR_CMDAA,COLOR_CMDAA,COLOR_CMDAA);
		SetPlayerChatBubble(playerid,string,COLOR_CMDAA,60.0,5000);
		return 1;
	}
    zcmd(c, playerid, params[])
    {
        if(Muted[playerid] == 1) return	SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "* No puedes hablar estás silenciado.");
		if(!gPlayerLogged{playerid}) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás logueado.");
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /c (IC chat)");
		new string[128];
		format(string, sizeof(string), "%s: %s", GetPlayerNameEx(playerid), params);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPlayerChatBubble(playerid,string,COLOR_WHITE,20.0,5000);
		return 1;
	}
    zcmd(do, playerid, params[]){
        if(!isnull(params)){
            new string[128];
            if(Info[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "* %s (( Desconocido )).", params);
				ProxDetector(30.0, playerid, string, COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN);
				SetPlayerChatBubble(playerid,string,COLOR_LIGHTGREEN,15.0,5000);
				return 1;
			}
			else
			{
				format(string, sizeof(string), "* %s (( %s )).", params, GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN);
   				SetPlayerChatBubble(playerid,string,COLOR_LIGHTGREEN,15.0,5000);
        	}
        }
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /do (Acción)");
        return 1;
    }
    zcmd(ent, playerid, params[])
    {
    	if(!isnull(params)){
    		new string[128];
			format(string, sizeof(string), "* %s (( Entorno )).", params);
 	    	return ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ent (Entorno)");
		return 1;
    }
    zcmd(so, playerid, params[])
	{
        if(!isnull(params)){
			new string[128];
			format(string, sizeof(string), "* %s (( Se oye )).", params);
			return ProxDetector(35.0, playerid, string, COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED);
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /so (Entorno)");
        return 1;
    }
    zcmd(s, playerid, params[]){
		if(!isnull(params)){
		    new string[128];
            if(Info[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido susurra: %s", params);
			else format(string, sizeof(string), "%s susurra: %s", GetPlayerNameEx(playerid), params);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			format(string, sizeof(string), "(susurro) %s", params);
			return SetPlayerChatBubble(playerid,string,COLOR_WHITE,5.0,5000);
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /s <Acción>");
        return 1;
    }
	zcmd(g, playerid, params[]){
        if(!isnull(params)){
            new string[128];
            if(Info[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido grita: ¡¡ %s !!", params);
			else format(string, sizeof(string), "%s grita: %s!", GetPlayerNameEx(playerid), params);
            ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			format(string, sizeof(string), "(grito) %s!", params);
			return SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /g <Acción>");
        return 1;
    }
    zcmd(ao, playerid, params[])
    {
     	//if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted aún no está conectado.");
        if(Info[playerid][pAdminZC] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ao (general chat)");
        if(Info[playerid][pAdminZC] < 6000){
			new string[128];
			format(string, sizeof(string), "*{FFFF00}[AOOC]:{FFFFFF}[ Administrador %s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(CELESTE_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 5000){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:{FF0000}[ Admin Dueño {FFFFFF}%s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
      else if(Info[playerid][pAdminZC] == 6000){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:{3104B4}[ Fundador {FFFFFF}%s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
      else if(Info[playerid][pAdminZC] == 89648){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:{00e4ff}[ Fundador {FFFFFF}%s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
      else if(Info[playerid][pAdminZC] == 89649){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:{9300ff}[ Fundador {FFFFFF}%s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
		else if(Info[playerid][pAdminZC] == 89650){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:{FF8000}[ Fundador {FFFFFF}%s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
 		else if(Info[playerid][pAdminZC] == 89651){
			new string[128];
		 	format(string, sizeof(string), "*{FFFFFF}[AOOC]:[ {FF0080}Fundadora{FFFFFF} %s: %s ]*",GetPlayerNameEx(playerid), params[0]);
			OOCOff(ROJO_ADMIN,string);
      }
      return 1;
  	}
  zcmd(a, playerid, params[]){
        if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted aún no está conectado.");
        if(Info[playerid][pAdminZC] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /a (Admin Chat)");
       	if(Info[playerid][pAdminZC] == 2){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Ayudante del Staff %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(CELESTE_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 3){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Moderador a Pruebas %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(CELESTE_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 4){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Moderador %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(CELESTE_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 5){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Moderador Superior %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(MORADO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 6){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Administrador %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(MORADO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 1338){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Administrador Superior %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(MORADO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 4000){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Técnico %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 4001){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} WebMaster %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 4002){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF} Sub-Dueño %s: %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 5000){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FFFFFF}{FF0000} Admin Dueño %s:{FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 6000){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{3104B4} Fundador %s: {FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 89648){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{00e4ff} Fundador %s: {FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 89649){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{9300ff} Fundador %s: {FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 89650){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FF8000} Fundador %s: {FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
		else if(Info[playerid][pAdminZC] == 89651){
			new string[128];
			format(string, sizeof(string), "(( {FFFF00}[AC]:{FF0080} Fundadora %s: {FFFFFF} %s ))", GetPlayerNameEx(playerid), params);
			SendAdminMessage(ROJO_ADMIN,string);
		}
        return 1;
    }
CMD:crearregalo(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 5000)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un vehículo.");
		new string[128], Float:Position[4];
		if(dynamicgift == 0)
		{
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			dynamicgift = CreateDynamicObject(19054, Position[0], Position[1], Position[2]-0.4, 0.0, 0.0, Position[3], -1, -1, -1, 200.0);
			dynamicgift3DText = CreateDynamic3DTextLabel("Para recibir tu premio\n{FFFFFF}/regalo",COLOR_YELLOW,Position[0], Position[1], Position[2]+0.25,8.0);
			SetPlayerPos(playerid, Position[0], Position[1], Position[2]+3);
			format(string, sizeof(string), "[AdmCmd]: %s pusó un regalo temporal.", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, string, 1337);
		}
		else
		{
			DestroyDynamicObject(dynamicgift);
			dynamicgift = 0;
			DestroyDynamic3DTextLabel( Text3D:dynamicgift3DText );
			format(string, sizeof(string), "[AdmCmd]: %s eliminó un regalo temporal.", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, string, 1337);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado.");
	return 1;
}

CMD:regalo(playerid, params[])  //
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 3.0,799.3140,-1419.6476,1016.4688) || (playerid, 3.0,2376.4890, 1115.3467, 34.9547))
	{
		if(Info[playerid][pVIP] >= 1)
		{
			if(VIPGifts == 0 && Info[playerid][pVIP] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "La caja está bloqueada.");
	        if(Info[playerid][pGiftTime] != 0){
				format(string, sizeof(string), "* Necesitas esperar %i hora(s) para abrir de nuevo el regalo.", Info[playerid][pGiftTime] / 3600);
				return SendClientMessageEx(playerid, COLOR_WHITE, string);
	        }
			format(string, sizeof(string), "* %s abre el regalo con los ojos cerrados.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            Info[playerid][pGiftTime] = 18000;
			GiftPlayer(playerid);
		}
	}
	else if(dynamicgift != 0)
	{
		new Float:Position[3];
		GetDynamicObjectPos(dynamicgift, Position[0], Position[1], Position[2]);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2]))
		{
			if(Info[playerid][pLevel] >= 1)
			{
	        	if(Info[playerid][pGiftTime] != 0){
					format(string, sizeof(string), "* Necesitas esperar %i hora(s) para abrir de nuevo el regalo.", Info[playerid][pGiftTime] / 3600);
					return SendClientMessageEx(playerid, COLOR_WHITE, string);
	       	 	}
				format(string, sizeof(string), "* %s mira el interior del regalo.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                Info[playerid][pGiftTime] = 18000;
				return GiftPlayer(playerid);
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
		}
	}
	return 1;
}
CMD:vipregalo(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new string[128];
    if(Info[playerid][pAdminZC] >= 6000)
    {
     	if(VIPGifts == 0)
     	{
           	VIPGifts = 1;
           	new sString[128];
			format( sString, sizeof( sString ), "%s quiere que vengas al Club VIP hay regalos para ti (20 minutos restantes).", GetPlayerNameEx(playerid));
			BroadCast(COLOR_LIGHTGREEN, sString);
			VIPGiftsTimeLeft = 20;
			format(VIPGiftsName, sizeof(VIPGiftsName), "%s", GetPlayerNameEx(playerid));
		}
		else
		{
		    VIPGifts = 0;
		    new sString[128];
	   		format( sString, sizeof( sString ), "[AdmCmd]: %s ha deshabilitado el comando /regalo", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, sString, 1337 );
			format(string, sizeof(string), "Club {FFFF00}VIP{FFFFFF} ya no está regalando obsequios. Gracias por venir!", VIPGiftsName, VIPGiftsTimeLeft);
			BroadCast(COLOR_LIGHTGREEN, string);
			VIPGiftsTimeLeft = 0;
		}
	}
	return 1;
}

CMD:bloqre(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[512], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /bloqre(ID) (razón)");

		if(IsPlayerConnected(giveplayerid))
		{
			if(Info[giveplayerid][pRMuted] == 0)
			{
			    if(Info[giveplayerid][pRMutedTotal] == 0)
			    {
  					Info[giveplayerid][pRMutedTotal] = 1;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha dado a %s su primera advertencia sobre abuso de reportes, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Un administrador te ha advertido sobre un abuso en el comando /re.\n\nTen en cuenta que un abuso futuro del comando /re podrías resultar muteado de tal comando o perder el privilegio por completo.");
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Advertencia de abuso", string,"OK", "");

					format(string, sizeof(string), "AdmCmdExe: %s ha dado a %s su primera advertencia sobre abuso, razón: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					Log("logs/mute.log", string);
			    }
			    else if(Info[giveplayerid][pRMutedTotal] == 1)
			    {
  					Info[giveplayerid][pRMuted] = 2;
  					Info[giveplayerid][pRMutedTotal] = 2;
					Info[giveplayerid][pRMutedTime] = 15*60;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha bloqueado temporalmente a %s del comando /re, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Has sido bloqueado temporalmente del comando de reportes por %s, razón: %s.\n\nComo está es la segunda vez que tu has sido bloqueado de los reportes, no podrás usar el comando por 15 minutos.\n\nTen en cuenta que un abuso futuro del comando /re podrías resultar muteado de tal comando o perder el privilegio por completo.", GetPlayerNameEx(playerid), reason);
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Bloqueo temporal", string,"OK", "");

					format(string, sizeof(string), "AdmCmdExe: %s fue bloqueado temporalmente del comando /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
			    }
			    else if(Info[giveplayerid][pRMutedTotal] == 2)
			    {
  					Info[giveplayerid][pRMuted] = 2;
  					Info[giveplayerid][pRMutedTotal] = 3;
					Info[giveplayerid][pRMutedTime] = 30*60;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha bloqueado temporalmente a %s del comando /re, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Has sido bloqueado temporalmente del comando de reportes por %s, razón: %s.\n\nComo está es la tercera vez que tu has sido bloqueado de los reportes, no podrás usar el comando por 30 minutos.\n\nTen en cuenta que un abuso futuro del comando /re podrías resultar muteado de tal comando o perder el privilegio por completo.", GetPlayerNameEx(playerid), reason);
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Bloqueo temporal", string,"OK", "");

					format(string, sizeof(string), "AdmCmdExe: %s fue bloqueado temporalmente del comando /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
			    }
			    else if(Info[giveplayerid][pRMutedTotal] == 3)
			    {
  					Info[giveplayerid][pRMuted] = 2;
  					Info[giveplayerid][pRMutedTotal] = 4;
					Info[giveplayerid][pRMutedTime] = 45*60;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha bloqueado temporalmente a %s del comando /re, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Has sido bloqueado temporalmente del comando de reportes por %s, razón: %s.\n\nComo está es la cuarta vez que tu has sido bloqueado de los reportes, no podrás usar el comando por 45 minutos.\n\nTen en cuenta que un abuso futuro del comando /re podrías resultar muteado de tal comando o perder el privilegio por completo.", GetPlayerNameEx(playerid), reason);
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Bloqueo temporal", string,"OK", "");

					format(string, sizeof(string), "AdmCmdExe: %s fue bloqueado temporalmente del comando /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}
			    else if(Info[giveplayerid][pRMutedTotal] == 4)
			    {
  					Info[giveplayerid][pRMuted] = 2;
  					Info[giveplayerid][pRMutedTotal] = 5;
					Info[giveplayerid][pRMutedTime] = 60*60;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha bloqueado temporalmente a %s del comando /re, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Has sido bloqueado temporalmente del comando de reportes por %s, razón: %s.\n\nComo está es la quinta vez que tu has sido bloqueado de los reportes, no podrás usar el comando por 60 minutos.\n\nTen en cuenta que un abuso futuro del comando /re podrías resultar muteado de tal comando o perder el privilegio por completo.", GetPlayerNameEx(playerid), reason);
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Bloqueo temporal", string,"OK", "");

					format(string, sizeof(string), "AdmCmdExe: %s fue bloqueado temporalmente del comando /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}
			    else if(Info[giveplayerid][pRMutedTotal] >= 5)
			    {
  					Info[giveplayerid][pRMuted] = 1;
  					Info[giveplayerid][pRMutedTotal] = 6;
					format(string, sizeof(string), "[AdmCmdExe]: %s ha bloqueado permanentemente a %s del comando /re, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,2);

					format(string, sizeof(string), "Tu has sido bloqueado permanentemente de los reportes por %s, razón: %s.\n\nComo está es la sexta vez que tu has sido bloqueado de los reportes, ya no podrás usar este comando, lo sentimos pero lo advertimos desde mucho antes.", GetPlayerNameEx(playerid), reason);
					SafeDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"{008EC1}Bloqueo indefinido de reportes", string,"OK", "");

					format(string, sizeof(string), "AdmCmd: %s fue bloqueado permanentemente (6 Mutes) del comando /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}
				for(new i = 0; i < MAX_REPORTS; i++)
				{
					if(Reports[i][ReportFrom] == giveplayerid)
					{
						Reports[i][BeingUsed] = 0;
					}
				}
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya está deshabilitado de /re.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	return 1;
}

CMD:desbloqre(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /desbloqre (playerid) (reason)");
		if(IsPlayerConnected(giveplayerid))
		{
			if(Info[giveplayerid][pRMuted] == 2)
			{
				Info[giveplayerid][pRMuted] = 0;
				Info[giveplayerid][pRMutedTotal]--;
				Info[giveplayerid][pRMutedTime] = 0;
				format(string, sizeof(string), "[AdmCmdExe]: %s ha desbloqueado del comando /re a %s, razón: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_GENERAL,string,2);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Has sido desbloqueado del comando de reportes, y ahora puedes usar el sistema de reportes de nuevo.");
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Por favor acepta nuestras disculpas por cualquier error y molestias que esto pueda haber causado.");
				format(string, sizeof(string), "AdmCmdExe: %s fue desbloqueado del cmd /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				Log("logs/mute.log", string);
			}
			else if(Info[giveplayerid][pRMuted] == 1)
			{
				Info[giveplayerid][pRMuted] = 0;
				Info[giveplayerid][pRMutedTotal] = 0;
				Info[giveplayerid][pRMutedTime] = 0;
				format(string, sizeof(string), "[AdmCmdExe]: %s ha desbloqueado del cmd /re a %s, razón: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_GENERAL,string,2);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Has sido desbloqueado del comando de reportes, y ahora puedes usar el sistema de reportes de nuevo.");
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Por favor acepta nuestras disculpas por cualquier error y molestias que esto pueda haber causado.");
				format(string, sizeof(string), "AdmCmdExe: %s fue desbloqueado del cmd /re por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				Log("logs/mute.log", string);
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está bloqueado de los reportes.");
			}

		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	return 1;
}


CMD:divorcio(playerid, params[])
{
	if(Info[playerid][pMarried] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás casado.");
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /divorcio (ID)");
	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new dstring[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "%s", giveplayer);
			strmid(wstring, string, 0, strlen(string), 24);
			format(string, sizeof(string), "%s", Info[playerid][pMarriedTo]);
			strmid(dstring, string, 0, strlen(string), 24);
			if(strcmp(dstring ,wstring, true ) == 0 )
			{
				format(string, sizeof(string), "* Has propuesto divorcio a %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s te ha propuesto divorcio. (escribe /aceptar divorcio)", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				DivorceOffer[giveplayerid] = playerid;
				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está casado contigo.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado.");
}
CMD:adivorcio(playerid, params[])
{
	if(Info[playerid][pAdminZC] > 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /adivorcio (ID)");
		if(IsPlayerConnected(giveplayerid))
		{
			ClearMarriage(giveplayerid);
			format(string, sizeof(string), "* Limpiaste el matrimonio de %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Tu has sido divorciado por %s.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			DivorceOffer[giveplayerid] = playerid;
			return 1;

		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado.");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
}
CMD:proponer(playerid, params[])
{
	if(GetPlayerCash(playerid) < 10000) return SendClientMessageEx(playerid, COLOR_GREY, "El matrimonio y recepción cuesta 10,000");
	if(Info[playerid][pMarried] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Tu ya estás casado.");
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /proponer (ID)");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No te puedes proponer a tí mismo.");
		if(Info[giveplayerid][pMarried] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador ya está casado.");
		else if(MarryWitness[playerid] == giveplayerid) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes casarte con el testigo.");
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			format(string, sizeof(string), "* Propusiste matrimonio a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s te propuso matrimonio. (Escribe /aceptar matrimonio)", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			ProposeOffer[giveplayerid] = playerid;
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado.");
	return 1;
}
CMD:testigo(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /testigo (ID)");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_WHITE, "No puedes proponerte a ti mismo."); return 1; }
			format(string, sizeof(string), "* Has solicitado a %s para ser tu testigo de matrimonio.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s te ha pedido que seas su testigo de matrimonio. (usa /aceptar testigo)", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			MarryWitnessOffer[giveplayerid] = playerid;
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado.");
	return 1;
}

CMD:radargun(playerid, params[])
{
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás herido.");
	if(IsAPolice(playerid))
	{
		new string[128];
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un vehículo.");
			return 1;
		}
		if(Info[playerid][pJailed] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás prisión.");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un evento.");
			return 1;
		}
		if(Info[playerid][pEstado] >= 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás tazeado.");
			return 1;
		}
		new SpeedRadar = GetPVarInt(playerid, "SpeedRadar");
		if(SpeedRadar == 0)
		{
			SetPVarInt(playerid, "RadarReplacement", Info[playerid][pWeapons][9]);
			if(Info[playerid][pWeapons][9] != 0) RemovePlayerWeapon(playerid, Info[playerid][pWeapons][9]);
			format(string, sizeof(string), "* %s coge la cámara de velocidad.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 43);
			SetPVarInt(playerid, "SpeedRadar", 1);
		}
		else
		{
			RemovePlayerWeapon(playerid, 43);
			GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"));
			format(string, sizeof(string), "* %s guarda la cámara de velocidad.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "SpeedRadar");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
		return 1;
	}
	return 1;
}
CMD:regalararma(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 5000)
	{
        new sstring[128], playa, gun;
        if(sscanf(params, "dd", playa, gun))
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "Usa: /regalararma (ID) (ID Arma)");
            SendClientMessageEx(playerid, COLOR_GREEN, "_____________________________________________________________________________________________________________________________");
            SendClientMessageEx(playerid, COLOR_WHITE, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
            SendClientMessageEx(playerid, COLOR_WHITE, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flores 15: Cane 16: Frag Grenade");
            SendClientMessageEx(playerid, COLOR_WHITE, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
            SendClientMessageEx(playerid, COLOR_WHITE, "26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
            SendClientMessageEx(playerid, COLOR_WHITE, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
            SendClientMessageEx(playerid, COLOR_WHITE, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
            SendClientMessageEx(playerid, COLOR_GREEN, "_____________________________________________________________________________________________________________________________");
            return 1;
        }

        format(sstring, sizeof(sstring), "%s le dió un arma a %s [ID Arma: %d]",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),gun);
        ABroadCast(COLOR_ORANGE, sstring, 2);
		format(sstring, sizeof(sstring), "Has dado tu arma a %s [ID Arma: %d]",GetPlayerNameEx(playa),gun);
        if(gun < 1||gun > 47)
            { SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ADM]:{FFFFFF} ID de Arma invalido."); return 1; }
        if(IsPlayerConnected(playa))
		{
            if((Info[playa][pConnectTime] < 2 || Info[playa][pWRestricted] > 0) && gun != 46 && gun != 43) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador tiene restricción de armas de momento.");
            if(playa != INVALID_PLAYER_ID && gun <= 20 || gun >= 22)
			{
                GivePlayerValidWeapon(playa, gun);
                SendClientMessageEx(playerid, COLOR_GRAD1, sstring);
            }
            else if(playa != INVALID_PLAYER_ID && gun == 21)
			{
                JetPack[playa] = 1;
                SetPlayerSpecialAction(playa, SPECIAL_ACTION_USEJETPACK);
                SendClientMessageEx(playerid, COLOR_GRAD1, sstring);
            }
        }
    }
    else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
    return 1;
}
CMD:guardarcuenta(playerid, params[])
{
    if(gPlayerLogged{playerid})
    {
        if (GetPVarInt(playerid, "TempName") == 1) return Message(playerid, COLOR_WHITE, "No puedes hacer esto si tienes nombre temporal.");
    	if (GetPVarInt(playerid, "GuardadoTimer") > 0)
		{
 		new string[128];
		format(string, sizeof(string), "Tienes que esperar %d segundos despues de haber guardado tu cuenta.", GetPVarInt(playerid, "GuardadoTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
		}
		else
		{
		OnPlayerSavedStats(playerid);
		SendClientMessageEx(playerid,COLOR_WHITE, "Has guardado tu cuenta {009700}correctamente.");
		SendClientMessageEx(playerid,COLOR_WHITE, "{A2DC35}[INFO] {FFFFFF}Debes esperar 3 minutos para volver a usar este comando.");
		SetPVarInt(playerid, "GuardadoTimer", 180);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDARCUENTA);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Debes de estar conectado para usar este comando.");
	return 1;
}

CMD:creararma(playerid, params[]){
	if (Info[playerid][pJob] == 7 || Info[playerid][pJob2] == 7){
		if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes crear armas en Jail.");
		if (!IsPlayerInRangeOfPoint(playerid, 5.0, 2148.2375,-2267.3174,13.3080)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en en lugar adecuado.");
		if(Info[playerid][pEstado] == 0){
    		if (GetPVarInt(playerid, "ArmsTimer") > 0){
			    new string[128];
        		format(string, sizeof(string), "Tienes que esperar %d segundos despues de haber creado algún arma.", GetPVarInt(playerid, "ArmsTimer"));
        		SendClientMessageEx(playerid,COLOR_GREY,string);
        		return 1;
    		}
			else{
				switch(Info[playerid][pArmsSkill]){
					case 0 .. 49: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)","Ok", "Cancelar");
					case 50 .. 99: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)","Ok", "Cancelar");
					case 100 .. 199: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)\nPistola silenciada (400)","Ok", "Cancelar");
					case 200 .. 299: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm(300)\nPistola silenciada (400)\nEscopeta (450)","Ok", "Cancelar");
					case 300 .. 399: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)\nPistola silenciada (400)\nEscopeta (450)\nDesert Eagle (800)","Ok", "Cancelar");
					case 400 .. 499: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)\nPistola silenciada (400)\nEscopeta (450)\nDesert Eagle (800)\nMP5 (1200)","Ok", "Cancelar");
					case 500 .. 599: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)\nPistola silenciada (400)\nEscopeta (450)\nDesert Eagle (800)\nMP5 (1200)\nAK-47 (2000)","Ok", "Cancelar");
					case 600 .. 700: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (150)\nPalo Billar(90)\nCaña (90)\nBate baseball (90)\nPala (90)\nPistola 9mm (300)\nPistola silenciada (400)\nEscopeta (450)\nDesert Eagle (800)\nMP5 (1200)\nAK-47\nM4A1 (2000)","Ok", "Cancelar");
					default: SafeDialogEx(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "{008EC1}Seleccionar Arma", "Katana (50)\nCaña (90)\nPalo Billar(90)\nBate baseball (90)\nPala (90)\n9mm Pistol (300)\nPistola silenciada (400)\nEscopeta (450)\nDesert Eagle (800\nMP5 (1200)\nAK-47 (2000)\nM4A1 (2000)\nSniper (4000)\nSPAS12 (3000)","Ok", "Cancelar");
				}
			}
			return 1;
		}
		else SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto mientras estas tazeado, congelado o esposado.");
	}
	return 1;
}
CMD:cancelar(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "|__________________ Cancelar __________________|");
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cancelar (Nombre)");
		SendClientMessageEx(playerid, COLOR_GREY, "bebida - materiales - matrimonio - arma - divorcio - testigo - entrevista");
		SendClientMessageEx(playerid, COLOR_GREY, "telefono - taxi - multa - coche - mecanico - droga - casa - vip - camion");
		return 1;
	}
	else if(strcmp(choice,"hierba",true) == 0) { PotOffer[playerid] = 999; PotPrice[playerid] = 0; PotGram[playerid] = 0; }
	else if(strcmp(choice,"crack",true) == 0) { CrackOffer[playerid] = 999; CrackPrice[playerid] = 0; CrackGram[playerid] = 0; }
	else if(strcmp(choice,"materiales",true) == 0) { MatsOffer[playerid] = 999; MatsPrice[playerid] = 0; MatsAmount[playerid] = 0; }
	else if(strcmp(choice,"arma",true) == 0) { GunOffer[playerid] = 999; GunId[playerid] = 0; }
	else if(strcmp(choice,"testigo",true) == 0) { MarryWitnessOffer[playerid] = 999; }
	else if(strcmp(choice,"matrimonio",true) == 0) { ProposeOffer[playerid] = 999; }
	else if(strcmp(choice,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
	else if(strcmp(choice,"entrevista",true) == 0) { LiveOffer[playerid] = 999; }
	else if(strcmp(choice,"coche",true) == 0) { VehicleOffer[playerid] = 999; VehiclePrice[playerid] = 0; VehicleId[playerid] = -1; }
	else if(strcmp(choice,"casa",true) == 0) { HouseOffer[playerid] = 999; HousePrice[playerid] = 0; House[playerid] = 0; }
	else if(strcmp(choice,"Guardaespaldas",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
	else if(strcmp(choice,"fichasvip",true) == 0) { FOffer[playerid] = 999; FPrice[playerid] = 0; FAmount[playerid] = 0; }
    else if(strcmp(choice,"fichasg",true) == 0) { GGOffer[playerid] = 999; GGPrice[playerid] = 0; GGAmount[playerid] = 0; }
    else if(strcmp(choice,"vip",true) == 0){ VIPOffer[playerid] = 999; VIPPrice[playerid] = 0; }
	else if(strcmp(choice,"camion",true) == 0)
	{
 		DestroyProgressBar(LoadTruckBar[playerid]);
		LoadTruckBar[playerid] = INVALID_BAR_ID;
		LoadTruckTime[playerid] = 0;
		DeletePVar(playerid, "TruckDeliver");
		TruckUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 		DisablePlayerCheckpoint(playerid);
	}
	if(strcmp(choice,"multa",true) == 0)
	{
	    if(TicketOffer[playerid] == 999) return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te multado.");
	    format(string, sizeof(string), " %s se niega a pagar una multa", GetPlayerNameEx(playerid));
	    ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	    format(string, sizeof(string), "* %s canceló el pago de una multa de %d$.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
	    SendClientMessageEx(TicketOffer[playerid], -1, string);
	    TicketOffer[playerid] = 999;
	    TicketMoney[playerid] = 0;
	    Facturing[playerid] = 0;
	}
	else if(strcmp(choice,"mecanico",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessageEx(playerid, COLOR_GREY, "   No has llamado a un mecanico!"); return 1; } } }
	else if(strcmp(choice,"ayuda",true) == 0) { if(IsPlayerConnected(AdvisorCall)) { if(AdvisorCall == playerid) { AdvisorCall = 999; } else { SendClientMessageEx(playerid, COLOR_GREY, "   No has pedido ese servicio!"); return 1; } } }
	else if(strcmp(choice,"taxi",true) == 0){
		if(TaxiCall < 999){
			if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0){
				TaxiAccepted[playerid] = 999;
				GameTextForPlayer(playerid, "~w~Cancelaste~n~~r~la llamada", 5000, 1);
				TaxiCallTime[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				TaxiCall = 999;
			}
			else{
				if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
				foreach(Player, i){
					if(TaxiAccepted[i] < 999){
						if(TaxiAccepted[i] == playerid){
							TaxiAccepted[i] = 999;
							GameTextForPlayer(i, "~w~Llmada de taxi~n~~r~Cancelada", 5000, 1);
							TaxiCallTime[i] = 0;
							DisablePlayerCheckpoint(i);
						}
					}
				}
			}
		}
	}
	else { return 1; }
	format(string, sizeof(string), "* Cancelaste: %s.", choice);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}

CMD:dararma(playerid, params[])
{

	new string[128],id,weapon;
	if(sscanf(params, "u", id))
		return SendClientMessage(playerid, COLOR_GREY, "Utiliza: /dararma (playerid)");
	else if(Info[playerid][pEstado]==0)
	{
		if(id == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes darte un arma a ti mismo!");
		if(Info[id][pConnectTime] < 2 || Info[id][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador tiene restricción de armas.");
		if(Info[playerid][pMember] != Info[id][pMember] && Info[playerid][pMember] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes dar armas a los jugadores fuera de tu facción.");
			return 1;
		}
		if(IsPlayerConnected(id))
		{
	   	    if(ProxDetectorS(6.0, playerid, id) && !IsPlayerInAnyVehicle(playerid))
  			{
                if(IsPlayerInAnyVehicle(id)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes dar un arma si el jugador esta en un vehículos.");
				weapon = GetPlayerWeapon(playerid);
				switch(weapon)
				{
					case 16, 18, 35, 36, 37, 38, 39, 40, 44, 45, 46, 0: SendClientMessage(playerid, COLOR_GREY, "Arma Inválida.");
					default:
					{
						format(string, sizeof(string), "Ofreciste a %s tu %s.", GetPlayerNameEx(id), WeaponNames[weapon]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s te ha ofrecido su %s - Usa /aceptar arma para recibirla.", GetPlayerNameEx(playerid), WeaponNames[weapon]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						SetPVarInt(id,"gunID",playerid);
						SetPVarInt(playerid,"gun",weapon);
						SetPVarInt(playerid,"slot",GetWeaponSlot(weapon));
						manubrio[playerid] = 1;
						SetTimerEx("Timermanubrio",900000,false,"d",playerid);
					}
				}
	    	}
	    	else SendClientMessage(playerid, COLOR_WHITE, "Tu estas lejos del jugador o en un vehículo.");
	    }
		else SendClientMessage(playerid, COLOR_WHITE, "La ID que has ingresado es inválida.");
	}
	else SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto mientras estas tazeado, esposado o congelado.");
	return 1;
}
CMD:misarmas(playerid, params[]){
	new string[128], myweapons[13][2], weaponname[50], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	format(string, sizeof(string), "Armas - %s:", name);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	for (new i = 0; i < 13; i++)	{
		GetPlayerWeaponData(playerid, i, myweapons[i][0], myweapons[i][1]);
		if(myweapons[i][0] > 0)		{
			if(Info[playerid][pWeapons][i] == myweapons[i][0])			{
				GetWeaponName(myweapons[i][0], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "%s (%d)", weaponname, myweapons[i][0]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
			}
		}
	}
	new year, month, day, hour, minute, second;
	getdate(year, month, day);
	gettime(hour, minute, second);
	format(string, sizeof(string), "[%d/%d/%d %d:%d:%d]", month, day, year, hour, minute,second);
	SendClientMessageEx(playerid, COLOR_GREEN, string);
	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	return 1;
}
CMD:armareset(playerid, params[])
{
   if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 3)
	{
	    new string[75 + (MAX_PLAYER_NAME * 2)], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /armareset (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(Info[giveplayerid][pWRestricted] > 0)
		    {
		        Info[giveplayerid][pWRestricted] = 0;
		        format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s reseteó la restricción de armas de %s's (ID:%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), giveplayerid);
		        ABroadCast(COLOR_GENERAL, string, 2);
		    }
		    else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene restricción de armas.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado, está desconectado.");
	}
	return 1;
}

CMD:habilidad(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /habilidad (Número)");
		SendClientMessageEx(playerid, COLOR_GREY, "| 1: Armero | 2: Camionero");
		SendClientMessageEx(playerid, COLOR_GREY, "| 3: Traficante de drogas | 4: Vendedor de drogas ");
		return 1;
	}
    else switch(strval(params))
    {
		case 1:
		{
			new level = Info[playerid][pArmsSkill], string[62];
			if(level >= 0 && level < 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Armero es 1."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 99) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Armero es 2."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 299) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Armero es 3."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 300 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 599) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Armero es 4."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 600 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 600) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Armero es 5."); }
		}
		case 2://Trucker
		{
			new level = Info[playerid][pTruckSkill], string[62];
			if(level >= 0 && level <= 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de camionero es 1."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 51 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 51 && level <= 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de camionero es 2."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 101 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 101 && level <= 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de camionero es 3."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 201 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level <= 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de camionero es 4."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 401 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 401) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de camionero es 5."); }
		}
	    case 3://Drug Smuggling
		{
			new level = Info[playerid][pSmugSkill], string[62];
			if(level >= 0 && level <= 20) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Traficante es 1."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 20 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 21 && level <= 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Traficante es 2."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 51 && level <= 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Traficante es 3."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 101 && level <= 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Traficante es 4."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de Traficante es 5."); }
		}
		case 4://Drugs Dealer
		{
			new level = Info[playerid][pDrugsSkill], string[62];
			if(level >= 0 && level <= 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de vendedor de drogas es 1."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 51 && level <= 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de vendedor de drogas es 2."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 101 && level <= 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de vendedor de drogas es 3."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level <= 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de vendedor de drogas es 4."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 401) { SendClientMessageEx(playerid, COLOR_YELLOW, "{A2DC35}[SKILL]:{FFFFFF} Tu nivel de vendedor de drogas es 5."); }
		}
	}
	return 1;
}

CMD:arena(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") == 0)
	{
        if(Info[playerid][pConnectTime] < 2)
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "{008EC1}[Paintball Arena]:{5ABAFF} No puedes entrar al Paintball ya que tienes restricción de armas.");
            return 1;
        }
        if(IsPlayerInRangeOfPoint(playerid,5.0,305.3528,-141.9280,1004.0625))
		{
            PaintballMainMenu(playerid);
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el Paintball.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Ya estás en el Paintball.");
    }
    return 1;
}

CMD:scores(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") == 1)
	{
        PaintballScoreboard(playerid);
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no estás en el paintball.");
    }
    return 1;
}

CMD:salirarena(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") == 1)
	{
        if(GetPlayerState(playerid) == PLAYER_STATE_WASTED)
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando en este momento.");
            return 1;
        }
        LeavePaintballArena(playerid);
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no estás en el paintball.");
    }
    return 1;
}

CMD:cequipo(playerid, params[])
{
    if(GetPVarInt(playerid, "ArenaMode") == 2)
    {
		PaintballSwitchTeam(playerid);
    }
    else
	{
        SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no estás en el paintball modo Team DeathMatch.");
    }
    return 1;
}

CMD:darfichaspball(playerid, params[])
{
	new string[128], giveplayerid, amount;
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(sscanf(params, "dd", giveplayerid, amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darfichaspball (playerid) (fichas)");

	if(IsPlayerConnected(giveplayerid))
	{
		if(Info[playerid][pAdminZC] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para dar fichas.");
		Info[giveplayerid][pPaintTokens] += amount;
		format(string, sizeof(string), "Te han dado %d fichas de paintball - Administrador %s.", amount, GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Has dado a %s, %d fichas de paintball.", GetPlayerNameEx(giveplayerid), amount);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "{FFFF00}Perfect City:{FF0000} %s dió %s, %d Fichas de Paintball.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),amount);
		ABroadCast(COLOR_GENERAL, string, 2);

	}
	return 1;
}

CMD:fumarhierba(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes drogarte en el paintball.");
	if(UsedWeed[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que esperar 5 segundos para usar hierba.");
	new string[128], Float:health;
	GetPlayerHealth(playerid, health);
	if(health >= 100 ) return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes la vida llena.");
	if(Info[playerid][pPot] > 0)
	{
		if(PlayerStoned[playerid] > 100) return SendClientMessageEx(playerid, COLOR_WHITE, "Estás demasiado drogado para utilizar hierba.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 100)
		{
			GameTextForPlayer(playerid, "~w~Estas ~b~...jodido", 5000, 3);
		}
		SetHP(playerid, health + 5.0);
		SendClientMessageEx(playerid, COLOR_WHITE, "Usaste 1 gramo de hierba.");
		format(string, sizeof(string), "* %s se fuma algo de hierba.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Info[playerid][pPot] -= 1;
		UsedWeed[playerid] = 1;
 		Info[playerid][pAdiccion] += 1;
		SetPlayerDrunkLevel(playerid, 5000);
		SetTimerEx("ClearDrugs", 5000, false, "d", playerid);
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
	}
	else SendClientMessageEx(playerid, COLOR_WHITE,"No tienes hierba.");
	return 1;
}

CMD:fumarcrack(playerid, params[])
{
	new Float:armour;
	GetPlayerArmour(playerid, armour);
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si estás en el paintball.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si estás herido.");
	if(UsedCrack[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Debe esperar 8 segundos antes de usar más drogas.");
	if(armour >= 100) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando, tienes demasiada armadura.");
	if(Info[playerid][pCrack] > 0)
	{
		if(PlayerStoned[playerid] > 100) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si estás muy drogado.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 100)
		{
			GameTextForPlayer(playerid, "~w~Estas ~b~Drogado", 5000, 3);
		}
		new string[128], Float:PlayersArmour;
		GetPlayerArmour(playerid, PlayersArmour);
		SendClientMessageEx(playerid, COLOR_WHITE, " Usaste 1 gramo de crack!");
		format(string, sizeof(string), "* %s usa un poco de droga.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Info[playerid][pCrack] -= 1;
		UsedCrack[playerid] = 1;
		Info[playerid][pAdiccion] += 1;
		SetPlayerDrunkLevel(playerid, 8000);
		SetTimerEx("ClearDrugs", 8000, false, "d", playerid);
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
		SetPlayerArmour(playerid, PlayersArmour + 5.0);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no tienes drogas.");
	}
	return 1;
}

CMD:venderspray(playerid, params[])
{
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si estás herido.");
	new string[128], giveplayerid, spray, money;
	if(Team_Mecanicos(playerid))
	if(sscanf(params, "ddd", giveplayerid, spray, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /venderspray (playerid) (potes) (precio)");
	if(spray < 1 || spray > 30) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Los valores no pueden ser mayores a 30 potes."); return 1; }
	if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} El precio no puede ser menor que 1 ni mayor que 99999!"); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "El vendedor no está cerca tuyo.");
					return 1;
				}
				format(string, sizeof(string), "* Ofreciste a %s para que te compre %d potes de spray por $%d.", GetPlayerNameEx(giveplayerid), spray, money);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Mecánico %s quiere venderte %d potes de spray por $%d. (escribe /aceptar spray)", GetPlayerNameEx(playerid), spray, money);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				SprayOffer[giveplayerid] = playerid;
				SprayPrice[giveplayerid] = money;
				SprayGram[giveplayerid] = spray;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "   Ese jugador está desconectado.");
	}
	return 1;
}
CMD:tirararma(playerid, params[]){
	if(isnull(params)){
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /tirararma [Nombre de Arma]");
		SendClientMessageEx(playerid, COLOR_WHITE, "Nombres: sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, sniper, camara");
		SendClientMessageEx(playerid, COLOR_WHITE, "Nombres: flores, knuckles, baseballbat, caña, pala, poolcue, golfclub, katana, dildo, paracaidas");
		if(Info[playerid][pMember] == 8 || Info[playerid][pLeader] == 8) { SendClientMessageEx(playerid, COLOR_GRAD2, "Nombres: cuchillo"); }
		if(Info[playerid][pMember] == 3 || Info[playerid][pLeader] == 3 || Info[playerid][pMember] == 1 || Info[playerid][pLeader] == 1 || Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Nombres: pala, maza, ghumo, motosierra, extinguidor");
		}
		return 1;
	}

	if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessageEx (playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un vehiculo.");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0){
		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un evento.");
		return 1;
	}
	new string[128];
	if(strcmp(params, "sdpistol", true) == 0){
		if(Info[playerid][pWeapons][ 2 ] == 23){
		    if(pTazer[playerid] == 1) return SendClientMessageEx(playerid, COLOR_RED, "No puedes botar tu tazer.");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has tirado tu pistola con silenciador.");
			format(string, sizeof(string), "* %s tirá su pistola con silenciador.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 23);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "camara", true) == 0){
		if(Info[playerid][pWeapons][ 9 ] == 43){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has tirado tu camara.");
			format(string, sizeof(string), "* %s tirá su camara.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 43);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "palo", true) == 0){
		if(Info[playerid][pWeapons][1] == 3){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has tirado tu palo.");
			format(string, sizeof(string), "* %s tirá su palo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 3);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "maza", true) == 0){
		if(Info[playerid][pWeapons][9] == 41){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu maza.");
			format(string, sizeof(string), "* %s tirá su maza.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 41);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "cuchillo", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 4){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu cuchillo.");
			format(string, sizeof(string), "* %s tirá su cuchillo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 4);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "9mm", true) == 0){
		if(Info[playerid][pWeapons][ 2 ] == 22){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu 9mm pistol.");
			format(string, sizeof(string), "* %s tirá su 9mm pistol.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 22);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "shotgun", true) == 0){
		if(Info[playerid][pWeapons][ 3 ] == 25){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu shotgun.");
			format(string, sizeof(string), "* %s tirá su shotgun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 25);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "mp5", true) == 0){
		if(Info[playerid][pWeapons][ 4 ] == 29){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu MP5.");
			format(string, sizeof(string), "* %s tirá su MP5.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 29);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "uzi", true) == 0){
		if(Info[playerid][pWeapons][ 4 ] == 28){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu Micro SMG.");
			format(string, sizeof(string), "* %s tirá su Micro SMG.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 28);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "tec9", true) == 0){
		if(Info[playerid][pWeapons][ 4 ] == 32){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu Tec-9.");
			format(string, sizeof(string), "* %s tirá su Tec-9.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 32);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "deagle", true) == 0){
		if(Info[playerid][pWeapons][ 2 ] == 24){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu Desert Eagle.");
			format(string, sizeof(string), "* %s tirá su Desert Eagle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 24);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "rifle", true) == 0){
		if(Info[playerid][pWeapons][ 6 ] == 33){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu rifle.");
			format(string, sizeof(string), "* %s tirá su rifle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 33);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "ak47", true) == 0){
		if(Info[playerid][pWeapons][ 5 ] == 30){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu AK-47.");
			format(string, sizeof(string), "* %s tirá su AK-47.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 30);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "m4", true) == 0){
		if(Info[playerid][pWeapons][ 5 ] == 31){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu M4.");
			format(string, sizeof(string), "* %s tirá su M4.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 31);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "spas12", true) == 0){
		if(Info[playerid][pWeapons][ 3 ] == 27){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu SPAS-12.");
			format(string, sizeof(string), "* %s tirá su SPAS-12.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 27);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "sniper", true) == 0){
		if(Info[playerid][pWeapons][ 6 ] == 34){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu sniper rifle.");
			format(string, sizeof(string), "* %s tirá su sniper rifle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 34);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "flores", true) == 0){
		if(Info[playerid][pWeapons][ 10 ] == 14){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu flores.");
			format(string, sizeof(string), "* %s tirá su flores.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "knuckles", true) == 0)
	{
		if(Info[playerid][pWeapons][ 0 ] == 1)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu brass knuckles.");
			format(string, sizeof(string), "* %s tirá su brass knuckles.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "baseballbat", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 5){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu baseball bat.");
			format(string, sizeof(string), "* %s tirá su baseball bat.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "caña", true) == 0){
		if(Info[playerid][pWeapons][ 10 ] == 15){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu caña.");
			format(string, sizeof(string), "* %s tirá su cane.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pWeapons][ 10 ] = 0;
			RemovePlayerWeapon(playerid, 15);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "pala", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 6){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu pala.");
			format(string, sizeof(string), "* %s tirá su shovel.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "golfclub", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 2){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu golf club.");
			format(string, sizeof(string), "* %s tirá su golf club.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "katana") == 0){
		if(Info[playerid][pWeapons][ 1 ] == 8){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu katana.");
			format(string, sizeof(string), "* %s tirá su katana.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "dildo", true) == 0){
		if(Info[playerid][pWeapons][ 10 ] == 10){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu dildo.");
			format(string, sizeof(string), "* %s tirá su dildo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "paracaidas", true) == 0){
		if(Info[playerid][pWeapons][ 11 ] == 46){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu paracaidas.");
			format(string, sizeof(string), "* %s tirá su paracaidas.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "ghumo", true) == 0){
		if(Info[playerid][pWeapons][ 8 ] == 17){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has tirado tu granada de humo.");
			format(string, sizeof(string), "* %s tirá su granada de humo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 17);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "motosierra", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 9){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu motosierra.");
			format(string, sizeof(string), "* %s tirá su motosierra.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 9);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "extinguidor", true) == 0){
		if(Info[playerid][pWeapons][ 9 ] == 42){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu extinguidor.");
			format(string, sizeof(string), "* %s tirá su extinguidor.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 42);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "minigun", true) == 0){
		if(Info[playerid][pWeapons][ 7 ] == 38){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu minigun.");
			format(string, sizeof(string), "* %s tirá su minigun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 38);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else if(strcmp(params, "poolcue", true) == 0){
		if(Info[playerid][pWeapons][ 1 ] == 7){
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "has tirado tu palo de billar.");
			format(string, sizeof(string), "* %s tirá su pool cue.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 7);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma!");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Has ingresado el nombre de un arma incorrecta.");
	return 1;
}

CMD:numeropriv(playerid, params[])
{
    if(Info[playerid][pPnumber] != 0)
	{
        if(UnidentifedCall[playerid] == 1)
		{
            UnidentifedCall[playerid] = 0;
            SendClientMessageEx(playerid, COLOR_WHITE, "Desabilitaste el numero privado.");
        }
        else
		{
            UnidentifedCall[playerid] = 1;
            SendClientMessageEx(playerid, COLOR_WHITE, "Activaste el numero privado.");
        }
    }
    else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un teléfono.");
    return 1;
}

CMD:ayudame(playerid, params[])
{
	if(Advisors < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "En este momento no hay ayudantes, intenta en otro momento.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ayudame (razón)");
	new string[128];
	if(Info[playerid][pLevel] < 4)
	{
		if(JustReported[playerid] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Espera 30 segundos para enviar otra solicitud.");
			return 1;
		}
		JustReported[playerid]=30;
		format(string, sizeof(string), "** %s solicita ayuda, razón: %s. (usa /aceptarayuda)", GetPlayerNameEx(playerid), params);
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has solicitado ayuda a nuestros ayudantes, espera a una respuesta.");
		SetPVarInt( playerid, "COMMUNITY_ADVISOR_REQUEST", 1 );
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres un usuario nuevo.");
	}
	return 1;
}

CMD:aceptarayuda(playerid, params[])
{
	foreach(Player, i)
	{
		if( GetPVarInt( i, "COMMUNITY_ADVISOR_REQUEST" ) >= 1 )
		{
			AdvisorCall = i;
		}
	}
	if(AdvisorCall < 999)
	{
		if(IsPlayerConnected(AdvisorCall))
		{
			new string[128];
			if(HelpingNewbie[playerid] != 999)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ya estás ayudando a alguien.");
				return 1;
			}
			if(GetPVarInt(playerid, "AdvisorDuty") == 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "No está en servicio como ayudante /cduty.");
				return 1;
			}
			format(string, sizeof(string), "* %s ha aceptado la petición de ayuda de %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(AdvisorCall));
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
			format(string, sizeof(string), "* Has aceptado la solicitud de ayuda %s, una vez que hayas terminado usa /finalizarayuda para volver a su posición.",GetPlayerNameEx(AdvisorCall));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Ayudante %s ha aceptado tu solicitud de ayuda.",GetPlayerNameEx(playerid));
			SendClientMessageEx(AdvisorCall, COLOR_LIGHTBLUE, string);
			SendClientMessageEx(AdvisorCall, COLOR_WHITE, "* Por favor espera en tu posición actual, muchas gracias.");
			new Float: x, Float: y, Float: z, Float: r, i, vw;
			vw = GetPlayerVirtualWorld(playerid);
			i = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, r);
			SetPVarFloat(playerid, "AdvisorLastx", x);
			SetPVarFloat(playerid, "AdvisorLasty", y);
			SetPVarFloat(playerid, "AdvisorLastz", z);
			SetPVarFloat(playerid, "AdvisorLastr", r);
			SetPVarInt(playerid, "AdvisorLastInt", i);
			SetPVarInt(playerid, "AdvisorLastVW", vw);
			GetPlayerPos(AdvisorCall, x, y, z);
			vw = GetPlayerVirtualWorld(AdvisorCall);
			i = GetPlayerInterior(AdvisorCall);
			SetPlayerPos(playerid, x, y+2, z);
			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerInterior(playerid, i);
			HelpingNewbie[playerid] = AdvisorCall;
			AdvisorCall = 999;
			//AddCAReportToken(playerid); // Advisor Tokens
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "* Todavía nadie ha solicitado ninguna ayuda o ya aceptaron a la que ibas.");
		return 1;
	}
	return 1;
}

CMD:finalizarayuda(playerid, params[])
{
	if(HelpingNewbie[playerid] < 999)
	{
		new string[128];
		format(string, sizeof(string), "* %s ha finalizado la solicitud de ayuda de %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(HelpingNewbie[playerid]));
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
		SetPVarInt(HelpingNewbie[playerid], "COMMUNITY_ADVISOR_REQUEST", 0 );
		HelpingNewbie[playerid] = 999;
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "   No estás ayudando a nadie!");
	return 1;
}

CMD:teamspeak(playerid, params[])
	{
		return cmd_ts3(playerid, params);
	}
    CMD:teamspeak3(playerid, params[])
	{
		return cmd_ts3(playerid, params);
	}
	CMD:ts3(playerid, params[])
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[TS3]:{FFFFFF} 177.54.157.233" );
	    return 1;
	}
	CMD:foro(playerid, params[])
	{
	    SendClientMessageEx(playerid, COLOR_GENERAL, "{A2DC35}FORO:{FFFFFF} Perfectcity-rp.com" );
	    return 1;
	}

CMD:cduty(playerid, params[])
{
    if(Info[playerid][pHelper] >= 1)
	{
        if(papillah[playerid] == 1)
		{
 			new string[128];
			format(string, sizeof(string), "Ayudante %s ya no estará atendiendo dudas (ID: %d)",GetPlayerNameEx(playerid), playerid);
			ABroadCast(COLOR_LIGHTBLUE, string, 2);
			format(string, sizeof(string), "Ayudante %s ya no estará atendiendo dudas (ID: %d)",GetPlayerNameEx(playerid), playerid);
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		    SendClientMessageEx(playerid, COLOR_BLUE, "* Ahora estás fuera de servicio como ayudante.");
            papillah[playerid] = 0;
            Advisors -= 1;
        }
        else
		{
			new string[128];
			format(string, sizeof(string), "Ayudante %s estará atendiendo dudas (ID: %d)",GetPlayerNameEx(playerid), playerid);
			ABroadCast(COLOR_LIGHTBLUE, string, 2);
			format(string, sizeof(string), "Ayudante %s estará atendiendo dudas (ID: %d)",GetPlayerNameEx(playerid), playerid);
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
			SendClientMessageEx(playerid, COLOR_BLUE, "* Ahora te encuentras en servicio como ayudante y recibirás llamadas de personas que te necesiten y dudas.");
            papillah[playerid] = 1;
            Advisors += 1;

        }
    }
    else
	{

        SendClientMessageEx(playerid, COLOR_WHITE, "No eres un Ayudante.");
    }
    return 1;
}
CMD:pduty(playerid, params[])
{
    if(Info[playerid][pPublicista] == 1)
	{
        if(OnDuty[playerid] == 1)
		{
 			new string[128];
			format(string, sizeof(string), "**Publicistas Perfect City: Publicista %s ya no estará haciendo publicidad.",GetPlayerNameEx(playerid));
			BroadCast(COLOR_LIGHTBLUE, string);
		    SendClientMessageEx(playerid, COLOR_BLUE, "* Ahora estás fuera de servicio como publicista.");
            OnDuty[playerid] = 0;
        }
        else
		{
			new string[128];
			format(string, sizeof(string), "**Publicistas Perfect City: Publicista %s estará haciendo publicidad",GetPlayerNameEx(playerid), Info[playerid][pPnumber]);
			BroadCast(COLOR_LIGHTBLUE, string);
			SendClientMessageEx(playerid, COLOR_BLUE, "* Ahora estás en servicio como publicista.");
            OnDuty[playerid] = 1;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "No eres Publicista.");
    }
    return 1;
}

CMD:darhelper(playerid, params[])
{
	if (Info[playerid][pAdminZC] >= 1338 || Info[playerid][pHelper] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darhelper (playerid)");

		if(IsPlayerConnected(giveplayerid))
		{
			Info[giveplayerid][pHelper] = 1;
			format(string, sizeof(string), "Te han asignado ayudante - Responsable: %s", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Asignaste ayudante a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s asignó ayudante a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			Log("logs/makehelp.log", string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
	return 1;
}
CMD:darpublicista(playerid, params[])
{
	if (Info[playerid][pAdminZC] == 6000)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darpublicista (playerid)");

		if(IsPlayerConnected(giveplayerid))
		{
			Info[giveplayerid][pPublicista] = 1;
			format(string, sizeof(string), "Te han asignado publicista - Responsable: %s", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Asignaste publicista a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
	return 1;
}
CMD:quitarpublicista(playerid, params[])
{
	if (Info[playerid][pAdminZC] == 6000)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darpublicista (playerid)");

		if(IsPlayerConnected(giveplayerid))
		{
			Info[giveplayerid][pPublicista] = 0;
			format(string, sizeof(string), "%s te ha expulsado de publicistas", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Expulsaste de publicistas a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
	return 1;
}

CMD:darliderhelper(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 1338)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darliderhelper (playerid)");

		if(IsPlayerConnected(giveplayerid))
		{
			Info[giveplayerid][pHelper] = 2;
			format(string, sizeof(string), "Te han asignado lider de ayudantes - Responsable: %s", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Asignaste lider de ayudantes a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s asignó lider de ayudantes a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			Log("logs/makehelp.log", string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
	return 1;
}

CMD:quitarhelper(playerid, params[]){
   if (Info[playerid][pAdminZC] >= 1338 || Info[playerid][pHelper] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /quitarhelper [playerid]");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pHelper] != 0){
				if(GetPVarType(playerid, "AdvisorDuty")){
					DeletePVar(playerid, "AdvisorDuty");
					Advisors -= 1;
				}
				Info[giveplayerid][pHelper] = 0;
				format(string, sizeof(string), "%s te ha expulsado del equipo de ayudantes.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Has expulsado a %s del equipo de ayudantes.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			}

		}
	} else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para usar este comando!");
	return 1;
}

CMD:darrehelper(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 2)
	{
		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessageEx(playerid, COLOR_WHITE,"Utiliza: /darrehelper (reportid)");
		if(reportid < 0 || reportid > 499) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Es de 0 y no por encima de 499."); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Ese reporte ya fue revisado.");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} El que reporto se ha desconectado.");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}

		if(Advisors < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora no hay ayudantes disponibles, intenta más tarde.");
			return 1;
		}

		format(string, sizeof(string), "[AdmCmdExe]: %s ha enviado a %s (ID: %i) el (RID: %i) a los ayudantes.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]),Reports[reportid][ReportFrom],reportid);
		ABroadCast(COLOR_GENERAL, string, 2);
		if(Info[playerid][pHelper] >= 1)
		{
			format(string, sizeof(string), "%s ha revisado tu reporte y lo remitió a los ayudantes.", GetPlayerNameEx(playerid));
			SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, string);
			SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, "Un ayudante debe estar contigo en breve.");
			SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_WHITE, "A los nuevos jugadores se les recomienda utilizar /ayudame para cualquier pregunta que puedas tener, en lugar de utilizar /re para reportes de violaciónes de reglas y obtener ayuda de un administrador.");
			SetPVarInt( Reports[reportid][ReportFrom], "COMMUNITY_ADVISOR_REQUEST", 1 );
			format(string, sizeof(string), "Administrador %s ha remitido a un reporte. Jugador %s (ID: %d) Reporte: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][Report]);
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, "Por favor escribe /aceptarayuda para teleportarte al jugador.");
		}
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][CheckingReport] = 999;
		strmid(Reports[reportid][Report], "None", 0, 4, 4);
	}
	return 1;
}
CMD:v(playerid, params[])
{
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehículo!");
	    SafeDialogEx(playerid, MENU_AUTO, DIALOG_STYLE_LIST, "{008EC1}Menu del auto:","Estado\nLuces\nMaletero\nCapo", "Elegir", "Salir");
		return 1;
	}
}
CMD:llenar(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	    if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_WHITE, "Es necesario apagar el motor antes de llenar el tanque ({5ABAFF}Usa /motor{FFFFFF}).");
	    if(!IsAtGasStation(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No estás en la gasolineria.");
	    if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_RED,"Este vehiculo no necesita gasolina.");
	    if(VehicleFuel[vehicleid] >= 200) return SendClientMessageEx(playerid, COLOR_RED, "El tanque de gasolina de este vehiculo está lleno.");
	    if(RefuelingVehicle[playerid] == 1) return SendClientMessageEx(playerid, COLOR_RED, "Se está recargando el tanque de tu vehículo.");
       	SendClientMessageEx(playerid, COLOR_WHITE, "Recargando tanque de tu vehiculo, no bajes del vehiculo y por favor espera.");
       	RefuelingVehicle[playerid] = 1;
       	TogglePlayerControllable(playerid, 0);
       	RefuelingVehicleTimer[playerid] = SetTimerEx("ReFill", 10000, true, "i", playerid);
	}
	return 1;
}

CMD:darauto(playerid, params[])
{
    if(Info[playerid][pAdminZC] < 89647) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFFFF} Este comando no existe");
	new string[128], giveplayerid, modelid, color1, color2, invoicenum[32];
	if(sscanf(params, "dddds", giveplayerid, modelid, color1, color2, invoicenum)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darauto (playerID) (modeloID) (color 1) (color 2) (precio)");
	if (Info[playerid][pAdminZC] < 89647) return SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
	if(color1 < 0 || color1 > 126) { SendClientMessageEx(playerid, COLOR_WHITE, "   Numero de color no debe ser menor de 0 o mayor que 126."); return 1; }
	if(color2 < 0 || color2 > 126) { SendClientMessageEx(playerid, COLOR_WHITE, "   Numero de color 2 no debe ser menor de 0 o mayor que 126.SetMinigunActive."); return 1; }
	if(modelid < 400 || modelid > 611) { SendClientMessageEx(playerid, COLOR_WHITE, "   Id del vehiculo debe ser del 400 al 611."); return 1; }
	new playervehicleid = GetPlayerFreeVehicleId(giveplayerid);
	if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} El jugador no puede tener más coches.");
    if(carsforplayer[giveplayerid] == 15) return SendClientMessageEx(playerid,COLOR_WHITE,"* Este jugador ya tiene 15 coches.");
	new Float:X,Float:Y,Float:Z;
    GetPlayerPos(giveplayerid,X,Y,Z);
    new Float:Angle;
    GetPlayerFacingAngle(giveplayerid,Angle);
    new car = CreatePlayerVehicle(giveplayerid, playervehicleid, modelid, X, Y, Z, Angle, color1, color2, 0);
    if(car == INVALID_PLAYER_VEHICLE_ID)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Algo salió mal y el coche no se creó.");
	}
    else
    {
	    format(string, sizeof(string), "{A2DC35}[CREARAUTO]:{FFFFFF} %s creó [M-%d C1-%d C2-%d] - Factura por %s a %s", GetPlayerNameEx(playerid), modelid, color1, color2, invoicenum, GetPlayerNameEx(giveplayerid));
	    SendClientMessageEx(playerid, COLOR_GRAD1, string);
	    Log("logs/shoplog.log", string);
    }
    return 1;
}

/*CMD:estacionar(playerid, params[])
{
	if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
		new ownerid = Info[playerid][pVehicleKeysFrom];
		if(IsPlayerConnected(ownerid))
		{
			new d = Info[playerid][pVehicleKeys];
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu debes ser el conductor.");
				new Float:x, Float:y, Float:z, Float:angle, Float:health;
				GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
				PlayerVehicleInfo[ownerid][d][pvHealth] = health;
				if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
				GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
				GetVehicleZAngle(PlayerVehicleInfo[ownerid][d][pvId], angle);
				SurfingCheck(GetPlayerVehicleID(playerid));
				UpdatePlayerVehicleParkPosition(ownerid, d, x, y, z, angle, health);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
			 	SetPlayerArmedWeapon(playerid, 0);
			 	LoadAllPlayerVehicleMods(playerid);
			 	PutPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], 0);

				new string[29 + (MAX_PLAYER_NAME * 2)];
				format(string, sizeof(string), "* %s ha estacionado el vehiculo de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(ownerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                fVehSpeed[playerid] = 0.0;
				return 1;
			}
		}
	}
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu debes ser el conductor.");
			new Float:x, Float:y, Float:z, Float:angle, Float:health;
			GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
			PlayerVehicleInfo[playerid][d][pvHealth] = health;
			if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
			GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
			SurfingCheck(GetPlayerVehicleID(playerid));
			UpdatePlayerVehicleParkPosition(playerid, d, x, y, z, angle, health);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
			SetPlayerArmedWeapon(playerid, 0);
			LoadAllPlayerVehicleMods(playerid);
			PutPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], 0);

			new string[30 + (MAX_PLAYER_NAME * 2)];
			format(string, sizeof(string), "* %s ha estacionado su vehiculo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            fVehSpeed[playerid] = 0.0;
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "Tu necesitas estar dentro de tu vehiculo para hacer esto.");
	return 1;
}*/
CMD:estacionar(playerid, params[])
{
	if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
		new ownerid = Info[playerid][pVehicleKeysFrom];
		if(IsPlayerConnected(ownerid))
		{
			new d = Info[playerid][pVehicleKeys];
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu debes ser el conductor.");
				new Float:x, Float:y, Float:z, Float:angle, Float:health;
				GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
				PlayerVehicleInfo[ownerid][d][pvHealth] = health;
				if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
				GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
				GetVehicleZAngle(PlayerVehicleInfo[ownerid][d][pvId], angle);
				SurfingCheck(GetPlayerVehicleID(playerid));
				UpdatePlayerVehicleParkPosition(ownerid, d, x, y, z, angle, health);
				PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
			 	SetPlayerArmedWeapon(playerid, 0);
			 	LoadAllPlayerVehicleMods(playerid);

				new string[29 + (MAX_PLAYER_NAME * 2)];
				format(string, sizeof(string), "* %s ha estacionado el vehiculo de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(ownerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                fVehSpeed[playerid] = 0.0;
				return 1;
			}
		}
	}
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu debes ser el conductor.");
			new Float:x, Float:y, Float:z, Float:angle, Float:health;
			GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
			PlayerVehicleInfo[playerid][d][pvHealth] = health;
			if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
			GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
			SurfingCheck(GetPlayerVehicleID(playerid));
			UpdatePlayerVehicleParkPosition(playerid, d, x, y, z, angle, health);
			PutPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], 0);
			SetPlayerArmedWeapon(playerid, 0);
			LoadAllPlayerVehicleMods(playerid);

			new string[30 + (MAX_PLAYER_NAME * 2)];
			format(string, sizeof(string), "* %s ha estacionado su vehiculo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            fVehSpeed[playerid] = 0.0;
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "Tu necesitas estar dentro de tu vehiculo para hacer esto.");
	return 1;
}

CMD:borrarcoche(playerid, params[])
{
	if(GetPVarInt(playerid, "dcConfirm") == 0)
	{
		SetPVarInt(playerid, "dcConfirm", 1);
		SendClientMessageEx(playerid, COLOR_WHITE, "El uso de este comando {9c2828}borrará completamente{FFFFFF} el vehículo y no habrá reembolso");
		SendClientMessageEx(playerid, COLOR_WHITE, "Si estás seguro de que deseas eliminar tu vehículo, por favor re-escriba el comando {9c2828}/borrarcoche");
	}
	else
	{
		DeletePVar(playerid, "dcConfirm");
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
			{
			    carsforplayer[playerid]--;
				DestroyVehicle(PlayerVehicleInfo[playerid][d][pvId]);
				PlayerVehicleInfo[playerid][d][pvId] = 0;
                PlayerVehicleInfo[playerid][d][pvModelId] = 0;
				PlayerVehicleInfo[playerid][d][pvPosX] = 0.0;
				PlayerVehicleInfo[playerid][d][pvPosY] = 0.0;
				PlayerVehicleInfo[playerid][d][pvPosZ] = 0.0;
				PlayerVehicleInfo[playerid][d][pvPosAngle] = 0.0;
				PlayerVehicleInfo[playerid][d][pvLock] = 0;
				PlayerVehicleInfo[playerid][d][pvLocked] = 0;
				PlayerVehicleInfo[playerid][d][pvPaintJob] = -1;
				PlayerVehicleInfo[playerid][d][pvColor1] = 0;
				PlayerVehicleInfo[playerid][d][pvColor2] = 0;
				PlayerVehicleInfo[playerid][d][pvPrice] = 0;
				PlayerVehicleInfo[playerid][d][pvImpounded] = 0;
				strcpy(PlayerVehicleInfo[playerid][d][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
				PlayerVehicleInfo[playerid][d][pvPark] = 0;
				PlayerVehicleInfo[playerid][d][pvAllowedPlayerId] = INVALID_PLAYER_ID;
				for(new m = 0; m < MAX_MODS; m++)
				{
					PlayerVehicleInfo[playerid][d][pvMods][m] = 0;
				}
				PlayerCars--;
				SendClientMessageEx(playerid, COLOR_WHITE, "Su vehículo ha sido borrado.");
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, " Tienes que estar dentro de tu vehiculo.");
	}

	return 1;
}

CMD:verllaves(playerid, params[])
{
    if(IsACop(playerid))
    {
        new string[128], giveplayerid;
        if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /verllaves (jugador)");

   		if(IsPlayerConnected(giveplayerid))
    	{
	        SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** Coches de %s  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
	        for(new i=0; i<MAX_PLAYERVEHICLES; i++)
         	{
			    if(PlayerVehicleInfo[giveplayerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
				{
    				format(string, sizeof(string), "Registro del Coche: {A2DC35}%d{FFFFFF} | Modelo: {A2DC35}%s{FFFFFF} | Multa: {A2DC35}$%d{FFFFFF}.",PlayerVehicleInfo[giveplayerid][i][pvId],GetVehicleName(PlayerVehicleInfo[giveplayerid][i][pvId]),PlayerVehicleInfo[giveplayerid][i][pvTicket]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
	    		}
				else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded])
				{
    				format(string, sizeof(string), "Registro del Coche: Anulado (No Disponible) | Modelo:{A2DC35} %s{FFFFFF} | Multa: {A2DC35}$%d{FFFFFF}.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
	    		}
	    	}
	    	SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
   		}
    }
	return 1;
}

CMD:vcoche(playerid, params[])
{
    if(IsACop(playerid))
	{
        new carid = GetPlayerVehicleID(playerid);
        new closestcar = GetClosestCar(playerid, carid);
        if(IsTrailerAttachedToVehicle(carid))
		{
            new carbeingtowed = GetVehicleTrailer(carid);
            foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, carbeingtowed);
                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Registro Vehicular: {A2DC35}%d{FFFFFF} | Modelo: {A2DC35}%s{FFFFFF} | Dueño: {A2DC35}%s{FFFFFF} | Multa: {A2DC35}$%d{FFFFFF}.",carbeingtowed,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            for(new f = 0; f < MAX_FAMILY; f++)
			{
                new v = GetGangVehicle(f, carbeingtowed);
                if(v != -1)
                {
					new string[72 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Registro Vehicular: {A2DC35}%d{FFFFFF} | Modelo: {A2DC35}%s{FFFFFF} | Dueño: {A2DC35}%s{FFFFFF}.",carbeingtowed,GetVehicleName(FVINFO[f][v][fvId]),fINFO[f][FamilyLeader]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            SendClientMessageEx(playerid, COLOR_WHITE, "Este vehículo no pertenece a nadie.");
        }
        else if(IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0) && !IsTrailerAttachedToVehicle(carid))
		{
            foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, closestcar);
                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Registro Vehicular: {A2DC35}%d{FFFFFF} | Modelo: {A2DC35}%s{FFFFFF} | Dueño: {A2DC35}%s{FFFFFF} | Multa: {A2DC35}$%d{FFFFFF}.",closestcar,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            for(new f = 0; f < MAX_FAMILY; f++)
			{
                new v = GetGangVehicle(f, closestcar);
                if(v != -1)
				{
					new string[72 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Registro Vehicular: {A2DC35}%d{FFFFFF} | Modelo: {A2DC35}%s{FFFFFF} | Dueño: {A2DC35}%s{FFFFFF}.",closestcar,GetVehicleName(FVINFO[f][v][fvId]),fINFO[f][FamilyLeader]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            SendClientMessageEx(playerid, COLOR_WHITE, "Este vehículo no pertenece a nadie.");
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No estás cerca de un vehículo.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
    }
    return 1;
}

CMD:embargar(playerid, params[])
{
	switch(Info[playerid][pMember])
	{
		case 1:
		{
			if(!IsAtImpoundingPoint(playerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás cerca del punto de incautación, no puedes confiscar!");
				return 1;
			}
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			{

				new
					iVehType,
					iVehIndex,
					iTargetOwner,
					iVehTowed = GetVehicleTrailer(GetPlayerVehicleID(playerid));

				if(!GetVehicleModel(iVehTowed))
				{
					return SendClientMessageEx(playerid, COLOR_WHITE, "El vehículo en el remolque se ha desenganchado y por lo tanto no puede ser confiscado.");
				}
				foreach(Player, i)
				{
					iVehIndex = GetPlayerVehicle(i, iVehTowed);
					if(iVehIndex != -1)
					{
						iVehType = 1;
						iTargetOwner = i;
						break;
					}
				}
				if(!iVehType)
				{
					for(new i; i < MAX_FAMILY; ++i)
					{
						iVehIndex = GetGangVehicle(i, iVehTowed);
						if(iVehIndex != -1)
						{
							iVehType = 2;
							iTargetOwner = i;
							break;
						}
					}
				}
				switch(iVehType)
				{
					case 0, 2:
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No se pudo encontrar ningún tipo de registro en el vehículo y se ha devuelto.");
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0);
						SetVehicleToRespawn(iVehTowed);
					}
					case 1:
					{
					    if(PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket] <= 1000) return SendClientMessageEx(playerid, COLOR_WHITE, "Para embargar un vehiculo es necesario que este mismo tenga mínimo 2 multas.");
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvImpounded] = 1;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvId] = INVALID_PLAYER_VEHICLE_ID;
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
						DestroyVehicle(iVehTowed);
						new szMessage[96];
						format(szMessage, sizeof(szMessage),"* Has confiscado el vehiculo de %s - Modelo %s.",GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "Su %s ha sido confiscado. Es posible que lo pueda sacar pagando la multa en LSPD.", VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessageEx(iTargetOwner, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "HQ: %s ha confiscado el vehiculo de %s - Modelo %s (No pagó $%i de multa).", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400], PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket]);
						SendRadioMessage(Info[playerid][pMember], TEAM_RADIO_COLOR, szMessage);
						carsforplayer[iTargetOwner]--;
						--PlayerCars;
					}
				}
				arr_Towing[playerid] = INVALID_VEHICLE_ID;
			}
		}
		default: SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	}
	return 1;
}

CMD:pagarm(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 240.4770,112.7777,1003.2188) || IsPlayerInRangeOfPoint(playerid, 3.0, 234.4222,160.0437,1003.0438))
	{

	    if(Info[playerid][pCarLic] == 0)
	    {
	        SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[MULTA]:{FFFFFF} Una licencia de conducir válida es necesaria para liberar su vehículo del depósito municipal ó pagar su multas.");
	        return 1;
	    }

		new
			vstring[1024],
			iCount;

		for(new i; i < MAX_PLAYERVEHICLES; i++)
		{
		    if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 10000;

			if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
			{
				if(PlayerVehicleInfo[playerid][i][pvTicket])
				{
					format(vstring, sizeof(vstring), "%s\n%s (Multa - $%i)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket]);
					++iCount;
				}
				else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
			}
    		else if(PlayerVehicleInfo[playerid][i][pvImpounded])
			{
				format(vstring, sizeof(vstring), "%s\n%s (Multa - $%i) (Embargado - $%i Liberación)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket],(PlayerVehicleInfo[playerid][i][pvPrice] / 10) + PlayerVehicleInfo[playerid][i][pvTicket] + (Info[playerid][pLevel] * 1000));
				++iCount;
			}
			else format(vstring, sizeof(vstring), "%s\nNada", vstring);
		}
		if(iCount)
		{
			SafeDialogEx(playerid, MPSPAYTICKETS, DIALOG_STYLE_LIST, "{008EC1}Vehiculos", vstring, "Liberar", "Cancelar");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes multas para pagar o vehículos para ser liberados.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en la central de LSPD.");
	return 1;
}

CMD:enganchar(playerid, params[])
{
 	if(IsACop(playerid))
	 {
   		if(IsPlayerInAnyVehicle(playerid))
     	{
			new
				carid = GetPlayerVehicleID(playerid);

			if(IsATowTruck(carid))
			{
   				new
					closestcar = GetClosestCar(playerid, carid);

       			if(GetDistancePlayerVeh(playerid,closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid))
				   {
					foreach(Player, i)
					{
						if(GetPlayerVehicle(i, closestcar) != -1)
						{
						    if(ProxDetectorS(30.0,playerid,i))
								SendClientMessageEx(i, COLOR_LIGHTBLUE, "Alguien está tratando de remolcar tu vehículo!");

							arr_Towing[playerid] = closestcar;
						    SendClientMessageEx(playerid, COLOR_WHITE, "Este coche está disponible para embargar.");
      						return AttachTrailerToVehicle(closestcar,carid);
						}
					}
					SendClientMessageEx(playerid, COLOR_WHITE, "Este vehiculo no tiene ningún registro, está disponible para embargar");
					AttachTrailerToVehicle(closestcar,carid);
					arr_Towing[playerid] = closestcar;
					return 1;
     			}
			}
			else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes remolcar en este tipo de vehículo.");
   		}
     	else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Tienes que estar en un coche.");
	}
   	else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
	return 1;
}

CMD:desenganchar(playerid, params[])
{
 	if(IsACop(playerid))
  	{
   		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
     	{
      		SendClientMessageEx(playerid, COLOR_WHITE,"Has desenganchado el vehículo que traías.");
			arr_Towing[playerid] = INVALID_VEHICLE_ID;
			DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
     	}
      	else
       	{
        	SendClientMessageEx(playerid, COLOR_WHITE,"Aún no has enganchado nada.");
        }
  	}
   	else
	{
 		SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
	}
	return 1;
}
CMD:dejarmulta(playerid, params[])
{
    if(IsACop(playerid))
    {
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dejarmulta (Registro Vehicular)");

		if(Info[playerid][pRank] < 2)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos 2 y superiores pueden dejar multas!");
			return 1;
		}
        new Float: x, Float: y, Float: z, vehicleid = strval(params);
        GetVehiclePos(vehicleid, x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
		{
            if(vehicleid != INVALID_VEHICLE_ID)
			{
                foreach(Player, i)
				{
                    new v = GetPlayerVehicle(i, vehicleid);
                    if(v != -1)
					{
                        if(PlayerVehicleInfo[i][v][pvTicket] >= 3000) return SendClientMessageEx(playerid, COLOR_WHITE, "Este vehiculo ya excedio el máximo de multas, se debe embargar.");
						new string[62 + MAX_PLAYER_NAME];
                        PlayerVehicleInfo[i][v][pvTicket] += 1000;
                        //Info[playerid][pTicketTime] = 60;
                        format(string, sizeof(string), "Dejaste una multa de $1000 en el coche de %s, modelo %s.",GetPlayerNameEx(i),GetVehicleName(PlayerVehicleInfo[i][v][pvId]));
                        SendClientMessageEx(playerid, COLOR_WHITE, string);
                        return 1;
                    }
                }
                for(new f = 0; f < MAX_FAMILY; f++)
				{
                    new v = GetGangVehicle(f, vehicleid);
                    if(v != -1)
					{
                        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes dejar multas a coches de una familia.");
                        return 1;
                    }
                }
                SendClientMessageEx(playerid, COLOR_WHITE, "Este vehículo no tiene ningún registro.");
            }
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar cerca de dicho vehículo.");
        }
    }
    return 1;
}
CMD:seguro(playerid, params[])
{
    new Float: x, Float: y, Float: z;
    if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
        new ownerid = Info[playerid][pVehicleKeysFrom];
        if(IsPlayerConnected(ownerid))
		{
            new d = Info[playerid][pVehicleKeys];
            if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
			{
                if(PlayerVehicleInfo[ownerid][d][pvLock] > 0)
				{
                    if(PlayerVehicleInfo[ownerid][d][pvLocked] == 0)
					{
					    new string[64];
					    format(string, sizeof(string), "* %s trabó las puertas de su vehículo.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        PlayerPlaySoundEx(1145, x, y, z);
                        PlayerVehicleInfo[ownerid][d][pvLocked] = 1;
                        LockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
                        return 1;
                    }
                    else
					{
					    new string[128];
	    				format(string, sizeof(string), "* %s destrabó las puertas de su vehículo.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        PlayerPlaySoundEx(1145, x, y, z);
                        PlayerVehicleInfo[ownerid][d][pvLocked] = 0;
                        UnLockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
						return 1;
                    }
                }
                else
				{
                    SendClientMessageEx(playerid, COLOR_WHITE, " Usted no tiene un sistema de bloqueo instalado en el vehículo.");
                    return 1;
                }
            }
        }
    }
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
    {
        if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
            if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 0)
			{
			    new string[64];
			    format(string, sizeof(string), "* %s trabó las puertas de su vehículo.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerPlaySoundEx(1145, x, y, z);
                PlayerVehicleInfo[playerid][d][pvLocked] = 1;
                LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
                return 1;
            }
            else if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 1)
			{
			    new string[64];
			    format(string, sizeof(string), "* %s destrabó las puertas de su vehículo.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerPlaySoundEx(1145, x, y, z);
                PlayerVehicleInfo[playerid][d][pvLocked] = 0;
                UnLockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
                return 1;

            }
            SendClientMessageEx(playerid, COLOR_WHITE, " Usted no tiene un sistema de bloqueo instalado en el vehículo.");
            return 1;
        }
    }
    SendClientMessageEx(playerid, COLOR_WHITE, " Debes de estar cerca de un coche tuyo.");
    return 1;
}

CMD:recargarautos(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 3)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        return 1;
    }
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /recargarautos (playerid)");

	UnloadPlayerVehicles(giveplayerid);
	LoadPlayerVehicles(giveplayerid);

	format(string, sizeof(string), " Recargaste los vehiculos de %s.", GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GREY, string);

	return 1;
}

CMD:eliminarauto(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new string[128], giveplayerid, vehicleid;
	if(sscanf(params, "dd", giveplayerid, vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /eliminarauto (playerid) (vehiculoid)");
    if (Info[playerid][pAdminZC] < 5)
    {
    	SendClientMessageEx(playerid, COLOR_WHITE, " No puedes utilizar este comando.");
     	return 1;
   	}
	format(string, sizeof(string), "%s ha destruido el auto %s de %s.", GetPlayerNameEx(playerid), GetVehicleName(vehicleid), GetPlayerNameEx(giveplayerid));
	Log("logs/playervehicle.log", string);
	new playervehicleid = GetPlayerVehicle(giveplayerid, vehicleid);
	if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El jugador no tiene ese vehículo.");
	DestroyPlayerVehicle(giveplayerid, playervehicleid);
	return 1;
}

CMD:quitarllave(playerid, params[])
{
    new vstring[512], iValidVehicles;
	for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	{
	    if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
			format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]), GetPlayerNameEx(PlayerVehicleInfo[playerid][i][pvAllowedPlayerId])), ++iValidVehicles;

        else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
            format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

        else
			format(vstring, sizeof(vstring), "%s\nVacío", vstring);
	}
	if(iValidVehicles != 0)
	{
		SafeDialogEx(playerid, REMOVEKEYS, DIALOG_STYLE_LIST, "{008EC1}Por favor selecciona un vehiculo.", vstring, "Quitar", "Cancelar");
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "Usted no tiene ninguna llave para quitar.");
	}
	return 1;
}
zcmd(vermapa, playerid, params[]){
        if(!MapaInteres(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡ No estás en un mapa !");
        if(IsPlayerConnected(playerid))
        {
            new string[128];
            format(string, sizeof(string), "* %s mira el mapa de lugares de interés.", GetPlayerNameEx(playerid));
    		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 		SafeDialogEx(playerid, MAPINTERES, DIALOG_STYLE_LIST, "{FFFFFF}Mapa de{088A4B} San Andreas","Banco Central\nHospital\nAyuntamiento de Los Santos\n24/7 Unity\n24/7 Ayuntamiento\nDiscoteca Alhambra\nPizzeria\nTrabajos\nConcesionarios", "Ok", "Cancelar");
		}
		else SendClientMessage(playerid, 0xFFFF00FF, "No estás conectado.");
		return 1;
	}
CMD:gps(playerid, params[])
{
	new vstring[1024];
	for(new i; i < MAX_PLAYERVEHICLES; i++)
	{
		if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
		{
			format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvId]);
		}
		else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
		{
			format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
		}
		else
		{
			format(vstring, sizeof(vstring), "%s\nVacío", vstring);
		}
	}
	SafeDialogEx(playerid, TRACKCAR, DIALOG_STYLE_LIST, "{008EC1}GPS - Llaves", vstring, "Buscar", "Salir");
	return 1;
}
CMD:darllave(playerid, params[])
{
	new
		giveplayerid;

    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darllave (id)");
    if(IsPlayerConnected(giveplayerid))
	{
        if(playerid == giveplayerid) return 1;
        if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
            new
				iValidVehicles,
				vstring[512];

			for(new i; i < MAX_PLAYERVEHICLES; i++)
			{
				if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]), ++iValidVehicles;

				else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else
					format(vstring, sizeof(vstring), "%s\nVacío", vstring);
			}
            if(iValidVehicles != 0)
			{
                GiveKeysTo[playerid] = giveplayerid;
                SafeDialogEx(playerid, GIVEKEYS, DIALOG_STYLE_LIST, "{008EC1}Por favor, selecciona un vehículo.", vstring, "Dar llaves", "Cancelar");
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "No tienes ningún vehículo para que puedas dar llaves.");
            }
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "No estás lo suficientemente cerca de ese jugador.");
        }
    }
    return 1;
}
CMD:vendermicoche(playerid, params[])
{
    new string[128], giveplayerid, price;
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
        if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
 		{
            new Float:health;
            GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
            if(Info[playerid][pLevel] == 1)
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser nivel 2 o más para poder vender vehículos.");
                return 1;
            }
            if(health < 500) return SendClientMessageEx(playerid, COLOR_WHITE, " El vehiculo está muy dañado para ser vendido.");

			if(sscanf(params, "dd", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vendermicoche (id) (precio)");

            if(price < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Precio debe ser mayor a 0.");
            if(Info[giveplayerid][pLevel] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador tiene que ser nivel 2 o más para que puedas venderle vehiculos.");
            if(playerid == giveplayerid)
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes venderte el auto a ti mismo.");
                return 1;
            }
            if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no está conectado al servidor.");
            if (ProxDetectorS(8.0, playerid, giveplayerid))
		 	{
                VehicleOffer[giveplayerid] = playerid;
                VehicleId[giveplayerid] = d;
                VehiclePrice[giveplayerid] = price;
                format(string, sizeof(string), "* Ofreciste a %s para comprar este %s por $%d.", GetPlayerNameEx(giveplayerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                format(string, sizeof(string), "* %s te ha ofrecidor su %s por $%d, (usa /aceptar coche).", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
                SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
                return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
                return 1;
            }
        }
    }
    SendClientMessageEx(playerid, COLOR_GREY, " Tu necesitas estar dentro de un vehiculo que te pertenece.");
    return 1;
}
CMD:checkllaves(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 2)
    {
        new vstring[1024],giveplayerid,stext[11];
        if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /checkllaves (Jugador)");
		if(IsPlayerConnected(giveplayerid))
		{
			for(new i; i < MAX_PLAYERVEHICLES; i++)
			{
   	    		switch(PlayerVehicleInfo[giveplayerid][i][pvSpawned])
	    		{
	        		case 0: stext = "Despawned";
	        		case 1: stext = "Spawned";
	    		}
    			if(PlayerVehicleInfo[giveplayerid][i][pvModelId] != 0)
					format(vstring, sizeof(vstring), "%s\n%s - (%s)", vstring, VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400], stext);
				else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (Embargado) (%s)", vstring, VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400], stext);
				else
					format(vstring, sizeof(vstring), "%s\nVacío", vstring);
			}
		    SafeDialogEx(playerid, GOTOPLAYERCAR, DIALOG_STYLE_LIST, "{008EC1}Teleportar a Coche", vstring, "Ir", "Cancelar");
       		SetPVarInt(playerid, "playeraffectedcarTP", giveplayerid);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "ID no válida.");
  	}
	return 1;
}

CMD:respawncars(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 4)
	{
		new string[128], radius;
		if(sscanf(params, "d", radius)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /respawncars (Radio)");

		if(radius < 1 || radius > 40)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} El radio debe ser de 1 a 40.");
			return 1;
		}
		RespawnNearbyVehicles(playerid, radius);
		format(string, sizeof(string), "Usted ha respawneado los vehículos dentro del radio de %d.", radius);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	}
	return 1;
}

CMD:respawnauto(playerid, params[])
{
	if (Info[playerid][pAdminZC] >= 1)
	{
		new string[128], carid;
		if(sscanf(params, "d", carid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /respawnauto (carid)");

		SetVehicleToRespawn(carid);
		format(string, sizeof(string), "Coche ID %d - Respawneado.", carid);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
	}
	return 1;
}
CMD:colorcoche(playerid, params[])
{
    {
	if(!IsPlayerInRangeOfPoint(playerid, 45, 2516.9041,-2109.1155,13.5469)) return Message(playerid, COLOR_WHITE, "No estás en el taller.");
	if(!IsPlayerInAnyVehicle(playerid))
	{
		return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No estás en un vehiculo.");
	}

	else if(Info[playerid][pSpraycan] == 0)
	{
		return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes un spray.");
	}

	new	iVeh = GetPlayerVehicleID(playerid),
    iPlayerVeh = GetPlayerVehicle(playerid, iVeh);

	if(LSPD_IsACopCar(iVeh)||Taxi_Vehicle(iVeh)||SAMD_Vehicle(iVeh)||Mecanico_Vehicle(iVeh)||CNN_Vehicle(iVeh)||FBI_Vehicle(iVeh) ||IsAPizzabike(iVeh)||GobierAuto(iVeh)||IsAnSAEMCar(iVeh)||LCN_Vehicle(iVeh)||Yakuza_Vehicle(iVeh)||Rusa_Vehicle(iVeh) ) {
		return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes pintar vehículos facciónes.");
	}
	new	iColors[2];
	if(sscanf(params, "ii", iColors[0], iColors[1]))
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /colorcoche (ID 1) (ID 2), Color debe ser una ID.");
	}
	else if(!(0 <= iColors[0] <= 255 && 0 <= iColors[1] <= 255))
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "Color Inválido (ID comienza en 0, y el final es 255).");
	}
	/*foreach(Player, i)
	{
		iPlayerVeh = GetPlayerVehicle(i, iVeh);
		if(iPlayerVeh != -1)
		{
			if(i == playerid) 
			else return SendClientMessageEx(playerid,COLOR_WHITE,"No se puede pintar los vehículos de otras personas.");
		}
	}*/
	new string[256];
	new szMessage[60];
	format(szMessage, sizeof(szMessage), "Cambiaste el color del vehiculo. - ID %d, %d.", iColors[0], iColors[1]);
	SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
	format(string, sizeof(string), "* %s rocía su spray de pintura sobre la carrocería del vehículo.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Info[playerid][pSpraycan] -= 1;
	PlayerVehicleInfo[playerid][iPlayerVeh][pvColor1] = iColors[0], PlayerVehicleInfo[playerid][iPlayerVeh][pvColor2] = iColors[1];
	return ChangeVehicleColor(iVeh, iColors[0], iColors[1]);
	}
}

CMD:pintarcoche(playerid, params[])
{
    if(Team_Mecanicos(playerid))
    {
    if(!IsPlayerInRangeOfPoint(playerid, 45, 2516.9041,-2109.1155,13.5469)) return Message(playerid, COLOR_WHITE, "No estás en el taller de pintura.");
	if(isnull(params))
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /pintarcoche (0-6) (3 para remover la pintura).");
	}
	else if(!IsPlayerInAnyVehicle(playerid))
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehiculo.");
	}
    else if(Info[playerid][pSpraycan] == 0)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un spray.");
	}

	new
		iVeh = GetPlayerVehicleID(playerid),
		iPlayerVeh = GetPlayerVehicle(playerid, iVeh),
		iPaintID = strval(params);

	if(LSPD_IsACopCar(iVeh)||Taxi_Vehicle(iVeh)||SAMD_Vehicle(iVeh)||Mecanico_Vehicle(iVeh)||CNN_Vehicle(iVeh)||FBI_Vehicle(iVeh) ||IsAPizzabike(iVeh)||GobierAuto(iVeh)||IsAnSAEMCar(iVeh)|| LCN_Vehicle(iVeh)||Yakuza_Vehicle(iVeh)||Rusa_Vehicle(iVeh) ) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes pintar vehículos facción.");
	}
	else if(!(0 <= iPaintID <= 6)){
		return SendClientMessageEx(playerid, COLOR_WHITE, "Pintura debe ser del ID 0 al 6.");
	}
	/*foreach(Player, i) {
		iPlayerVeh = GetPlayerVehicle(i, iVeh);
		if(iPlayerVeh != -1) {
			if(i == playerid) 
			else return SendClientMessageEx(playerid,COLOR_WHITE,"No puedes pintar coches de otras personas.");
		}
	}*/
	new string[256];
	PlayerVehicleInfo[playerid][iPlayerVeh][pvPaintJob] = iPaintID;
	ChangeVehiclePaintjob(iVeh, iPaintID);
	Info[playerid][pSpraycan] -= 1;
	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste la pintura de tu vehiculo..");
	format(string, sizeof(string), "* %s rocía su spray de pintura sobre la carrocería del vehículo.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
 	else SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no eres mecánico.");
 	return 1;
}
CMD:remolcar(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new Float:vX,Float:vY,Float:vZ,Found=0,vid=0,idcar = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(idcar) == 525)
		{
			new Float:pX,Float:pY,Float:pZ;
				GetPlayerPos(playerid,pX,pY,pZ);

			while((vid<MAX_VEHICLES)&&(!Found))
			{
				vid++;
				GetVehiclePos(vid,vX,vY,vZ);
				if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
				{
					Found=1;
					if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
					{
		   				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					}
			   		else
			   		{
		   				AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
					}
				}
			}
			if(!Found)
			{
				SendClientMessageEx(playerid,COLOR_WHITE,"No hay ningún vehículo cerca.");
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes remolcar con este vehículo.");
	}
	return 1;
}

CMD:qmod(playerid, params[])
{
	new modList[512], string[128];
	new count = 0;
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
			for(new f = 0 ; f < MAX_MODS; f++)
			{
				if (GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f) != 0)
				{
					if (f != 9 && f != 7 && f != 8)
					{
						format(modList, sizeof(modList), "%s\n%s - %s", modList, partType(f), partName(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f)));
					}
					else
					{
					    format(modList, sizeof(modList), "%s\n%s", modList, partType(f));
					}
     				format(string, sizeof(string), "partList%d", count);
					SetPVarInt(playerid, string, GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
					count++;
				}
			}
			if (count == 0)
			{
			    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Este vehiculo no tiene ninguna modificación.");
			    return 1;
			}
		    format(modList, sizeof(modList), "%s\nTodo", modList);
		    format(string, sizeof(string), "partList%d", count);
		    SetPVarInt(playerid, string, 999);
		    count++;
		    SetPVarInt(playerid, "modCount", count);
		    SafeDialogEx(playerid, UNMODCARMENU, DIALOG_STYLE_LIST, "{008EC1}Partes", modList, "Ok", "Cancelar");
		    return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, " Necesitas estar en un vehiculo tuyo.");
 	return 1;
}

CMD:gmaletero(playerid, params[])
{
    if(manubrio[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes guardar este arma mientras la estas dando.");
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en el paintball.");
 	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un evento.");
	if(IsPlayerInAnyVehicle(playerid)) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto mientras estar en el interior del vehículo!"); return 1; }
	if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ahora mismo.");
	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gmaletero (arma) (slot)");
	new pvid = -1, Float: x, Float: y, Float: z;
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
			pvid = d;
			break;
		}
	}
	if(pvid == -1) return SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No estás cerca de un vehículo que sea tuyo.");
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(PlayerVehicleInfo[playerid][pvid][pvId],engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GRAD3, "{FFFF00}[ERROR]:{FFFFFF} No se puede poner armas en el interior del maletero si está cerrado (/motor maletero para abrirlo.");
	if(GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 510)  return SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} Este coche no tiene maletero.");

	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "   Necesitas esperar {FF0000}%d{FFFFFF} segundos después de haber guardado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_WHITE,string);
		return 1;
	}

	new maxslots = PlayerVehicleInfo[playerid][pvid][pvWepUpgrade]+1;
	if(slot > maxslots)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Slot Inválido. [/gunlocker]");
		return 1;
	}
	if( PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Tienes armas guardadas en ese slot.");
		return 1;
	}
	new weapon;
	if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][2] == 23)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado una pistola SD en tu maletero.");
			weapon = Info[playerid][pWeapons][2];
			format(string,sizeof(string), "* %s guarda un pistola SD en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][2] == 24)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado un Desert Eagle en tu maletero.");
			weapon = Info[playerid][pWeapons][2];
			format(string,sizeof(string), "* %s guarda una Desert Eagle en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][3] == 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado un Shotgun en tu maletero.");
			weapon = Info[playerid][pWeapons][3];
			format(string,sizeof(string), "* %s guarda un Shotgun en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][3] == 27)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado una CombatShotgun en tu maletero.");
			weapon = Info[playerid][pWeapons][3];
			format(string,sizeof(string), "* %s guarda una Combat Shotgun en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][4] == 29)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado un MP5 en tu maletero.");
			weapon = Info[playerid][pWeapons][4];
			format(string,sizeof(string), "* %s guarda un MP5 en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 30)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado una AK-47 en tu maletero.");
			weapon = Info[playerid][pWeapons][5];
			format(string,sizeof(string), "* %s guarda una AK-47 en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "Uzi", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 28)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado una Uzi en tu maletero.");
			weapon = Info[playerid][pWeapons][5];
			format(string,sizeof(string), "* %s guarda una Uzi en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 31)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado una M4 en tu maletero.");
			weapon = Info[playerid][pWeapons][5];
			format(string,sizeof(string), "* %s guarda una M4 en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][6] == 33)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado un rifle en tu maletero.");
			weapon = Info[playerid][pWeapons][6];
			format(string,sizeof(string), "* %s guarda un rifle en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][6] == 34)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has guardado un sniper en tu maletero.");
			weapon = Info[playerid][pWeapons][6];
			format(string,sizeof(string), "* %s guarda un sniper en su maletero.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	if(weapon == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma");
	if(PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] == 0)
	{
		PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] = weapon;
		RemovePlayerWeapon(playerid, weapon);
		return 1;
	}
	else { SendClientMessageEx(playerid,COLOR_GREY,"   Nombre inválido!"); return 1; }
}

CMD:smaletero(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto mientras estás dentro de un vehículo.");
	else if(GetPVarInt(playerid, "IsInArena") == 1) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en el paintball.");
	}
	else if(GetPVarInt( playerid, "EventToken") != 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estás en un evento.");
	}
	else if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0)
	{
		return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando ya que tienes restricción de armas.");
	}
	else if(GetPVarInt(playerid, "GiveWeaponTimer") >= 1) {

		new
			szMessage[59];

		format(szMessage, sizeof(szMessage), "   Necesitas esperar {FF0000}%d{FFFFFF} segundos después de haber agarrado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessageEx(playerid, COLOR_GREY, szMessage);
	}

	new
		Float: fVehPos[3],
		iWeaponSlot = strval(params);

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) {
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) {
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, fVehPos[0], fVehPos[1], fVehPos[2])) {
				if(isnull(params)) {

					new
						szMessage[64];

					format(szMessage, sizeof(szMessage), "*** %s - %s ***", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]));
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					for(new s = 0; s < 3; s++) if(PlayerVehicleInfo[playerid][d][pvWeapons][s] != 0) {

						new
							szWeapon[16];

						GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][s], szWeapon, sizeof(szWeapon));
						format(szMessage, sizeof(szMessage), "Ranura %d: %s", s+1, szWeapon);
						SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					}
					return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /smaletero (slot)");
				}
				else if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) {
					return SendClientMessageEx(playerid,COLOR_WHITE,"Ese vehiculo no tiene maletero.");
				}
				new
					engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);

				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
				{
					return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes tomar armas del maletero, si está cerrado {5ABAFF}/motor maletero{FFFFFF} para abrirlo.");
				}
				else if(iWeaponSlot > PlayerVehicleInfo[playerid][d][pvWepUpgrade] + 1)
				{
					return SendClientMessageEx(playerid, COLOR_WHITE, "Ranura específicada Inválida {5ABAFF}/gunlocker{FFFFFF}.");
				}
				else if(PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] != 0) {
					new
						szMessage[128];

					GivePlayerValidWeapon(playerid, PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1]);
					PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] = 0;
					format(szMessage, sizeof(szMessage), "Retiraste un %s del maletero de tu coche.", WeaponNames[PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1]]);
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					format(szMessage, sizeof(szMessage), "* %s ha retirado un %s del maletero de su coche.", GetPlayerNameEx(playerid), WeaponNames[PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1]]);
					return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un arma almacenada en esa ranura.");
			}
		}
	}
	return SendClientMessageEx(playerid,COLOR_WHITE,"No estás cerca de un vehiculo tuyo.");
}

CMD:servicios(playerid, params[])
{
    if(Info[playerid][pJailed] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto en prisión.");
		return 1;
	}
	if(Info[playerid][pServiceTime] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas esperar 30 segundos para usar este comando." );

	ShowPlayerDialog(playerid,DIALOG_SERVICIOS,DIALOG_STYLE_LIST,"{FFFFFF}Servicios Disponibles","{F67F90}Paramédico\n{F4F11B}Taxi\n{F67F90}Medico {FFFFFF}(Llamar a un médico)\n{EB7325}Mecanico","Seleccionar", "Cancelar");
	return 1;
}
/*CMD:servicios(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /servicio (nombre)");
		SendClientMessageEx(playerid, COLOR_WHITE, "Nombres Disponibles: Taxi, Mecanico, Medico (Llamar a un médico), Medicos");
		return 1;
	}
	if(Info[playerid][pJailed] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto en prisión.");
		return 1;
	}
	if(Info[playerid][pServiceTime] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas esperar 30 segundos para usar este comando." );

	if(strcmp(choice,"medicos",true) == 0)
	{
		if(Medics < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* No hay médicos ahora para usar este servicio.");
		if(GetPVarInt(playerid, "Injured") == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "* No estás herido, no puedes llamar a médicos ahora.");
			return 1;
		}
		new zone[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
		SetPVarInt(playerid, "EMSAttempt", 1);
		SendClientMessageEx(playerid, COLOR_WHITE, "LSMD ha sido informado de su ubicación actual y están en camino.");
		format(string, sizeof(string), "* Central: Reportan a un tal (%d) %s que puede estar herido en %s, se requiere emegercia inmediata.",playerid, GetPlayerNameEx(playerid), zone);
		SendRadioMessage(4, TEAM_MED_COLOR, string);
		Info[playerid][pServiceTime] = 30;
		return 1;
	}
	if(strcmp(choice,"taxi",true) == 0)
	{
		if(TaxiDrivers < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "* En este momento no se encuentran disponibles taxistas, intenta más tarde.");
			return 1;
		}
		if(TransportDuty[playerid] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ya llamaste un taxi.");
			return 1;
		}
		format(string, sizeof(string), "** %s necesita un taxista en su posición - usa /aceptar taxi para aceptar la llamada.", GetPlayerNameEx(playerid));
		MessageTaxiDriver(9, TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has solicitado un taxista, espera por una respuesta.");
		TaxiCall = playerid;
		Info[playerid][pServiceTime] = 30;
		return 1;
	}
	else if(strcmp(choice,"medico",true) == 0)
	{
		if(Medics < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "En este momento no se encuentran médicos disponibles, intenta más tarde.");
			return 1;
		}
		format(string, sizeof(string), "** %s necesita un médico - usa /aceptar medico para aceptar la llamada.", GetPlayerNameEx(playerid));
		SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Llamaste a un médico espera a una llamada.");
		MedicCall = playerid;
		Info[playerid][pServiceTime] = 30;
		return 1;
	}
	else if(strcmp(choice,"mecanico",true) == 0)
	{
		format(string, sizeof(string), "** %s necesita un mecánico - usa /aceptar mecanico para aceptar la llamada.", GetPlayerNameEx(playerid));
		SendFamilyMessage(6, TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Has solicitado un mecanico, espera por una respuesta.");
		MechanicCall = playerid;
		Info[playerid][pServiceTime] = 30;
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Servicio desconocido.");
		return 1;
	}
}*/

CMD:tarifa(playerid, params[])
{
	if(Info[playerid][pJob] == 8 ||  Info[playerid][pJob2] == 8 || Info[playerid][pTaxiLicense] == 1)
	{
		new string[128], fare;
		if(sscanf(params, "d", fare)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /tarifa (precio)");

		if(TransportDuty[playerid] > 0)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Ahora estás fuera de servicio, sumaste $%d a tu bolsillo.", TransportMoney[playerid]);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			return 1;
		}
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAnTaxi(newcar) || IsAnBus(newcar))
		{
			if(GetPlayerState(playerid) == 2)
			{
				if(fare < 1 || fare > 20)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Precio de la tarifa debe estar entre $ 1 y $ 20.");
					return 1;
				}
				TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = fare;
				format(string, sizeof(string), "Ahora estas en servicio, tarifa: $%d.", TransportValue[playerid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres el conductor.");
				return 1;
			}
		}
		else if (Info[playerid][pTaxiLicense] == 1)
		{
			if(GetPlayerState(playerid) == 2)
			{
				if(fare < 1 || fare > 20)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Precio de la tarifa debe estar entre $ 1 y $ 20.");
					return 1;
				}
				TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = fare;
				format(string, sizeof(string), "Ahora estás de servicio de taxista, tarifa: $%d.", TransportValue[playerid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres el conductor!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes la licencia de taxista!");
		}
	}
	else
	{
		SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando porque no eres taxista o no tienes la licencia de taxista.");
		return 1;
	}
	return 1;
}

CMD:mduty(playerid, params[])
{
	new string [200];
    if(Team_Mecanicos(playerid))
	{
        if(OnDuty[playerid] == 1)
		{
		    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ahora estás fuera servicio, ya no recibirás llamadas.");
            OnDuty[playerid] = 0;
            Mechanics -= 1;
        }
        else
		{
            if (TransportDuty[playerid] != 0) return SendClientMessageEx(playerid,COLOR_WHITE,"{A2DC35}[MECANICOS]:{FFFFFF} Tienes que estar fuera de servicio como chofer de transporte primero.");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ahora estás en servicio, recibirás llamadas de la gente que te necesite.");
			format(string, sizeof(string), "{00FE00}[Mecanicos]: El mecánico %s está de servicio en el taller (Telefono:%d)." , GetPlayerNameEx(playerid),Info[playerid][pPnumber]);
            BroadCast(COLOR_GENERAL, string);
			OnDuty[playerid] = 1;
            Mechanics++;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando porque no eres mecánico.");
    }
    return 1;
}
CMD:irpt(playerid, params[])
{
	if(Team_SAMD(playerid))
	{
	 new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /irpt(paciente) (Jugador/ID)");

		if(IsPlayerConnected(giveplayerid))
		{
		    if (giveplayerid == playerid)
		    {
		        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras tu seas la persona que llamó.");
				return 1;
		    }
		    if(GetPVarInt(giveplayerid, "EMSAttempt") == 8)
		    {
		        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando porque ya aceptaron la llamada.");
				return 1;
		    }
			if(GetPVarInt(giveplayerid,"MedicCall") == 1)
			{
				if(Info[giveplayerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras el usuario este en prisión.");
				format(string, sizeof(string), "Paramédico %s aceptó la llamada de la centra de emergencia Nrº %d, Paciente: %s.",GetPlayerNameEx(playerid),giveplayerid,GetPlayerNameEx(giveplayerid));
				SendRadioMessage(4, TEAM_MED_COLOR, string);
				format(string, sizeof(string), "* Has aceptado la llamada de emergencia de %s, podrás ver un marcador en el mapa.",GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Paramédico %s aceptó tu llamada; por favor espera en tu posición actual.",GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				GameTextForPlayer(playerid, "~r~Ve~n~al marcador rojo.", 5000, 1);
				EMSCallTime[playerid] = 1;
				EMSAccepted[playerid] = giveplayerid;
				SetPVarInt(giveplayerid, "EMSAttempt", 8);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Actualmente ese jugador no necesita asistencia médica!");
			}
		}
	}
	return 1;
}
CMD:subirpt(playerid, params[])
{
    if(Team_SAMD(playerid) || (Info[playerid][pMember] == 1 && Info[playerid][pDivision] == 2) || Team_SAEM(playerid) && Info[playerid][pDivision] == 3)
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
            SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras estes en un coche.");
            return 1;
        }

        new string[128], giveplayerid, seat;
        if(sscanf(params, "dd", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /subirpt (playerid) (Asiento)");

        if(IsPlayerConnected(giveplayerid))
		{
            if(giveplayerid != INVALID_PLAYER_ID)
			{
                if(seat < 2 || seat > 3)
				{
                    SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} El ID de seguridad no puede estar por encima o por debajo de 3 o 2.");
                    return 1;
                }
                if(GetPVarInt(giveplayerid, "Injured") != 1)
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras el paciente no este herido.");
                    return 1;
                }
                if(IsPlayerInAnyVehicle(giveplayerid))
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando porque el paciente ya está en el coche.");
                    return 1;
                }
                if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
                    if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes subirte a tu mismo."); return 1; }
                    if(Info[giveplayerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando mientras el paciente este en prisión.");
                    new carid = gLastCar[playerid];
                    if(GetVehicleModel(carid) == 416)
					{
                        new Float:pos[6];
                        GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                        GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
                        GetVehiclePos( carid, pos[0], pos[1], pos[2]);
                        if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
                            floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
                            floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
                        format(string, sizeof(string), "* Fuiste cargado por el paramédico %s.", GetPlayerNameEx(playerid));
                        SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Cargaste al auto a %s.", GetPlayerNameEx(giveplayerid));
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s sube a %s en la ambulancia.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPVarInt(giveplayerid, "EMSAttempt", 3);
                        ClearAnimations(giveplayerid);
                        PutPlayerInVehicle(giveplayerid,carid,seat);
                        TogglePlayerControllable(giveplayerid, false);
                    }
                    else
					{
                        SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} El último coche que has manejado debe ser una ambulancia.");
                    }
                }
                else
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: No estás lo suficientemente cerca del jugador o de tu coche.");
                    return 1;
                }
            }
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando porque esa ID no está disponible.");
            return 1;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres parte de LSMD o de la unidad de emergencia de LSPD");
    }
    return 1;
}
CMD:oldcar(playerid, params[]){
	new string[128];
	format(string, sizeof(string), "Tu último vehiculo manejado fue el ID %d.",gLastCar[playerid]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:dejarpt(playerid, params[])
{
    if(Team_SAMD(playerid) || (Info[playerid][pMember] == 1 && Info[playerid][pDivision] == 2) || Team_SAEM(playerid) && Info[playerid][pDivision] == 3){
        if(IsPlayerInAnyVehicle(playerid)){
			new string[128], giveplayerid;
		    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dejarpt (playerid)");

            new carid = GetPlayerVehicleID(playerid);
            new caridex = GetPlayerVehicleID(giveplayerid);
            if(IsAnAmbulance(carid))
			{
                if(carid == caridex){
                    if(IsAtDeliverPatientPoint(playerid)){
                        if(playerid == giveplayerid)
						{
                            SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes dejarte a ti mismo en el hospital.");
                            return 1;
                        }
                        if(GetPVarInt(giveplayerid, "Injured") == 0)
						{
                            return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no está herido.");
                        }
                        SetHP(giveplayerid, 100);
                        GivePlayerCash(giveplayerid, -200);
                        Tax += 250;
                        GivePlayerCash(playerid,1000);
                        KillEMSQueue(giveplayerid);
                        SetPVarInt(giveplayerid, "MedicBill", 0);
                        SendClientMessageEx(giveplayerid, TEAM_CYAN_COLOR, "Doctor: Los gastos médicos son de $200. Que tengas buen día!");
                        SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Sumaste $1000 a tu Bolsillo por dejar sano y salvo un paciente!");
                        SetPlayerInterior(giveplayerid, 0); Info[giveplayerid][pInt] = 0;
                        LoadObjects(giveplayerid);
                        SetPVarInt(giveplayerid, "PlayerCuffed", 0);
                        if(Team_SAMD(playerid))
                        {
                        	format(string, sizeof(string), "Paramédico %s ha dejado satisfactoriamente a %s en el hospital.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendRadioMessage(4, TEAM_MED_COLOR, string);
						}
						else if(Team_SAEM(playerid))
                        {
                        	format(string, sizeof(string), "%s ha dejado satisfactoriamente a %s en el hospital de EUEM.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendRadioMessage(4, TEAM_MED_COLOR, string);
						}
                        if(IsPlayerInRangeOfPoint(playerid, 5.0,2012.6680,-1409.3304,16.9922))//SAMD
						{
                        	SetPlayerPos(giveplayerid, 2034.5580,-1412.3188,16.9922);//SAMD
                            SetPlayerVirtualWorld(giveplayerid, 0);
                            Info[giveplayerid][pVW] = 0;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,2684.0684,-2525.4067,13.3136))//SAEM
						{
						    SetPlayerPos(giveplayerid, 1233.5699,321.7521,-11.7422);//SAEM
                            SetPlayerVirtualWorld(giveplayerid, 0);
                            Info[giveplayerid][pVW] = 0;
                        }
                    }
                    else{
                        SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el punto para dejar a los pacientes.");
                    }
                }
                else{
                    SendClientMessageEx(playerid, COLOR_WHITE, "Ese paciente no está en la ambulancia.");
                }
            }
            else{
                SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una ambulancia");
            }
        }
    }
    return 1;
}

CMD:curar(playerid, params[])
{
    if(Team_SAMD(playerid) || Team_SAEM(playerid) && Info[playerid][pDivision] == 3)//model
	{
 		if(Info[playerid][pTriageTime] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes esperar 2 minutos para hacer esto de nuevo.");
	    new string[128], giveplayerid;
	    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /curar [playerid]");
   		if(IsPlayerConnected(giveplayerid))
   		{
    	    if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
    	    if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
	    	    new Float: health;
	    	    GetPlayerHealth(giveplayerid, health);
	    	    if(health >= 85) SetHP(giveplayerid, 100);
				else SetHP(giveplayerid, health+15.0);
	    	    format(string, sizeof(string), "* %s da a %s 15ml de sangre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Info[playerid][pTriageTime] = 120;
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "El jugador no está cerca tuyo.");
 		}
	}
	return 1;
}
CMD:mandarls(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /mandarls (ID/Jugador)");

		if(IsPlayerConnected(giveplayerid))
		{
			if (Info[giveplayerid][pAdminZC] >= 1337) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando para este jugador.");
			format(string, sizeof(string), " Enviaste a Los Santos a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, " Fuiste llevado a Los Santos por un Administrador.");
			SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
			SetPlayerVirtualWorld(giveplayerid, 0);
			SetPlayerInterior(giveplayerid, 0);
			Info[giveplayerid][pInt] = 0;
			Info[giveplayerid][pVW] = 0;
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:mandarsf(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /mandarsf (ID/Jugador)");

		if(IsPlayerConnected(giveplayerid))
		{
			if (Info[giveplayerid][pAdminZC] >= 1337) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando para este jugador.");
			format(string, sizeof(string), " Enviaste a San Fierro a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, " Fuiste llevado a San Fierro por un Administrador.");
			SetPlayerPos(giveplayerid, -2016.4399,-79.7714,35.3203);
			SetPlayerVirtualWorld(giveplayerid, 0);
			SetPlayerInterior(giveplayerid, 0);
			Info[giveplayerid][pInt] = 0;
			Info[giveplayerid][pVW] = 0;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando.");
	return 1;
}

CMD:editarhqfam(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] >= 4000 || Info[playerid][pGangModerator] == 1)
	{
		new family, x_hq[64], string[128];
		if(sscanf(params, "is[64]", family, x_hq))
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarhqfam (familia id) (Nombre)");
			SendClientMessageEx(playerid, COLOR_GREY, "NOMBRES: crear, borrar, exterior, interior, perinterior, VirtualWorld");
			return 1;
		}

		if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Familias: 1 - 6"); return 1; }
		family -= 1;
		if(strcmp(x_hq,"crear",true) == 0)
		{
	   		SetPVarInt(playerid, "editingfamhq", family);
			SetPVarInt(playerid, "editingfamhqaction", 1);
			SendClientMessageEx(playerid, COLOR_WHITE, "Porfavor ponte de pie donde quieres que este la entrada.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Después presiona {FF0000}FIRE{FFFFFF}.");
		}
		else if(strcmp(x_hq,"borrar",true) == 0)
		{
		    SetPVarInt(playerid, "editingfamhq", family);
			SetPVarInt(playerid, "editingfamhqaction", 4);
			format(string,128,"¿Estás seguro que quieres borra la HQ?");
			SafeDialogEx(playerid,HQDELETE,DIALOG_STYLE_MSGBOX,"{008EC1}Warning:",string,"Si","No");
		}
		else if(strcmp(x_hq,"exterior",true) == 0)
		{
		    SetPVarInt(playerid, "editingfamhq", family);
			SetPVarInt(playerid, "editingfamhqaction", 5);
			SendClientMessageEx(playerid, COLOR_WHITE, "Porfavor ponte de pie donde quieres que este la entrada.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Después presiona {FF0000}FIRE{FFFFFF}.");
		}
		else if(strcmp(x_hq,"interior",true) == 0)
		{
		    SetPVarInt(playerid, "editingfamhq", family);
			SetPVarInt(playerid, "editingfamhqaction", 6);
			SendClientMessageEx(playerid, COLOR_WHITE, "Porfavor ponte de pie donde quieres que este la salida.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Después presiona {FF0000}FIRE{FFFFFF}.");
		}
		else if(strcmp(x_hq,"preinterior",true) == 0)
		{
		    SetPVarInt(playerid, "editingfamhq", family);
			SetPVarInt(playerid, "editingfamhqaction", 3);
			SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}[ATENCION]:{FFFFFF} Recuerda después usar /editarhqfam familiaid VirtualWorld.");
			format(string,128,"Tiene '%s' un interior personalizado?", fINFO[family][FamilyName]);
			SafeDialogEx(playerid,HQCUSTOMINT,DIALOG_STYLE_MSGBOX,"{008EC1}Advertencia:",string,"Si","No");
		}
		else if(strcmp(x_hq,"VirtualWorld",true) == 0)
		{
			fINFO[family][FamilyVirtualWorld] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "El VirtualWorld de la familia fue estableciado en 0 - Int Personalizado.");
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Nombre no válido.");
		}
		saveFamilies();
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres administrador.");
	return 1;
}

CMD:fameditor(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 4000 || Info[playerid][pGangModerator] == 1)
	{
		new family, x_job[64], x_hq[64], ammount, string[128];
		if(sscanf(params, "is[64]s[64]", family, x_job, x_hq))
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /fameditor (familia) (nombre) (valor)");
			SendClientMessageEx(playerid, COLOR_GREY, "Available names: Tokens, lider, MaxSkins, Skin1, Skin2, Skin3, Skin4, Skin5, Skin6, Skin7, Skin8");
			return 1;
		}
        ammount = strval(x_hq);
		if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[FAM]:{FFFFFF} Familia id no puede estar por debajo de 1 o por encima de 6."); return 1; }
		family -= 1;
		if(strcmp(x_job,"tokens",true) == 0)
		{
			fINFO[family][FamilyTurfTokens] = ammount * 12;
			format(string, sizeof(string), "You have changed '%s' tokens amount to %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			return 1;
		}
		else if (strcmp(x_job,"lider",true) == 0)
		{
			if(strlen(x_hq) >= 20 )
			{
				SendClientMessageEx( playerid, COLOR_GRAD1, "That leader name is too long, please refrain from using more than 20 characters." );
				return 1;
			}
			strcpy(fINFO[family][FamilyLeader], x_hq, MAX_PLAYER_NAME);
			format(string, sizeof(string), "Has cambiado '%s' fichas ascienden a %s.", fINFO[family][FamilyName], x_hq);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			return 1;
		}
		else if(strcmp(x_job,"maxskins",true) == 0)
		{
			if(ammount > 8) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer el maxskins a más de 8.");
			if(ammount == 7)
			{
				fINFO[family][FamilySkins][7] = 0;
			}
			if(ammount == 6)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
			}
			if(ammount == 5)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
				fINFO[family][FamilySkins][5] = 0;
			}
			if(ammount == 4)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
				fINFO[family][FamilySkins][5] = 0;
				fINFO[family][FamilySkins][4] = 0;
			}
			if(ammount == 3)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
				fINFO[family][FamilySkins][5] = 0;
				fINFO[family][FamilySkins][4] = 0;
				fINFO[family][FamilySkins][3] = 0;
			}
			if(ammount == 2)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
				fINFO[family][FamilySkins][5] = 0;
				fINFO[family][FamilySkins][4] = 0;
				fINFO[family][FamilySkins][3] = 0;
				fINFO[family][FamilySkins][2] = 0;
			}

			if(ammount == 1)
			{
				fINFO[family][FamilySkins][7] = 0;
				fINFO[family][FamilySkins][6] = 0;
				fINFO[family][FamilySkins][5] = 0;
				fINFO[family][FamilySkins][4] = 0;
				fINFO[family][FamilySkins][3] = 0;
				fINFO[family][FamilySkins][2] = 0;
				fINFO[family][FamilySkins][1] = 0;
			}

			fINFO[family][FamilyMaxSkins] = ammount;
			format(string, sizeof(string), "Cambiaste max skins de '%s' a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin1",true) == 0)
		{
			fINFO[family][FamilySkins][0] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #1 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin2",true) == 0)
		{
			fINFO[family][FamilySkins][1] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #2 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin3",true) == 0)
		{
			fINFO[family][FamilySkins][2] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #3 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin4",true) == 0)
		{
			fINFO[family][FamilySkins][3] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #4 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin5",true) == 0)
		{
			fINFO[family][FamilySkins][4] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #5 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin6",true) == 0)
		{
			fINFO[family][FamilySkins][5] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #6 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin7",true) == 0)
		{
			fINFO[family][FamilySkins][6] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #7 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin8",true) == 0)
		{
			fINFO[family][FamilySkins][7] = ammount;
			format(string, sizeof(string), "Cambiaste '%s' skin #8 a %d.", fINFO[family][FamilyName], ammount);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Nombre no válido.");
			return 1;
		}
		saveFamilies();
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres administrador.");
		return 1;
	}
	return 1;
}

CMD:miembros(playerid, params[])
{
	new member = Info[playerid][pMember];
    new leader = Info[playerid][pLeader];
    new teamnumber;
	if (Info[playerid][pLeader] != 0) teamnumber = Info[playerid][pLeader];
	else if (Info[playerid][pMember] != 0) teamnumber = Info[playerid][pMember];
    if(member > 0 || leader > 0)
    {
	    SendClientMessageEx(playerid, COLOR_WHITE, "{46FF92}Miembros Conectados:");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    new string[32];
			if (IsPlayerConnected(i))
			{
				if (Info[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (Líder)",GetPlayerNameEx(i));
				else if (Info[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rango: %d.",GetPlayerNameEx(i), Info[i][pRank]);
				if(strlen(string) > 0) SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a ninguna facción.");
    return 1;
}

CMD:familias(playerid, params[])
{
	new string[256], familyid;

	if(sscanf(params, "d", familyid))
	{
		new number = 0;
		for(new i = 0; i < sizeof(fINFO); i++)
		{
			number ++;
   			if(fINFO[i][FamilyTurfTokens] < 12)
			{
				format(string, sizeof(string), "Familia {A2DC35}%d{FFFFFF} | Nombre: {A2DC35}%s{FFFFFF} | Lider: {A2DC35}%s{FFFFFF} | Miembros: %d.",number,fINFO[i][FamilyName],fINFO[i][FamilyLeader],fINFO[i][FamilyMembers]);
			}
			else
			{
				format(string, sizeof(string), "Familia {A2DC35}%d{FFFFFF} | Nombre: {A2DC35}%s{FFFFFF} | Lider: {A2DC35}%s{FFFFFF} | Miembros: %d",number,fINFO[i][FamilyName],fINFO[i][FamilyLeader],fINFO[i][FamilyMembers]);
			}
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		return 1;
	}

	if(familyid < 1 || familyid > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Familias: 1 - 6"); return 1; }
	familyid -= 1;
	if(fINFO[familyid][FamilyTaken] != 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ese Slot está vacío.");
		return 1;
	}
	foreach(Player, i)
	{
		if(Info[i][pFMember] == familyid && Info[i][pFMember] != 255)
		{
			if(Info[i][pRank] == 1 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (1).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank1]);
			}
			else if(Info[i][pRank] == 2 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (2).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank2]);
			}
			else if(Info[i][pRank] == 3 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (3).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank3]);
			}
			else if(Info[i][pRank] == 4 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (4).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank4]);
			}
			else if(Info[i][pRank] == 5 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (5).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank5]);
			}
			else if(Info[i][pRank] == 6 && Info[i][pFMember] == familyid)
			{
				format(string, sizeof(string), "* %s: %s | Rango: %s (6).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank6]);
			}
			SendClientMessageEx(playerid, COLOR_GREY, string);
		}
	}
	return 1;
}


CMD:festado(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un ATM o en el Banco.");
		return 1;
	}

	new family, string[128];
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}

	format(string, sizeof(string), "Tu familia tiene $%d en su cuenta.", fINFO[family][FamilyBank]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:fdepositar(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un ATM o en el Banco.");
		return 1;
	}

	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}

	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fdepositar (monto)");
		format(string, sizeof(string), "Tu familia tiene $%d en su cuenta.", fINFO[family][FamilyBank]);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		return 1;
	}

	if (amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes ese dinero.");
		return 1;
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = fINFO[family][FamilyBank];
	fINFO[family][FamilyBank]=amount+fINFO[family][FamilyBank];
	SendClientMessageEx(playerid, COLOR_WHITE, "|____________CUENTA BANCARIA_____________|");
	format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Depósito: $%d",amount);
	SendClientMessageEx(playerid, COLOR_GRAD4, string);
	SendClientMessageEx(playerid, COLOR_GRAD6, "|________________________________________|");
	format(string, sizeof(string), "  Nuevo Balance: $%d", fINFO[family][FamilyBank]);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	new ip[32];
	GetPlayerIp(playerid, ip, sizeof(ip));
	format(string,sizeof(string),"%s (IP: %s) depositó $%d en la FAM %d's bank account.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
	Log("logs/family.log", string);
	return 1;
}

CMD:fretirar(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un ATM o en el Banco.");
		return 1;
	}
	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}
	if(Info[playerid][pRank] < 5)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos 5 y 6 pueden retirar.");
		return 1;
	}
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fretirar (monto)");
		format(string, sizeof(string), "Tu familia tiene $%d en su cuenta.", fINFO[family][FamilyBank]);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		return 1;
	}

	if (amount > fINFO[family][FamilyBank] || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Tu familia no tiene ese dinero.");
		return 1;
	}

	GivePlayerCash(playerid,amount);
	fINFO[family][FamilyBank]=fINFO[family][FamilyBank]-amount;
	format(string, sizeof(string), "  Retiraste $%d de la cuenta de tu familia, un total de: $%d", amount,fINFO[family][FamilyBank]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	new ip[32];
	GetPlayerIp(playerid, ip, sizeof(ip));
	format(string,sizeof(string),"%s (IP: %s) ha retirado $%d de la familia %d's cuenta del banco.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
	Log("logs/family.log", string);
	return 1;
}

CMD:fgarma(playerid, params[])
{
    if(manubrio[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes guardar este arma mientras la estas dando.");
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en la arena.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx (playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No se puede almacenar armas desde un vehículo");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if (health < 30) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No se puede almacenar armas si su salud está por debajo de 30.");
	if(GetPVarInt(playerid, "Injured") != 0||Info[playerid][pEstado]!=0||GetPVarInt(playerid, "Hospital")!=0||GetPlayerState(playerid) == 7) return SendClientMessageEx (playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
	if(Info[playerid][pMember] > 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No se puede almacenar armas en una caja fuerte de la familia cuando estás en una facción.");
	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes familia.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 3.0, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2])) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fgarma (arma) (slot)");
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "* Debes esperar %d segundos despues de depositar un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}
	if(slot < 1 || slot > 10) return SendClientMessageEx(playerid, COLOR_WHITE, "Ranura inválida.");
	if( fINFO[family][FamilyGuns][slot-1] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu familia tiene un arma almacenada en ese espacio ya.");
	new weapon;
	if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][2] == 23)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un pistola SD en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][2];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][2] == 24)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste una Desert Eagle en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][2];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][3] == 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste una Shotgun en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][3];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][3] == 27)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste una Spas12 en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][3];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][4] == 29)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un MP5 en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][4];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 30)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste una ak-47 en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][5];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 31)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un M4 en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][5];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "Uzi", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][5] == 28)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un Uzi en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][5];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][6] == 33)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un Rifle en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][6];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
	{
		if( Info[playerid][pWeapons][6] == 34)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Dejaste un Sniper en el armario de tu familia.");
			weapon = Info[playerid][pWeapons][6];
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else { SendClientMessageEx(playerid,COLOR_WHITE,"ID de arma invalida."); return 1; }
	if(weapon == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma.");
	if(fINFO[family][FamilyGuns][slot-1] == 0)
	{
		fINFO[family][FamilyGuns][slot-1] = weapon;
		RemovePlayerWeapon(playerid, weapon);
		saveFamilies();
		return 1;
	}
	return 1;
}

CMD:fsarma(playerid, params[])
{
	new string[128], slot;
	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando tienes restricción de armas.");
	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes una familia.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2])) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No estás en el lugar adecuado.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes coger armas estando en un vehiculo.");
	if(sscanf(params, "d", slot))
	{
		new weaponname[50];
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		format(string, sizeof(string), "*** %s Caja Fuerte ***", fINFO[family][FamilyName]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		for(new s = 0; s < 10; s++)
		{
			if( fINFO[family][FamilyGuns][s] != 0 )
			{
				GetWeaponName(fINFO[family][FamilyGuns][s], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fsarma (slot)");
		return 1;
	}
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "* Debes esperar %d segundos despues de sacar un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}
	if(slot < 1 || slot > 10) return SendClientMessageEx(playerid, COLOR_WHITE, "Ranura Inválida.");
	if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos mayores a 4 puede usar este comando.");
	if(fINFO[family][FamilyGuns][slot-1] != 0)
	{
		new weaponname[50];
		GetWeaponName(fINFO[family][FamilyGuns][slot-1], weaponname, sizeof(weaponname));
		GivePlayerValidWeapon(playerid, fINFO[family][FamilyGuns][slot-1]);
		fINFO[family][FamilyGuns][slot-1] = 0;
		if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Piltola SD de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Deagle de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un shotgun de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "spas12", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un spas12 de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un MP5 de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una AK-47 de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una M4 de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un Rifle de la caja fuerte de tu familia.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un Sniper de la caja fuerte de tu familia.");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		saveFamilies();
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un arma almacenada en esa ranura.");
	return 1;
}

CMD:cfbalance(playerid, params[])
{
	if(Info[playerid][pFMember] < 255)
	{
		if(fINFO[Info[playerid][pFMember]][FamilyUSafe] < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Está familia aún no tiene una caja fuerte.");
		}
		else
		{
			new string[128];

			new weaponsinlocker;
			for(new s = 0; s < 10; s++)
			{
				if(fINFO[Info[playerid][pFMember]][FamilyGuns][s] != 0)
				{
					weaponsinlocker++;
				}
			}
			format(string, sizeof(string), " C. Fuerte: %s | Gunlockers: %d/10 | Dinero: $%d | Hierba: %d | Crack: %d | Materiales: %d", fINFO[Info[playerid][pFMember]][FamilyName], weaponsinlocker, fINFO[Info[playerid][pFMember]][FamilyCash], fINFO[Info[playerid][pFMember]][FamilyPot], fINFO[Info[playerid][pFMember]][FamilyCrack], fINFO[Info[playerid][pFMember]][FamilyMats]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
	return 1;
}

CMD:cfdepositar(playerid, params[])
{
	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cfdepositar (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Materiales, crack, hierba");
		return 1;
	}

	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una familia.");
		return 1;
	}
	if(fINFO[family][FamilyUSafe] < 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Su familia no ha mejorado su seguridad.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2]))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
		return 1;
	}
	if(strcmp(choice,"dinero",true) == 0)
	{
		if (amount > GetPlayerCash(playerid) || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanto dinero.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyCash] += amount;
		GivePlayerCash(playerid, -amount);
		format(string, sizeof(string), "Depositaste $%d en la caja fuerte de tu familia", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s saca un poco de dinero y lo pone en la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has deposited $%d into family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"Materiales",true) == 0)
	{
		if (amount > Info[playerid][pMats] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tantos materiales.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyMats] += amount;
		Info[playerid][pMats] -= amount;
		format(string, sizeof(string), "Depositaste %d materiales en la caja fuerte de tu familia", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s sacar materiales y lo pone en la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has deposited %d materials into family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"hierba",true) == 0)
	{
		if (amount > Info[playerid][pPot] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanta hierba.");
			return 1;
		}
		if(amount < 1 || amount > 50)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar más de 50 en cada vez.");
			return 1;
		}
		if(fINFO[family][FamilyPot] >= 500)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Está caja fuerte ya está llena de hierba.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyPot] += amount;
		Info[playerid][pPot] -= amount;
		format(string, sizeof(string), "Depositaste %d gramos de hierba en la caja fuerte", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s coge un poco de hierba y lo guarda en la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of pot into family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if (amount > Info[playerid][pCrack] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanta droga.");
			return 1;
		}
		if(amount < 1 || amount > 25)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Sólo puedes depositar de 1 a 25 gramos.");
			return 1;
		}
		if(fINFO[family][FamilyCrack] >= 250)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "La caja fuerte esta muy llena de droga (250gr).");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyCrack] += amount;
		Info[playerid][pCrack] -= amount;
		format(string, sizeof(string), "Depositaste %d gramos de droga en la caja fuerte", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s coge un poco de droga y lo guarda en la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of crack into family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]);
		Log("logs/pay.log", string);
	}
	return 1;
}

CMD:cfretirar(playerid, params[])
{
	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cjretirar (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Materiales, Crack, Hierba");
		return 1;
	}

	new family;
	if(Info[playerid][pFMember] < 255)
	{
		family = Info[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}
	if(fINFO[family][FamilyUSafe] < 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Tu familia no ha mejorado su seguridad.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2]))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
		return 1;
	}
	if(Info[playerid][pRank] < 5)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos 5 y 6 pueden retirar de la caja fuerte.");
		return 1;
	}
	if(strcmp(choice,"dinero",true) == 0)
	{
		if (amount > fINFO[family][FamilyCash] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "La caja fuerte no tiene tanto dinero.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyCash] -= amount;
		GivePlayerCash(playerid, amount);
		format(string, sizeof(string), "Retiraste $%d de la caja fuerte de tu familia.", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s retira algo de dinero de la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has withdrawn $%d from family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"Materiales",true) == 0)
	{
		if (amount > fINFO[family][FamilyMats] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "La caja fuerte no tiene tantos materiales.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyMats] -= amount;
		Info[playerid][pMats] += amount;
		format(string, sizeof(string), "Retiraste %d materiales de la caja fuerte de tu familia.", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s retira algo de materiales de la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has withdrawn %d materials from family safe %d.",GetPlayerNameEx(playerid), ip,amount,Info[playerid][pFMember]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"hierba",true) == 0)
	{
		if (amount > fINFO[family][FamilyPot] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Tu familia no tiene la cantidad especificada.");
			return 1;
		}
		if(Info[playerid][pPot] > 999)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes 1 kg de hierba.");
			return 1;
		}
		new level = Info[playerid][pDrugsSkill];
		if(level >= 0 && level <= 50)
		{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes más de 10!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes más de 20!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes más de 30!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes más de 40!"); return 1; } }
		else if(level >= 401)
		{ if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes más de 50!"); return 1; } }
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyPot] -= amount;
		Info[playerid][pPot] += amount;
		format(string, sizeof(string), "Retiraste %d gramos de hierba de la caja fuerte.", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s retira unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of pot from family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if (amount > fINFO[family][FamilyCrack] || amount < 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "La caja fuerte no tiene tanta droga.");
			return 1;
		}
		if(Info[playerid][pCrack] > 25)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes 25 gramos de droga, no puedes cargar más.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		fINFO[family][FamilyCrack] -= amount;
		Info[playerid][pCrack] += amount;
		format(string, sizeof(string), "Retiraste %d gramos de droga de la caja fuerte.", amount);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s retira unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of crack from family safe %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
		Log("logs/family.log", string);
	}
	return 1;
}
CMD:ajustar(playerid, params[])
{
	if(Info[playerid][pFMember] == 255)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}
	new string[128];
	new family = Info[playerid][pFMember];
	if(Info[playerid][pRank] >= 5)
	{
		new choice[32], opstring[100];
		if(sscanf(params, "s[32]S[100]", choice, opstring))
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /ajustar (name)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Available Names: Nombre, MOTD, Seguro[Caja Fuerte], Invitar, Despedir");
			return 1;
		}

		if(strcmp(choice,"nombre",true) == 0)
		{
			if(Info[playerid][pRank] == 6)
			{
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustar nombre (Nombre de la familia)");
					return 1;
				}
				if(strfind(opstring, "|", true) != -1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE,  "No puedes usar '|' en el nombre de la familia.");
					return 1;
				}
				if(strlen(opstring) >= 40 )
				{
					SendClientMessageEx( playerid, COLOR_WHITE, "Ese nombre de la familia es demasiado largo, por favor utilices más de 40 caracteres." );
					return 1;
				}
				strmid(fINFO[family][FamilyName], opstring, 0, strlen(opstring), 100);
				saveFamilies();
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el nombre de la familia.");
				format(string, sizeof(string), "%s adjusted family %d's name to %s", GetPlayerNameEx(playerid), family+1, opstring);
				Log("logs/family.log", string);
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos 6 (lideres) pueden usar este comando.");
		}
		else if(strcmp(choice,"motd",true) == 0)
		{
			if(!opstring[0])
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustar MOTD (Mensaje)");
				return 1;
			}
			if(strfind(opstring, "|", true) != -1)
			{
					SendClientMessageEx(playerid, COLOR_WHITE,  "No puedes usar '|' en el mensaje.");
				return 1;
			}
			if(strlen(opstring) >= 60 )
			{
				SendClientMessageEx( playerid, COLOR_WHITE, "El mensaje es muy largo, por favor no uses más de 60 carácteres." );
				return 1;
			}
			strmid(fINFO[family][FamilyMOTD], opstring, 0, strlen(opstring), 100);
			saveFamilies();
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el mensaje de la familia.");
			format(string, sizeof(string), "%s adjusted family %d's MOTD to %s", GetPlayerNameEx(playerid), family+1, opstring);
			Log("logs/family.log", string);
		}
		else if(strcmp(choice,"seguro",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustar seguridad de su familia restablecerá todas las estadísticas de su caja fuerte.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Si desea ajustar su caja fuerte, usa /ajustar confirmar.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Mejora de la seguridad de su de la familia tendrá un costo de 10.000 dólares.");
			return 1;
		}
		else if(strcmp(choice,"confirmar",true) == 0)
		{
			if(GetPlayerCash(playerid) < 10000)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "No tienes $10,000 para hacer esto.");
				return 1;
			}
			GivePlayerCash(playerid, -10000);
			GetPlayerPos(playerid, fINFO[family][FamilySafe][0],fINFO[family][FamilySafe][1],fINFO[family][FamilySafe][2]);
			fINFO[family][FamilyCash] = 0;
			fINFO[family][FamilyMats] = 0;
			fINFO[family][FamilyPot] = 0;
			fINFO[family][FamilyCrack] = 0;
			if(fINFO[family][FamilyUSafe]) DestroyDynamicPickup(fINFO[family][FamilyPickup]);
			fINFO[family][FamilyUSafe] = 1;
			fINFO[family][FamilyPickup] = CreateDynamicPickup(1239, 23, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2]);
			saveFamilies();
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la caja fuerte de tu familia.");
			format(string, sizeof(string), "%s adjusted family %d's safe", GetPlayerNameEx(playerid), family+1);
			Log("logs/family.log", string);
		}
		else if(strcmp(choice,"invitar",true) == 0)
		{
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustar invitar (Player/ID)");
				return 1;
			}
			new giveplayerid = ReturnUser(opstring);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (Info[giveplayerid][pFMember] == 255)
					{
						if(Info[giveplayerid][pLeader] == 0 && Info[giveplayerid][pMember] == 0)
						{
							format(string, sizeof(string), "* Invitaste a %s para que se una a '%s'.",GetPlayerNameEx(giveplayerid), fINFO[family][FamilyName]);
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s te ha invitado para que te unes a '%s'. (usa /aceptar familia)",GetPlayerNameEx(playerid), fINFO[family][FamilyName]);
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							InviteFaction[giveplayerid] = 0;
							InviteOffer[giveplayerid] = playerid;
							InviteFamily[giveplayerid] = family;
							format(string, sizeof(string), "%s invited %s to family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
							Log("logs/family.log", string);
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya se encuentra en una familia o facción.");
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya se encuentra en una familia o facción.");
					}
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "ID o Nombre de jugador inválido.");
				return 1;
			}
		}
		else if(strcmp(choice,"despedir",true) == 0)
		{
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustar despedir (ID/PLAYER)");
				return 1;
			}
			new giveplayerid = ReturnUser(opstring);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(Info[giveplayerid][pFMember] != family)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está en tu familia.");
						return 1;
					}
					if(Info[giveplayerid][pRank] > Info[playerid][pRank])
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No puedes despedir a rangos mayores.");
						return 1;
					}
					format(string, sizeof(string), "* Despediste a %s de tu familia.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Lider %s te ha despedido de la familia en la que estabas.",GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					Info[giveplayerid][pFMember] = 255;
					Info[giveplayerid][pRank] = 0;
					fINFO[family][FamilyMembers] --;
					saveFamilies();
					format(string, sizeof(string), "%s uninvited %s from family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
					Log("logs/family.log", string);
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Nombre inválido.");
				return 1;
			}
		}
		else if(strcmp(choice,"rango",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Por favor usa /ajustarrango en lugar de /ajustar rango.");
		}
		else if(strcmp(choice,"nombrerango",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Por favor usa /anombrerango en lugar de /ajustar nombrerango.");
		}
	}
	return 1;
}

CMD:ajustarrango(playerid, params[])
{
	if(Info[playerid][pFMember] == 255)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}
	new family = Info[playerid][pFMember];
	new string[128], rank, giveplayerid;
	if(sscanf(params, "dd", rank, giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustarrango (Nº Rango) (playerid)");


	if(Info[playerid][pRank] == 6)
	{
		if(rank < 1 || rank > 6) { SendClientMessageEx(playerid, COLOR_WHITE, "Rangos: 1 - 6"); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(Info[giveplayerid][pFMember] != family)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está en tu familia.");
					return 1;
				}
				if(Info[giveplayerid][pRank] > Info[playerid][pRank])
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes ajustar rangos de jugadores de mayor rango.");
					return 1;
				}
				format(string, sizeof(string), "* Has dado a %s el rango %d.",GetPlayerNameEx(giveplayerid),rank);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Lider %s te dió rango %d.",GetPlayerNameEx(playerid),rank);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				Info[giveplayerid][pRank] = rank;
				format(string, sizeof(string), "%s set %s rank to %d in family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), rank, family+1);
				Log("logs/family.log", string);
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Nombre o ID de jugador inválido.");
			return 1;
		}
	}
	else if(Info[playerid][pRank] == 5)
	{
		if(rank < 1 || rank > 5) { SendClientMessageEx(playerid, COLOR_WHITE, "Rango no puede ser inferior a 1 o superior a 5."); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(Info[giveplayerid][pFMember] != family)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está en tu familia.");
					return 1;
				}
				format(string, sizeof(string), "* Has dado a %s el rango %d.",GetPlayerNameEx(giveplayerid),rank);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* SubLider %s te dió rango %d.",GetPlayerNameEx(playerid),rank);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				Info[giveplayerid][pRank] = rank;
				format(string, sizeof(string), "%s set %s rank to %d in family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), rank, family+1);
				Log("logs/family.log", string);
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Jugador Inválido.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	return 1;
}

CMD:anombrerango(playerid, params[])
{
	if(Info[playerid][pFMember] == 255)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
		return 1;
	}
	new family = Info[playerid][pFMember];
	new string[128], rank, rankname[32];
	if(sscanf(params, "ds[32]", rank, rankname)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /anombrerango (Rango Nº 1-6) (Nombre de Rango)");

	if(Info[playerid][pRank] == 6)
	{
		if(rank < 1 || rank > 6)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Rangos : 1 - 6.");
			return 1;
		}
		if(strfind(rankname, "|", true) != -1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2,  "No puedes usar esto en los nombres de los rangos.");
			return 1;
		}
		if(strlen(rankname) >= 19 )
		{
			SendClientMessageEx( playerid, COLOR_GRAD1, "El nombre de rango es demasiado largo, por favor no utilizes más de 19 caracteres." );
			return 1;
		}
		if(rank == 1)
		{
			strmid(fINFO[family][FamilyRank1], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 1 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 2)
		{
			strmid(fINFO[family][FamilyRank2], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 2 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 3)
		{
			strmid(fINFO[family][FamilyRank3], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 3 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 4)
		{
			strmid(fINFO[family][FamilyRank4], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 4 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 5)
		{
			strmid(fINFO[family][FamilyRank5], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 5 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 6)
		{
			strmid(fINFO[family][FamilyRank6], rankname, 0, strlen(rankname), 32);
			saveFamilies();
			format(string, sizeof(string), "* Cambiaste rango 6 a %s.",rankname);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}

		format(string, sizeof(string), "%s adjusted family %d's rank %d to %s", GetPlayerNameEx(playerid), family+1, rank, rankname);
		Log("logs/family.log", string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	return 1;
}

CMD:crearfam(playerid, params[]){
	if(Info[playerid][pAdminZC] > 5 || Info[playerid][pGangModerator] == 1)	{
		new string[128], family, giveplayerid;
		if(sscanf(params, "dd", family, giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /crearfam (Slot Fam) (PlayerID)");
		if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Slot de la familia no puede ser inferior a 1 o superior a 6."); return 1; }

		if(IsPlayerConnected(giveplayerid))		{
			if(fINFO[family-1][FamilyTaken] == 1)			{
				SendClientMessageEx(playerid, COLOR_GREY, "Slot que la familia ya está en uso.");
				return 1;
			}

			format(string, sizeof(string), "* Hiciste a %s el lider de la familia número %d.",GetPlayerNameEx(giveplayerid),family);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Admin %s te hizo lider de una familia.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);

			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s",sendername);
			strmid(fINFO[family-1][FamilyLeader], string, 0, strlen(string), 24);
			fINFO[family-1][FamilyMembers] ++;
			fINFO[family-1][FamilyTaken] = 1;
			Info[giveplayerid][pFMember] = family-1;
			Info[giveplayerid][pRank] = 6;
			saveFamilies();

		}
		else		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado es inválido.");
			return 1;
		}
	}
	return 1;
}

CMD:borrarfam(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338 || Info[playerid][pGangModerator] == 1)	{
		new family;
		if(sscanf(params, "d", family)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /borrarfam (familiaid)");

		if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Familias: 1 - 6."); return 1; }
		if(fINFO[family-1][FamilyTaken] != 1)		{
			SendClientMessageEx(playerid, COLOR_GREY, "Esa familia está desocupada.");
			return 1;
		}
		ClearFamily(family-1);
		saveFamilies();
	}
	return 1;
}

CMD:crearautofam(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new string[128], family, modelid, color1, color2;
	if(sscanf(params, "dddd", family, modelid, color1, color2)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /crearautofam (ID FAM) (Modelo) (color 1) (color 2)");
    if (Info[playerid][pAdminZC] < 4 && Info[playerid][pGangModerator] != 1)
    {
    	SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
     	return 1;
    }
   	if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Familias: 1 - 6."); return 1; }
	family -= 1;
	if(fINFO[family][FamilyTaken] != 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Esa familia no está ocupada.");
		return 1;
	}
	if(color1 < 0 || color1 > 126) { SendClientMessageEx(playerid, COLOR_WHITE, "COLOR: 0 a 126."); return 1; }
	if(color2 < 0 || color2 > 126) { SendClientMessageEx(playerid, COLOR_WHITE, "COLOR: 0 a 126."); return 1; }
	if(modelid < 400 || modelid > 611) { SendClientMessageEx(playerid, COLOR_WHITE, "Vehiculos: 400 al 611."); return 1; }
	new gangvehicleid = GetGangFreeVehicleId(family);
	if(gangvehicleid == -1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Esa familia no puede tener más coches.");
	new Float:X,Float:Y,Float:Z;
 	GetPlayerPos(playerid,X,Y,Z);
  	new Float:Angle;
   	GetPlayerFacingAngle(playerid,Angle);
   	new car = CreateGangVehicle(family, gangvehicleid, modelid, X, Y, Z, Angle, color1, color2, 0);
   	if(car == INVALID_VEHICLE_ID)
	{
 		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Algo salió mal y el coche no se creó.");
	}
 	else
  	{
   		format(string, sizeof(string), " Coche creado. ID: %d.", car);
    	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	    saveFamiliesHQ();
	}
	return 1;
}

CMD:borrarautofam(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new family, vehicleid;
	if(sscanf(params, "dd", family, vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /borrarautofam (ID FAM) (VEHICLE ID)");
    if (Info[playerid][pAdminZC] < 4 && Info[playerid][pGangModerator] != 1)
    {
    	SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
     	return 1;
    }
    if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_WHITE, "Familias: 1 - 6."); return 1; }
	family -= 1;
	new gangvehicleid = GetGangVehicle(family, vehicleid);
	if(gangvehicleid == -1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Esa familia no posee ese vehiculo.");
	DestroyGangVehicle(family, gangvehicleid);
	saveFamiliesHQ();
	return 1;
}

CMD:darliderfam(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 5 || Info[playerid][pGangModerator] >= 1)
	{
		new string[128], familyid;
		if(sscanf(params, "d", familyid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darliderfam (FAM ID)");

		if(familyid < 1 || familyid > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_WHITE, "Número de familia inválida.");
		format(string, sizeof(string), "Entraste a la familia ID %d (%s).", familyid, fINFO[familyid-1][FamilyName]);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		Info[playerid][pRank] = 6;
		Info[playerid][pFMember] = familyid-1;
	}
	return 1;
}

CMD:fseguro(playerid, params[])
{
    new Float: x, Float: y, Float: z;
	new f = Info[playerid][pFMember];
	if(f == 255) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres de una familia.");
	for(new d = 0 ; d < MAX_GANG_VEHICLES; d++)
    {
		if(FVINFO[f][d][fvId] != 0) GetVehiclePos(FVINFO[f][d][fvId], x, y, z);
  		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
    	{
        	if(FVINFO[f][d][fvLock] > 0 && FVINFO[f][d][fvLocked] == 0)
         	{
          		GameTextForPlayer(playerid,"~r~Vehiculo bloqueado!",5000,6);
            	PlayerPlaySoundEx(1145, x, y, z);
             	FVINFO[f][d][fvLocked] = 1;
              	LockGangVehicle(f, FVINFO[f][d][fvId], FVINFO[f][d][fvLock]);
               	return 1;
			}
			else if(FVINFO[f][d][fvLock] > 0 && FVINFO[f][d][fvLocked] == 1)
   			{
      			GameTextForPlayer(playerid,"~g~Vehiculo desbloqueado!",5000,6);
         		PlayerPlaySoundEx(1145, x, y, z);
           		FVINFO[f][d][fvLocked] = 0;
             	UnLockGangVehicle(f, FVINFO[f][d][fvId], FVINFO[f][d][fvLock]);
              	return 1;
			}
   			SendClientMessageEx(playerid, COLOR_WHITE, " No tienes un sistema de bloqueo instalado en el vehículo.");
      		return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, " No estás cerca de ningún vehículo que tu familia posee.");
	return 1;
}

CMD:fllaves(playerid, params[])
{
	if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu necesitas ser de una familia para usar este comando.");
	new vstring[1024];
	for(new i = 0; i < MAX_GANG_VEHICLES; i++)
	{
		if(FVINFO[Info[playerid][pFMember]][i][fvId] != INVALID_VEHICLE_ID)
		{
			format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, VehicleName[FVINFO[Info[playerid][pFMember]][i][fvModelId] - 400], FVINFO[Info[playerid][pFMember]][i][fvId]);
		}
		else if(FVINFO[Info[playerid][pFMember]][i][fvImpounded] == 1) {
			format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[FVINFO[Info[playerid][pFMember]][i][fvModelId] - 400]);
		}
		else
		{
			format(vstring, sizeof(vstring), "%s\nVacío", vstring);
		}
	}
	return SafeDialogEx(playerid, GTRACKCAR, DIALOG_STYLE_LIST, "{008EC1}GPS", vstring, "Buscar", "Cancelar");
}

CMD:festacionar(playerid, params[])
{
	new string[128];

    new f = Info[playerid][pFMember];
	if(f == 255) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres de ninguna familia.");
	for(new d = 0 ; d < MAX_GANG_VEHICLES; d++)
 	{
	    if(IsPlayerInVehicle(playerid, FVINFO[f][d][fvId]))
	    {
    		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes ser el conductor.");
	        new Float:x, Float:y, Float:z, Float:angle, Float:health, vw;
	        GetVehicleHealth(FVINFO[f][d][fvId], health);
	        if(health < 800) return SendClientMessageEx(playerid, COLOR_WHITE, " El vehiculo está muy dañado para poder ser estacionado.");
	        if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
            GetVehiclePos(FVINFO[f][d][fvId], x, y, z);
           	GetVehicleZAngle(FVINFO[f][d][fvId], angle);
           	vw = GetPlayerVirtualWorld(playerid);
            SurfingCheck(GetPlayerVehicleID(playerid));
            UpdateGangVehicleParkPosition(f, d, x, y, z, angle, health, 1, vw);
  			FVINFO[f][d][fvSpawnx] = x;
			FVINFO[f][d][fvSpawny] = y;
			FVINFO[f][d][fvSpawnz] = z;
			FVINFO[f][d][fvSpawna] = angle;
			PutPlayerInVehicle(playerid, FVINFO[f][d][fvId], 0);
            format(string, sizeof(string), "* %s estaciona el vehiculo.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            saveFamiliesHQ();
            return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, " Tu necesitas estar dentro del carro de tu familia.");
	return 1;
}

CMD:fcomprarseguro(playerid, params[])
{
    if(!IsAt247(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un 24/7.");
		return 1;
	}
	if(Info[playerid][pFMember] != 255 && Info[playerid][pRank] >= 5)
	{
		SafeDialogEx(playerid, DIALOG_CDGLOCKBUY, DIALOG_STYLE_LIST, "{008EC1}24/7 - Seguros", "Alarma		$1000\nSeguro Industrial		$5000", "Comprar", "Cancelar");
	}
	else
	{
 		SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que ser de una familia y ser rango 5 para poder ponerle seguro a los coches.");
	}
	return 1;
}

CMD:comprarcasa(playerid, params[])
{
    new string[128];
    new playername[MAX_PLAYER_NAME];
    new sendername[MAX_PLAYER_NAME];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) )
		{
            if( HouseInfo[h][hOwned] == 0 )
			{
                if(Info[playerid][pLevel] < HouseInfo[h][hLevel])
				{
                    format(string, sizeof(string), "Tú necesitas ser nivel {FF0000}%d{FFFFFF} para comprar está casa.", HouseInfo[h][hLevel]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
                if(Info[playerid][pPhousekey] == INVALID_HOUSE_ID)
				{

					if(GetPlayerCash(playerid) > HouseInfo[h][hValue])
					{
						Info[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
					    LoadObjects(playerid);
						SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
						GameTextForPlayer(playerid, "~w~Bienvenido~n~Puedes salir en cualquier momento, usando /salir en este mismo lugar.", 5000, 3);
						Info[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones por tu nueva compra.");
						SendClientMessageEx(playerid, COLOR_WHITE, "Escribe {5ABAFF}/ayuda{FFFFFF} para ver los comandos disponibles.");
						SaveHouses();
						OnPlayerUpdate(playerid);
						Info[playerid][pVW] = h+6000;
						SetPlayerVirtualWorld(playerid, h+6000);
						DestroyDynamicPickup(HouseInfo[h][hPickupID]);
						HouseInfo[h][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]);
						format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nID: %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
						UpdateDynamic3DTextLabelText(HouseInfo[h][hTextID], COLOR_GREEN2, string);
						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						format(string,sizeof(string),"%s (IP: %s) has bought house ID %d for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						return 1;
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero para comprar esta casa!");
						return 1;
					}
				}
				else if(Info[playerid][pPhousekey2] == INVALID_HOUSE_ID)
				{
					if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes una casa, necesitas ser Vip Silver o superior para adquirir otra.");
					if(GetPlayerCash(playerid) > HouseInfo[h][hValue])
					{
						Info[playerid][pPhousekey2] = h;
						HouseInfo[h][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
					    LoadObjects(playerid);
						SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
						GameTextForPlayer(playerid, "~w~Bienvenido~n~Puedes salir en cualquier momento, usando /salir en este mismo lugar.", 5000, 3);
						Info[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones por tu nueva compra.");
						SendClientMessageEx(playerid, COLOR_WHITE, "Escribe {5ABAFF}/ayuda{FFFFFF} para ver los comandos disponibles.");
						SaveHouses();
						OnPlayerUpdate(playerid);
						Info[playerid][pVW] = h+6000;
						SetPlayerVirtualWorld(playerid, h+6000);
						DestroyDynamicPickup(HouseInfo[h][hPickupID]);
						HouseInfo[h][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]);
						format(string, sizeof(string), "Dueño\n%s\nNivel: %d\nID: %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
						UpdateDynamic3DTextLabelText(HouseInfo[h][hTextID], COLOR_GREEN2, string);
						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						format(string,sizeof(string),"%s (IP: %s) has bought house ID %d for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						return 1;
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes dinero para comprar esta casa.");
						return 1;
					}
				}
            }
            else
			{
                SendClientMessageEx( playerid, COLOR_WHITE, "Está casa ya tiene dueño." );
            }
        }
    }
    return 1;
}

CMD:rentar(playerid, params[])
{
    new string[128];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) && HouseInfo[h][hRentFee] >= 1)
		{
            if( ! strcmp( HouseInfo[h][hOwner], "Nobody", true ) )
			{
                SendClientMessageEx( playerid, COLOR_WHITE, "No se puede alquilar una casa sin dueño." );
            }
            else
			{
                if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
				{
                    SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes una casa, escribe {5ABAFF}/ponercasaenventa{FFFFFF} si quieres alquilar esta.");
                    return 1;
                }
                if(Info[playerid][pRenting] != INVALID_HOUSE_ID)
                {
                    SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes una casa en renta, escribe {5ABAFF}/desrentar{FFFFFF} si quieres dejar de rentar en la actual.");
                    return 1;
                }
                if(GetPlayerCash(playerid) > HouseInfo[h][hRentFee])
				{
                    if( HouseInfo[h][hRentable] == 0 )
					{
                        SendClientMessageEx(playerid, COLOR_WHITE, "Está casa no está en renta, lo sentimos.");
                        return 1;
                    }
                    else
					{
                        Info[playerid][pRenting] = h;
                        GivePlayerCash(playerid,-HouseInfo[h][hRentFee]);
                        HouseInfo[h][hSafeMoney] = HouseInfo[h][hSafeMoney]+HouseInfo[h][hRentFee];
                        SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
					    LoadObjects(playerid);
                        SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
                        GameTextForPlayer(playerid, "~w~Bienvenido a Casa", 5000, 3);
                        Info[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
                        Info[playerid][pVW] = 6000+h;
                        SetPlayerVirtualWorld(playerid, h+6000);
                        SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones. Puedes salir en cualquier momento por este mismo lugar, escribiendo /salir.");
                        SendClientMessageEx(playerid, COLOR_WHITE, "Escribe {5ABAFF}/ayuda{FFFFFF} para ver los comandos disponibles.");
                        OnPlayerUpdate(playerid);
                        new ip[32];
                        GetPlayerIp(playerid,ip,sizeof(ip));
                        format(string,sizeof(string),"%s (IP: %s) has rented house ID %d (owned by %s) for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hOwner],HouseInfo[h][hRentFee]);
                        Log("logs/house.log", string);
                        return 1;
                    }
                }
                else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes dinero para comprar esta casa!");
                    return 1;
                }
            }
        }
    }
    return 1;
}

CMD:desrentar(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Es usted el propietario esta casa.");
        return 1;
    }
    if( Info[playerid][pRenting] != INVALID_HOUSE_ID )
	{
        Info[playerid][pRenting] = INVALID_HOUSE_ID;
        SendClientMessageEx(playerid, COLOR_WHITE, "Quedaste sin casa.");
    }
    return 1;
}

CMD:timbre(playerid, params[])
{
	for(new h; h < sizeof(HouseInfo); h++) if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ])) {

		new
			string[75 + MAX_PLAYER_NAME];

			foreach(Player, i) if(GetPlayerVirtualWorld(i) == h + 6000 && GetPlayerInterior(i) == HouseInfo[h][hHInteriorWorld]) {
			format(string,sizeof(string),"Timbre de %s suena.", HouseInfo[h][hOwner]);
			SendClientMessageEx(i,COLOR_PURPLE,string);
			GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Timbre...", 4000,3);
		}
		format(string,sizeof(string),"* %s presiona un botón al lado de la puerta y toca el timbre de la casa de %s.",GetPlayerNameEx(playerid), HouseInfo[h][hOwner]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:vendermicasa(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if((Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0))
    {
        new string[128], giveplayerid, price;
        if(sscanf(params, "dd", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vendermicasa (player) (precio)");
        if(price < 1) return SendClientMessageEx(playerid, COLOR_GREY, "Precio debe ser mayor a 0.");
        if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado en el servidor.");
        if(Info[giveplayerid][pPhousekey2] != INVALID_HOUSE_ID && Info[giveplayerid][pPhousekey] != INVALID_HOUSE_ID)
        {
            SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya tiene 2 casas.");
            return 1;
        }
        if(Info[giveplayerid][pLevel] >= HouseInfo[Info[playerid][pPhousekey]][hLevel])
        {
                if (ProxDetectorS(8.0, playerid, giveplayerid))
                {
                    HouseOffer[giveplayerid] = playerid;
                    HousePrice[giveplayerid] = price;
                    House[giveplayerid] = 1;
                    format(string, sizeof(string), "* Ofreciste tu casa a %s por $%d.", GetPlayerNameEx(giveplayerid), price);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* %s te ha ofrecido su casa por $%d. (usa /aceptar casa para comprarla)", GetPlayerNameEx(playerid), price);
                    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
                    return 1;
                 }
                 else
                 {
                     SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
                  }
}
else
{
SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene el nivel requerido para tener esta casa.");
}
}
return 1;
}
CMD:vendermicasa2(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
 	if((Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0))
{
new string[128], giveplayerid, price;
if(sscanf(params, "dd", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vendermicasa2 (player) (precio)");
if(price < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Precio debe ser mayor a 0.");
if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado en el servidor.");
if(Info[giveplayerid][pPhousekey] != INVALID_HOUSE_ID && Info[giveplayerid][pPhousekey2] != INVALID_HOUSE_ID)
{
SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya tiene 2 casas.");
return 1;
}
if(Info[giveplayerid][pLevel] >= HouseInfo[Info[playerid][pPhousekey2]][hLevel])
{
if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[Info[playerid][pPhousekey2]][hExteriorX],HouseInfo[Info[playerid][pPhousekey2]][hExteriorY],HouseInfo[Info[playerid][pPhousekey2]][hExteriorZ]))
{
if (ProxDetectorS(8.0, playerid, giveplayerid))
{
HouseOffer[giveplayerid] = playerid;
HousePrice[giveplayerid] = price;
House[giveplayerid] = 2;
format(string, sizeof(string), "* Ofreciste tu casa a %s por $%d.", GetPlayerNameEx(giveplayerid), price);
SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
format(string, sizeof(string), "* %s te ha ofrecido su casa por $%d. (usa /aceptar casa para comprarla)", GetPlayerNameEx(playerid), price);
SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
return 1;
}
else
{
SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
return 1;
}
}
else
{
SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar cerca de tu casa.");
return 1;
}
}
else
{
SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene el nivel requerido para tener esta casa.");
return 1;
}
}
return 1;
}

CMD:cdepositar(playerid, params[])
{
	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cdepositar (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Crack, Materiales, Hierba");
		return 1;
	}

	if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000 )
	{
		if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID)
		{
		 if(strcmp(choice, "Materiales", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de un material.");
					return 1;
				}
				if( Info[playerid][pMats] >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey]][hMaterials]+=amount;
					Info[playerid][pMats] -= amount;
					format(string, sizeof(string), "Depositaste {008EC1}$%d{FFFFFF} materiales en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d materials into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes materiales para depositar.");
				}
			}
			else if(strcmp(choice, "hierba", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de un gramo de hierba.");
					return 1;
				}
				if( Info[playerid][pPot] >= amount )
				{
					if(amount + HouseInfo[Info[playerid][pPhousekey]][hPot] > 100000)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "  Tu casa ya tiene demasiada hierba guardada.");
						return 1;
					}
					HouseInfo[Info[playerid][pPhousekey]][hPot]+=amount;
					Info[playerid][pPot] -= amount;
					format(string, sizeof(string), "Depositaste {008EC1}$%d{FFFFFF} gramos de hierba en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of pot into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa cantidad para depositar.");
				}
			}
			else if(strcmp(choice, "crack", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de uno.");
					return 1;
				}
				if( Info[playerid][pCrack] >= amount )
				{
					if(amount + HouseInfo[Info[playerid][pPhousekey]][hCrack] > 100000)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "La caja fuerte de la casa ya está llena de droga! (100000)");
						return 1;
					}
					HouseInfo[Info[playerid][pPhousekey]][hCrack]+=amount;
					Info[playerid][pCrack] -= amount;
					format(string, sizeof(string), "Depositaste {008EC1}$%d{FFFFFF} gramos de droga en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of crack into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes drogas para depositar.");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cdepositar (nombre) (monto)");
				SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Crack, Materiales");
			}
		}
	}
	else if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey2]+6000 )
	{
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID)
		{
			if(strcmp(choice, "dinero", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de un dolar.");
					return 1;
				}
				if( GetPlayerCash(playerid) >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey2]][hSafeMoney]+=amount;
					GivePlayerCash(playerid, -amount);
					format(string, sizeof(string), "Depositaste $%d en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited $%d into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficiente dinero para depositar.");
			}
			else if(strcmp(choice, "Materiales", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de un material.");
					return 1;
				}
				if( Info[playerid][pMats] >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey2]][hMaterials] += amount;
					Info[playerid][pMats] -= amount;
					format(string, sizeof(string), "Depositaste %d materiales en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d materials into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes materiales para depositar.");
			}
			else if(strcmp(choice, "crack", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes depositar menos de uno.");
					return 1;
				}
				if( Info[playerid][pCrack] >= amount )
				{
					if(amount + HouseInfo[Info[playerid][pPhousekey2]][hCrack] > 100000)
					{
						SendClientMessageEx(playerid, COLOR_GRAD2, "  La caja fuerte de la casa ya está llena de droga! (100000)");
						return 1;
					}
					HouseInfo[Info[playerid][pPhousekey2]][hCrack]+=amount;
					Info[playerid][pCrack] -= amount;
					format(string, sizeof(string), "Depositaste %d gramos de droga en tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of crack into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes drogas para depositar.");
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cdepositar [nombre] [monto]");
				SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Droga, Materiales");
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en ninguna casa.");
	return 1;
}

CMD:cajaestado(playerid, params[])
{
	if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000 )
	{
		if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID)
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++)
			{
				if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0)
				{
					weaponsinlocker++;
				}
			}
			new string[256];
			format(string, sizeof(string), "{FFFFFF}Gunlocker(s): {5ABAFF}%d/%d{FFFFFF} | Dinero: {5ABAFF}$%d{FFFFFF} | Drogas: {5ABAFF}%d{FFFFFF} | Hierba: {5ABAFF}%d{FFFFFF} | Materiales: {5ABAFF}%d", weaponsinlocker,HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade], HouseInfo[Info[playerid][pPhousekey]][hSafeMoney], HouseInfo[Info[playerid][pPhousekey]][hCrack], HouseInfo[Info[playerid][pPhousekey]][hPot], HouseInfo[Info[playerid][pPhousekey]][hMaterials]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}

	else if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey2]+6000 )
	{
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID)
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++)
			{
				if(HouseInfo[Info[playerid][pPhousekey2]][hWeapons][s] != 0)
				{
					weaponsinlocker++;
				}
			}
			new string[256];
			format(string, sizeof(string), "{FFFFFF}Gunlocker(s): {5ABAFF}%d/%d{FFFFFF} | Dinero: {5ABAFF}$%d{FFFFFF} | Drogas: {5ABAFF}%d{FFFFFF} | Hierba: {5ABAFF}%d{FFFFFF} | Materiales: {5ABAFF}%d", weaponsinlocker,HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade], HouseInfo[Info[playerid][pPhousekey2]][hSafeMoney], HouseInfo[Info[playerid][pPhousekey2]][hCrack], HouseInfo[Info[playerid][pPhousekey2]][hPot], HouseInfo[Info[playerid][pPhousekey2]][hMaterials]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}

	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás dentro de tu casa.");
	}
	return 1;
}

CMD:garma(playerid, params[])
{
    if(manubrio[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes guardar este arma mientras la estas dando.");
	if(GetPVarInt(playerid, "IsInArena") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer eso en la Arena.");
		return 1;
	}
	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /garma (arma) (slot)");

	if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000 )
	{
		if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID)
		{
			if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "   Debes esperar {FF0000}%d{FFFFFF} segundo despues de haber guardado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
			}

			new maxslots = HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Slot Inválido.");
				return 1;
			}

			if( HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1] != 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes un arma en esa ranura.");
				return 1;
			}

			new weapon;
			if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][2] == 23)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Pistola SD en tu armario.");
					weapon = Info[playerid][pWeapons][2];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][2] == 24)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Desert Deagle en tu armario.");
					weapon = Info[playerid][pWeapons][2];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "9mm", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][2] == 22)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una 9mm en tu armario.");
					weapon = Info[playerid][pWeapons][2];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][3] == 25)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Shotgun en tu armario.");
					weapon = Info[playerid][pWeapons][3];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][3] == 27)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Combat Shotgun en tu armario.");
					weapon = Info[playerid][pWeapons][3];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 29)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una MP5 en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][5] == 30)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una AK-47 en tu armario.");
					weapon = Info[playerid][pWeapons][5];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "Uzi", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][5] == 28)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Uzi en tu armario.");
					weapon = Info[playerid][pWeapons][5];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][5] == 31)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una M4 en tu armario.");
					weapon = Info[playerid][pWeapons][5];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][6] == 33)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un rifle en tu armario.");
					weapon = Info[playerid][pWeapons][6];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][6] == 34)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Sniper en tu armario.");
					weapon = Info[playerid][pWeapons][6];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "uzi", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 28)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una uzi en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "tec9", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 29)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Tec9 en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			if(weapon == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma.");
			if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1] == 0)
			{
				HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1] = weapon;
				RemovePlayerWeapon(playerid, weapon);
				SaveHouses();
				return 1;
			}
			else { SendClientMessageEx(playerid,COLOR_WHITE,"Nombre Inválido."); return 1; }
		}
	}

	else if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey2]+6000 )
	{
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID)
		{
			if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "Debes esperar {FF0000}%d{FFFFFF} segundos después de haber guardado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
			}
			new maxslots = HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Slot Inválido.");
				return 1;
			}

			if( HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1] != 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienes un arma almacenada en ese espacio ya.");
				return 1;
			}

			new weapon;
			if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][2] == 23)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Pistola SD en tu armario.");
					weapon = Info[playerid][pWeapons][2];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][2] == 24)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Desert Deagle en tu armario.");
					weapon = Info[playerid][pWeapons][2];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][3] == 25)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Shotgun en tu armario.");
					weapon = Info[playerid][pWeapons][3];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][3] == 27)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Combat Shotgun en tu armario.");
					weapon = Info[playerid][pWeapons][3];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 29)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una MP5 en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][5] == 30)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una AK-47 en tu armario.");
					weapon = Info[playerid][pWeapons][5];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][5] == 31)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una M4 en tu armario.");
					weapon = Info[playerid][pWeapons][5];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][6] == 33)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un rifle en tu armario.");
					weapon = Info[playerid][pWeapons][6];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][6] == 34)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste un Sniper en tu armario.");
					weapon = Info[playerid][pWeapons][6];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "uzi", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 28)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una uzi en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "tec9", true, strlen(weaponchoice)) == 0)
			{
				if( Info[playerid][pWeapons][4] == 29)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Depositaste una Tec9 en tu armario.");
					weapon = Info[playerid][pWeapons][4];
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			if(weapon == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma.");
			if(HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1] == 0)
			{
				HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1] = weapon;
				RemovePlayerWeapon(playerid, weapon);
				SaveHouses();
				return 1;
			}
			else { SendClientMessageEx(playerid,COLOR_WHITE,"Nombre de arma inválida."); return 1; }
		}
	}

	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una casa.");
	}
	return 1;
}

CMD:sarma(playerid, params[])
{
	new string[128], slot;

	if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000 )
	{
		if(Info[playerid][pPhousekey])
		{
			if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto, tienes restricción de armas.");

			if(sscanf(params, "d", slot))
			{
				new weaponname[50];
				SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
				format(string, sizeof(string), "*** %s Armario ***", GetPlayerNameEx(playerid));
		   		SendClientMessageEx(playerid, COLOR_WHITE, string);
				for(new s = 0; s < 5; s++)
				{
					if( HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0 )
					{
						GetWeaponName(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
					}
				}
				SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sarma (slot)");
				return 1;
			}

			if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "Debes de esperar {FF0000}%d{FFFFFF} segundos después de haber retirado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
			}
			new maxslots = HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Slot Inválido.");
				return 1;
			}
			if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1] != 0)
			{
				new weaponname[50];
				GetWeaponName(HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1], weaponname, sizeof(weaponname));
				GivePlayerValidWeapon(playerid, HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1]);
				HouseInfo[Info[playerid][pPhousekey]][hWeapons][slot-1] = 0;
				if(strcmp(weaponname, "pistolsd", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Pistola SD de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "desert", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Desert Eagle.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una escopeta de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Combat Shotgun de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una MP5 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una AK-47 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una M4 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un rifle de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "sniper", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un Rifle Sniper de tu armario de armas.");
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(strcmp(weaponname, "micro smg", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una UZI de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "tec9", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una UZI de de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				SaveHouses();
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa arma en ese slot.");
				return 1;
			}
		}
	}
	else if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey2]+6000 )
	{
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID)
		{
			if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes restricción de armas.");

			if(sscanf(params, "d", slot))
			{
				new weaponname[50];
				SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
				format(string, sizeof(string), "*** %s - Armario***", GetPlayerNameEx(playerid));
		   		SendClientMessageEx(playerid, COLOR_WHITE, string);
				for(new s = 0; s < 5; s++)
				{
					if( HouseInfo[Info[playerid][pPhousekey2]][hWeapons][s] != 0 )
					{
						GetWeaponName(HouseInfo[Info[playerid][pPhousekey2]][hWeapons][s], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
					}
				}
				SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sarma (slot)");
				return 1;
			}

			if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "Debes de esperar {FF0000}%d{FFFFFF} segundos después de haber cogido un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessageEx(playerid,COLOR_WHITE,string);
				return 1;
			}
			new maxslots = HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Slot Inválido.");
				return 1;
			}
			if(HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1] != 0)
			{
				new weaponname[50];
				GetWeaponName(HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1], weaponname, sizeof(weaponname));
				GivePlayerValidWeapon(playerid, HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1]);
				HouseInfo[Info[playerid][pPhousekey2]][hWeapons][slot-1] = 0;
				if(strcmp(weaponname, "pistolsd", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Pistola SD de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "desert", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Desert Eagle.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una escopeta de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "spas12", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una Combat Shotgun de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una MP5 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una AK-47 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una M4 de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un rifle de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "sniper", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste un Rifle Sniper de tu armario de armas.");
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(strcmp(weaponname, "micro smg", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una UZI de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "tec9", true, strlen(weaponname)) == 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Retiraste una UZI de de tu armario de armas.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				SaveHouses();
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un arma en ese espacio.");
				return 1;
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una casa.");
	}
	return 1;
}

CMD:cretirar(playerid, params[])
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	new string[128], amount, choice[32];

	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cretirar (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Crack, Materiales, Hierba");
		return 1;
	}
	if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000 )
	{
		if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(strcmp(choice, "Dinero", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de un dólar.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]-=amount;
					GivePlayerCash(playerid, amount);
					format(string, sizeof(string), "Retiraste $%d de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn $%d from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficiente dinero para retirar.");
				}
			}
			else if(strcmp(choice, "Materiales", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de un material.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey]][hMaterials] >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey]][hMaterials]-=amount;
					Info[playerid][pMats] += amount;
					format(string, sizeof(string), "Retiraste %d materiales de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d materials from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes materiales para retirar.");
				}
			}
			else if(strcmp(choice, "hierba", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de 1.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey]][hPot] >= amount)
				{
					if(Info[playerid][pPot] > 999)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes 1 kg de hierba.");
						return 1;
					}
					new level = Info[playerid][pDrugsSkill];
					if(level >= 0 && level <= 50)
					{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 10 con tu habilidad!"); return 1; } }
					else if(level >= 51 && level <= 100)
					{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 20 con tu habilidad!"); return 1; } }
					else if(level >= 101 && level <= 200)
					{ if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 30 con tu habilidad!"); return 1; } }
					else if(level >= 201 && level <= 400)
					{ if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 40 con tu habilidad!"); return 1; } }
					else if(level >= 401)
					{ if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 50 con tu habilidad!"); return 1; } }
					HouseInfo[Info[playerid][pPhousekey]][hPot]-=amount;
					Info[playerid][pPot] += amount;
					format(string, sizeof(string), "Retiraste %d gramos de hierba de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of pot from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa cantidad para retirar.");
				}
			}
			else if(strcmp(choice, "crack", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de un dólar.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey]][hCrack] >= amount )
				{
					if(Info[playerid][pCrack] > 25)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes 25 gramos de droga, no puedes cargar más.");
						return 1;
					}
					HouseInfo[Info[playerid][pPhousekey]][hCrack]-=amount;
					Info[playerid][pCrack] += amount;
					format(string, sizeof(string), "Retiraste %d gramos de droga de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of crack from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficiente droga para retirar.");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cretirar (nombre) (monto)");
				SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Droga, Materiales");
			}
		}
	}
	else if( GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey2]+6000 )
	{
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey2]][hOwner], true) == 0)
		{
			if(strcmp(choice, "Dinero", true, strlen(choice)) == 0)
			{
				if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de un dolar.");
				if( HouseInfo[Info[playerid][pPhousekey2]][hSafeMoney] >= amount)
				{
					HouseInfo[Info[playerid][pPhousekey2]][hSafeMoney]-=amount;
					GivePlayerCash(playerid, amount);
					format(string, sizeof(string), "Retiraste $%d de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn $%d from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanto dinero para retirar.");
				}
			}
			else if(strcmp(choice, "Materiales", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de un material.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey2]][hMaterials] >= amount )
				{
					HouseInfo[Info[playerid][pPhousekey2]][hMaterials]-=amount;
					Info[playerid][pMats] += amount;
					format(string, sizeof(string), "Retiraste %d materiales de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d materials from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes materiales para retirar.");
				}
			}
			else if(strcmp(choice, "hierba", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de 1.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey2]][hPot] >= amount)
				{
					if(Info[playerid][pPot] > 999)
					{
						SendClientMessageEx(playerid, COLOR_GRAD2, "Ya tienes 1 Kg de hierba.");
						return 1;
					}
					new level = Info[playerid][pDrugsSkill];
					if(level >= 0 && level <= 50)
					{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 10 con tu habilidad!"); return 1; } }
					else if(level >= 51 && level <= 100)
					{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 20 con tu habilidad!"); return 1; } }
					else if(level >= 101 && level <= 200)
					{ if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 30 con tu habilidad!"); return 1; } }
					else if(level >= 201 && level <= 400)
					{ if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 40 con tu habilidad!"); return 1; } }
					else if(level >= 401)
					{ if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar más de 50 con tu habilidad!"); return 1; } }
					HouseInfo[Info[playerid][pPhousekey2]][hPot]-=amount;
					Info[playerid][pPot] += amount;
					format(string, sizeof(string), "Retiraste %d gramos de hierba de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of pot from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes esa cantidad para retirar.");
				}
			}
			else if(strcmp(choice, "crack", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes retirar menos de uno.");
					return 1;
				}
				if( HouseInfo[Info[playerid][pPhousekey2]][hCrack] >= amount )
				{
					if(Info[playerid][pCrack] > 25)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Tienes 25 gramos de droga.");
						return 1;
					}
					HouseInfo[Info[playerid][pPhousekey2]][hCrack]-=amount;
					Info[playerid][pCrack] += amount;
					format(string, sizeof(string), "Retiraste %d gramos de droga de tu casa.", amount);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SaveHouses();
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of crack from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pPhousekey2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficiente droga para retirar.");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /cretirar (Nombre) (Monto)");
				SendClientMessageEx(playerid, COLOR_GRAD2, "NOMBRES: Dinero, Droga, Materiales");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una casa.");
		return 1;
	}
	return 1;
}

CMD:staffvcasa(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 4000)
	{
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));

		new string[128], house;
		if(sscanf(params, "d", house)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /staffvcasa (houseid)");

		HouseInfo[house][hLock] = 1;
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"Administrator %s (IP: %s) has admin-sold house ID %d (was owned by %s).",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hOwner]);
		Log("logs/house.log", string);
		ClearHouse(house);
		format( HouseInfo[house][hOwner], 128, "Nobody" );
		HouseInfo[house][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Vendiste la Casa Numero %d.", house);
		GameTextForPlayer(playerid, string, 10000, 3);
		SaveHouses();
		DestroyDynamicPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[house][hValue],HouseInfo[house][hLevel]);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando");
	}
	return 1;
}

CMD:vendercasa2(playerid, params[])
{
    new string[128];
	new house2 = Info[playerid][pPhousekey2];
    if(house2 == INVALID_HOUSE_ID)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres dueño de una casa.");
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house2][hExteriorX],HouseInfo[house2][hExteriorY],HouseInfo[house2][hExteriorZ]))
	{
		ClearHouse(house2);
		HouseInfo[house2][hLock] = 1;
		format( HouseInfo[house2][hOwner], 128, "Nobody" );
		GivePlayerCash(playerid,HouseInfo[house2][hValue]);
		HouseInfo[house2][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Felicitaciones~n~ Vendiste tu casa por ~n~~g~$%d", HouseInfo[house2][hValue]);
		GameTextForPlayer(playerid, string, 4000, 3);
		Info[playerid][pPhousekey2] = INVALID_HOUSE_ID;
		if(Info[playerid][pVW] == house2+6000)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[house2][hExteriorX],HouseInfo[house2][hExteriorY],HouseInfo[house2][hExteriorZ]);
			Info[playerid][pInt] = 0;
			Info[playerid][pPhousekey2] = INVALID_HOUSE_ID;
		}
		SaveHouses();
		OnPlayerUpdate(playerid);
		DestroyDynamicPickup(HouseInfo[house2][hPickupID]);
		HouseInfo[house2][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[house2][hExteriorX], HouseInfo[house2][hExteriorY], HouseInfo[house2][hExteriorZ]);
		DestroyDynamic3DTextLabel(HouseInfo[house2][hTextID]);
		format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[house2][hValue],HouseInfo[house2][hLevel]);
		HouseInfo[house2][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house2][hExteriorX], HouseInfo[house2][hExteriorY], HouseInfo[house2][hExteriorZ]+0.5,10.0);
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has sold their house (ID %d) for $%d.",GetPlayerNameEx(playerid),ip,house2,HouseInfo[house2][hValue]);
		Log("logs/house.log", string);
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar cerca su casa (exterior) para venderla.");
	}
 return 1;
}

CMD:vendercasa(playerid, params[])
{
	new string[128];
	new house = Info[playerid][pPhousekey];
	if(house == INVALID_HOUSE_ID)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres dueño de una casa.");
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]))
	{
		ClearHouse(house);
		HouseInfo[house][hLock] = 1;
		format( HouseInfo[house][hOwner], 128, "Nobody" );
		GivePlayerCash(playerid,HouseInfo[house][hValue]);
		HouseInfo[house][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Felicitaciones~n~ Vendiste tu casa por ~n~~g~$%d", HouseInfo[house][hValue]);
		GameTextForPlayer(playerid, string, 4000, 3);
		Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
		GuardarmuebleUserCASA(playerid, house);
		if(Info[playerid][pVW] == house+6000)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]);
			Info[playerid][pInt] = 0;
			Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
		}

		SaveHouses();
		OnPlayerUpdate(playerid);
		DestroyDynamicPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[house][hValue],HouseInfo[house][hLevel]);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has sold their house (ID %d) for $%d.",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hValue]);
		Log("logs/house.log", string);
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar cerca su casa (exterior) para venderla.");
	return 1;
}

CMD:goinhouse(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 4000)
	{
		new housenum;
		if(sscanf(params, "d", housenum)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /goinhouse (housenumber)");

		SetPlayerInterior(playerid,HouseInfo[housenum][hHInteriorWorld]);
		if(HouseInfo[housenum][hCustomInterior] == 1)
		{
		    LoadObjects(playerid);
		}
		SetPlayerPos(playerid,HouseInfo[housenum][hInteriorX],HouseInfo[housenum][hInteriorY],HouseInfo[housenum][hInteriorZ]);
		GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
		Info[playerid][pInt] = HouseInfo[housenum][hHInteriorWorld];
	}
	return 1;
}

CMD:gotohouse(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 4000)
	{
		new housenum;
		if(sscanf(params, "d", housenum)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /gotohouse [housenumber]");

		SetPlayerPos(playerid,HouseInfo[housenum][hExteriorX],HouseInfo[housenum][hExteriorY],HouseInfo[housenum][hExteriorZ]);
		GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
		SetPlayerInterior(playerid, 0);
		Info[playerid][pInt] = 0;
	}
	return 1;
}

CMD:preciorenta(playerid, params[])
{
	new string[128], fee;
	if(sscanf(params, "d", fee)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /preciorenta (valor)");

	if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ])))
	{
		if(!(1 <= fee <= 10000))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Renta minima es $1, maxima es $10,000.");
		}
		else
		{

			HouseInfo[Info[playerid][pPhousekey]][hRentFee] = fee;
			format(string, sizeof(string), "Rentaste tu casa a $%i.", HouseInfo[Info[playerid][pPhousekey]][hRentFee]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			if(HouseInfo[Info[playerid][pPhousekey]][hRentable]) format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel],HouseInfo[Info[playerid][pPhousekey]][hRentFee]);
			else format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], COLOR_GREEN2, string);
		}
	}
	else if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hExteriorX], HouseInfo[Info[playerid][pPhousekey2]][hExteriorY], HouseInfo[Info[playerid][pPhousekey2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hInteriorX], HouseInfo[Info[playerid][pPhousekey2]][hInteriorY], HouseInfo[Info[playerid][pPhousekey2]][hInteriorZ])))
	{

		if(!(1 <= fee <= 10000))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Renta minima es $1, maxima es $10,000.");
		}
		else {

			HouseInfo[Info[playerid][pPhousekey2]][hRentFee] = fee;
			format(string, sizeof(string), "Rentaste tu casa a $%i.", HouseInfo[Info[playerid][pPhousekey2]][hRentFee]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);

			if(HouseInfo[Info[playerid][pPhousekey2]][hRentable]) format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[Info[playerid][pPhousekey2]][hOwner],HouseInfo[Info[playerid][pPhousekey2]][hLevel],HouseInfo[Info[playerid][pPhousekey2]][hRentFee]);
			else format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[Info[playerid][pPhousekey2]][hOwner],HouseInfo[Info[playerid][pPhousekey2]][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey2]][hTextID], COLOR_GREEN2, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no es dueño de una casa, o no estás en una de ellas.");
	return 1;
}

CMD:ponerrenta(playerid, params[])
{
	if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))) {

		new
			szMessage[128];

		if(!HouseInfo[Info[playerid][pPhousekey]][hRentable])
		{
			HouseInfo[Info[playerid][pPhousekey]][hRentable] = 1;
			format(szMessage, sizeof(szMessage), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel],HouseInfo[Info[playerid][pPhousekey]][hRentFee]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], COLOR_GREEN2, szMessage);
			SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ahora está en renta.");
		}
		else {
			HouseInfo[Info[playerid][pPhousekey]][hRentable] = 0;
			format(szMessage, sizeof(szMessage), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], COLOR_GREEN2, szMessage);
			SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ya no está en renta." );
		}
	}
	else if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hExteriorX], HouseInfo[Info[playerid][pPhousekey2]][hExteriorY], HouseInfo[Info[playerid][pPhousekey2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hInteriorX], HouseInfo[Info[playerid][pPhousekey2]][hInteriorY], HouseInfo[Info[playerid][pPhousekey2]][hInteriorZ]))) {
		new
			szMessage[128];

		if(!HouseInfo[Info[playerid][pPhousekey2]][hRentable]) {
			HouseInfo[Info[playerid][pPhousekey2]][hRentable] = 1;
			format(szMessage, sizeof(szMessage), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[Info[playerid][pPhousekey2]][hOwner],HouseInfo[Info[playerid][pPhousekey2]][hLevel],HouseInfo[Info[playerid][pPhousekey2]][hRentFee]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey2]][hTextID], COLOR_GREEN2, szMessage);
			SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ahora está en renta.");
		}
		else {
			HouseInfo[Info[playerid][pPhousekey2]][hRentable] = 0;
			format(szMessage, sizeof(szMessage), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[Info[playerid][pPhousekey2]][hOwner],HouseInfo[Info[playerid][pPhousekey2]][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey2]][hTextID], COLOR_GREEN2, szMessage);
			SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ya no está en renta." );
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres dueño de una casa, o no está en uno de ellas.");
	return 1;
}
/*CMD:idcasa(playerid, params[])
{
    for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
		    new string[8];
			format(string, sizeof(string), "ID de la casa: {FFFFFF}%d", i);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
		}
		else Message(playerid, COLOR_GRAD2, "No estás cerca de una casa.");
	}
	return 1;
}*/
CMD:editar(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 4000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres administrador.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editar (nombre) (valor)");
		SendClientMessageEx(playerid, COLOR_GREY,  "Nombres: Nivel, Precio");
		return 1;
	}

	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
			format(string, sizeof(string), "Casa: %d", i);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			if(amount > 0)
			{
				if(strcmp(choice,"Nivel",true) == 0)
				{
					HouseInfo[i][hLevel] = amount;
				}
				else if(strcmp(choice,"Precio",true) == 0)
				{
					HouseInfo[i][hValue] = amount;
				}
			}
			if(HouseInfo[i][hOwned] ==0)
			{
				format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[i][hValue],HouseInfo[i][hLevel]);
				UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
			}
			else
			{
				if(HouseInfo[i][hRentable] == 0)
				{
					format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[i][hOwner],HouseInfo[i][hLevel]);
					UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
				}
				else
				{
					format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[i][hOwner],HouseInfo[i][hLevel],HouseInfo[i][hRentFee]);
					UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
				}
			}
		}
	}
	return 1;
}

CMD:casasiguiente(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] >= 4000)
	{
		SendClientMessageEx(playerid, COLOR_RED, "* Lista de casa disponible siguiente.");
		for(new x;x<MAX_HOUSES;x++)
		{
		    if(HouseInfo[x][hExteriorX] == 0.0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d está casa está disponible para usarla", x);
		        SendClientMessageEx(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado!");
	return 1;
}

CMD:hname(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 4000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}

	new string[128], houseid, ownername[24];
	if(sscanf(params, "ds[24]", houseid, ownername)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /hname (houseid) (Nombre)");

	format(HouseInfo[houseid][hOwner], 24, "%s", ownername);
	format(string, sizeof(string), "Estableciste el nombre del dueño de la casa a: %s", ownername);
	HouseInfo[houseid][hOwned] = 1;
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
	HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
	format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel]);
	UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
	format(string, sizeof(string), "%s has edited HouseID %d's Owner to %s.", GetPlayerNameEx(playerid), houseid, ownername);
	Log("logs/hedit.log", string);
	return 1;
}

CMD:editarcasa(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 4000) return SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
	new string[128], choice[32], houseid, amount;
	if(sscanf(params, "s[32]dD", choice, houseid, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarcasa (Nombre) (houseid) [(Opcional)Codigo]");
		SendClientMessageEx(playerid, COLOR_GREY, "Available names: Exterior, Interior, CustomInterior, Clase (1-3), Nivel, Precio");
		return 1;
	}

	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos(playerid, HouseInfo[houseid][hInteriorX], HouseInfo[houseid][hInteriorY], HouseInfo[houseid][hInteriorZ]);
		GetPlayerFacingAngle(playerid, HouseInfo[houseid][hInteriorA]);
		HouseInfo[houseid][hHInteriorWorld] = GetPlayerInterior( playerid );
		SendClientMessageEx( playerid, COLOR_WHITE, "Cambiaste el interior de la casa!" );
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Interior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomInterior] == 0)
		{
			HouseInfo[houseid][hCustomInterior] = 1;
			SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Interior Personalizado! (1)" );
		}
		else
		{
			HouseInfo[houseid][hCustomInterior] = 0;
			SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Interior Normal! (0)" );
		}
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Custom Interior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomExterior] == 0)
		{
			HouseInfo[houseid][hCustomExterior] = 1;
			SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Exterior Personalizado! (1)" );
		}
		else
		{
			HouseInfo[houseid][hCustomExterior] = 0;
			SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Exterior Normal! (0)" );
		}
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Custom Exterior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos(playerid, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
		GetPlayerFacingAngle(playerid, HouseInfo[houseid][hExteriorA]);
		SendClientMessageEx( playerid, COLOR_WHITE, "Cambiaste el exterior de la casa!" );
		DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Exterior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
			DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
			format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel]);
			HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
			HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
		}
		else
		{
			if(HouseInfo[houseid][hRentable] == 0)
			{
				DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
				DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
				format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel]);
				HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_GREEN2,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
				HouseInfo[houseid][hPickupID] = CreateDynamicPickup(12723, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
			}
			else
			{
				DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
				DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
				format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],HouseInfo[houseid][hRentFee]);
				HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_GREEN2,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
				HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
			}
		}
	}
	else if(strcmp(choice, "nivel", true) == 0)
	{
		HouseInfo[houseid][hLevel] = amount;
		format(string, sizeof(string), "Editaste el nivel a %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
		}
		else
		{
			if(HouseInfo[houseid][hRentable] == 0)
			{
				format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel]);
				UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
			}
			else
			{
				format(string, sizeof(string), "{DA0000}Propiedad Privada\n{FFFFFF}Dueño: %s\nNivel: %d\nRenta: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],HouseInfo[houseid][hRentFee]);
				UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
			}
		}
		format(string, sizeof(string), "%s has edited HouseID %d's Level to %d.", GetPlayerNameEx(playerid), houseid, amount);
		Log("logs/hedit.log", string);
	}
	else if(strcmp(choice, "precio", true) == 0)
	{
		HouseInfo[houseid][hValue] = amount;
		format(string, sizeof(string), "Editaste el precio a $%d.", amount );
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel]);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
		}
		format(string, sizeof(string), "%s has edited HouseID %d's Price to $%d.", GetPlayerNameEx(playerid), amount);
		Log("logs/hedit.log", string);
	}
	SaveHouses();
	return 1;
}

CMD:cseguro(playerid, params[])
{
	if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ])))
	{

		new
			szMessage[30 + MAX_PLAYER_NAME];

		if(HouseInfo[Info[playerid][pPhousekey]][hLock] == 1)
		{
			HouseInfo[Info[playerid][pPhousekey]][hLock] = 0;
			format(szMessage, sizeof(szMessage), "* %s ha abierto su casa.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			HouseInfo[Info[playerid][pPhousekey]][hLock] = 1;
			format(szMessage, sizeof(szMessage), "* %s ha cerrado su casa.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hExteriorX], HouseInfo[Info[playerid][pPhousekey2]][hExteriorY], HouseInfo[Info[playerid][pPhousekey2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey2]][hInteriorX], HouseInfo[Info[playerid][pPhousekey2]][hInteriorY], HouseInfo[Info[playerid][pPhousekey2]][hInteriorZ])))
	{

		new
			szMessage[30 + MAX_PLAYER_NAME];

		if(HouseInfo[Info[playerid][pPhousekey2]][hLock] == 1)
		{
			HouseInfo[Info[playerid][pPhousekey2]][hLock] = 0;
			format(szMessage, sizeof(szMessage), "* %s ha abierto su casa.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			HouseInfo[Info[playerid][pPhousekey2]][hLock] = 1;
			format(szMessage, sizeof(szMessage), "* %s ha cerrado su casa.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una casa o no estás cerca de la puerta para hacer esto.");
	return 1;
}

CMD:licenciataxi(playerid, params[])
{
    if(Info[playerid][pJob] != 8 && Info[playerid][pJob2] != 8)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "No eres taxista.");
	}
    if(Info[playerid][pTaxiLicense] != 0)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "¿Para que necesitas otra?, ya tienes una.");
	}
	if(!PlayerToPoint(10.0,playerid,1752.5104,-1903.1664,13.5631))
	{
	    return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");
	}
	if(GetPlayerCash(playerid) < 2000)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes para pagar está licencia.");
	}
	GivePlayerCash(playerid,-2000);
	Info[playerid][pTaxiLicense] = 1;
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Adquiriste la licencia de servicios de taxista ahora puedes trabajar con tu coche.");
	SendClientMessageEx(playerid, COLOR_WHITE, "Ya no es necesario usar coches de Unity.");
	return 1;
}
CMD:uniforme(playerid, params[])
{
	if (Info[playerid][pJob] != 4 && Info[playerid][pJob2] != 4)
	{
		SendClientMessageEx(playerid,COLOR_WHITE,"No eres repartidor de Pizza.");
		return 1;
	}
	if(GetPVarInt(playerid, "Pizza") > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Usted está repartiendo pizzas, no puedes quitarte tú uniforme.");
		return 1;
	}
	if (!IsPlayerInRangeOfPoint(playerid, 3.0, 2103.9744,-1803.7089,13.5547)) return Message(playerid, COLOR_GRAD2, "No estás en el sitio adecuado");
	if(Info[playerid][pUniformeP] == 0)
	{
		SetPlayerSkin(playerid, 155);
		Info[playerid][pUniformeP] = 1;
		Message(playerid, COLOR_LIGHTBLUE, "Te has vestido con tu uniforme de Pizzero, para sacártelo usa /uniforme");
	}
	else
	{
	    Info[playerid][pUniformeP] = 0;
		SetPlayerSkin(playerid, Info[playerid][pChar]);
		Message(playerid, COLOR_LIGHTBLUE, "Te has quitado el uniforme de Pizzero");
	}
	return 1;
}
CMD:tomarpizza(playerid, params[])
{
	if (Info[playerid][pJob] != 4 && Info[playerid][pJob2] != 4)
	{
		SendClientMessageEx(playerid,COLOR_WHITE,"No eres repartidor de Pizza.");
		return 1;
	}
	if(Info[playerid][pUniformeP] == 0) return Message(playerid, COLOR_GRAD2, "No tienes tú uniforme puesto");
    new vehicleid = GetPlayerVehicleID(playerid);
    if(!(IsAPizzabike(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
	    SendClientMessageEx(playerid,COLOR_WHITE,"Tu necesitas estár en una motocicleta de repartidor de pizza.");
	    return 1;
	}
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if (!IsPlayerInRangeOfPoint(playerid, 3.0, 2098.6919,-1789.5027,13.5547) || IsPlayerInRangeOfPoint(playerid, 3.0, -2346.1243,-136.8405,35.1734))
	{
		SendClientMessageEx(playerid,COLOR_WHITE,"No estás en el lugar adecuado.");
		return 1;
	}
	if(GetPVarInt(playerid, "Pizza") > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Usted ya está entregando pizzas.");
		return 1;
	}

	new rand = random(MAX_HOUSES);
	if(rand == 100)
	{
	   	rand = 1;
	}
	SetPVarInt(playerid, "tpPizzaTimer", floatround((GetPizzaDistance(rand) / 100), floatround_round));
	SetPVarInt(playerid, "pizzaTotal", floatround((GetPizzaDistance(rand) / 10), floatround_round));
	SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTotal"));
 	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
 	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
	new szMessage[128];
	format(szMessage, sizeof(szMessage), "Has cogido una pizza. Tienes {FF0000}%d{FFFFFF} segundos antes de que se enfríe", /*HouseInfo[rand][hOwner],*/ GetPVarInt(playerid, "pizzaTotal"));
	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	SetPVarInt(playerid, "Pizza", rand);
 	PizzaBar[playerid] = CreateProgressBar(500.00, 107.00, 104.50, 1.50, -32513, 100.0);
	SetProgressBarValue(PizzaBar[playerid], 100.0);
	ShowProgressBarForPlayer(playerid, PizzaBar[playerid]);
	SetPlayerCheckpoint(playerid, HouseInfo[rand][hExteriorX], HouseInfo[rand][hExteriorY], HouseInfo[rand][hExteriorZ], 5);
	return 1;
}
CMD:casilleroem(playerid, params[])
{
	if(Team_SAEM(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,10.0,332.2786,2345.7732,8905.4180))//Saem Duty
		{
			SafeDialogEx(playerid, NGMENU, DIALOG_STYLE_LIST, "{008EC1}EUEM Menu","Servicio Reglamentario\nUniformes\nArmas\nChaleco Antibalas\nBotiquín\nAccessorios\nParacaídas", "Select", "Cancel");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes ver los casilleros de EUEM.");
		}
	}
	return 1;
}

zcmd(respawntodo, playerid, params[])
{
   if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás conectado.");
	if(Info[playerid][pAdminZC] >= 3)
	{
		new bool:unwanted[MAX_VEHICLES];
		for(new player=0; player<MAX_PLAYERS; player++)
		{
			if(IsPlayerInAnyVehicle(player))
			{
				unwanted[GetPlayerVehicleID(player)]=true;
			}
		}
		for(new car = 0; car < MAX_VEHICLES; car++)
		{
			if(!unwanted[car]) SetVehicleToRespawn(car);
			SetVehicleParamsEx(car,0,0,0,0,0,0,0);
			arr_Engine{car} = 0;
		}
		new string[128];
		format(string, sizeof(string), "[AdmCmdExe]: Respawn total realizado por %s.",GetPlayerNameEx(playerid));
		return ABroadCast(COLOR_GENERAL, string, 3);
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	return 1;
}

CMD:reparartodo(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(IsPlayerConnected(playerid)) {
        if(Info[playerid][pAdminZC] < 4) {
            SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
            return 1;
        }
        for(new v = 0; v < MAX_VEHICLES; v++)
		{
            RepairVehicle(v);
        	SetVehicleHealth(v, 1000.0);
        }
        SendClientMessageEx(playerid, COLOR_GREEN, "Todos los vehiculos reparados.");
    }
    return 1;
}

CMD:vendercosecha(playerid, params[])
{
    if(PlayerToPoint(2.0,playerid,-382.1567,-1438.8259,25.7266))
    {
   	if(Info[playerid][pJob] == 9 || Info[playerid][pJob2] == 9)
   	{
   	    if(Info[playerid][pCosecha] > 1)
   	    {
   	        new string[48];
			format(string, sizeof(string), "Vendiste %d Kg de cosecha y sumaste {A2DC35}$%i{FFFFFF} a tu bolsillo", Info[playerid][pCosecha], Info[playerid][pCosecha]*10);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			GivePlayerCash(playerid, Info[playerid][pCosecha]*10);
			Info[playerid][pCosecha] = 0;
			return 1;
   	    }
   	    else
   	    {
   	        SendClientMessageEx(playerid, COLOR_WHITE, "Lo mínimo para vender es 1 Kg.");
   	        return 1;
   	    }
   	}
   	}
   	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres Granjero.");
   	return 1;
}

CMD:limpiarcamion(playerid, params[])
{
	if(!IsACop(playerid))
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
        return 1;
	}
	new carid = GetPlayerVehicleID(playerid);
 	new closestcar = GetClosestCar(playerid, carid);
  	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
	{
		new truckcontents = TruckContents[closestcar];
		if(truckcontents < 11)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No hay artículos ilegales en el camión.");
			return 1;
		}
		new string[128];

		new truckcontentname[50];

		if(truckcontents >= 11 && truckcontents <= 15)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Armas Ilegales"); }
		else if(truckcontents >= 16 && truckcontents <= 20)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Drogas Ilegales"); }
		else if(truckcontents >= 21 && truckcontents <= 25)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Materiales Ilegales"); }

 		foreach(Player, i)
		{
  			if(TruckUsed[i] == closestcar)
     		{
    			DestroyProgressBar(LoadTruckBar[i]);
				LoadTruckBar[i] = INVALID_BAR_ID;
				LoadTruckTime[i] = 0;
				DeletePVar(i, "TruckDeliver");
				TruckUsed[i] = INVALID_VEHICLE_ID;
				TruckContents[closestcar] = 0;
				DisablePlayerCheckpoint(i);
				gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
 				SendClientMessageEx(i, COLOR_WHITE, "Tu entrega no ha podido ser completada. Las autoridades han confiscado los productos ilegales.");
       		}
		}
		format(string, sizeof(string), "Removiste las %s del camión.", truckcontentname);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "* %s ha tomado los puntos ilegales de los camiones.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
   	else
	{
 		SendClientMessageEx(playerid, COLOR_WHITE, "No está cerca de un camión.");
 	}
    return 1;
}

CMD:robarcamion(playerid, params[])
{
	if(Info[playerid][pJob] == 6 || Info[playerid][pJob2] == 6)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid))
	    {
     		if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_NONE || GetPVarInt(playerid, "Packages") == 0 || TaxiAccepted[playerid] == 999 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
	        {
         		if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "En este momento está cargando tu camión!");
					return 1;
	            }
	            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Estás en otra entrega, usa /cancelar camion para cancelar la entrega.");
					return 1;
	            }
				if(TruckContents[vehicleid] == 0)
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Este camión no tiene nada de mercancía.");
				    return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 65, -1572.767822, 81.137527, 3.554687))
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes robar camiones estando cerca de Ocean Docks.");
					return 1;
				}
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Estás tratando de robar el camión, por favor espere.");

				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "IsFrozen", 1);

 				LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
				SetProgressBarValue(LoadTruckBar[playerid], 100.0);
				ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
				SetTimerEx("HijackTruck", 1000, 0, "dd", playerid);
	        }
	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor asegúrate de que los otros checkpoints no esten activos.");
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás manejando un camión.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres camionero.");
	return 1;
}

function HijackTruck(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
	LoadTruckTime[playerid]--;
	SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
	if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("HijackTruck", 1000, 0, "d", playerid);

	if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
	{
		DeletePVar(playerid, "IsFrozen");
		TogglePlayerControllable(playerid, 1);
  		DestroyProgressBar(LoadTruckBar[playerid]);
    	LoadTruckBar[playerid] = INVALID_BAR_ID;

        if(!IsPlayerInVehicle(playerid, vehicleid))
        {
       		DestroyProgressBar(LoadTruckBar[playerid]);
			LoadTruckBar[playerid] = INVALID_BAR_ID;
			LoadTruckTime[playerid] = 0;
			DeletePVar(playerid, "TruckDeliver");
			TruckUsed[playerid] = INVALID_VEHICLE_ID;
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 			DisablePlayerCheckpoint(playerid);
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* No pudiste robar el camión.");
			return 1;
        }


		foreach(Player, i)
		{
  			if(TruckUsed[i] == vehicleid)
  			{
				DestroyProgressBar(LoadTruckBar[i]);
				LoadTruckBar[i] = INVALID_BAR_ID;
				LoadTruckTime[i] = 0;
				DeletePVar(i, "TruckDeliver");
				TruckUsed[i] = INVALID_VEHICLE_ID;
				DisablePlayerCheckpoint(i);
				gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
 				SendClientMessageEx(i, COLOR_WHITE, "Su entrega de camionero ha fallado, le han robado el camión.");
			}
		}

  		new truckdeliver = TruckContents[vehicleid];
  		SetPVarInt(playerid, "TruckDeliver", truckdeliver);
  		TruckUsed[playerid] = vehicleid;

		if(truckdeliver == 1)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de comida y bebidas.");
			SetPlayerCheckpoint(playerid, 1025.6554,-1362.6024,13.5649, 5);
		}
		else if(truckdeliver == 2)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de comida y bebidas.");
			SetPlayerCheckpoint(playerid, 793.0801,-1625.8910,13.3906, 5);
		}
		else if(truckdeliver == 3)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de comida y bebidas.");
			SetPlayerCheckpoint(playerid, 1197.6417,-887.7512,43.0229, 5);
		}
		else if(truckdeliver == 4)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de ropa.");
			SetPlayerCheckpoint(playerid, 2247.2351,-1661.2406,15.6749, 5);
		}
		else if(truckdeliver == 5)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de ropa.");
			SetPlayerCheckpoint(playerid, 455.2845,-1501.5569,31.0434, 5);
		}
		else if(truckdeliver == 6)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de ropa.");
			SetPlayerCheckpoint(playerid, 2112.7766,-1216.1750,23.8047, 5);
		}
		else if(truckdeliver == 7)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de materiales.");
			SetPlayerCheckpoint(playerid, 1474.4786,-1140.6188,24.0781, 5);
		}
		else if(truckdeliver == 8)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de productos del 24/7.");
			SetPlayerCheckpoint(playerid, 1331.2570,-885.2997,39.9401, 5);
		}
		else if(truckdeliver == 9)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de productos del 24/7.");
			SetPlayerCheckpoint(playerid, 1347.0487,-1752.1692,13.7886, 5);
		}
		else if(truckdeliver == 10)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de productos del 24/7.");
			SetPlayerCheckpoint(playerid, 1925.5968,-1789.5017,13.1459, 5);
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de armas ilegales.");
			SetPlayerCheckpoint(playerid, -64.5445,-1120.5356,1.0781, 5);

			new level = Info[playerid][pTruckSkill];
			if(level >= 0 && level <= 50)
			{ SetPVarInt(playerid, "TruckDeliver", 11); }
			else if(level >= 51 && level <= 100)
			{ SetPVarInt(playerid, "TruckDeliver", 12); }
			else if(level >= 101 && level <= 200)
			{ SetPVarInt(playerid, "TruckDeliver", 13); }
			else if(level >= 201 && level <= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 14); }
			else if(level >= 401)
			{ SetPVarInt(playerid, "TruckDeliver", 15); }
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de drogas.");
			SetPlayerCheckpoint(playerid, -86.3670,-1195.7297,2.1664, 5);

			new level = Info[playerid][pTruckSkill];
			if(level >= 0 && level <= 50)
			{ SetPVarInt(playerid, "TruckDeliver", 16); }
			else if(level >= 51 && level <= 100)
			{ SetPVarInt(playerid, "TruckDeliver", 17); }
			else if(level >= 101 && level <= 200)
			{ SetPVarInt(playerid, "TruckDeliver", 18); }
			else if(level >= 201 && level <= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 19); }
			else if(level >= 401)
			{ SetPVarInt(playerid, "TruckDeliver", 20); }
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Tu camión robado está lleno de materiales ilegales.");
			SetPlayerCheckpoint(playerid, -70.8884,-1549.4922,2.6172, 5);

			new level = Info[playerid][pTruckSkill];
			if(level >= 0 && level <= 50)
			{ SetPVarInt(playerid, "TruckDeliver", 21); }
			else if(level >= 51 && level <= 100)
			{ SetPVarInt(playerid, "TruckDeliver", 22); }
			else if(level >= 101 && level <= 200)
			{ SetPVarInt(playerid, "TruckDeliver", 23); }
			else if(level >= 201 && level <= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 24); }
			else if(level >= 401)
			{ SetPVarInt(playerid, "TruckDeliver", 25); }
		}

		SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Entregar la mercancía a la ubicación especificada (Ir a Checkpoint).");
		SendClientMessageEx(playerid, COLOR_REALRED, "[Advertencia]: Cuidado con los que roban camiones, pueden robarte y quedarse con tu mercancía.");
		if(truckdeliver >= 9)
		{
			SendClientMessageEx(playerid, COLOR_REALRED, "{FF8000}[INDICACION]:{FFFFFF} El camión está lleno de mercancía ilegal cuidado con los policías que te pueden quitar tu mercancía.");
		}
	}
	return 1;
}

CMD:cargarcamion(playerid, params[])
{
	if(Info[playerid][pJob] == 6 || Info[playerid][pJob2] == 6)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_NONE || GetPVarInt(playerid, "Packages") == 0 || TaxiAccepted[playerid] == 999 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
			{
	            if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "En este momento está cargando su camión!");
					return 1;
	            }
	            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ya estás en otra entrega, usa /cancelar camión para cancelar la entrega.");
					return 1;
	            }
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOADTRUCK;
	            SetPlayerCheckpoint(playerid,2208.8469,-2294.4861,14.7647, 4);
	            //GameTextForPlayer(playerid, "~w~Ve al checkpoint", 5000, 1);
	            SendClientMessageEx(playerid, -1, "{FFFFFF}Dirígite al {EB383A}CheckPoint{FFFFFF} para recoger tu mercancía, recuerda que sólo podrás hacer 10 viajes por PayDay.");
	        }
	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor, asegúrese de que su checkpoint actual esté destruido.");
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás manejando un camión.");
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "No eres camionero.");
	return 1;
}

CMD:eliminarcheckpoint(playerid, params[])
{
    DeletePVar(playerid, "TrackCar");
    DisablePlayerCheckpoint(playerid);
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 	TaxiCallTime[playerid] = 0; EMSAccepted[playerid] = 999;
 	TaxiAccepted[playerid] = 999; MedicAccepted[playerid] = 999;
 	MechanicCallTime[playerid] = 0;
	MedicCallTime[playerid] = 0;
  	SetPVarInt(playerid, "Pizza", 0);
    SendClientMessageEx(playerid,COLOR_WHITE,"{A2DC35}[INFO]:{FFFFFF} Todos los checkpoints fueron eliminados.");
	return 1;
}

function LoadMon(playerid)
{
    LoadMonTime[playerid]--;
	SetProgressBarValue(LoadMoney[playerid], GetProgressBarValue(LoadMoney[playerid])-1.0);
	UpdateProgressBar(LoadMoney[playerid], playerid);
	if(GetProgressBarValue(LoadMoney[playerid]) > 1) SetTimerEx("LoadMon", 1000, 0, "d", playerid);
	if(GetProgressBarValue(LoadMoney[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadMoney[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadMoney[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoney[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadMoney[playerid], COLOR_RED);
		UpdateProgressBar(LoadMoney[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoney[playerid]) <= 1.0)
	{
  		DestroyProgressBar(LoadMoney[playerid]);
    	LoadMoney[playerid] = INVALID_BAR_ID;
    	SetTimerEx("Tiempo", 100, false, "i", playerid);
	}
	return 1;
}

function LoadMonn(playerid)
{
    LoadMonTimee[playerid]--;
	SetProgressBarValue(LoadMoneyy[playerid], GetProgressBarValue(LoadMoneyy[playerid])-1.0);
	UpdateProgressBar(LoadMoneyy[playerid], playerid);
	if(GetProgressBarValue(LoadMoneyy[playerid]) > 1) SetTimerEx("LoadMonn", 1000, 0, "d", playerid);
	if(GetProgressBarValue(LoadMoneyy[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadMoneyy[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadMoneyy[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoneyy[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadMoneyy[playerid], COLOR_RED);
		UpdateProgressBar(LoadMoneyy[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoneyy[playerid]) <= 1.0)
	{
  		DestroyProgressBar(LoadMoneyy[playerid]);
    	LoadMoneyy[playerid] = INVALID_BAR_ID;
	}
	return 1;
}

function LoadMonnnn(playerid)
{
    LoadMonTimeeee[playerid]--;
	SetProgressBarValue(LoadMoneyyyy[playerid], GetProgressBarValue(LoadMoneyyyy[playerid])-1.0);
	UpdateProgressBar(LoadMoneyyyy[playerid], playerid);
	if(GetProgressBarValue(LoadMoneyyyy[playerid]) > 1) SetTimerEx("LoadMonnnn", 500, 0, "d", playerid);
	if(GetProgressBarValue(LoadMoneyyyy[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadMoneyyyy[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadMoneyyyy[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoneyyyy[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadMoneyyyy[playerid], COLOR_RED);
		UpdateProgressBar(LoadMoneyyyy[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadMoneyyyy[playerid]) <= 1.0)
	{

	    DisablePlayerCheckpoint(playerid);
  		DestroyProgressBar(LoadMoneyyyy[playerid]);
    	LoadMoneyyyy[playerid] = INVALID_BAR_ID;
	}
	return 1;
}

function LoadTruck(playerid)
{
	LoadTruckTime[playerid]--;
	SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
	if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("LoadTruck", 1000, 0, "d", playerid);

	if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
	{
		DeletePVar(playerid, "IsFrozen");
		TogglePlayerControllable(playerid, 1);
  		DestroyProgressBar(LoadTruckBar[playerid]);
    	LoadTruckBar[playerid] = INVALID_BAR_ID;

  		new vehicleid = GetPlayerVehicleID(playerid);
  		new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
  		TruckContents[vehicleid] = truckdeliver;
  		TruckUsed[playerid] = vehicleid;

		if(truckdeliver == 1)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se lleno de alimentos y bebidas.");
			SetPlayerCheckpoint(playerid, 1025.6554,-1362.6024,13.5649, 5);
		}
		else if(truckdeliver == 2)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se lleno de alimentos y bebidas.");
			SetPlayerCheckpoint(playerid, 793.0801,-1625.8910,13.3906, 5);
		}
		else if(truckdeliver == 3)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se lleno de alimentos y bebidas.");
			SetPlayerCheckpoint(playerid, 1197.6417,-887.7512,43.0229, 5);
		}
		else if(truckdeliver == 4)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su Camión se lleno de ropa.");
			SetPlayerCheckpoint(playerid, 2247.2351,-1661.2406,15.6749, 5);
		}
		else if(truckdeliver == 5)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su Camión se lleno de ropa.");
			SetPlayerCheckpoint(playerid, 455.2845,-1501.5569,31.0434, 5);
		}
		else if(truckdeliver == 6)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su Camión se lleno de ropa.");
			SetPlayerCheckpoint(playerid, 2112.7766,-1216.1750,23.8047, 5);
		}
		else if(truckdeliver == 7)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su Camión se lleno de Materiales.");
			SetPlayerCheckpoint(playerid, 1474.4786,-1140.6188,24.0781, 5);
		}
		else if(truckdeliver == 8)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó con artículos 24/7.");
			SetPlayerCheckpoint(playerid, 1331.2570,-885.2997,39.9401, 5);
		}
		else if(truckdeliver == 9)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó con artículos 24/7.");
			SetPlayerCheckpoint(playerid, 1347.0487,-1752.1692,13.7886, 5);
		}
		else if(truckdeliver == 10)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó con artículos 24/7.");
			SetPlayerCheckpoint(playerid, 1925.5968,-1789.5017,13.1459, 5);
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó de armas.");
			SetPlayerCheckpoint(playerid, -64.5445,-1120.5356,1.0781, 5);
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó de drogas.");
			SetPlayerCheckpoint(playerid, -86.3670,-1195.7297,2.1664, 5);
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Su camión se llenó de materiales ilegales.");
			SetPlayerCheckpoint(playerid, -70.8884,-1549.4922,2.6172, 5);
		}

		SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Entregar la mercancía a la ubicación especificada (ve al checkpoint).");
		SendClientMessageEx(playerid, COLOR_REALRED, "{FF0000}[ATENCION]:{FFFFFF} Tenga cuidado con los secuestradores de camiones, que puede robar su vehículo y salirse con la mercancía.");
		if(truckdeliver >= 11)
		{
			SendClientMessageEx(playerid, COLOR_REALRED, "{FF0000}[ATENCION 2]:{FFFFFF} Estás transportando mercancía ilegal recuerda que los policías pueden capturarte y quitarte la mercancía.");
		}
		SetPVarInt(playerid, "tpTruckRunTimer", 30);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
	}
	return 1;
}

CMD:ajustesv(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 6000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
		return 1;
	}

	new string[128], rate;
	if(sscanf(params, "d", rate)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ajustesv (rate) (1: Low) (2: Medium) (3: High)");

	if(rate > 3 || rate < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /ajustesv (rate) (1: Low) (2: Medium) (3: High)");
		return 1;
	}

	switch(rate)
	{
	case 1:
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (LOW), es recomendable usarlo cuando el contador de players está bajo 100.");
			format(string, sizeof(string), "Perfect City: %s ha cambiado el streamer rate. (Bajo 100 Players).",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL, string, 2);
			SendRconCommand("onfoot_rate 40");
			SendRconCommand("incar_rate 40");
			SendRconCommand("weapon_rate 40");
			SendRconCommand("stream_distance 300.0");
			SendRconCommand("stream_rate 1000");
			Streamer_TickRate(50);
		}
	case 2:
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (MEDIUM), es recomendable usarlo cuando el contador de players está bajo 200.");
			format(string, sizeof(string), "Perfect City: %s ha cambiado el streamer rate. (Bajo 200 Players).",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL, string, 2);
			SendRconCommand("onfoot_rate 40");
			SendRconCommand("incar_rate 40");
			SendRconCommand("weapon_rate 40");
			SendRconCommand("stream_distance 250.0");
			SendRconCommand("stream_rate 1000");
			Streamer_TickRate(75);
		}
	case 3:
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (MEDIUM), es recomendable usarlo cuando el contador de players está sobre 200.");
			format(string, sizeof(string), "Perfect City: %s ha cambiado el streamer rate. (sobre 200 Players).",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL, string, 2);
			SendRconCommand("onfoot_rate 50");
			SendRconCommand("incar_rate 50");
			SendRconCommand("weapon_rate 50");
			SendRconCommand("stream_distance 200.0");
			SendRconCommand("stream_rate 2000");
			Streamer_TickRate(100);
		}
	}
	return 1;
}

/*CMD:ta(playerid, params[])
{
 	if(IsACop(playerid) || Gobierno(playerid) && Info[playerid][pRank] == 1) //Seguridad del gobierno y policias pueden tazear
	{
 		new string[128];
        SetPlayerAttachedObject(playerid, 0, 18642, 6, 0.06, 0.01, 0.08, 180.0, 0.0, 0.0);
        HaveTaser[playerid] = 1;
		format(string, sizeof(string), "Te pusiste el tazer");
		GameTextForPlayer(playerid,string,4000,3);
		format(string, sizeof(string), "* %s saca su tazer del cinturón.",GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		for( new i; i<13; i++)
		{
		GetPlayerWeaponData(playerid, i, qArmas[playerid][i][0], qArmas[playerid][i][1]);
		}
		ResetPlayerWeapons(playerid);
	}
	return 1;
}

CMD:taoff(playerid, params[])
{
 	if(IsACop(playerid) || Gobierno(playerid) && Info[playerid][pRank] == 1) //Seguridad del gobierno y policias pueden tazear
	{
	    new string[128];
  		RemovePlayerAttachedObject(playerid, 0);
  		HaveTaser[playerid] = 0;
		format(string, sizeof(string), "Te quitaste el tazer");
		GameTextForPlayer(playerid,string,4000,3);
		format(string, sizeof(string), "* %s guarda su tazer en el cinturón.",GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		for( new i; i<13; i++)
   		{
       	GivePlayerValidWeapon(playerid, qArmas[playerid][i][0]);
   		}
	}
	return 1;
}*/
CMD:ta(playerid, params[])
{
	if(IsACop(playerid) || Gobierno(playerid) && Info[playerid][pRank] == 1)
	{
		new string[128];
		if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este comando, tienes restricción de armas!");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto en un vehiculo.");
		if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando en un evento.");
		if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando en la Arena!");
		if(PlayerCuffedTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
		if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
		if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en prisión.");
		if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto mientras estás tazeado o arrestado.");
		if(pTazer[playerid] == 0)
		{
			pTazerReplace[playerid] = Info[playerid][pWeapons][2];
			if(Info[playerid][pWeapons][2] != 0) RemovePlayerWeapon(playerid, Info[playerid][pWeapons][2]);
			format(string, sizeof(string), "* %s retiró su tazer de su cinturón táctico y lo carga a cien voltios.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 23);
			pTazer[playerid] = 1;
		}
		else
		{
			RemovePlayerWeapon(playerid, 23);
			GivePlayerValidWeapon(playerid, pTazerReplace[playerid]);
			format(string, sizeof(string), "* %s apagó su tazer y lo guarda en su cinturón táctico.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			pTazer[playerid] = 0;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No tienes un tazer!");
		return 1;
	}
	return 1;
}


CMD:vmaletero(playerid, params[]){
    new string[128];
    if (!IsACop(playerid)){
        SendClientMessageEx(playerid, COLOR_WHITE, "* No perteneces a las fuerzas de la ley.");
        return 1;
    }
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid,carid);
    if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0)){
        SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No estás cerca de ningún vehiculo.");
        return 1;
    }
    foreach(Player, i){
        new v = GetPlayerVehicle(i, closestcar);
        if(v != -1){
            string[0] = 0;
            for(new x = 0; x < 3; x++){
                if(PlayerVehicleInfo[i][v][pvWeapons][x] != 0){
                    new
                        szWep[20];

                    GetWeaponName(PlayerVehicleInfo[i][v][pvWeapons][x], szWep, sizeof(szWep));
                    if(isnull(string)) format(string, sizeof(string), "* Contenido: %s", szWep);
                    else format(string, sizeof(string), "%s, %s", string, szWep);
                }
            }
            if(!isnull(string)) SendClientMessageEx(playerid, COLOR_WHITE, string);
            else SendClientMessageEx(playerid, COLOR_WHITE, "* Contenido: Nada.");
        }
    }
    return 1;
}

CMD:tgunmaletero(playerid, params[]){
    if(!IsACop(playerid)){
        SendClientMessageEx(playerid, COLOR_WHITE, "* No perteneces a las fuerzas de la ley.");
        return 1;
    }
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid,carid);
    if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0)){
        SendClientMessageEx(playerid,COLOR_WHITE,"No estás cerca de ningún vehiculo.");
        return 1;
    }

    foreach(Player, i){
		new
			engine, lights, alarm, doors, bonnet, boot, objective, v = GetPlayerVehicle(i, closestcar);

		GetVehicleParamsEx(PlayerVehicleInfo[i][v][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
		if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET){
			return SendClientMessageEx(playerid, COLOR_GRAD3, "{FFFF00}[ERROR]:{FFFFFF} No puedes tomar armas del maletero, si está cerrado! /v para abrirlo.");
		}
        else if(v != -1){
            PlayerVehicleInfo[i][v][pvWeapons][0] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][1] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][2] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][3] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][4] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][5] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][6] = 0;
            PlayerVehicleInfo[i][v][pvWeapons][7] = 0;
        }
        SendClientMessageEx(playerid, COLOR_WHITE,  "Removiste todas las armas del maletero.");
    }
    return 1;
}

CMD:reanimar(playerid, params[])
{
    if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto si estas herido.");
    if(Info[playerid][pReanimador] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes un reanimador.");
    if(Info[playerid][pReanimador] == 1)
    {
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /reanimar (playerid)");
		if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer eso contigo mismo.");
		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "Injured") == 1)
			{
   				if (GetPVarInt(playerid, "ReanimadorTimer") > 0)
				{
					format(string, sizeof(string), "Tienes que esperar {FF0000}%d{FFFFFF} segundos después de usar el reanimador.", GetPVarInt(playerid, "ReanimadorTimer"));
					SendClientMessageEx(playerid,COLOR_WHITE,string);
					return 1;
				}
				if(ProxDetectorS(4.0, playerid, giveplayerid))
				{
			    format(string, sizeof(string), "* %s usa su kit reanimador y reanima a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
       			ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0); //anim
       			ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0); //otra por si no la hace
				format(string, sizeof(string), " Has reanimado a %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), " Fuiste reanimado por %s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, "{FF0000}INFO:{FFFFFF} Al ser reanimado, perdiste las armas");
				format(string, sizeof(string), "[ADM INFO]: %s (ID %d) usó su reanimador y reanimó a %s (ID %d)", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(giveplayerid), giveplayerid);
				ABroadCast(COLOR_ORANGE, string, 2);
				SetPVarInt(playerid, "ReanimadorTimer", 180);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_REANIMAR);
				ResetPlayerWeaponsEx(giveplayerid);
				KillEMSQueue(giveplayerid);
   				ClearAnimations(giveplayerid);
   				SetHP(giveplayerid, 100);
   				Info[playerid][pReanimador] = 0;
   				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Jugador muy lejos.");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador no está herido.");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} ID no válida.");
		}
	}
	return 1;
}
CMD:revivir(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /revivir (playerid)");
		if(IsPlayerConnected(giveplayerid)){
			if(GetPVarInt(giveplayerid, "Injured") == 1)
			{
				format(string, sizeof(string), " Has revivido a %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, "Fuiste revivido por un administrador y se te devolvio las armas.");
				KillEMSQueue(giveplayerid);
   				ClearAnimations(giveplayerid);
				format( string, sizeof( string ), "[ADMIN-CMD] El administrador %s ha revivido a %s (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), giveplayerid);
				ABroadCast( COLOR_GENERAL, string, 4 );
   				SetPlayerWeapons(giveplayerid);
   				SetHP(giveplayerid, 100);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador no está herido.");
			}
		}
	}
	else{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	}
	return 1;
}


/*CMD:comprarlicencia(playerid, params[])
{
	if (!IsPlayerInRangeOfPoint(playerid,2.0,375.99,64.65,-93.85)) { return 1; }
	if (Info[playerid][pWantedLevel] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Tienes órden de arresto, te prohibieron la adquisición de licencias.");
		return 1;
	}
	SafeDialogEx(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "{A2DC35}Selecciona el tipo de licencia que deseas.", "Licencia de Conducción ($1,200)\r\nLicencia de Navegación ($2,600)\r\nLicencia de Vuelo ($5,000)", "Comprar", "Cancelar");
	return 1;
}*/
CMD:creanimador(playerid, params[])
{
	if (!IsPlayerInRangeOfPoint(playerid,2.0,1169.2024,-1348.8594,2423.0461)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el punto adecuado.");
	if (Info[playerid][pReanimador] == 1) return Message(playerid, COLOR_WHITE, "Ya tienes un reanimador");
	if (Info[playerid][pReanimador] == 0)
	{
	    if(CheckMoney(playerid,40000))
	    {
        	Info[playerid][pReanimador] = 1;
        	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Has adquirido un reanimador, usa /ayuda reanimador.");
        	Bought(playerid, 40000);
			return 1;
		}
	}
	return 1;
}

CMD:spec(playerid, params[])
{
	if(Info[playerid][pAdminZC] < 2)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	new tmp[32];
	if(sscanf(params, "s[32]", tmp)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /spec (playerid/off)");
	if(strcmp("off", tmp, true, strlen(tmp)) == 0)
	{
		if(Spectating[playerid] > 0 && Info[playerid][pAdminZC] >= 1)
		{
			GettingSpectated[Spectate[playerid]] = 999;
			Spectating[playerid] = 0;
			Spectate[playerid] = 999;
			SetPVarInt(playerid, "SpecState", -1);
			SetPVarInt(playerid, "SpecOff", 1 );
			TogglePlayerSpectating( playerid, false );
			SetCameraBehindPlayer(playerid);
			return 1;
	     }
		if(papilla[playerid] == 1)
		{
		if (Info[playerid][pAdminZC] == 2)
		    {
    		SetPlayerColor(playerid,COLOR_ADMIN2);
    		}
    		else if (Info[playerid][pAdminZC] == 3)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN3);
    		}
			else if (Info[playerid][pAdminZC] == 4)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4);
    		}
    		else if (Info[playerid][pAdminZC] == 5)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN5);
    		}
    		else if (Info[playerid][pAdminZC] == 6)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN6);
    		}
    		else if (Info[playerid][pAdminZC] == 1338)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN1338);
    		}
    		else if (Info[playerid][pAdminZC] == 4000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4000);
    		}
    		else if (Info[playerid][pAdminZC] == 4001)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4001);
    		}
    		else if (Info[playerid][pAdminZC] == 4002)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN4002);
    		}
    		else if (Info[playerid][pAdminZC] == 5000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN5000);
    		}
    		else if (Info[playerid][pAdminZC] == 6000)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN6000);
    		}
    		else if (Info[playerid][pAdminZC] == 89648)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89648);
    		}
    		else if (Info[playerid][pAdminZC] == 89649)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89649);
    		}
    		else if (Info[playerid][pAdminZC] == 89650)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89650);
    		}
    		else if (Info[playerid][pAdminZC] == 89651)
    		{
    		SetPlayerColor(playerid,COLOR_ADMIN89651);
    		}
		return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} No puedes spectar a esta persona.");
			return 1;
		}
	}
	new giveplayerid = ReturnUser(tmp);
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(GetPVarInt(giveplayerid, "IsInArena") == 1) SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[NOTA]:{FFFFFF} Recuerda que este jugador está en el paintball, y se puede hacer MG. No existe el PG en este modo.");
			if(Spectating[playerid] == 0)
			{
				new Float: pPositions[ 3 ];
				GetPlayerPos(playerid, pPositions[ 0 ], pPositions[ 1 ], pPositions[ 2 ]);
				SetPVarFloat(playerid, "SpecPosX", pPositions[ 0 ]);
				SetPVarFloat(playerid, "SpecPosY", pPositions[ 1 ]);
				SetPVarFloat(playerid, "SpecPosZ", pPositions[ 2 ]);
				SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid));
				SetPVarInt(playerid, "SpecVW", GetPlayerVirtualWorld(playerid));

				if(IsPlayerInAnyVehicle(giveplayerid))
				{
					TogglePlayerSpectating(playerid, true);
					new carid = GetPlayerVehicleID( giveplayerid );
					PlayerSpectateVehicle( playerid, carid );
					SetPlayerInterior( playerid, GetPlayerInterior( giveplayerid ) );
					SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( giveplayerid ) );
					SetPVarInt(playerid, "SpecState", GetPlayerState(giveplayerid));
				}
				else
				{
					TogglePlayerSpectating(playerid, true);
					PlayerSpectatePlayer( playerid, giveplayerid );
					SetPlayerInterior( playerid, GetPlayerInterior( giveplayerid ) );
					SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( giveplayerid ) );
					SetPVarInt(playerid, "SpecState", GetPlayerState(giveplayerid));
				}
				GettingSpectated[giveplayerid] = playerid;
				Spectate[playerid] = giveplayerid;
				Spectating[playerid] = 1;
			}
			else
			{
				if(IsPlayerInAnyVehicle(giveplayerid))
				{
					TogglePlayerSpectating(playerid, true);
					new carid = GetPlayerVehicleID( giveplayerid );
					PlayerSpectateVehicle( playerid, carid );
					SetPlayerInterior( playerid, GetPlayerInterior( giveplayerid ) );
					SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( giveplayerid ) );
					SetPVarInt(playerid, "SpecState", GetPlayerState(giveplayerid));
				}
				else
				{
					TogglePlayerSpectating(playerid, true);
					PlayerSpectatePlayer( playerid, giveplayerid );
					SetPlayerInterior( playerid, GetPlayerInterior( giveplayerid ) );
					SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( giveplayerid ) );
					SetPVarInt(playerid, "SpecState", GetPlayerState(giveplayerid));
				}
				GettingSpectated[Spectate[playerid]] = 999;
				GettingSpectated[giveplayerid] = playerid;
				Spectate[playerid] = giveplayerid;
				Spectating[playerid] = 1;
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador está desconectado.");
	return 1;
}

CMD:liberar(playerid, params[])
{
   if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /liberar (playerid) (razón)");

		if(IsPlayerConnected(giveplayerid))
		{
			new year, month,day;
			getdate(year, month, day);
			format(string, sizeof(string), "[AdmCmd]: %s fue liberado de prisión por %s, razón: %s(%d-%d-%d)", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason, month, day, year);
			Log("logs/admin.log", string);
			format(string, sizeof(string), "[AdmCmd]: %s fue liberado de prisión por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			BroadCast(COLOR_LIGHTRED, string);
			Info[giveplayerid][pJailed] = 0;
			Info[giveplayerid][pWantedLevel] = 0;
			SetPlayerToTeamColor(giveplayerid);
			SetPlayerWantedLevel(giveplayerid, 0);
			Info[giveplayerid][pJailTime] = 0;
			Info[giveplayerid][pJailAdmin] -= 1;
			SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
			SetPlayerInterior(giveplayerid,0);
			Info[giveplayerid][pInt] = 0;
			SetPlayerVirtualWorld(giveplayerid, 0);
			Info[giveplayerid][pVW] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no conectado.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}


CMD:entrevista(playerid, params[])
{
	if(Team_LSTV(playerid))
	{
		if(TalkingLive[playerid] != INVALID_PLAYER_ID)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Entrevista terminada.");
			SendClientMessageEx(TalkingLive[playerid], COLOR_LIGHTBLUE, "* Entrevista terminada.");
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /entrevista (playerid)");
		if (IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
				if(Info[giveplayerid][pEstado] >= 1 || Info[playerid][pEstado] >= 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
				}
				else
				{
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer una entrevista a ti mismo."); return 1; }
					format(string, sizeof(string), "* Ofreciste a %s una entrevista.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s te ha ofrecido una entrevista, usa /aceptar entrevista para aceptar.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					LiveOffer[giveplayerid] = playerid;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no inválido.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres un reportero.");
	return 1;
}
CMD:radiomusica(playerid, params[])
{
	new linkv[128];
	new string[128];
    if(sscanf(params, "s[128]", linkv)) return Message(playerid, 0xFFFF00FF, "USA: /radiomusica (link)");
	if(Team_LSTV(playerid) && Info[playerid][pRank] >= 5)
	{
 		for(new i, l = GetMaxPlayers();i<l;i++) if(IsPlayerConnected(i))
        PlayAudioStreamForPlayer(i, linkv);
 		format(string, sizeof(string), "[LSRTV Live] El presentador %s ha puesto música en las radios.", GetPlayerNameEx(playerid));
		OOCNews(COLOR_NEWS2,string);
		SendClientMessageToAll(COLOR_GRAD2, "Si quieres dejar de oirla usa /stopaudio.");
	}
	else
	{
		Message(playerid, COLOR_WHITE, "No eres de LSRTV o necesitas ser mayor de rango 5.");
	}
	return 1;
}
CMD:stopaudio(playerid, params[]){
	if(IsPlayerConnected(playerid)){
	    StopAudioStreamForPlayer(playerid);
	}
	return 1;
}
CMD:nr(playerid, params[])
{
	if(Team_LSTV(playerid))
	{
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /nr (Texto)");
		new newcar = GetPlayerVehicleID(playerid);
		if(IsANewsCar(newcar) || !IsPlayerInRangeOfPoint(playerid,7.0,-2774.4280,260.1192,24.1063))
		{
			if(Info[playerid][pRank] < 1)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Usted debe ser al menos rango 1.");
			}
			else
			{
				format(string, sizeof(string), "[LSRTV Live] %s: %s", GetPlayerNameEx(playerid), params);
				OOCNews(COLOR_NEWS2,string);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "No estas en una camioneta de noticias, helicópter o en el estudio.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres reportero.");
	return 1;
}

CMD:destruircar(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new string[128];
	if(Info[playerid][pAdminZC] < 6000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
		return 1;
	}
	new bool:breakingloop = false, newid = INVALID_VEHICLE_ID;
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i=0;i<sizeof(CreatedCars);i++)
		{
			if(!breakingloop)
			{
				if(CreatedCars[i] == GetPlayerVehicleID(playerid))
				{
					breakingloop = true;
					newid = i;
				}
			}
		}
		if(newid != INVALID_VEHICLE_ID)
		{
			new carid = GetPlayerVehicleID(playerid);
			DestroyVehicle(carid);
			CreatedCars[newid] = INVALID_VEHICLE_ID;
			format(string, sizeof(string), " Coche %d destruido.", carid);
			SendClientMessageEx(playerid, COLOR_GREY, string);
		}
	}
	return 1;
}

CMD:deletecarro(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if (Info[playerid][pAdminZC] >= 6000)
	{
	    new string[128];
	    if(IsPlayerInAnyVehicle(playerid))
		{
		    new carid = GetPlayerVehicleID(playerid);
		    DestroyVehicle(carid);
			format(string, sizeof(string), " Coche %d destruido.", carid);
			SendClientMessageEx(playerid, COLOR_GREY, string);
		}
	}
	return 1;
}
zcmd(dardinero, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    	if(!sscanf(params, "di", params[0], params[1]))
		{
		    if(IsPlayerConnected(params[0]))
		    {
		        if(Info[playerid][pAdminZC] >= 5000)
		        {
		            new string[128];
		            GivePlayerCash(params[0], params[1]);
				 	format(string, sizeof(string), "{FFFF00}[AdmWarning]:{FF0000} %s dio %d de dinero a %s.", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
					ABroadCast(COLOR_ORANGE, string, 5);
					Log("logs/pagos.log", string);
					return 1;
		        }
				else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres administrador!");
		    }
			else SendClientMessageEx(playerid,  COLOR_WHITE, "ID Inválida.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dardinero (PlayerID) ($)");
		return 1;
	}
CMD:seteardinero(playerid, params[])
{
if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
   	if (Info[playerid][pAdminZC] >= 5000)
	{
		new string[128], giveplayerid, money;
		if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /seteardinero (playerid) (dinero)");

		if(IsPlayerConnected(giveplayerid))
		{
			ResetPlayerCash(giveplayerid);
			GivePlayerCash(giveplayerid, money);
			format(string, sizeof(string), "Estableciste el dinero de %s a $%d !",GetPlayerNameEx(giveplayerid),money);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s estableció el dinero de %s a $%d (/seteardinero)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid),money);
			Log("logs/stats.log", string);

		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:darestilopelea(playerid, params[])
{
	if (Info[playerid][pAdminZC] >= 5)
	{
		new string[128], giveplayerid, fightstyle;
		if(sscanf(params, "dd", giveplayerid, fightstyle))
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /darestilopelea (playerid) (estilo)");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Estilo pelea: 4, 5, 6, 7, 15, 26.");
			return 1;
		}

		if(fightstyle > 3 && fightstyle < 8 || fightstyle == 15 || fightstyle == 26)
		{
			format(string, sizeof(string), " Tu estilo de pelea ha sido cambiado al ID %d.", fightstyle);
			SendClientMessageEx(giveplayerid,COLOR_YELLOW,string);
			format(string, sizeof(string), " Cambiaste el estilo de pelea de %s a %d.", GetPlayerNameEx(giveplayerid), fightstyle);
			SendClientMessageEx(playerid,COLOR_YELLOW,string);
			SetPlayerFightingStyle(giveplayerid, fightstyle);
			Info[playerid][pFStyle] = fightstyle;
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:id(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /id [Nombre/ID]");

	if(IsPlayerConnected(giveplayerid))
	{
		format(string, sizeof(string), "(ID: %d) - (Nombre: %s) - (Nivel: %d) - (Ping: %d)", giveplayerid, GetPlayerNameEx(giveplayerid),  Info[giveplayerid][pLevel], GetPlayerPing(giveplayerid));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "ID No válida.");
	return 1;
}

CMD:venderlaser(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000 && Info[playerid][pShopTech] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
	new string[128], giveplayerid, slot, color[32], invoice[64];
	if(sscanf(params, "ddss[64]", giveplayerid, slot, color, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /venderlaser (playerid) (slot(0-9)) (red/green/orange/yellow/pink/blue) (precio)");

	if(strcmp(color,"red",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 18643;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	else if(strcmp(color,"green",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 19083;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	else if(strcmp(color,"orange",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 19082;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	else if(strcmp(color,"yellow",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 19084;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	else if(strcmp(color,"pink",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 19081;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	else if(strcmp(color,"blue",true) == 0)
	{
		PlayerToyInfo[giveplayerid][slot][ptModelID] = 19080;
		PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
		PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
		PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	}
	format(string, sizeof(string), "Recibiste un laser de color %s en el slot %d, usa /toys para verlo.", color, slot);
	SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "Le diste a %s laser de color %s en el slot %d", GetPlayerNameEx(giveplayerid), color, slot);
	SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "[SHOPLASER] %s dió %s un laser toy - Pagó fue de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
	Log("logs/shoplog.log", string);
	return 1;
}


CMD:congelar(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /congelar (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
			if(Info[giveplayerid][pAdminZC] > Info[playerid][pAdminZC]) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes congelar a un administrador de mayor nivel.");
			TogglePlayerControllable(giveplayerid, 0);
			SetPVarInt(giveplayerid, "IsFrozen", 1);
			format(string, sizeof(string), "[AdmCmdExe]: %s fue congelado por %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
			return ABroadCast(COLOR_GENERAL,string,1);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	}
	return 1;
}
CMD:tazear(playerid, params[])
{
		if(IsACop(playerid))
		{
		    new victimid = GetClosestPlayer(playerid);
			new giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /tazear (playerid)");
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
					Info[victimid][pEstado] = 1;
	                GameTextForPlayer(victimid, "~r~Has sido tazeado", 3500, 3);
                    TogglePlayerControllable(victimid, 0);
					Info[victimid][pEstado] = 1;
					SetPVarInt(victimid, "PlayerCuffed", 2);
					SetPVarInt(victimid, "IsFrozen", 1);
					PlayerCuffedTime[victimid] = 300;
					SetTimerEx("TimerGCRP",30000,false,"d",playerid);
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, " Ese jugador no está cerca tuyo");
		}
		return 1;
}

CMD:descongelar(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /descongelar (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
			DeletePVar(giveplayerid, "IsFrozen");
			TogglePlayerControllable(giveplayerid, 1);
			format(string, sizeof(string), "[AdmCmdExe]: %s fue descongelado por %s.",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL,string,1);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado ínvalido.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
	}
	return 1;
}

CMD:j(playerid, params[])
{
if((Info[playerid][pHelper] >= 1 || Info[playerid][pAdminZC] >= 2 || Info[playerid][pPublicista] == 1 || Info[playerid][pVIP] == 5) && advisorchat[playerid])
	{
		if(!isnull(params))
		{
			new
				szMessage[128];
			if(Info[playerid][pAdminZC] == 2) format(szMessage, sizeof(szMessage), "** Ayudante del Staff %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 3) format(szMessage, sizeof(szMessage), "** Moderador a Pruebas %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 4) format(szMessage, sizeof(szMessage), "** Moderador %s: %s **", GetPlayerNameEx(playerid), params);
            else if(Info[playerid][pAdminZC] == 5) format(szMessage, sizeof(szMessage), "** Moderador Superior %s: %s **", GetPlayerNameEx(playerid), params);
            else if(Info[playerid][pAdminZC] == 6) format(szMessage, sizeof(szMessage), "** Administrador %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 1338) format(szMessage, sizeof(szMessage), "** Administrador Superior %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 4001) format(szMessage, sizeof(szMessage), "** WebMaster %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 4002) format(szMessage, sizeof(szMessage), "** Sub-Dueño %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 4000) format(szMessage, sizeof(szMessage), "** Técnico %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 5000) format(szMessage, sizeof(szMessage), "** Admin Dueño %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 6000) format(szMessage, sizeof(szMessage), "** Fundador  %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 89648) format(szMessage, sizeof(szMessage), "** Fundador  %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 89649) format(szMessage, sizeof(szMessage), "** Fundador  %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 89650) format(szMessage, sizeof(szMessage), "** Fundador  %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pAdminZC] == 89651) format(szMessage, sizeof(szMessage), "** Fundadora  %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pPublicista] == 1) format(szMessage, sizeof(szMessage), "** Publicista %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pHelper] == 1) format(szMessage, sizeof(szMessage), "** Ayudante %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pHelper] == 2) format(szMessage, sizeof(szMessage), "** Lider Ayudante %s: %s **", GetPlayerNameEx(playerid), params);
			else if(Info[playerid][pVIP] == 5) format(szMessage, sizeof(szMessage), "** VIP [Moderador] %s: %s **", GetPlayerNameEx(playerid), params);
			else format(szMessage, sizeof(szMessage), "** Undefined Admin (%d) %s: %s", Info[playerid][pAdminZC], GetPlayerNameEx(playerid), params);
			SendAdvisorMessage(COLOR_COMBINEDCHAT, szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "USA: (/j) [Admin Mensaje]");
	}
	return 1;
}

CMD:toghelper(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1)
	{
		if (!advisorchat[playerid])
		{
			advisorchat[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora puede escuchar la conversación el chat de Ayudantes. Utiliza: {5ABAFF}(/j){FFFF00}.");
		}
		else
		{
			advisorchat[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ahora dejaste de ver el chat de Ayudantes.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	return 1;
}

CMD:cambiarhora(playerid, params[])
{
	if (Info[playerid][pAdminZC] >= 5)
	{
		new string[84], time;
		if(sscanf(params, "d", time)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cambiarhora [hora] (0-23)");
		SetWorldTime(time);
		gTime = time;
		format(string, 128, "[AdmCdmExe]: %s cambió la hora a %d", GetPlayerNameEx(playerid), gTime);
		ABroadCast(COLOR_GENERAL,string,5);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	}
	return 1;
}

CMD:clima(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 1338)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	new weather;
	if(sscanf(params, "d", weather)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /clima [clima id]");
	if(weather < 0||weather > 45) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[NOTA]:{FFFFFF} 0 a 45."); return 1; }
	SetPlayerWeather(playerid, weather);
	return 1;
}

CMD:climatodos(playerid, params[])
{
	if(Info[playerid][pAdminZC] < 1337)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
		return 1;
	}
	new weather, string[84];
	if(sscanf(params, "d", weather)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /climatodos (clima id)");
	if(weather < 0||weather > 45) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[NOTA]:{FFFFFF} 0 a 45."); return 1; }
	SetWeather(weather);
	gWeather = weather;
	format(string, 256, "[AdmCdmExe]: %s cambió el clima al ID %d", GetPlayerNameEx(playerid), gWeather);
	ABroadCast(COLOR_GENERAL,string,4);
	return 1;
}

CMD:gotoco(playerid, params[])
{
 	if(Info[playerid][pAdminZC] >= 4000)
	{
		new Float: pos[3], int;
		if(sscanf(params, "fffd", pos[0], pos[1], pos[2], int)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gotoco (coordenada x) (coordenada y) (coordenada z) (interior)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "{1DF5F7}Perfect City:{FFFFFF} Fuiste teletransportado a las coordenadas establecidas.");
		SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		SetPlayerInterior(playerid, int);
	}
	return 1;
}

CMD:fropa(playerid, params[]){
	new skin, family;
	if(!IsAtClothShop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una tienda de Ropa.");
    if(!sscanf(params, "d", skin))
	{
	 	if(Info[playerid][pFMember] < 255){
			family = Info[playerid][pFMember];
		}
		else{
			SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una familia.");
			return 1;
		}
		switch(skin)
		{
			case 1:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][0];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][0]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #1 de tu familia/banda.");
			}
			case 2:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][1];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][1]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #2 de tu familia/banda.");
			}
			case 3:{
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][2]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #3 de tu familia/banda.");
			}
			case 4:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][3];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][3]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #4 de tu familia/banda.");
			}
			case 5:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][4];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][4]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #5 de tu familia/banda.");
			}
			case 6:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][5];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][5]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #6 de tu familia/banda.");
			}
			case 7:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][6];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][6]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #7 de tu familia/banda.");
			}
			case 8:{
			    Info[playerid][pChar] = fINFO[family][FamilySkins][7];
			    SetPlayerSkin(playerid, fINFO[family][FamilySkins][7]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Te pusiste el skin #8 de tu familia/banda.");
			}
			default: return SendClientMessageEx(playerid, COLOR_WHITE, "Maximo Skins: 8");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /fropa (1-8)");
	}
	return 1;
}

zcmd(noev, playerid, params[]){
    new string[128],giveplayerid;
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "No estás autorizado para usar este comando.");
    if(!sscanf(params, "d", giveplayerid)){
    	if(IsPlayerConnected(giveplayerid)){
			format(string, sizeof(string), "El administrador %s ha revisado tu reporte y considera que no hay sucifiente evidencia visual para tomar", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, "la decisión correcta. Por favor, para la próxima intenta reportar al instante o tomar fotos, lo sentimos.");
			format(string, sizeof(string), "[AdmCmdExe]: %s ha enviado a %s, el mensaje de reporte sin evidencia.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,string,2);
		}else SendClientMessageEx(playerid, COLOR_WHITE, " Esa ID es inválida.");
	}else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /noev (ID)");
    return 1;
}

CMD:bar(playerid, params[]){
	if(IsACop(playerid) || Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar en el piso para usar este comando.");
		}
		if(Info[playerid][pRank] < 3){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(981, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3){
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de SAPD, FBI o EUEM"); } return 1;
}

CMD:bar2(playerid, params[]){
	if(IsACop(playerid) || Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar en el piso para usar este comando.");
		}
		if(Info[playerid][pRank] < 3){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(3091, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3){
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de SAPD, FBI o EUEM"); } return 1;
}

CMD:bar3(playerid, params[]){
	if(IsACop(playerid) || Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
		}
		if(Info[playerid][pRank] < 3){
			return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(978, Position[0], Position[1], Position[2]+0.6, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3){
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_GREY, "No eres parte de PCRP, FBI o EUEM"); } return 1;
}

CMD:bengala(playerid, params[]){
	if(IsACop(playerid) || Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar en el piso para usar este comando.");
		}
		if(Info[playerid][pRank] < 3){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(18728, Position[0], Position[1], Position[2]-2.8, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Una bengala ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3){
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP, FBI o EUEM"); } return 1;
}

CMD:cono(playerid, params[]){
	if(IsACop(playerid) || Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar en el piso para usar este comando.");
			return 1;
		}
		if(Info[playerid][pRank] < 3){
			SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 3.");
			return 1;
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(1238, Position[0], Position[1], Position[2]-0.7, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Un cono ha sido puesto por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3){
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP FBI o EUEM");} return 1;
}

CMD:qb(playerid, params[]){
	if(IsACop(playerid)|| Team_BomberosLS(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que estar en el piso para usar este comando.");
		}
		if(Info[playerid][pRank] < 3){
			return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[3];
		for(new i; i<MAX_BARRICADES; i++){
			GetDynamicObjectPos(Barricade[i], Position[0], Position[1], Position[2]);
			if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2])){
				DestroyDynamicObject(Barricade[i]);
				Barricade[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Un bloqueo a sido destruido por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás cerca de las barricadas.");
	}
	else{ SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP, FBI o EUEM"); } return 1;
}

CMD:spikes(playerid, params[])
{
	if(IsACop(playerid) || Team_BomberosLS(playerid))
	{
		if(Info[playerid][pRank] >= 3)
		{
  			SendClientMessageEx(playerid, COLOR_GREEN, "Spikes Actuales:");
			for(new i, string[58 + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] != 0)
				{
					format(string, sizeof(string), "HQ: Spike ID: %d | Localización: %s | Puesto por: %s", i, SpikeStrips[i][sDeployedAt], SpikeStrips[i][sDeployedBy]);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
				}
 			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Debes ser rango mayor a 3.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP, FBI o EUEM");
	}
	return 1;
}

CMD:pspikes(playerid, params[])
{
    if(IsACop(playerid) || Team_BomberosLS(playerid))
	{
		if(Info[playerid][pRank] >= 3)
		{
			for(new i; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] == 0)
				{
					new
						Float: f_TempAngle,
						string[128];

					GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
					GetPlayerFacingAngle(playerid, f_TempAngle);
					SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
					GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
					SpikeStrips[i][sDeployedBy] = GetPlayerNameEx(playerid);
					format(string,sizeof(string),"Spike ID: %d fue creado exitosamente.", i);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "HQ: Un spike fue puesto por %s en %s.", GetPlayerNameEx(playerid), SpikeStrips[i][sDeployedAt]);
					foreach(Player, x)
					{
						if(IsACop(x))
						{
							SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
							if (Info[x][pRank] >= 3)
							{
								SendClientMessageEx(x, COLOR_YELLOW, "Puedes remover el spike usando /qspikes.");
							}
						}
					}
					return 1;
				}
    		}
			SendClientMessageEx(playerid, COLOR_WHITE, "No es posible generar más spikes, límite es de 5." );
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, " Debes ser rango mayor a 3.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP, FBI o EUEM");
	}
	return 1;
}

CMD:qspikes(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /qspike (spikeid)");
    if(IsACop(playerid) || Team_BomberosLS(playerid))
	{
		if(Info[playerid][pRank] >= 3)
		{
			new id = strval(params);
			if(!(0 <= id <= sizeof(SpikeStrips)) || SpikeStrips[id][sX] == 0) {
				return SendClientMessageEx(playerid, COLOR_WHITE, "Spike ID Inválido.");
			}
			else
			{
				new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObject(SpikeStrips[id][sObjectID]);
				SpikeStrips[id][sX] = 0; SpikeStrips[id][sY] = 0; SpikeStrips[id][sZ] = 0;
				SpikeStrips[id][sObjectID] = INVALID_OBJECT_ID;
				format(string,sizeof(string),"Spike ID: %d borrado.", id);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Un spike a sido borrado por %s en %s.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, " Debes ser rango mayor a 3.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte de PCRP, FBI o EUEM");
	}
	return 1;
}

CMD:nuevos(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 2)
	{
   		SendClientMessageEx(playerid,COLOR_GREEN,"Lista de todos los usuarios nivel dos.");
		new
			szNoobs[14 + MAX_PLAYER_NAME];
    	foreach(Player, i) if(Info[i][pLevel] == 2)
		{
			format(szNoobs, sizeof(szNoobs), "* %s (ID %i)", GetPlayerNameEx(i), i);
			SendClientMessageEx(playerid, COLOR_WHITE, szNoobs);
		}
	}
	return 1;
}

CMD:dar(playerid, params[])
{
	new string[128], giveplayerid, choice[32], amount;
	if(sscanf(params, "ds[32]d", giveplayerid, choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /dar (playerid) (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GREY,  "* Crack, Materiales, Fichas, Chaleco, Hierba");
		return 1;
	}

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(amount < 1)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "No tienes la cantidad que pusiste.");
				return 1;
			}

			if (!ProxDetectorS(5.0, playerid, giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "El jugador no está cerca tuyo.");
				return 1;
			}

			if(giveplayerid == playerid)
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
			    return 1;
			}
			if (strcmp(choice, "materiales", true) == 0)
			{
				if(Info[playerid][pMats] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d materiales de %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					Info[giveplayerid][pMats] += amount;
					Info[playerid][pMats] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d materials.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/pay.log", string);
					if(Info[playerid][pAdminZC] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d materials.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
					}
					format(string, sizeof(string), "Le diste a %s, %d materiales.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de materiales.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanto.");
					return 1;
				}
			}
			if (strcmp(choice, "hierba", true) == 0)
			{
				if(Info[playerid][pPot] >= amount)
				{
					if(amount + Info[giveplayerid][pPot] >= 999 )
					{
						SendClientMessageEx( playerid, COLOR_WHITE, "Este jugador no puede tener más de 1 Kg de hierba." );
						return 1;
					}
					new level = Info[playerid][pDrugsSkill];
					if(level >= 0 && level <= 50)
					{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 10 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 51 && level <= 100)
					{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 20 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 101 && level <= 200)
					{ if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 30 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 201 && level <= 400)
					{ if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 40 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 401)
					{ if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 50 con tu nivel de habilidad!"); return 1; } }
					format(string, sizeof(string), "Recibiste %d de hierba de parte de %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					Info[giveplayerid][pPot] += amount;
					Info[playerid][pPot] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d pot.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/pay.log", string);
					if(Info[playerid][pAdminZC] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d pot.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
					}
					format(string, sizeof(string), "Le diste a %s, %d de hierba.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le dá a %s algo de hierba.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanto hierba.");
					return 1;
				}
			}
			if (strcmp(choice, "fichas", true) == 0)
			{
				if(Info[playerid][pPaintTokens] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d fichas de paintball de %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					Info[giveplayerid][pPaintTokens] += amount;
					Info[playerid][pPaintTokens] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d fichas de paintbal.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s unas fichas de paintball.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tantas fichas.");
					return 1;
				}
			}
			if (strcmp(choice, "crack", true) == 0)
			{
				if(Info[playerid][pCrack] >= amount)
				{
					if(amount + Info[giveplayerid][pCrack] >= 26 )
					{
						SendClientMessageEx( playerid, COLOR_WHITE, "Este jugador no puede llevar más de 25 de crack." );
						return 1;
					}
					new level = Info[playerid][pDrugsSkill];
					if(level >= 0 && level <= 50)
					{ if(amount < 1 || amount > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 5 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 51 && level <= 100)
					{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 10 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 101 && level <= 200)
					{ if(amount < 1 || amount > 15) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 15 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 201 && level <= 400)
					{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 20 con tu nivel de habilidad!"); return 1; } }
					else if(level >= 401)
					{ if(amount < 1 || amount > 25) { SendClientMessageEx(playerid, COLOR_GREY, "  Sólo se puede dar 25 máximo!"); return 1; } }
					format(string, sizeof(string), "Recibiste %d gramos de crack de %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					Info[giveplayerid][pCrack] += amount;
					Info[playerid][pCrack] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d crack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/pay.log", string);
					if(Info[playerid][pAdminZC] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d crack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
					}
					format(string, sizeof(string), "Le diste a %s, %d gramos de Crack.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de crack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No tienes tanto.");
					return 1;
				}
			}
		}
	}
	return 1;
}

CMD:recargar(playerid, params[])
{
	if(Team_Mecanicos(playerid))
	{
		new string[128];
		if(Info[playerid][pTriageTime] >= 1)
		{
			format(string, sizeof(string), "Debes esperar %d segundos.", Info[playerid][pTriageTime]);
			return SendClientMessageEx(playerid, COLOR_GRAD1,string);
		}
		new giveplayerid, money;
		if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /recargar (playerid) (precio)");
		if(!(money >= 1000 && money < 100000))
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "Precio determinado inválido, no puede ser inferior a 1,000 o superior a $ 99,999.");
		}
		if(IsPlayerConnected(giveplayerid))
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid) && IsPlayerInAnyVehicle(giveplayerid))
			{
				if(giveplayerid != playerid)
				{
					format(string, sizeof(string), "* Ofreciste %s llenar el tanque de tu coche por $%d.",GetPlayerNameEx(giveplayerid),money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s te ha ofrecido llenar tu coche por $%d, usa /aceptar recarga para aceptar.",GetPlayerNameEx(playerid),money);
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					Info[playerid][pTriageTime] = 60;
					RefillOffer[giveplayerid] = playerid;
					RefillPrice[giveplayerid] = money;
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo."); return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca de ti, o no está en un coche.");
			}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no está conectado.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres mecánico.");
	return 1;
}

CMD:fix(playerid, params[])
{
    if(Team_Mecanicos(playerid))
	{
    	new string[32 + MAX_PLAYER_NAME];
        if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando en un vehículo.");
		    return 1;
		}
  		if( Info[playerid][pTriageTime] > 0 )
		{
  			format(string, sizeof(string), "Debes esperar %d segundos.", Info[playerid][pTriageTime]);
     		SendClientMessageEx(playerid, COLOR_GRAD1,string);
     	}
		else if(GetPVarInt(playerid, "EventToken"))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando en un evento.");
		}
  		else
		{
			new closestcar = GetClosestCar(playerid);
  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 10.0))
  			{
				if(!IsABike(closestcar) && !IsAPlane(closestcar))
				{
					new engine,lights,alarm,doors,bonnet,boot,objective;
					GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
					if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Este vehículo necesita tener el capó abierto para repararlo.");
						return 1;
					}
				}
  				Info[playerid][pTriageTime] = 60;
   				SetVehicleHealth(closestcar, 1000.0);
    			format(string, sizeof(string), "* %s ha reparado el vehículo.", GetPlayerNameEx(playerid));
    			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "No estás cerca de un vehículo.");
  		}
    }
    else return SendClientMessageEx(playerid, COLOR_WHITE, "No eres un mecánico." );
    return 1;
}

CMD:adminevento(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 1338)
	{
	    SendClientMessageEx(playerid, COLOR_GREEN,"____________________________________________________________________________________________________________");
		SendClientMessageEx(playerid, COLOR_WHITE,"*** EVENTO *** Escribe uno de estos comandos para más información");
		SendClientMessageEx(playerid, COLOR_WHITE,"*** EVENTO *** /eventopos /infoevento /empezarevento /cerrarevento /finevento /anunciar /goevento /salirevento");
		SendClientMessageEx(playerid, COLOR_GREEN,"____________________________________________________________________________________________________________");
	}
	return 1;
}

CMD:eventostaff(playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if( Info[ playerid ][ pAdminZC ] >= 2){
        if(InfoEvento[EventJoinStaff] == 1){
            new bool:breakingloop = false, newid = 999;
            for(new i=0;i<5;i++){
                if(!breakingloop){
                    if(InfoEvento[EventStaff][i] == 999){
                        breakingloop = true;
                        newid = i;
                    }
                }
            }
            if(newid != 999){
                SetPVarInt( playerid, "EventToken", 1 );
                GetPlayerHealth(playerid, EventFloats[playerid][4]);
                GetPlayerArmour(playerid, EventFloats[playerid][5]);
                EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
                EventLastInt[playerid] = GetPlayerInterior(playerid);
                GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
                GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
                SetPlayerPos( playerid, InfoEvento[ EventPositionX ], InfoEvento[ EventPositionY ], InfoEvento[ EventPositionZ ] );
                SetPlayerInterior( playerid, InfoEvento[ EventInterior ] );
                SetHP( playerid, 999999 );
                SetPlayerVirtualWorld( playerid, InfoEvento[ EventWorld ] );
                InfoEvento[EventStaff][newid] = playerid;
                SendClientMessageEx( playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} Te has unido al staff del evento." );
            }
            else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes unirte, el maximo es 5 administradores.");
        }
    }
    return 1;
}

CMD:salirevento(playerid, params[])
{
    if( GetPVarInt( playerid, "EventToken" ) == 1 ) {
        if( InfoEvento[ EventStatus ] == 1 || InfoEvento[ EventStatus ] == 2 ) {
            SendClientMessageEx( playerid, COLOR_WHITE, "No se puede dejar el evento en esta etapa del acontecimiento." );
            return 1;
        }
        ResetPlayerWeapons( playerid );
        SetPVarInt(playerid, "EventToken", 0);
        SetPlayerWeapons(playerid);
        SetPlayerToTeamColor(playerid);
        SetPlayerSkin(playerid, Info[playerid][pChar]);
        SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
        SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
        SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
        SetPlayerInterior(playerid,EventLastInt[playerid]);
        SetHP(playerid, EventFloats[playerid][4]);
        SetPlayerArmour(playerid, EventFloats[playerid][5]);
        for(new i = 0; i < 6; i++) {
            EventFloats[playerid][i] = 0.0;
        }
        EventLastVW[playerid] = 0;
        EventLastInt[playerid] = 0;
        SendClientMessageEx( playerid, COLOR_LIGHTBLUE, "* Saliste del evento." );
    }
    return 1;
}

CMD:eventopos(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338){
	    if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 4){
			new string[128];
			GetPlayerPos(playerid, InfoEvento[EventPositionX], InfoEvento[EventPositionY], InfoEvento[EventPositionZ]);
			InfoEvento[EventInterior] = GetPlayerInterior(playerid);
			InfoEvento[EventWorld] = GetPlayerVirtualWorld(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Has ajustado la posición del evento, escribe /infoevento para cambiar las propiedades del evento.");
			InfoEvento[EventJoinStaff] = 1;
			format(string, sizeof( string ), "Perfect City: %s ha empezado el evento, usá /eventostaff si quieres ser del staff del evento.", GetPlayerNameEx(playerid) );
			ABroadCast(COLOR_LIGHTBLUE, string, 2);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás haciendo un evento o no eres el nivel administrativo correcto.");
	}
	return 1;
}

CMD:tipoevento(playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338){
	    if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 4){
	    	if(isnull(params)){
				SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /tipoevento (tipo)");
				SendClientMessageEx(playerid, COLOR_GREY,  "Nombres: DM, TDM, Race");
				return 1;
			}
			if(strcmp(params,"dm",true) == 0){
				InfoEvento[ EventType ] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a DM.");
			}
			else if(strcmp(params,"tdm",true) == 0){
				InfoEvento[ EventType ] = 2;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a TDM.");
			}
			else if(strcmp(params,"race",true) == 0){
				InfoEvento[ EventType ] = 3;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a Race.");
			}
			else if(strcmp(params,"ninguno",true) == 0){
				InfoEvento[ EventType ] = 3;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a Ninguno.");
			}
		}
	}
	return 1;
}

CMD:editarevento(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338){
	    if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 4){
			new choice[32], opstring[64];
			if(sscanf(params, "s[32]S[64]", choice, opstring)){
				if(InfoEvento[EventType] == 1){
					SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarevento (nombre)");
					SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, vida, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					return 1;
				}
				else if(InfoEvento[EventType] == 2){
					SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarevento (nombre)");
					SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, Team1Skin, Team2Skin, Team1Color, Team2Color");
					SendClientMessageEx(playerid, COLOR_GREY, "Team1Spawn, Team2Spawn, vida, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					return 1;
				}
				else if(InfoEvento[EventType] == 3){
					SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarevento (nombre)");
					SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, vida");
     				return 1;
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Es necesario primero establecer el tipo de evento.");
			}
			if(strcmp(choice, "text",true) == 0)
			{
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento texto (Texto)");
				strmid(InfoEvento[EventoInfo], opstring, 0, strlen(opstring), 64);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el texto de información del evento.");
			}
			else if(strcmp(choice, "vida", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1 && InfoEvento[EventType] != 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento vida (vida)");
				new Float: health;
				health = floatstr(opstring);
				InfoEvento[EventHealth] = health;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la cantidad de vida del evento.");
			}
			else if(strcmp(choice, "armor", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento armor (armor)");
				new Float: armor;
				armor = floatstr(opstring);
				InfoEvento[EventArmor] = armor;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la armadura del evento.");
			}
			else if(strcmp(choice, "team1skin", true) == 0)
			{
				if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento team1skin (skinid)");
				new skin;
				skin = strval(opstring);
				InfoEvento[EventTeamSkin][0] = skin;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el skin del equipo 1.");
			}
			else if(strcmp(choice, "team2skin", true) == 0)
			{
				if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento team2skin (skinid)");
				new skin;
				skin = strval(opstring);
				InfoEvento[EventTeamSkin][1] = skin;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el skin del equipo 2.");
			}
			else if(strcmp(choice, "team1color", true) == 0)
			{
    			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
				if(!strlen(opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarevento team1color (color)");
					SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				InfoEvento[EventTeamColor][0] = GetColorCode(opstring);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el color del equipo 1.");
			}
			else if(strcmp(choice, "team2color", true) == 0)
			{
				if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				if(!strlen(opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /editarevento team2color (color)");
					SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				InfoEvento[EventTeamColor][1] = GetColorCode(opstring);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el color del equipo 2.");
			}
			else if(strcmp(choice, "team1spawn", true) == 0)
			{
				if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				GetPlayerPos(playerid, InfoEvento[ EventTeamPosX1 ], InfoEvento[ EventTeamPosY1 ], InfoEvento[ EventTeamPosZ1 ] );
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el spawn del equipo 1.");
			}
			else if(strcmp(choice, "team2spawn", true) == 0)
			{
				if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				GetPlayerPos(playerid, InfoEvento[ EventTeamPosX2 ], InfoEvento[ EventTeamPosY2 ], InfoEvento[ EventTeamPosZ2 ]);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el spawn del equipo 2.");
			}
			else if(strcmp(choice, "limite", true) == 0)
			{
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento limite (limite 0-60)");
				new limit;
				limit = strval(opstring);
				if(limit < 0 || limit > 90) return SendClientMessageEx(playerid, COLOR_RED, "No se puede ajustar el límite de eventos superiores a 90 o por debajo de 0.");
				InfoEvento[EventLimit] = limit;
				SendClientMessageEx(playerid, COLOR_WHITE, "Usted ha ajustado el límite de los jugadores en el evento.");
			}
			else if(strcmp(choice, "gun1", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este nombre no está disponible para este tipo de evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento gun1 (weaponid)");
				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
				InfoEvento[EventWeapons][0] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [1]");
			}
			else if(strcmp(choice, "gun2", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento gun1 (weaponid)");
				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
				InfoEvento[EventWeapons][1] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [2]");
			}
			else if(strcmp(choice, "gun3", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");

				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento gun1 (weaponid)");

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
				InfoEvento[EventWeapons][2] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [3]");
			}
			else if(strcmp(choice, "gun4", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");

				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento gun1 (weaponid)");

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
				InfoEvento[EventWeapons][3] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "Modificaste el arma 4 del evento.");
			}
			else if(strcmp(choice, "gun5", true) == 0)
			{
				if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no es posible para este evento.");

				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento gun1 (weaponid)");

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer está arma para este evento.");
				InfoEvento[EventWeapons][4] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "Modificaste el gun 5 del evento.");
			}
		}
	}
	return 1;
}

CMD:esolovip(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338)
	{
		if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 4)
		{
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /esolovip [0/1]");

			if(Info[playerid][pVIP] == 5 && Info[playerid][pAdminZC] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Error: Usted no está autorizado a modificar esta opción!");

			if(strcmp(params,"0",true) == 0){
				InfoEvento[ VipOnly ] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "Has ajustado el tipo de evento no sólo para VIP´s.");
			}
			else if(strcmp(params,"1",true) == 0){
				InfoEvento[ VipOnly ] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Has ajustado el tipo de evento sólo para VIP´s.");
			}

		}
	}
	return 1;
}

CMD:infoevento(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if( Info[ playerid ][ pAdminZC ] >= 1338)
	{
		if( InfoEvento[EventCreator] == playerid || Info[playerid][pAdminZC] >= 4 )
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /editarevento /tipoevento /esolovip (una vez listo, usa /empezarevento y después /lockevento)");
			return 1;
		}
	}
	return 1;
}

CMD:finevento(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338 || InfoEvento[EventCreator] == playerid)
	{
		if(InfoEvento[EventStatus] != 0)
		{
			foreach(Player, i)
			{
				if( GetPVarInt( i, "EventToken" ) == 1 )
				{
					ResetPlayerWeapons( i );
					SetPlayerWeapons(i);
					SetPlayerToTeamColor(i);
					SetPlayerSkin(i, Info[i][pChar]);
					SetPlayerPos(i,EventFloats[i][1],EventFloats[i][2],EventFloats[i][3]);
					SetPlayerVirtualWorld(i, EventLastVW[i]);
					SetPlayerFacingAngle(i, EventFloats[i][0]);
					SetPlayerInterior(i,EventLastInt[i]);
					SetHP(i, EventFloats[i][4]);
					SetPlayerArmour(i, EventFloats[i][5]);
					for(new d = 0; d < 6; d++)
					{
						EventFloats[i][d] = 0.0;
					}
					EventLastVW[i] = 0;
					EventLastInt[i] = 0;
					SetPVarInt(i, "EventToken", 0);
					SendClientMessageEx( i, COLOR_YELLOW, "Has sido expulsado del evento ya que un administrador lo termino." );
				}
			}
			InfoEvento[ EventPositionX ] = 0;
			InfoEvento[ EventPositionY ] = 0;
			InfoEvento[ EventPositionZ ] = 0;
			InfoEvento[ EventTeamPosX1 ] = 0;
			InfoEvento[ EventTeamPosY1 ] = 0;
			InfoEvento[ EventTeamPosZ1 ] = 0;
			InfoEvento[ EventTeamPosX2 ] = 0;
			InfoEvento[ EventTeamPosY2 ] = 0;
			InfoEvento[ EventTeamPosZ2 ] = 0;
			InfoEvento[ EventStatus ] = 0;
			InfoEvento[ EventType ] = 0;
			InfoEvento[ EventHealth ] = 0;
			InfoEvento[ EventLimit ] = 0;
			InfoEvento[ EventPlayers ] = 0;
			InfoEvento[ EventWeapons ][0] = 0;
			InfoEvento[ EventWeapons ][1] = 0;
			InfoEvento[ EventWeapons ][2] = 0;
			InfoEvento[ EventWeapons ][3] = 0;
			InfoEvento[ EventWeapons ][4] = 0;
			InfoEvento[EventCreator] = 999;
			InfoEvento[VipOnly] = 0;
			InfoEvento[EventJoinStaff] = 0;
			BroadCast(COLOR_LIGHTBLUE, "* El evento ha sido terminado por un administrador." );
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "En este momento no hay un evento activo." );
		}

	}
	return 1;
}

CMD:empezarevento(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if( Info[ playerid ][ pAdminZC ] >= 1338)
	{
		new string[128];

		if( InfoEvento[ EventStatus ] == 0)
		{
			if(Info[playerid][pAdminZC] >= 4)
			{
				if(InfoEvento[ EventHealth ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "{FFFF00}[VIP]:{FFFFFF} No se ha definido la salud del evento." );
					return 1;
				}
				if(InfoEvento[ EventPositionX ] == 0 || InfoEvento[ EventPositionY ] == 0 || InfoEvento[ EventPositionZ ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "{FFFF00}[VIP]:{FFFFFF} No se ha definido la posición de evento." );
					return 1;
				}
				if( (InfoEvento[ EventTeamPosX1 ] == 0 || InfoEvento[ EventTeamPosY1 ] == 0 || InfoEvento[ EventTeamPosZ1 ] == 0) && InfoEvento[ EventType ] == 2)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "{FFFF00}[VIP]:{FFFFFF} No ha establecido la posición del equipo 1." );
					return 1;
				}
				if( (InfoEvento[ EventTeamPosX2 ] == 0 || InfoEvento[ EventTeamPosY2 ] == 0 || InfoEvento[ EventTeamPosZ2 ] == 0) && InfoEvento[ EventType ] == 2)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "{FFFF00}[VIP]:{FFFFFF} No ha establecido la posición del equipo 2." );
					return 1;
				}
				if(InfoEvento[ EventLimit ] == 0)
				{
					InfoEvento[ EventLimit ] = 90;
				}
				InfoEvento[ EventStatus ] = 1;
				SendClientMessageEx( playerid, COLOR_WHITE, "Ha iniciado un evento, utilice {5ABAFF}/anunciar{FFFFFF} para anunciar el evento a todo el servidor." );
				foreach(Player, i)
				{
					if(Info[i][pVIP] >= 3)
					{
						SendClientMessageEx(i, COLOR_YELLOW, "{FFFF00}[VIP]:{FFFFFF} Un evento a comenzado, /unirseevento para unirte.");
					}
				}

				return 1;
			}
			else if( InfoEvento[EventCreator] == playerid)
			{
				if(InfoEvento[ EventHealth ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_WHITE, "No se ha definido la salud evento." );
					return 1;
				}
				if(InfoEvento[ EventPositionX ] == 0 || InfoEvento[ EventPositionY ] == 0 || InfoEvento[ EventPositionZ ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_WHITE, "No se ha definido la posición de evento." );
					return 1;
				}
				if(InfoEvento[ EventLimit ] == 0)
				{
					InfoEvento[ EventLimit ] = 90;
				}
				InfoEvento[ EventStartRequest ] = 1;
				SendClientMessageEx( playerid, COLOR_WHITE, "Ha solicitado para comenzar un evento, por favor espere hasta que un administrador lo apruebe." );
				format( string, sizeof( string ), "Event Position: x:%f y:%f z:%f.", InfoEvento[EventPositionX], InfoEvento[EventPositionY], InfoEvento[EventPositionZ] );
				ABroadCast( COLOR_GRAD2, string, 4 );
				format( string, sizeof( string ), "Event Info: %s EventLimite: %d.", InfoEvento[EventoInfo], InfoEvento[EventLimit] );
				ABroadCast( COLOR_GRAD2, string, 4 );
				format( string, sizeof( string ), "Event Health: %f Event Armor: %f.", InfoEvento[EventHealth], InfoEvento[EventArmor] );
				ABroadCast( COLOR_GRAD2, string, 4 );
				if(InfoEvento[EventWeapons][0] != 0)
				{
					format( string, sizeof( string ), "Event Gun1: %d.", InfoEvento[EventWeapons][0] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				if(InfoEvento[EventWeapons][1] != 0)
				{
					format( string, sizeof( string ), "Event Gun2: %d.", InfoEvento[EventWeapons][1] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				if(InfoEvento[EventWeapons][2] != 0)
				{
					format( string, sizeof( string ), "Event Gun3: %d.", InfoEvento[EventWeapons][2] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				if(InfoEvento[EventWeapons][3] != 0)
				{
					format( string, sizeof( string ), "Event Gun4: %d.", InfoEvento[EventWeapons][3] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				if(InfoEvento[EventWeapons][4] != 0)
				{
					format( string, sizeof( string ), "Event Gun5: %d.", InfoEvento[EventWeapons][4] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				if(InfoEvento[EventType] == 2)
				{
					format( string, sizeof( string ), "Event Team 1 Color: %d Event Team 1 Skin: %d.", InfoEvento[EventTeamColor][0], InfoEvento[EventTeamSkin][0] );
					ABroadCast( COLOR_GRAD2, string, 4 );
					format( string, sizeof( string ), "Event Team 2 Color: %d Event Team 2 Skin: %d.", InfoEvento[EventTeamColor][1], InfoEvento[EventTeamSkin][1] );
					ABroadCast( COLOR_GRAD2, string, 4 );
				}
				else if(InfoEvento[EventType] == 3)
				{
				}
				format( string, sizeof( string ), "Perfect City: %s quiere comenzar el evento, ¿lo apruebas? /approveevent o /denyevent.", GetPlayerNameEx(playerid) );
				ABroadCast( COLOR_GENERAL, string, 4 );
			}
		}
		else SendClientMessageEx( playerid, COLOR_WHITE, "Ya hay un evento activo (usa /finevento)." );
	}
	return 1;
}

CMD:goevento(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if( Info[ playerid ][ pAdminZC ] >= 1338 || InfoEvento[EventCreator] == playerid)
	{
		if( InfoEvento[ EventStatus ] == 3 )
		{
			InfoEvento[ EventStatus ] = 4;
			foreach(Player, i)
			{
				if( GetPVarInt( i, "EventToken" ) == 1 )
				{
					if( InfoEvento[ EventType ] == 1 )
					{
						SendClientMessageEx( i, COLOR_LIGHTBLUE, "* El evento ha comenzado" );
						SetHP( i, InfoEvento[ EventHealth ] );
						SetPlayerArmour( i, InfoEvento[ EventArmor ] );
						for(new d = 0; d < 4; d++)
						{
							if(i == InfoEvento[EventStaff][d])
							{
								SetHP(i, 999999);
							}
						}
						GivePlayerEventWeapons( i );
					}
					else if( InfoEvento[ EventType ] == 2 )
					{
						GivePlayerEventWeapons( i );
						SendClientMessageEx( i, COLOR_LIGHTBLUE, "* El evento ha empezado." );
						SetHP( i, InfoEvento[ EventHealth ] );
						SetPlayerArmour( i, InfoEvento[ EventArmor ] );
						for(new d = 0; d < 5; d++)
						{
							if(i == InfoEvento[EventStaff][d])
							{
								SetHP(i, 999999);
							}
						}
						GivePlayerEventWeapons( i );
					}
				}
				else SendClientMessageEx( i, COLOR_WHITE, "El evento ha comenzado. Si usted desea unirse la próxima vez use por favor /unirseevento." );
			}

		}
		else SendClientMessageEx( playerid, COLOR_WHITE, "Ya hay un evento activo (usar {5ABAFF}/finevento{FFFFFF})." );
	}
	return 1;
}

CMD:anunciar(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 1338 || InfoEvento[EventCreator] == playerid)
	{
		if( InfoEvento[ EventStatus ] == 1)
		{
			InfoEvento[ EventStatus ] = 2;
			SendClientMessageEx(playerid, COLOR_WHITE, "Para bloquear el evento usa /lockevento");
			if(InfoEvento[VipOnly] == 1) BroadCast( COLOR_LIGHTBLUE, "* Un evento VIP ha sido iniciado por un administrador, usuarios VIP usar /unirseevento para participar." );
			else BroadCast( COLOR_LIGHTBLUE, "* Un evento ha sido iniciado por un administrador, usa /unirseevento para participar." );
		}
		else SendClientMessageEx( playerid, COLOR_WHITE, "Ya hay un evento activo (usa /finevento)." );
	}
	return 1;
}

CMD:lockevento(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 1338 || InfoEvento[EventCreator] == playerid)
	{
		if( InfoEvento[ EventStatus ] == 2 )
		{
			InfoEvento[ EventStatus ] = 3;
			SendClientMessageEx( playerid, COLOR_WHITE, "Has bloqueado el evento, utiliza /goevento para iniciar oficialmente el evento." );
			BroadCast( COLOR_LIGHTBLUE, "* El evento ha sido bloqueado por un administrador." );
		}
		else SendClientMessageEx( playerid, COLOR_WHITE, "Ya hay un evento activo (usa /finevento)." );
	}
	return 1;
}

CMD:unirseevento(playerid, params[])
{
	if( InfoEvento[ EventStatus ] == 0 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "En este momento no hay un evento activo." );
	}
	else if( GetPVarInt( playerid, "EventToken" ) == 1 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "Ya estás en el evento." );
	}
	else if(GetPVarInt(playerid, "IsInArena") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes unirte estando en el paintball.");
	}
	else if( Info[playerid][pEstado] >= 1 || Info[ playerid ][ pJailTime ] > 0 || GetPVarInt(playerid, "injured") == 1 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "No puedes hacer esto ahora mismo." );
	}
	else if(InfoEvento[VipOnly] == 1 && Info[playerid][pVIP] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Este evento está restringido sólo para VIP´s.");
	}
	else if(InfoEvento[EventPlayers] >= InfoEvento[EventLimit]) {
		SendClientMessageEx(playerid, COLOR_GRAD2, "Este evento ha alcanzado el límite máximo de jugadores.");
	}
	else if( InfoEvento[ EventStatus ] == 2 || (InfoEvento[ EventStatus ] == 1 && Info[playerid][pVIP] >= 3)) {

		if(IsPlayerInAnyVehicle(playerid)) {
			return SendClientMessageEx(playerid, COLOR_GRAD2, "No se puedes unirte estando en un vehículo.");
		}

		SetPVarInt( playerid, "EventToken", 1 );
		ResetPlayerWeapons( playerid );
		pTazer[playerid] = 0;
		GetPlayerHealth(playerid, EventFloats[playerid][4]);
		GetPlayerArmour(playerid, EventFloats[playerid][5]);
		EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
		EventLastInt[playerid] = GetPlayerInterior(playerid);
		GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
		GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
		if(InfoEvento[EventType] != 2)
		{
			SetPlayerPos( playerid, InfoEvento[ EventPositionX ], InfoEvento[ EventPositionY ], InfoEvento[ EventPositionZ ] );
		}
		SetPlayerInterior( playerid, InfoEvento[ EventInterior ] );
		SetPlayerVirtualWorld( playerid, InfoEvento[ EventWorld ] );
		SendClientMessageEx( playerid, COLOR_WHITE, InfoEvento[ EventoInfo ] );
		SetHP( playerid, InfoEvento[ EventHealth ] );
		SetPlayerArmour( playerid, InfoEvento[ EventArmor ] );
		SetPlayerVirtualWorld( playerid, 0 );

		if(InfoEvento[EventType] == 2)
		{
			SetPlayerSkin(playerid, InfoEvento[EventTeamSkin][nextteam]);
			new color = InfoEvento[EventTeamColor][nextteam];
			if (color==0) SetPlayerColor(playerid, 0x00000000);
			if (color==1) SetPlayerColor(playerid, 0xFFFFFF00);
			if (color==2) SetPlayerColor(playerid, 0x2641FE00);
			if (color==3) SetPlayerColor(playerid, 0xAA333300);
			if (color==16) SetPlayerColor(playerid, 0x33AA3300);
			if (color==5) SetPlayerColor(playerid, 0xC2A2DA00);
			if (color==6) SetPlayerColor(playerid, 0xFFFF0000);
			if (color==7) SetPlayerColor(playerid, 0x33CCFF00);
			if (color==51) SetPlayerColor(playerid, 0x2D6F0000);
			if (color==103) SetPlayerColor(playerid, 0x0B006F00);
			if (color==13) SetPlayerColor(playerid, 0x52525200);
			if (color==55) SetPlayerColor(playerid, 0xB46F0000);
			if (color==84) SetPlayerColor(playerid, 0x814F0000);
			if (color==74) SetPlayerColor(playerid, 0x750A0000);
			if (color==126) SetPlayerColor(playerid, 0xFF51F100);
			if(nextteam == 0)
			{
				SetPlayerPos(playerid, InfoEvento[EventTeamPosX1], InfoEvento[EventTeamPosY1], InfoEvento[EventTeamPosZ1]);
			}
			else
			{
				SetPlayerPos(playerid, InfoEvento[EventTeamPosX2], InfoEvento[EventTeamPosY2], InfoEvento[EventTeamPosZ2]);
			}
			if(nextteam == 0) nextteam++;
			else if(nextteam == 1) nextteam--;
		}

		InfoEvento[EventPlayers] ++;
		if(InfoEvento[EventPlayers] == InfoEvento[EventLimit])
		{
			ABroadCast(COLOR_YELLOW, "El evento ha alcanzado el límite máximo de jugadores.", 2);
		}
	}

	else if( InfoEvento[ EventStatus ] == 3 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "El evento está bloqueado, no puedes entrar al evento." );
	}
	else if( InfoEvento[ EventStatus ] == 4 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "El evento ya se ha iniciado, no puedes entrar al evento." );
	}

	return 1;
}

CMD:ram(playerid, params[]){
	if(IsACop(playerid)){
		if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en la Arena.");
		if( Info[playerid][pEstado] >= 1 ) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
		new string[128];
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
			{
				format(string, sizeof(string), "* %s rompe la puerta, y entra.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
				LoadObjects(playerid);
				SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
				GameTextForPlayer(playerid, "~r~Rompiste la puerta", 5000, 1);
				Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
				Info[playerid][pVW] = i+6000;
				SetPlayerVirtualWorld(playerid, i+6000);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
	return 1;
}

CMD:toy(playerid, params[])
{
	if(GetPVarInt(playerid, "Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando en este momento.");
		return 1;
	}
	new toyslot,string[128];
	if(sscanf(params, "d", toyslot)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /toy [slot (0-9)]");
	if(toyslot < 0 || toyslot > MAX_PLAYERTOYS) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} Los Slots de los toys son del número 0 al 9.");
    switch(toyslot)
	{
	    case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
		{
		    if(IsPlayerAttachedObjectSlotUsed(playerid, toyslot)){
			    new name[24];
			    format(name, sizeof(name), "None");
				for(new i;i<sizeof(HoldingObjectsAll);i++){
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
			    format(string, sizeof(string), "Te quitaste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			    RemovePlayerAttachedObject(playerid, toyslot);
			    return 1;
			}
			else
			{
	  			if(PlayerToyInfo[playerid][toyslot][ptModelID] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes ningún toy en ese slot.");
   				SetPlayerAttachedObject(playerid, toyslot, PlayerToyInfo[playerid][toyslot][ptModelID], PlayerToyInfo[playerid][toyslot][ptBone], PlayerToyInfo[playerid][toyslot][ptPosX], PlayerToyInfo[playerid][toyslot][ptPosY], PlayerToyInfo[playerid][toyslot][ptPosZ], PlayerToyInfo[playerid][toyslot][ptRotX], PlayerToyInfo[playerid][toyslot][ptRotY], PlayerToyInfo[playerid][toyslot][ptRotZ], PlayerToyInfo[playerid][toyslot][ftscaleX],
				PlayerToyInfo[playerid][toyslot][ftscaleY], PlayerToyInfo[playerid][toyslot][ftscaleZ]);
				new name[24];
				format(name, sizeof(name), "Nada");
				for(new i;i<sizeof(HoldingObjectsAll);i++){
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
				format(string, sizeof(string), "Te pusiste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
	}
	return 1;
}


CMD:esposar(playerid, params[])
{
if(IsACop(playerid))
{
if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
new string[170],
Float:Pos[3],
giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /esposar (playerid)");
if(IsPlayerConnected(giveplayerid))
{
if (ProxDetectorS(8.0, playerid, giveplayerid))
{
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto contigo mismo.");
if(Info[giveplayerid][pEstado] == 1 || GetPlayerSpecialAction(giveplayerid) == SPECIAL_ACTION_HANDSUP)
{
format(string, sizeof(string), "[Radio de policía] {FFFFFF}(Oficial %s) dice: hemos esposado a {00D2CF}%s, {FFFFFF}se decidirá su arresto.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
SendRadioMessage(1, TEAM_BLUE_COLOR, string);
format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: hemos esposado a {00D2CF}%s, {FFFFFF}se decidirá su arresto.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
SendRadioMessage(2, TEAM_BLUE_COLOR, string);
format(string, sizeof(string), "Fuiste esposado por %s.", GetPlayerNameEx(playerid));
SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED); //animacion
SetPlayerAttachedObject(giveplayerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
format(string, sizeof(string), "Esposaste a %s.", GetPlayerNameEx(giveplayerid));
SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
format(string, sizeof(string), "%s esposa a %s, las esposas estan seguras.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
GameTextForPlayer(giveplayerid, "Esposado", 2500, 3);
GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
ClearAnimations(giveplayerid);
//TogglePlayerControllable(giveplayerid, 0);
Info[giveplayerid][pEstado] = 2;
SetPVarInt(giveplayerid, "PlayerCuffed", 2);
SetPVarInt(giveplayerid, "IsFrozen", 1);
PlayerCuffedTime[giveplayerid] = 300;
PlayerPlaySoundEx(1145, Pos[0], Pos[1], Pos[2]);
return 1;
}
return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El jugador tiene que estar tazeado o con las manos arriba.");
}
return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
}
return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado inválido.");
}
return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
}

CMD:desesposar(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /desesposar (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes quitarte las esposas tu mismo.");
				if(Info[giveplayerid][pEstado] == 2)
				{
					DeletePVar(giveplayerid, "IsFrozen");
					format(string, sizeof(string), "* %s Te quito las esposas.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Le quitaste las esposas %s.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s qutó las esposas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~g~Te quitaron ~n~las esposas", 2500, 3);
					TogglePlayerControllable(giveplayerid, 1);
					ClearAnimations(giveplayerid);
					RemovePlayerAttachedObject(giveplayerid, 0);
   					SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_NONE);
					Info[giveplayerid][pEstado] = 0;
                    PlayerCuffedTime[giveplayerid] = 0;
					DeletePVar(giveplayerid, "PlayerCuffed");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador ya no está arrestado.");
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado inválido.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:detener(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[170], giveplayerid, seat;
		if(sscanf(params, "dd", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /detener (playerid) (Asiento 1-3)");
		if(IsPlayerConnected(giveplayerid))
		{
			if(seat < 1 || seat > 3) return SendClientMessageEx(playerid, COLOR_WHITE, "Asientos: 1 al 3.");
			if(IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa persona está en un vehiculo.");
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto contigo mismo!"); return 1; }
				if(Info[giveplayerid][pEstado] == 2)
				{
					new carid = gLastCar[playerid];
					if(IsSeatAvailable(carid, seat))
					{
						new Float:pos[6];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
						GetVehiclePos( carid, pos[0], pos[1], pos[2]);
						if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
								floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
								floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
                        format(string, sizeof(string), "[Radio de policía] {FFFFFF}(Oficial %s) dice: hemos capturado a {00D2CF}%s, {FFFFFF}lo trasladamos a la comisaría.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                        SendRadioMessage(1, TEAM_BLUE_COLOR, string);
						RemovePlayerAttachedObject(giveplayerid, playerid);
					    SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
						format(string, sizeof(string), "Fuiste detenido por %s .", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Detuviste a %s .", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s sube a %s al vehiculo.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Detenido", 2500, 3);
						ClearAnimations(giveplayerid);
						TogglePlayerControllable(giveplayerid, false);
						PutPlayerInVehicle(giveplayerid, carid, seat);
					}
					else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese asiento no está disponible.");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF}Esa persona no está esposada.");
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, " Usted no está lo suficientemente cerca del jugador o de su coche.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado inválido.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
	return 1;
}

CMD:fbi(playerid, params[]){
	if(Team_FBI(playerid))	{
		if(PlayerToPoint(5, playerid, 310.2178,-1538.3743,-44.9596 )||(5, playerid, -1394.1967, -1465.1123, 19.9635)){
			SafeDialogEx(playerid, FDUTYMENU, DIALOG_STYLE_LIST, "{008EC1}FBI Menu","Duty\nEquipo\nUniforme SWAT\nUniformes\nEncubierto", "Ok", "Cancelar");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en los casilleros del FBI.");
	}
	return 1;
}

CMD:casilleropd(playerid, params[]){
	if(Team_LSPD(playerid)){
		if(PlayerToPoint(3, playerid, 264.6584,109.6664,1004.6172)){
			SafeDialogEx(playerid, DUTYMENU, DIALOG_STYLE_LIST, "{008EC1}SAPD Menu","Servicio Reglamentario\nEquipamiento\nEquipo SWAT\nUniformes\nEncubierto", "Ok", "Cancelar");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en los casilleros de SAPD.");
	}
	return 1;
}
CMD:casillerosheriff(playerid, params[]){
	if(Team_LSPD(playerid) && Info[playerid][pDivision] == 7){
		if(PlayerToPoint(3, playerid, 253.6248,76.8420,1003.6406)){
			SafeDialogEx(playerid, DUTYMENU, DIALOG_STYLE_LIST, "{008EC1}Sheriff Menu","Servicio Reglamentario\nEquipamiento\nEquipo SWAT\nUniformes\nEncubierto", "Ok", "Cancelar");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en los casilleros de Sheriff.");
	}
	return 1;
}
CMD:quitarrestriccion(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 3){
		new giveplayerid, string[128];
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /quitarrestriccion (playerid)");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Este jugador no está conectado.");
		if(Info[giveplayerid][pConnectTime] > 2){
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Este jugador no tiene restricción de armas.");
		}else{
		if(Info[giveplayerid][pAdminZC] >= 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto con administradores." );
  		Info[giveplayerid][pConnectTime] += 2;
  		Info[giveplayerid][pWRestricted] = 0;
		format( string, sizeof( string ), "Perfect City: El administrador %s le ha quitado la restricción de armas a %s (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), giveplayerid);
		ABroadCast( COLOR_GENERAL, string, 2 );
		format( string, sizeof( string ), "El administrador %s te ha quitado la restrición de armas.", GetPlayerNameEx(playerid));
		Message(giveplayerid, COLOR_LIGHTBLUE, string);
		}
	} else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	return 1;
}
CMD:darrol(playerid, params[]){
	if(Info[playerid][pAdminZC] >= 2)	{
		new giveplayerid, string[128];
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darrol (playerid)");
        if(Info[giveplayerid][pAdminZC] > Info[playerid][pAdminZC]) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer eso con administradores de mayor rango.");
		if(IsPlayerConnected(giveplayerid))		{
		    if(Info[giveplayerid][pAdminZC] >= 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto con administradores." );
			if(ShowRules[giveplayerid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya está leyendo las reglas de rol.");
			new Float:roldX, Float:roldY, Float:roldZ;
			GetPlayerPos(giveplayerid, roldX, roldY, roldZ);
			SetPVarFloat(giveplayerid, "rOldX", roldX);
			SetPVarFloat(giveplayerid, "rOldY", roldY);
			SetPVarFloat(giveplayerid, "rOldZ", roldZ);
			SetPVarInt(giveplayerid, "rOldInt", GetPlayerInterior(giveplayerid));
			SetPVarInt(giveplayerid, "rOldVW", GetPlayerVirtualWorld(giveplayerid));
		    ShowRules[giveplayerid] = 1;
		    RulesTime[giveplayerid] = 1;
		    ShowRol(giveplayerid);
			format( string, sizeof( string ), "Perfect City: %s (ID %d) fue enviado a leer las reglas de rol por %s.", GetPlayerNameEx(giveplayerid), giveplayerid, GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, string, 2 );
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando.");
	return 1;
}

CMD:paquete(playerid, params[]){
	if (Info[playerid][pJob] != 10 && Info[playerid][pJob2] != 10) return SendClientMessageEx(playerid,COLOR_WHITE,"No eres traficante de drogas.");
	new mypoint = -1,
		playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_WHITE, " No estás en el punto específico.");
	if(Info[playerid][pCrates]) return SendClientMessageEx(playerid, COLOR_GREY, "No se puede sostener más paquetes de drogas.");
	if(GetPlayerCash(playerid) > 100){
		SafeDialogEx(playerid,TRAFICDRUGS,DIALOG_STYLE_MSGBOX, "{00F70C}Selecciona", "¿Que deseas transportar?", "Hierba", "Crack");
		SetPVarInt(playerid, "ChoosingDrugs", 1);
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE,"{FFFF00}[JOB]:{FFFFFF} No tienes $100!");
	return 1;
}

CMD:comprarhierba(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /comprarhierba (valor)");

	new tel;
	new price;
	new level = Info[playerid][pDrugsSkill];
	if(level >= 0 && level <= 50)
	{ tel = 100; if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} No puedes sacar mas de 10 con este nivel de skill!"); return 1; } }
	else if(level >= 51 && level <= 100)
	{ tel = 100; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} No puedes sacar mas de 20 con este nivel de skill!"); return 1; } }
	else if(level >= 101 && level <= 200)
	{ tel = 100; if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} No puedes sacar mas de 30 con este nivel de skill!"); return 1; } }
	else if(level >= 201 && level <= 400)
	{ tel = 100; if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} No puedes sacar mas de 40 con este nivel de skill!"); return 1; } }
	else if(level >= 401)
	{ tel = 100; if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} No puedes sacar mas de 50 con este nivel de skill!"); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_WHITE, " No estás en la casa de crack.");
	if ( Info[playerid][pPot] >= 25) return SendClientMessageEx(playerid, COLOR_WHITE, " Tu ya tienes 25 gramos de hierba, no puedes cargar más.");
	if(Info[playerid][pFMember] < 255)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Esta casa de drogas no tiene más hierba.");
		if(GetPlayerCash(playerid) > price)		{
			format(string, sizeof(string), "* Compraste %d gramos por $%d.", amount, price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			Info[playerid][pPot] += amount;
			if(Info[playerid][pVIP] < 1)			{
				Points[mypoint][Stock] -= amount;
				format(string, sizeof(string), " HIERBA DISPONIBLE: %d/1000.", Points[mypoint][Stock]-amount);
				UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
			}
			for(new i = 0; i < sizeof(fINFO); i++)			{
				if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0){
					fINFO[i][FamilyBank] = fINFO[i][FamilyBank]+price/2;
				}
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes pagar estas drogas.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a una banda/familia.");
	return 1;
}
CMD:comprarcrack(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /comprarcrack (monto)");
	new tel;
	new price;
	new level = Info[playerid][pDrugsSkill];
	if(level >= 0 && level <= 50)
	{
		tel = 100;
		if(amount < 1 || amount > 5)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Sólo puedes cojer 5 o menos con ese skil.");
			return 1;
		}
	}
	else if(level >= 51 && level <= 100)
	{ tel = 100; if(amount < 1 || amount > 5) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Sólo puedes cojer 10 o menos con ese skil!"); return 1; } }
	else if(level >= 101 && level <= 200)
	{ tel = 100; if(amount < 1 || amount > 15) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Sólo puedes cojer 15 o menos con ese skil!"); return 1; } }
	else if(level >= 201 && level <= 400)
	{ tel = 100; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Sólo puedes cojer 20 o menos con ese skil!"); return 1; } }
	else if(level >= 401)
	{ tel = 100; if(amount < 1 || amount > 25) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Sólo puedes cojer 25!"); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 4)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_WHITE, " No estás en la casa de crack.");
	if ( Info[playerid][pCrack] >= 25) return SendClientMessageEx(playerid, COLOR_WHITE, "Tu ya tienes 25 gramos de crack, no puedes cargar más.");
	if(Info[playerid][pFMember] < 255)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "* Esta casa de crack no tiene más crack.");
		if(GetPlayerCash(playerid) > price)
		{
			format(string, sizeof(string), "* Compraste %d gramos por $%d.", amount, price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			Info[playerid][pCrack] += amount;
			if(Info[playerid][pVIP] < 1) Points[mypoint][Stock] = Points[mypoint][Stock]-amount;
			format(string, sizeof(string), " CRACK DISPONIBLE: %d/1000.", Points[mypoint][Stock]-amount);
			UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes pagar estas drogas.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a una familia/banda.");
	return 1;
}
CMD:vendercrack(playerid, params[])
{
	if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres de una familia/banda.");
	new string[128], giveplayerid, needed, money;
	if(sscanf(params, "ddd", giveplayerid, needed, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vendercrack (playerid) (gramos) (precio)");

	if(needed < 1 || needed > 99) { SendClientMessageEx(playerid, COLOR_WHITE, "   Los valores no pueden ser mayores a 99 gramos."); return 1; }
	if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_WHITE, "   El precio no puede ser menor que 1 ni mayor que 99999!"); return 1; }
	if(needed > Info[playerid][pCrack]) { SendClientMessageEx(playerid, COLOR_WHITE, "  No tienes suficiente droga para venderla!"); return 1; }
	if(IsPlayerConnected(giveplayerid))	{
		if(giveplayerid != INVALID_PLAYER_ID){
			if (ProxDetectorS(8.0, playerid, giveplayerid)){
				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes venderte a ti mismo!");
				format(string, sizeof(string), "* Ofreciste a %s para que te compre %d gramos de crack por $%d.", GetPlayerNameEx(giveplayerid), needed, money);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s quiere venderte %d gramos de crack por $%d. (escribe /aceptar crack)", GetPlayerNameEx(playerid), needed, money);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				CrackOffer[giveplayerid] = playerid;
				CrackPrice[giveplayerid] = money;
				CrackGram[giveplayerid] = needed;
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Ese jugador no está cerca tuyo.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, " Ese jugador está desconectado.");
	return 1;
}

CMD:venderhierba(playerid, params[])
{
	if(Info[playerid][pFMember] == 255)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, " No eres de una familia/banda.");
		return 1;
	}
	new string[128], giveplayerid, needed, money;
	if(sscanf(params, "ddd", giveplayerid, needed, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /venderhierba (playerid) (monto) (precio)");

	if(needed < 1 || needed > 99) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Gramos no pueden ser menor que 1, ni mayor que 99!"); return 1; }
	if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Precio: Mínimo 1 - Máximo: 99999!"); return 1; }
	if(needed > Info[playerid][pPot]) { SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No tienes tanta hierba para vender."); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes venderte a ti mismo.");
					return 1;
				}
				format(string, sizeof(string), "* Ofreciste a %s comprar %d gramos de hierba por $%d.", GetPlayerNameEx(giveplayerid), needed, money);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Vendedor %s quiere venderte %d gramos de hierba por $%d. (Usa /aceptar hierba)", GetPlayerNameEx(playerid), needed, money);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				PotOffer[giveplayerid] = playerid;
				PotPrice[giveplayerid] = money;
				PotGram[giveplayerid] = needed;
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "   Ese jugador está desconectado.");
	return 1;
}

CMD:semillas(playerid, params[])
{
    //if(Info[playerid][pFMember] < 255) else return SendClientMessageEx(playerid, COLOR_WHITE, " No perteneces a una banda/familia.");
	if(Info[playerid][pWSeeds] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes semillas usalas primero.");
	if(GetPlayerCash(playerid) < 500) return SendClientMessageEx(playerid, COLOR_WHITE, " No tienes $150 para pagar por esto.");
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
  	{
	   	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
	   	{
			mypoint = i;
		}
   	}
   	if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_WHITE, " No estás en la casa de drogas.");
	if(Points[mypoint][Stock] < 1 && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta casa de drogas no tiene más hierba.");
	if(Info[playerid][pVIP] < 1){
		new string[32];
		Points[mypoint][Stock] -= 1;
		format(string, sizeof(string), " HIERBA DISPONIBLE: %d/1000.", Points[mypoint][Stock]);
		UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
	}
	Info[playerid][pWSeeds] += 3;
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, " Acabas de comprar una bolsa de semillas de hierba de la Casa de Drogas. ");
	GivePlayerCash(playerid, -1500);
	GameTextForPlayer(playerid, "~r~-$150", 3000, 1 );
	return 1;
}

CMD:capturar(playerid, params[])
{
	new string[128];
	new mypoint = -1;
	if(GetPVarInt(playerid,"Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, " No puedes hacer esto ahora.");
		return 1;
	}
	if (Info[playerid][pFMember] == 255 || Info[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_WHITE, " No eres el rango suficiente para capturar (5).");
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 1.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz])) mypoint = i;
	}
	if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_WHITE, " Usted no está en el lugar de captura!");
	if (Points[mypoint][Vulnerable] > 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} Este punto no está listo para la toma de posesión.");
	if (Points[mypoint][TimeToClaim]) return SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} Este punto ya está capturado.");
	if(GetPlayerPing(playerid) > 600){
		format(string,sizeof(string), " No puedes hacer esto mientras tienes más de %d de ping!", 600);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		return 1;
	}
	Points[mypoint][PointBarID] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
	SetProgressBarValue(Points[mypoint][PointBarID], 100.0);
	ShowProgressBarForPlayer(playerid, Points[mypoint][PointBarID]);
	format(string,sizeof(string), " %s está tratando de apoderarse del punto.", GetPlayerNameEx(playerid));
	ProxDetector(70.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
	GetPlayerPos(playerid, Points[mypoint][Capturex], Points[mypoint][Capturey], Points[mypoint][Capturez]);
	Points[mypoint][ClaimerId] = playerid;
	Points[mypoint][TimeToClaim] = 1;
	Points[mypoint][TimeLeft] = 10;
	SetTimerEx("ProgressTimer", 1000, 0, "d", mypoint);
	return 1;
}


CMD:puntos(playerid, params[]){
	new string[128];
	for(new i; i < MAX_POINTS; i++)	{
		if (Points[i][Type] >= 0)		{
			format(string, sizeof(string), "Nombre: %s | Dueño: %s | Capturado por: %s | Horas: %d",
			Points[i][Name],Points[i][Owner],Points[i][CapperName],Points[i][Vulnerable]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:pedit(playerid, params[]){
	if(Info[playerid][pAdminZC] >= 4000 || Info[playerid][pGangModerator] == 1){
		new string[128], hours;
		if(sscanf(params, "d", hours)){
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /pedit (HORAS)");
			SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ADM]:{FFFFFF} Párese cerca de un punto para ajustar las horas.");
			return 1;
		}
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
			{
				if(hours < 1|| hours > 24) SendClientMessageEx(playerid, COLOR_GREY, "Tip: 1 - 24");
				else if(hours >= 1|| hours <= 24)
				{
					format(string, sizeof(string), "Estableciste el tiempo de vulnerabilidad a %d horas !", hours);
					Points[h][Vulnerable] = hours;
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					UpdatePoints();
				}
			}
		}
	}
	return 1;
}

CMD:dedit(playerid, params[])
{
	if(Info[playerid][pAdminZC] < 4000) SendClientMessageEx(playerid, COLOR_WHITE, " No eres administrador.");
	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /dedit (nombre) (monto)");
		SendClientMessageEx(playerid, COLOR_GREY, "Nombres: hierba, Crack");
		return 1;
	}
	if(strcmp(choice,"hierba",true) == 0)
	{
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(Points[h][Type] == 3)
			{
				Points[h][Stock] = amount;
				format(string, sizeof(string), " HIERBA DISPONIBLE: %d/1000", Points[h][Stock]);
				UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
				SendClientMessageEx(playerid, COLOR_WHITE, " Estableciste la cantidad de hierba en la casa de drogas.");
			}
		}
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(Points[h][Type] == 4)
			{
				Points[h][Stock] = amount;
				format(string, sizeof(string), " CRACK DISPONIBLE: %d/1000", Points[h][Stock]);
				UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
				SendClientMessageEx(playerid, COLOR_WHITE, " Estableciste la cantidad de crack en la casa de drogas.");
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "	Nombre no válido.");
	return 1;
}

CMD:adminpuntos(playerid, params[]){
    if(Info[playerid][pAdminZC] > 1337 || Info[playerid][pGangModerator] == 1){
    	SendClientMessageEx(playerid, COLOR_GREEN,"Ayuda - Comandos Administrativos Sistema de puntos.");
		SendClientMessageEx(playerid, COLOR_WHITE, "/dedit (Editar drogas de cada punto) - /pedit (Tiempo de vulnerabilidad)");
		SendClientMessageEx(playerid, COLOR_WHITE, "/puntos /gotopoint");
	}
	return 1;
}

CMD:plantar(playerid, params[])
{
 	if(Info[playerid][pWSeeds] > 0)
 	{
		if(Info[playerid][pWExists] == 1)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Ya plantaste semillas tienes que esperar." );
		    return 1;
		}
		new
			szMessage[128];
		GetPlayerPos(playerid, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ]);
		Info[playerid][pWZ] -= 1.5;
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
		SendClientMessageEx(playerid, COLOR_GREEN, "Has plantado un poco de hierba. El trayecto dura unos 20-45 minutos en crecer.");

		Info[playerid][pWInt] = GetPlayerInterior(playerid);
		Info[playerid][pWVW] = GetPlayerVirtualWorld(playerid);
		Info[playerid][pWExists] = 1;
		Info[playerid][pWValue] = -1;
		Info[playerid][pWSeeds]--;
		Info[playerid][pWObject] = CreateDynamicObject(19473, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ], 0.0, 0.0, 0.0, Info[playerid][pWVW], Info[playerid][pWInt]);
		Info[playerid][pWTimer] = SetTimerEx("WeedGrowth", 60000, 1, "i", playerid);
		format(szMessage, sizeof(szMessage), " * %s planta unas semillas de hierba", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes suficientes semillas para sembrar, ve a la casa de drogas y recoge más (/semillas).");
	return 1;
}

CMD:aborrarplanta(playerid, params[]) {
	if(Info[playerid][pAdminZC] >= 5) {
		new
			iTargetID;
		if(sscanf(params, "d", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /aborrarplanta (playerid)");
		}
		else if(IsPlayerConnected(iTargetID)) {
			new
				szMessage[47 + MAX_PLAYER_NAME];
			format(szMessage, sizeof(szMessage), "Destruiste la planta de %s (%i gramos).", GetPlayerNameEx(iTargetID), Info[iTargetID][pWValue]);
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			format(szMessage, sizeof(szMessage), "Administrador %s destruyó tu planta sembarada (%i gramos).", GetPlayerNameEx(playerid), Info[iTargetID][pWValue]);
			SendClientMessageEx(iTargetID, COLOR_GREY, szMessage);
			ClearWeed(iTargetID);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:destruirplanta(playerid, params[])
{
	if(IsACop(playerid)) {
		foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ])) {
			if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt]) {

				new
					szMessage[128];

				ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
				format(szMessage, sizeof(szMessage), "* Destruye la plata, pesa %d gramos.", Info[i][pWValue]);
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
				format(szMessage, sizeof(szMessage), " * %s destruye la hierba plantada.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
				ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ClearWeed(i);
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una planta.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
	return 1;
}

CMD:checkplanta(playerid, params[]) {
	foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ])) {
	    if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt]) {

			new
				szMessage[50 + MAX_PLAYER_NAME];

			if(Info[i][pWValue] > 0)
			{
				format(szMessage, sizeof(szMessage), "Plantador: %s, peso: %i gramos. /sacarplanta para sacarla.", GetPlayerNameEx(i), Info[i][pWValue]);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			}
			else
			{
				format(szMessage, sizeof(szMessage), "Plantador: %s. Esto no está listo para ser sacada.", GetPlayerNameEx(i));
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			}
			return 1;
		}
	}
	return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una planta.");
}

CMD:sacarplanta(playerid, params[])
{
	foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ]))
	{
	    if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt])
		{
			if(Info[i][pWValue] > 0)
			{
				if(Info[i][pWValue] + Info[playerid][pPot] < 1000)
				{

					new
						szMessage[52];
					ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
					Info[playerid][pPot] += Info[i][pWValue];
					format(szMessage, sizeof(szMessage), "Recogiste la hierba y te dió %d gramos de hierba.", Info[i][pWValue]);
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					format(szMessage, sizeof(szMessage), " * %s recoge la planta.", GetPlayerNameEx(playerid));
					ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ClearWeed(i);
				}
				else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede llevar a más de 1Kg de hierba.");
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Esta planta no está lista para ser recogida todavía.");
			return 1;
		}
	}
	return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en una planta.");
}

CMD:materiales(playerid, params[])
{
	if (Info[playerid][pJob] != 7 && Info[playerid][pJob2] != 7 && Info[playerid][pJob] != 12 && Info[playerid][pJob2] != 12)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No eres Armero!");
 		return 1;
	}
	if(GetPVarInt(playerid, "Packages") >= 1 || TaxiAccepted[playerid] != 999 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Por favor primero asegurate de estar sin un checkpoint activo (Tal vez tengas materiales por entregar).");
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 2613.3691,-1065.9915,69.9656))
	{
		if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes entregar tus paquetes primero. (( Usar el comando /tirar parquetesM ))");
		if(Info[playerid][pVIP] == 1)
		{
		    if(GetPlayerCash(playerid) < 1125)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1125!");
		        return 1;
		    }
			GivePlayerCash(playerid, -1125);
			SetPVarInt(playerid, "Packages", 400);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 400 Paquetes de Materiales por $1125.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Has recibido los paquetes pero por 1.5x más, y lo que te permite es recibir 1.5x materiales más.");
		}
		else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
		{
			if(GetPlayerCash(playerid) < 1500)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1500!");
		        return 1;
		    }
			GivePlayerCash(playerid, -1500);
			SetPVarInt(playerid, "Packages", 500);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 500 Paquetes de Materiales por $1500.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[SILVERGOLDVIP]:{FFFFFF} Has recibido los paquetes pero por 2x más, y lo que te permite es recibir 2x materiales más.");
		}
		else if(Info[playerid][pVIP] >= 4)
		{
			if(GetPlayerCash(playerid) < 1875)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1875!");
		        return 1;
		    }
			GivePlayerCash(playerid, -1875);
			SetPVarInt(playerid, "Packages", 600);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 600 Paquetes de Materiales por $1875.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[PLATINUMVIP]:{FFFFFF} Has recibido los paquetes pero por 2.5x más, y lo que te permite es recibir 2.5x materiales más.");
		}
		else
		{
			if(GetPlayerCash(playerid) < 750)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $750!");
		        return 1;
		    }
			GivePlayerCash(playerid, -750);
			SetPVarInt(playerid, "Packages", 50);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 350 Paquetes de Materiales por $750.");
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Sigue tu camino hacia el checkpoint y entregar sus paquetes de materiales.");
		SetPVarInt(playerid, "MatDeliver", 333);
		SetPVarInt(playerid, "tpMatRunTimer", 15);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		SetPlayerCheckpoint(playerid, 1083.0131,-1226.7869,15.8203, 5);
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid, 4.0, 2388.4568,-2008.2374,13.5537))
	{
		if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes entregar tus paquetes primero. (( Usar el comando /tirar parquetesM ))");

		if(Info[playerid][pVIP] == 1)
		{
			if(GetPlayerCash(playerid) < 900)
			{
   				SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $900!");
       			return 1;
   			}
			GivePlayerCash(playerid, -900);
			SetPVarInt(playerid, "Packages", 18);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 18 Paquetes de Materiales por $900.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Has recibido los paquetes pero por 1.5x más, y lo que te permite es recibir 1.5x materiales más.");
		}
		else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
		{
			if(GetPlayerCash(playerid) < 1200)
			{
   				SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1200!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1200);
			SetPVarInt(playerid, "Packages", 24);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 24 Paquetes de Materiales por $1200.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[SILVERGOLDVIP]:{FFFFFF} Has recibido los paquetes pero por 2x más, y lo que te permite es recibir 2x materiales más.");
		}
		else if(Info[playerid][pVIP] >= 4)
		{
			if(GetPlayerCash(playerid) < 1500)
			{
   				SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1500!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1500);
			SetPVarInt(playerid, "Packages", 30);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 30 Paquetes de Materiales por $1500.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[PLATINUMVIP]:{FFFFFF} Has recibido los paquetes pero por 2.5x más, y lo que te permite es recibir 2.5x materiales más.");
		}
		else
		{
			if(GetPlayerCash(playerid) < 600)
			{
   				SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $600!");
       			return 1;
   			}
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 12 Paquetes de Materiales por $600.");
			GivePlayerCash(playerid, -600);
			SetPVarInt(playerid, "Packages", 12);
		}

		SetPVarInt(playerid, "MatDeliver", 444);
		SetPVarInt(playerid, "tpMatRunTimer", 12);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		SetPlayerCheckpoint(playerid, 2534.2683,-1063.3899,69.5655, 5);
		return 1;
	}
	new mypoint = -1;
	new mypointex = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 1)
		{
			mypoint = i;
			mypointex = i;
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No estás en el Punto donde se recogen materiales!");
		return 1;
	}
	if(Info[playerid][pVIP] == 1)
	{
		if(GetPlayerCash(playerid) < 750)
		{
			SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $750!");
			return 1;
		}
		GivePlayerCash(playerid, -750);
		SetPVarInt(playerid, "Packages", 15);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste $750 por 400 materiales.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Tu recibes 1.5x paquetes más, que te dará 1.5x más materiales.");
	}
	else if(Info[playerid][pVIP] == 2 || Info[playerid][pVIP] == 3)
	{
		if(GetPlayerCash(playerid) < 1000)
		{
			SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1000!");
			return 1;
		}
		GivePlayerCash(playerid, -1000);
		SetPVarInt(playerid, "Packages", 600);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste $1000 por 600 materiales.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Tu recibes 2x paquetes más, que te dará 2x más materiales.");
	}
	else if(Info[playerid][pVIP] >= 4)
	{
		if(GetPlayerCash(playerid) < 1250)
		{
			SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No puedes pagar $1250!");
			return 1;
		}
		GivePlayerCash(playerid, -1250);
		SetPVarInt(playerid, "Packages", 700);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste $1250 por 700 materiales.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[BRONCEVIP]:{FFFFFF} Tu recibes 2.5x paquetes más, que te dará 2.5x más materiales.");
	}
	else
	{
		if(GetPlayerCash(playerid) < 300)
		{
			SendClientMessageEx(playerid, COLOR_GREY,"{FFFF00}[ERROR]:{FFFFFF} No tienes $300!");
			return 1;
		}
		GivePlayerCash(playerid, -500);
		SetPVarInt(playerid, "Packages", 10);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Pagaste 10 paquetes de materiales por $500.");
	}

	SetPVarInt(playerid, "MatDeliver", 555);
	SetPVarInt(playerid, "tpMatRunTimer", 10);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
	for(new i = 0; i < sizeof(fINFO); i++)
	{
		if(strcmp(Points[mypointex][Owner], fINFO[i][FamilyName], true) == 0)
		{
			fINFO[i][FamilyBank] += 1250;
		}
	}
	SetPlayerCheckpoint(playerid, 2317.739990,-2303.850830,13.545999, 5);
	return 1;
}
CMD:verfondos(playerid, params[])
{
    if(!Presidente(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres el lider del gobierno.");
	new string[128];
	format(string, sizeof(string), "* BALANCE: $%d.", Tax);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}
CMD:sfondos(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] <= 5999) return SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[ADM]:{FF0000} No eres el encargado de esto ó no eres administrador.");
	new string[128], amount, reason[64];
	if(sscanf(params, "ds[64]", amount, reason))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sfondos (monto) (razón)");
		format(string, sizeof(string), "* BALANCE: $%d.", Tax);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		return 1;
	}
	if(amount < 0) return SendClientMessageEx(playerid, COLOR_WHITE, " El monto es inválido.");
	if( Tax > amount )
	{
		Tax -= amount;
		SaveStuff();
		GivePlayerCash( playerid, amount );
		format( string, sizeof( string ), "Retiraste $%d de los fondos del gobierno.", amount );
		SendClientMessageEx( playerid, COLOR_WHITE, string );
		format(string,sizeof(string),"{FFFF00}Perfect City:{FF0000} %s retiro $%d de los fondos del gobierno, razón: %s.",GetPlayerNameEx(playerid),amount,reason);
		ABroadCast( COLOR_YELLOW, string, 2);
		Log("logs/especial.log", string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No hay fondos suficientes.");
	}
	return 1;
}

CMD:dejarfondos(playerid, params[])
{
	if(!Presidente(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres el lider del gobierno.");
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /dejarfondos (monto)");
		format(string, sizeof(string), "* BALANCE: $%d.", Tax);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		return 1;
	}
	if(amount < 0) return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Monto es inválido.");
	Tax += amount;
	SaveStuff();
	GivePlayerCash(playerid, -amount);
	format( string, sizeof( string ), "Depositaste $%d en los fondos del gobierno.", amount );
	SendClientMessageEx( playerid, COLOR_WHITE, string );
	return 1;
}

CMD:duty(playerid, params[]){
    if(IsACop(playerid) && GetPVarInt(playerid, "IsInArena") == 0 && !GetPVarInt(playerid, "EventToken") && Info[playerid][pJailed] == 0){
		if(OnDuty[playerid] == 1){
			OnDuty[playerid] = 0;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estás fuera de servicio.");
		}
		else{
			OnDuty[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estás en servicio.");
		}
	}
	return 1;
}

CMD:arrestar(playerid, params[]){
	if(IsACop(playerid)){
 		if(!IsAtArrestPoint(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el punto de arresto.");
		new string[128], giveplayerid, time;
		if(sscanf(params, "dddd", giveplayerid, time)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /arrestar playerid (Minutos) ");
		if(time < 1 || time > 30) { SendClientMessageEx(playerid, COLOR_WHITE, "Tiempo: 1 a 30 minutos."); return 1; }
		new suspect = GetClosestPlayer(playerid);
		if(IsPlayerConnected(suspect)){
			if(ProxDetectorS(5.0, playerid,suspect)){
				if(Info[suspect][pWantedLevel] < 1 && Info[playerid][pMember] != 8){
					SendClientMessageEx(playerid, COLOR_WHITE, "El sospechoso debe tener un nivel de búsqueda de al menos una estrella.");
					return 1;
				}
				format(string, sizeof(string), "%s fue arrestado.", GetPlayerNameEx(suspect));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                format(string, sizeof(string), "[Radio de policía] {FFFFFF}(Oficial %s) dice: hemos arrestado a {00D2CF}%s.", GetPlayerNameEx(playerid), GetPlayerNameEx(suspect));
                SendRadioMessage(1, TEAM_BLUE_COLOR, string);
                format(string, sizeof(string), "[Radio] {FFFFFF}(Agente %s) dice: hemos arrestado a {00D2CF}%s.", GetPlayerNameEx(playerid), GetPlayerNameEx(suspect));
                SendRadioMessage(2, TEAM_BLUE_COLOR, string);

				ResetPlayerWeaponsEx(suspect);
				GameTextForPlayer(suspect, "Fuiste arrestado", 5000, 5);
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1559.3228,-1693.7491,5.8970)){
					SetPlayerFacingAngle(suspect, 0);
					if(Info[suspect][pVIP] >= 2)
					{
						Info[suspect][pJailTime] = ((time*60)*75)/100;
					}
					else
					{
						Info[suspect][pJailTime] = time * 60;
					}
					DeletePVar(suspect, "IsFrozen");
					new rand;
		    		rand = random(sizeof(LSPDPrisonSpawns));
		    		SetPlayerPos(suspect, LSPDPrisonSpawns[rand][0], LSPDPrisonSpawns[rand][1], LSPDPrisonSpawns[rand][2]);
		    		LoadObjects(suspect);
					SetPlayerInterior(suspect, 10);
					Info[suspect][pInt] = 10;
					Info[suspect][pJailed] = 2;
					PhoneOnline[suspect] = 1;
					Info[suspect][pArrested] += 1;
					Info[suspect][pWantedLevel] = 0;
					SetPlayerToTeamColor(suspect);
					SetPlayerWantedLevel(suspect, 0);
					ClearAnimations(suspect);
					Info[suspect][pEstado] = 0;
					DeletePVar(suspect, "PlayerCuffed");
					PlayerCuffedTime[suspect] = 0;
					Info[suspect][pVW] = 500;
					SetPlayerVirtualWorld(suspect, 500);
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 613.3228,-589.1623,17.2266)) // Dillimore
				{
				    SetPlayerFacingAngle(suspect, 0);
					if(Info[suspect][pVIP] >= 2)
					{
						Info[suspect][pJailTime] = ((time*60)*75)/100;
					}
					else
					{
						Info[suspect][pJailTime] = time * 60;
					}
					DeletePVar(suspect, "IsFrozen");
 					new rand;
		    		rand = random(sizeof(PrisonDillmore));
		    		SetPlayerPos(suspect, PrisonDillmore[rand][0], PrisonDillmore[rand][1], PrisonDillmore[rand][2]);
					SetPlayerInterior(suspect, 5);
					Info[suspect][pInt] = 5;
					Info[suspect][pVW] = 400;
					SetPlayerVirtualWorld(suspect, 400);
					Info[suspect][pJailed] = 6;
					PhoneOnline[suspect] = 1;
					Info[suspect][pArrested] += 1;
					Info[suspect][pWantedLevel] = 0;
					SetPlayerToTeamColor(suspect);
					SetPlayerWantedLevel(suspect, 0);
					ClearAnimations(suspect);
					Info[suspect][pEstado] = 0;
					DeletePVar(suspect, "PlayerCuffed");
					PlayerCuffedTime[suspect] = 0;
				}
				else if(Team_FBI(playerid)){
					TogglePlayerControllable(suspect, 0);
					SetPVarInt(suspect, "LoadingObjects", 1);
					SetTimerEx("SafeLoadObjects", 4000, 0, "d", suspect);
					SetPlayerInterior(suspect, 1);
					Info[suspect][pVW] = 600;
					Info[suspect][pInt] = 1;
					SetPlayerVirtualWorld(suspect, 600);
					SetPlayerPos(suspect,315.1677,-1451.5564,-33.5292);
					if(Info[suspect][pVIP] >= 2)
					{
						Info[suspect][pJailTime] = ((time*60)*75)/100;
					}
					else
					{
						Info[suspect][pJailTime] = time * 60;
					}
					Info[suspect][pJailed] = 3;
					PhoneOnline[suspect] = 1;
					DeletePVar(suspect, "IsFrozen");
					Info[suspect][pArrested] += 1;
					Info[suspect][pWantedLevel] = 0;
					SetPlayerToTeamColor(suspect);
					SetPlayerWantedLevel(suspect, 0);
					ClearAnimations(suspect);
					Info[suspect][pEstado] = 0;
					DeletePVar(suspect, "PlayerCuffed");
					PlayerCuffedTime[suspect] = 0;
				}
				else{
					JailPrice[suspect] = 0;
					format(string, sizeof(string), "Fuiste encarcelado %d segundos.   Fianza: No Disponible", Info[suspect][pJailTime]);
					SendClientMessageEx(suspect, COLOR_LIGHTBLUE, string);
				}
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No hay nadie cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres de las fuerzas de la ley.");
	return 1;
}

CMD:estacion(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER){
		return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar en un vehiculo y ser el conductor.");
	}
    else if(isnull(params)){
			SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /estacion [estación] (0 - OFF)");
        SendClientMessageEx(playerid, COLOR_GRAD2, "(1) Musica Ganster - (2) True HipHop - (3) Dubstep Time - (4) Reggaeton iPauta.FM - (5) Drummer");
        SendClientMessageEx(playerid, COLOR_GRAD2, "(6) Electro Sound - (7) CENTRAL! - (8) Rap Underground - (9) Techno Dance - (10) Pop Moment");
        SendClientMessageEx(playerid, COLOR_GRAD2, "(11) Rock Power - (12) Rock Hitz - (13) Techno FM - (14) Smooth jazz");
        return 1;
    }
    new string[84], station[64];
	switch(strval(params)){
		case 0:{
			format(string, sizeof(string), "* %s apaga la radio del vehiculo.",GetPlayerNameEx(playerid));
			foreach(Player, i) if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
			{
				StopAudioStreamForPlayer(playerid);
				estacionp[i] = 0;
				estacionveh[GetPlayerVehicleID(playerid)] = 0;
			}
		}
		case 1:{
			format(string, sizeof(string), "* %s cambia la estación a Musica Ganster.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=84645&");
			estacionveh[GetPlayerVehicleID(playerid)] = 1;
		}
		case 2: {
			format(string, sizeof(string), "* %s cambia la estación a True HipHop.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://www.truehiphopfm.de/thhint/truehiphopfm.pls");
			estacionveh[GetPlayerVehicleID(playerid)] = 2;
		}
		case 3: {
			format(string, sizeof(string), "* %s cambia la estación a Dubstep Time.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=41761");
			estacionveh[GetPlayerVehicleID(playerid)] = 3;
		}
		case 4: {
			format(string, sizeof(string), "* %s cambia la estación a Reggaeton iPauta.FM.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=226484");
			estacionveh[GetPlayerVehicleID(playerid)] = 4;
		}
		case 5: {
			format(string, sizeof(string), "* %s cambia la estación a Drummer.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=115965");
			estacionveh[GetPlayerVehicleID(playerid)] = 5;
		}
		case 6: {
			format(string, sizeof(string), "* %s cambia la estación a Electro Sound.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1435507");
			estacionveh[GetPlayerVehicleID(playerid)] = 6;
		}
		case 7: {
			format(string, sizeof(string), "* %s cambia la estación a CENTRAL!.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=131720");
			estacionveh[GetPlayerVehicleID(playerid)] = 7;
		}
		case 8: {
			format(string, sizeof(string), "* %s cambia la estación a Rap Underground.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=148196");
			estacionveh[GetPlayerVehicleID(playerid)] = 8;
		}
		case 9: {
			format(string, sizeof(string), "* %s cambia la estación a Techno Dance.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1564322");
			estacionveh[GetPlayerVehicleID(playerid)] = 9;
		}
		case 10: {
			format(string, sizeof(string), "* %s cambia la estación a Pop Moment.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=128607");
			estacionveh[GetPlayerVehicleID(playerid)] = 10;
		}
		case 11: {
			format(string, sizeof(string), "* %s cambia la estación a .977 Rock Power.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=38370");
			estacionveh[GetPlayerVehicleID(playerid)] = 11;
		}
		case 12: {
			format(string, sizeof(string), "* %s cambia la estación a Rock Hitz.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=31903");
			estacionveh[GetPlayerVehicleID(playerid)] = 12;
		}
		case 13: {
			format(string, sizeof(string), "* %s cambia la estación a Techno FM.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=57352");
			estacionveh[GetPlayerVehicleID(playerid)] = 13;
		}
		case 14: {
			format(string, sizeof(string), "* %s cambia la estación a Smooth jazz.",GetPlayerNameEx(playerid));
			format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=86433");
			estacionveh[GetPlayerVehicleID(playerid)] = 14;
		}
		default: return SendClientMessageEx(playerid, COLOR_GRAD2, "Está estación es inválida.");
	}
    ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    foreach(Player, i) if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
	{
		StopAudioStreamForPlayer(playerid);
		estacionp[i] = PlayAudioStreamForPlayer(playerid, station, 1, 1, 1, 1, 0);
    }
    return 1;
}

CMD:vendermateriales(playerid, params[])
{
	new string[128], giveplayerid, amount, price;
	if(sscanf(params, "ddd", giveplayerid, amount, price)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /vendermateriales (playerid) (Monto) (Precio)");
	if(amount < 1 || amount > 99999999) { SendClientMessageEx(playerid, COLOR_WHITE, " Los valores no pueden ser mayores a 99999999 gramos ni menores a 1."); return 1; }
	if(price < 1) { SendClientMessageEx(playerid, COLOR_WHITE, " El precio no puede ser menor que 1,"); return 1; }
 	if (GetPVarInt(playerid, "ArmsTimer") > 0)
	{
        format(string, sizeof(string), " Tienes que esperar %d segundos despues de haber dado algún arma o materiales.", GetPVarInt(playerid, "ArmsTimer"));
        SendClientMessageEx(playerid,COLOR_WHITE,string);
        return 1;
    }
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerConnected(giveplayerid))
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "No puedes venderte a ti mismo.");
					return 1;
				}
				format(string, sizeof(string), "* Has ofrecido a %s, %d materiales por $%d.", GetPlayerNameEx(giveplayerid), amount, price);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s quiere venderte %d materiales por $%d, (Utiliza: /aceptar materiales para comprar).", GetPlayerNameEx(playerid), amount, price);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				MatsOffer[giveplayerid] = playerid;
				MatsPrice[giveplayerid] = price;
				return MatsAmount[giveplayerid] = amount;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "ID Inválido.");
	}
	return 1;
}

CMD:serverstats(playerid, params[])
{
	new string[128];
	new formatmin[4];
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] <= 4000) return SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[ADM]:{FF0000} No eres el encargado de esto ó no eres administrador.");
	if(MPMinute < 10) format(formatmin,sizeof(formatmin),"0%d",MPMinute);
	else format(formatmin,sizeof(formatmin),"%d",MPMinute);
	format(string,sizeof(string),"Estadisticas del Servidor - Versión %s (desde Fecha Indefinida.).",SERVER_GM_TEXT);
	SendClientMessageEx(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), "* Objetos: %d | Pickups: %d | Map Icons: %d | 3D Text Labels: %d | TextDraws: %d | Casas: %d",CountDynamicObjects(),CountDynamicPickups(),CountDynamicMapIcons(),CountDynamic3DTextLabels(),textdrawscount,MAX_HOUSES);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Logins: %d | Conexiones: %d | Registrados: %d | Autobaneados: %d | Uptime: %d horas",TotalLogin, TotalConnect, TotalRegister, TotalAutoBan, TotalUptime);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Usuarios Conectados: %d | Récord: %d (%d/%d/%d - %d:%s) | Vehiculos de Usuarios: %d",Iter_Count(Player),MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,formatmin,PlayerCars);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:venderchaleco(playerid, params[])
{
    if(Info[playerid][pJob] != 14)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	new string[128], giveplayerid, money;
	if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /venderchaleco (playerid) (precio)");
	if (GetPVarInt(playerid, "GuardTimer") > 0)
	{
		format(string, sizeof(string), " Debes esperar %d segundos después de haber vendido.", GetPVarInt(playerid, "GuardTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}
	if(money < 1 || money > 5000) { SendClientMessageEx(playerid, COLOR_WHITE, "Precio: $1 a $5,000."); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{

		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			SetPVarInt(playerid, "GuardTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
			format(string, sizeof(string), "* Ofreciste Chaleco a %s por $%d.", GetPlayerNameEx(giveplayerid), money);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Vendedor De Chalecos %s quiere darte un Chaleco por $%d, usa /aceptar chaleco para aceptar.", GetPlayerNameEx(playerid), money);
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			GuardOffer[giveplayerid] = playerid;
			GuardPrice[giveplayerid] = money;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "El jugador está cerca tuyo.");
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no está conectado.");
	}
	return 1;
}

CMD:tirar(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /tirar (Nombre)");
		SendClientMessageEx(playerid, COLOR_GREY, "Nombres: Armas, Hierba, Crack, Materiales, PaquetesM (Materiales), PaquetesD(Drogas), Radio");
		return 1;
	}

	if(strcmp(choice,"materiales",true) == 0)
	{
		if(Info[playerid][pMats] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Has tirado tus %d materiales.", Info[playerid][pMats]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s ha tirado sus materiales.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pMats] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes materiales!");
		}
	}
	else if(strcmp(choice,"radio",true) == 0)
	{
		if(Info[playerid][pRadio] != 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s ha tirado su radio portable.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pRadio] = 0;
			Info[playerid][pRadioFreq] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un radio portable.");
		}
	}
	else if(strcmp(choice,"armas",true) == 0)
	{
		if(GetPVarInt(playerid, "IsInArena") == 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes tirar las armas en el paintball.");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto en un evento.");
			return 1;
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		ResetPlayerWeaponsEx(playerid);
		format(string, sizeof(string), "* %s ha tirado todas sus armas.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else if(strcmp(choice,"hierba",true) == 0)
	{
		if(Info[playerid][pPot] > 0)
		{
			format(string, sizeof(string), "Tiraste %d gramos de hierba.", Info[playerid][pPot]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s ha tirado sus bolsas de hierba.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pPot] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes hierba.");
		}
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if(Info[playerid][pCrack] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Tiraste %d gramos de crack.", Info[playerid][pCrack]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s ha tirado sus bolsas de crack.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pCrack] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes crack.");
		}
	}
	else if(strcmp(choice,"PaquetesM",true) == 0)
	{
		if(GetPVarInt(playerid, "Packages") > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s ha tirado sus paquetes de materiales.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "Packages");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes paquetes de materiales.");
		}
	}
	else if(strcmp(choice,"PaquetesD",true) == 0)
	{
		if(Info[playerid][pCrates] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s ha tirado los paquetes de droga.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Info[playerid][pCrates] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No tienes paquetes de drogas.");
		}
	}
	else if(strcmp(choice,"pizza",true) == 0)
	{
		if(GetPVarInt(playerid, "Pizza") > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s ha tirado la entrega de pizzas.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetPVarInt(playerid, "Pizza", 0);
            DestroyProgressBar(PizzaBar[playerid]);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No estás llevando pizzas.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /tirar (Nombre)");
		SendClientMessageEx(playerid, COLOR_GREY, "Nombres: Armas, Hierba, Crack, Materiales, PaquetesM (Materiales), PaquetesD (Drogas), Radio");
	}
	return 1;
}

CMD:mostrar(playerid, params[])
{
	new string[128], giveplayerid, choice[32];
	if(sscanf(params, "ds[32]", giveplayerid, choice))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /mostrar (playerid) (Nombre)");
		SendClientMessageEx(playerid, COLOR_GREY, "Nombres: Hierba, Crack, Materiales");
		return 1;
	}
	if(giveplayerid == playerid)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes enseñarte a ti mismo.");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (!ProxDetectorS(5.0, playerid, giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
				return 1;
			}
			if (strcmp(choice, "materiales", true) == 0)
			{
			    new amount = Info[playerid][pMats];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_WHITE, "No tienes materiales!");
					return 1;
			    }
				format(string, sizeof(string), "%s te ha mostrado sus %d Materiales.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Enseñaste a %s tus %d Materiales.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if (strcmp(choice, "hierba", true) == 0)
			{
			    new amount = Info[playerid][pPot];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_WHITE, "No tienes hierba.");
					return 1;
			    }
				format(string, sizeof(string), "%s te ha mostrado sus %d bolsas de hierba.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Enseñaste a %s tus %d bolsas de hierba.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if (strcmp(choice, "crack", true) == 0)
			{
			    new amount = Info[playerid][pCrack];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_WHITE, "No tienes crack.");
					return 1;
			    }
				format(string, sizeof(string), "%s te ha mostrado sus %d gramos de crack.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Enseñaste a %s tus %d gramos de crack.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
	}
	return 1;
}

CMD:saludar(playerid, params[])
{
	new string[128], giveplayerid, style;
	if(sscanf(params, "dd", giveplayerid, style)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /saludar (playerid) (estilo (1-8))");

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid == playerid)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer eso tu mismo.");
			return 1;
		}
		if(style >= 1 && style < 9)
		{
			new Float: ppFloats[3];
			GetPlayerPos(giveplayerid, ppFloats[0], ppFloats[1], ppFloats[2]);
			if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2]))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Estás demasiado lejos de la persona.");
				return 1;
			}
			SetPVarInt(playerid, "shrequest", giveplayerid);
			SetPVarInt(playerid, "shstyle", style);

			format(string, sizeof(string), "Saludaste a %s, espera que el responda.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);

			format(string, sizeof(string), "%s te ha saludado, porfavor usa '/aceptar saludo' para darle la mano.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /saludar (playerid) (estilo (1-8))");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador desconectado.");
	return 1;
}
/*CMD:vendercoche(playerid, params[])
{
	new vstring[1024];

	if(!IsPlayerInRangeOfPoint(playerid, 5, 376.1310,-63.8547,-93.8500)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en el ayuntamiento.");
	for(new i; i < MAX_PLAYERVEHICLES; i++)
	{
		if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
			format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

		else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
			format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

		else
			format(vstring, sizeof(vstring), "%s\nVacío", vstring);
	}
	SafeDialogEx(playerid, SELLCAR, DIALOG_STYLE_LIST, "{008EC1}Venta de Vehiculo", vstring, "Vender", "Cancelar");
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Si vendes el vehículo te pagarán la mitad del precio de lo que te habia costado.");
	return 1;
}*/
CMD:cpeaje(playerid, params[])
{
	new string[256];
	if(Info[playerid][pLeader] == 1 || Info[playerid][pLeader] == 2 || Info[playerid][pLeader] == 3)
	{
	    if(PeajeCerrado[playerid] == 0)
	    {
	        format(string, sizeof(string), "* %s ha cerrado los peajes y serán puestos bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(1, TEAM_RADIO_COLOR, string);
      		format(string, sizeof(string), "* %s ha cerrado los peajes y serán puestos bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(2, TEAM_RADIO_COLOR, string);
      		format(string, sizeof(string), "* %s ha cerrado los peajes y serán puestos bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    		format(string, sizeof(string), "* %s ha cerrado los peajes y serán puestos bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(7, TEAM_RADIO_COLOR, string);
	        PeajeCerrado[playerid] = 1;
	    }
	    else
	    {
     		format(string, sizeof(string), "* %s ha abierto los peajes y dejaron de estar bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(1, TEAM_RADIO_COLOR, string);
      		format(string, sizeof(string), "* %s ha abierto los peajes y dejaron de estar bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(2, TEAM_RADIO_COLOR, string);
      		format(string, sizeof(string), "* %s ha abierto los peajes y dejaron de estar bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    		format(string, sizeof(string), "* %s ha abierto los peajes y dejaron de estar bajo custodia.", GetPlayerNameEx(playerid));
	    	SendRadioMessage(7, TEAM_RADIO_COLOR, string);
	        PeajeCerrado[playerid] = 0;
	    }
	}
	else Message(playerid, COLOR_WHITE, "No tienes autorización para usar este comando.");
	return 1;
}
	//dar licencia PD by benjamin alastre

CMD:darlarma(playerid, params[])
{
	new string[128], giveplayerid;
	if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darlarma (playerid)");
	if(Info[playerid][pRank] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas ser mayor de rango 2.");
	if(Info[giveplayerid][pGunLic] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este jugador ya tiene licencia de armas.");
	if(IsPlayerConnected(giveplayerid))
	{
		if(Info[giveplayerid][pGunLic] == 0)
		{
		format(string, sizeof(string), "* Le has dado una licencia de armas a %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Agente %s te ha dado una licencia de armas.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Agente %s le ha dado una licencia de armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		SendRadioMessage(1, TEAM_RADIO_COLOR, string);
		Info[giveplayerid][pGunLic] = 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	}
	return 1;
}
CMD:limpiar(playerid, params[])
{
	new string[128], giveplayerid;
	if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /limpiar (playerid)");
	if(IsPlayerConnected(giveplayerid))
	{
		format(string, sizeof(string), "* Limpiaste el nivel de búsqueda %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Agente %s a limpiado tu nivel de búsqueda.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Agente %s a limpiado el nivel de búsqueda de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		SendRadioMessage(1, TEAM_RADIO_COLOR, string);
		SendRadioMessage(2, TEAM_RADIO_COLOR, string);
		SendRadioMessage(3, TEAM_RADIO_COLOR, string);
		Info[giveplayerid][pWantedLevel] = 0;
		SetPlayerToTeamColor(giveplayerid);
		SetPlayerWantedLevel(giveplayerid, 0);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	}
	return 1;
}

CMD:gotopoint(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 4000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	new points;
	if(sscanf(params, "d", points)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gotopoint (IDPunto)");

	if(points >= MAX_POINTS || points < 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gotopoint (0-8)");
		return 1;
	}
	SetPlayerPos(playerid, Points[points][Pointx], Points[points][Pointy], Points[points][Pointz]);
	return 1;
}

function PayDayEx(playerid)
{
	new rand, string[256];
	rand = random(22);
	format(string, sizeof(string), "Gobierno Estatal de Los Santos.\n\nEl gobierno le otorga a cada persona un bono de pago, pero es necesario\nque nos confirme sus datos y enviar el código de seguridad:\n\nNombres: %s\nEdad: %d\nPago: %i\nPago De Facción/Fam: %i\nNuevo Código: %s",GetPlayerNameEx(playerid), Info[playerid][pAge], 130*Info[playerid][pLevel], 190*Info[playerid][pRank], PayDayCodes[rand]);
	ShowPlayerDialog(playerid, PAYDAY1, DIALOG_STYLE_INPUT,"{008EC1}Cheque de Pago",string,"Enviar","Salir");
	IDCode[playerid] = rand;
	return 1;
}

CMD:gunlocker(playerid, params[])
{
	new Float: x, Float: y, Float: z;
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
			if(GetPlayerCash(playerid) < 500)
			{
				SendClientMessageEx(playerid, COLOR_WHITE," No tienes 500$ para mejorar los lockers de tu vehiculo!");
				return 1;
			}
			if(PlayerVehicleInfo[playerid][d][pvWepUpgrade] < 7)
			{
				new string[114];
				GameTextForPlayer(playerid,"~g~Gun-locker Mejorado!",5000,6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				PlayerVehicleInfo[playerid][d][pvWepUpgrade]++;
				GivePlayerCash(playerid, -500);
				SendClientMessageEx(playerid, COLOR_WHITE, "Mejoraste la capacidad de los lockers de armas de tu coche.");
				format(string, sizeof(string), "{FF8000}[INDICACION]:{FFFFFF} Para usar esta función, los comandos son /smaletero y /gmaletero. Tienes %d lockers disponibles.", PlayerVehicleInfo[playerid][d][pvWepUpgrade]+1);
				SendClientMessageEx(playerid, COLOR_GRAD2, string );
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ya mejoraste los lockers de armas para tu coche.");
				return 1;
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, " No estás cerca de un vehiculo tuyo.");
	return 1;
}
//


CMD:cmejorar(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREEN,"Utiliza: /cmejorar (Nombre)");
		SendClientMessageEx(playerid, COLOR_GRAD5, "CASA 1:gunlocker - CASA 2: gunlocker2");
		return 1;
	}
	if(strcmp(params, "gunlocker", true) == 0)
	{
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
		{
			switch(HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade])
			{
				case 0:
				{
					if(GetPVarInt(playerid, "Cash") >= 5000)
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade] = 1;
						HouseInfo[Info[playerid][pPhousekey]][hWeapons][0] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000.");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 1:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey]][hWeapons][1] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000.");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 2:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey]][hWeapons][2] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 3:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey]][hWeapons][3] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 4:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey]][hWeapons][4] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 5:
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Lo sentimos, no hay más espacios disponibles.");
					return 1;
				}
			}
			SaveHouses();
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, " No eres dueño de una casa.");
			return 1;
		}
	}
	else if(strcmp(params, "gunlocker2", true) == 0)
	{
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(Info[playerid][pPhousekey2] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey2]][hOwner], true) == 0)
		{
			switch( HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade] )
			{
				case 0:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade] = 1;
						HouseInfo[Info[playerid][pPhousekey2]][hWeapons][0] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 1:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey2]][hWeapons][1] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 2:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey2]][hWeapons][2] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 3:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey2]][hWeapons][3] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 4:
				{
					if( GetPVarInt(playerid, "Cash") >= 5000 )
					{
						SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-5000);
						HouseInfo[Info[playerid][pPhousekey2]][hGLUpgrade]++;
						HouseInfo[Info[playerid][pPhousekey2]][hWeapons][4] = 0;
						SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un nuevo slot más para tu casa, el costo es de $5000");
						SendClientMessageEx(playerid, COLOR_GRAD2, "{FF8000}[INDICACION]:{FFFFFF} Para usar tus GunLockers usa, /sarma - /garma" );
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "No tienes el dinero suficiente. ($5,000).");
						return 1;
					}
				}
				case 5:
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Lo sentimos, no hay más espacios disponibles.");
					return 1;
				}
			}
			SaveHouses();
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, " No tienes una segunda casa.");
			return 1;
		}
	}
	return 1;
}

CMD:darvest(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] != 6000 && Info[playerid][pShopTech] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
	new string[128], giveplayerid, slot, invoice[64];
	if(sscanf(params, "dds[64]", giveplayerid, slot, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darvest (playerid) (slot(0-9)) (invoice #)");

	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19142;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 1;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.07998;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.03999;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	format(string, sizeof(string), "Police Vest en el slot %d, usa /toys para editar la posición.", slot);
	SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "Diste a %s un police vest en el slot %d", GetPlayerNameEx(giveplayerid), slot);
	SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "[SHOPVEST] %s has given %s a police vest toy - Invoice %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:darvest2(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] != 6000 && Info[playerid][pShopTech] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
	new string[128], giveplayerid, slot, invoice[64];
	if(sscanf(params, "dds[64]", giveplayerid, slot, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darvest (playerid) (slot(0-9)) (invoice #)");

	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19515;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 1;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.07998;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.03999;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	format(string, sizeof(string), "Police Vest en el slot %d, usa /toys para editar la posición.", slot);
	SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "Diste a %s un police vest en el slot %d", GetPlayerNameEx(giveplayerid), slot);
	SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "[SHOPVEST] %s has given %s a police vest toy - Invoice %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:listatoys(playerid, params[])
{
	if (Info[playerid][pAdminZC] >= 4 || Info[playerid][pShopTech] == 1)
	{
		new
			iTargetID;

		if(sscanf(params, "d", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Utiliza: /listatoys (playerid)");
		}
		else if(IsPlayerConnected(iTargetID)) for(new iToyIter, szMessage[128]; iToyIter < MAX_PLAYERTOYS; ++iToyIter) {
			for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsAll); ++LoopRapist) {
				if(HoldingObjectsAll[LoopRapist][holdingmodelid] == PlayerToyInfo[iTargetID][iToyIter][ptModelID]) {
					format(szMessage, sizeof(szMessage), "%s (slot %i, parte: %s)", HoldingObjectsAll[LoopRapist][holdingmodelname], iToyIter, HoldingBones[PlayerToyInfo[iTargetID][iToyIter][ptBone]]);
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					break;
				}
			}
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador Invalido.");
	}
	return 1;
}

CMD:placa(playerid, params[])
{
 if(Info[playerid][pMember] >= 1 || Info[playerid][pLeader] >= 1 || Info[playerid][pMember] >= 2 || Info[playerid][pLeader] >= 2 || Info[playerid][pMember] >= 3 || Info[playerid][pLeader] >= 3 || Info[playerid][pMember] >= 17 || Info[playerid][pLeader] >= 17){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /placa (playerid)");
		if(giveplayerid != INVALID_PLAYER_ID){
			if(ProxDetectorS(5.0, playerid, giveplayerid)){
				switch(Info[playerid][pMember]){
					case 1 .. 4, 17:{
						new
						infoArrays[3][64];

						GetPlayerFactionInfo(playerid, infoArrays[0], infoArrays[1], infoArrays[2]);

						SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "%s %s es un miembro de %s.", infoArrays[0], GetPlayerNameEx(playerid), infoArrays[2]);
						SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Asignación actual: %s.", infoArrays[1]);
						SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
						switch(Info[playerid][pMember]){
							case 1 .. 4: SendClientMessageEx(giveplayerid, COLOR_WHITE, "Con autoridad en San Andreas.");
						}
						if(Info[playerid][pMember] != 4) SendClientMessageEx(giveplayerid, COLOR_WHITE, "Oficial tiene la autoridad para arrestar.");
						SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "* %s muesta su placa a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					default: SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
				}
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca de ti.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
	}
	return 1;
}

CMD:reparar(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes reparar un vehiculo estando dentro de uno.");
	new string[128];
	if(GetPVarInt(playerid, "EventToken")) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en un evento.");
	}
	new giveplayerid, money;
	if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /reparar (playerid) (precio)");
	if(Team_Mecanicos(playerid)){
		if(money < 2000 || money > 10000) { SendClientMessageEx(playerid, COLOR_WHITE, " Precio: $2,000 a $10,000!"); return 1; }
		if(IsPlayerConnected(giveplayerid)){
			if(giveplayerid != INVALID_PLAYER_ID){
			    new closestcar = GetClosestCar(playerid);
	  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 8.0)){
					if(ProxDetectorS(8.0, playerid, giveplayerid)&& IsPlayerInAnyVehicle(giveplayerid)){
						if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, " No puedes hacer esto."); return 1; }
	                    if(!IsAMBike(closestcar) && !IsAPlane(closestcar))
						{
							new engine,lights,alarm,doors,bonnet,boot,objective;
							GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
							if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
							{
								SendClientMessageEx(playerid, COLOR_GRAD1, "Este vehiculo necesita estar con el capo abierto para repararlo.");
								return 1;
							}
						}
						format(string, sizeof(string), "* Ofreciste a %s reparar su coche por $%d .",GetPlayerNameEx(giveplayerid),money);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecánicos %s quiere reparar tu coche por $%d. (usa /aceptar fix)",GetPlayerNameEx(playerid),money);
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						RepairOffer[giveplayerid] = playerid;
						RepairPrice[giveplayerid] = money;
					}
					else{
						SendClientMessageEx(playerid, COLOR_WHITE, " Ese jugador debe estar cerca tuyo y dentro de un auto.");
					}
				}
				else{
				    SendClientMessageEx(playerid, COLOR_WHITE, " Ningún vehiculo no está cerca tuyo.");
				}
			}
		}
		else{
			SendClientMessageEx(playerid, COLOR_WHITE, " Jugador desconectado.");
		}
	}
	else{
		SendClientMessageEx(playerid, COLOR_WHITE, " No eres mecánico.");
	}
	return 1;
}

CMD:revisar(playerid, params[])
{
	if(Info[playerid][pConnectTime] > 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /revisar (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
			    if(GetPlayerSpecialAction(giveplayerid) != SPECIAL_ACTION_HANDSUP) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes revisar a una persona si no tiene las manos arriba (/rendirse).");
				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes buscarte a ti mismo.");
				SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
				format(string, sizeof(string), "*** Objetos de %s ...  ***", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				if(Info[giveplayerid][pMask] > 0) SendClientMessageEx(playerid, COLOR_LIGHTRED, "Ganzuas.");
				if(pbomba[giveplayerid] > 0) SendClientMessageEx(playerid,COLOR_RED,"Bomba C4.");
				if(Info[giveplayerid][pMask] > 0) SendClientMessageEx(playerid, COLOR_GREY, "Máscara.");
				if(Info[giveplayerid][pPot] > 0)
				{
					format(string, sizeof(string), "%d gramos de hierba.", Info[giveplayerid][pPot]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(Info[giveplayerid][pWSeeds] == 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Semillas de hierba");
				}
				if(Info[giveplayerid][pCrack] > 0)
				{
					format(string, sizeof(string), "%d gramos de crack.", Info[giveplayerid][pCrack]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(Info[giveplayerid][pMats] > 0)
				{
					format(string, sizeof(string), "%d materiales.", Info[giveplayerid][pMats]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(Info[giveplayerid][pPhoneBook] > 0) SendClientMessageEx(playerid, COLOR_GREY, "Phone book.");
				new weaponname[50];
				format(string, sizeof(string), "*** Armas de %s...  ***", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				for (new i = 0; i < 13; i++)
				{
					if(Info[giveplayerid][pWeapons][i] > 0)
					{
						GetWeaponName(Info[giveplayerid][pWeapons][i], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Armas: %s.", weaponname);
						SendClientMessageEx(playerid, COLOR_GRAD1, string);
					}
				}
				new cash =  GetPlayerCash(giveplayerid);
				format(string, sizeof(string), "*** Dinero: %d  ***", cash);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
				format(string, sizeof(string), "* %s empezó a palpear de pies a cabeza a %s, en busca de objetos", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado no válido.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, " No puedes hacer esto, necesitas tener 3 horas jugadas!");
	return 1;
}

CMD:qseguroveh(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 3)
	{
		new vehicleid;
		if(sscanf(params, "d", vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /qseguroveh (vehicle id)");

		if(IsValidVehicleID(vehicleid))
		{
			vehicle_unlock_doors(vehicleid);
			GameTextForPlayer(playerid, "~g~Abierto", 1000, 6);
			PlayerPlaySoundEx(1145, 0.0, 0.0, 0.0);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Id del vehiculo invalida.");
	}
	return 1;
}
CMD:calcular(playerid, params[])
{
	new string[128], method[20], value1, value2;
	if(sscanf(params, "ds[20]d", value1, method, value2))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "USA: /calcular (valor) (operación) (valor).");
		SendClientMessageEx(playerid, COLOR_GRAD1, "Operaciones: sumar [+], restar [-], Multiplicar[*], Dividir.[/]");
		return 1;
	}
	if(strcmp(method,"multiplicar",true) == 0 || strcmp(method,"*",true) == 0)
	{
		new sum = value1*value2;
		format(string,sizeof(string),"* %d multiplicado por %d: %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"dividir",true) == 0 || strcmp(method,"/",true) == 0)
	{
		if(value2 == 0)
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"LOL! El mundo caerá en 10 segundos... No se puede dividir por cero idiota!");
			return 1;
		}
		new sum = value1/value2;
		format(string,sizeof(string),"* %d dividido por %d: %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"sumar",true) == 0 || strcmp(method,"+",true) == 0)
	{
		new sum = value1+value2;
		format(string,sizeof(string),"* %d + %d = %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"restar",true) == 0 || strcmp(method,"-",true) == 0)
	{
		new sum = value1-value2;
		format(string,sizeof(string),"* %d - %d = %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	return 1;
}

CMD:desmutearad(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /desmutearad (playerid)");

		if(IsPlayerConnected(giveplayerid))
		{
			if(Info[giveplayerid][pADMute] == 1)
			{
				if(Info[giveplayerid][pJailed] != 0)
				{
					SendClientMessageEx(playerid, COLOR_LIGHTRED, "{FFFF00}[ERROR]:{FFFFFF} No puedes desmutear del comando /ad si la persona está en jail!");
					return 1;
				}
				format(string, sizeof(string), "[AdmCmdExe]: %s fue desmuteado del cmd /ad por %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
				Log("logs/admin.log", string);
				Info[giveplayerid][pADMute] = 0;
				Info[giveplayerid][pADMuteTotal]--;
			}
			else return SendClientMessageEx(playerid, COLOR_LIGHTRED,"{FFFF00}[ERROR]:{FFFFFF} Ese jugador ya está muteado de los anuncios!");
		}
	}
	return 1;
}

CMD:mutearad(playerid, params[]){
		if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
		if (Info[playerid][pAdminZC] >= 2 || Info[playerid][pHelper] >= 2){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /mutearad (playerid)");

		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pAdminZC] >= 1338) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando con administradores");
			if(Info[giveplayerid][pADMute] == 0){
				Info[giveplayerid][pADMute] = 1;
				Info[giveplayerid][pADMuteTotal] += 1;
				format(string, sizeof(string), "[AdmCmdExe]: %s fue muteado del cmd /ad por %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/admin.log", string);
				ABroadCast(COLOR_ORANGE,string,2);
				if(Info[giveplayerid][pADMuteTotal] > 6){
					new year, month,day;
					getdate(year, month, day);
					new playerip[32];
					GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
					format(string, sizeof(string), "Perfect City %s(IP:%s) ha sido baneado %s, Razon: Excesivas advertencias (mutes) (%d-%d-%d)", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid),month,day,year);
					Log("logs/ban.log", string);
					format(string, sizeof(string), "Perfect City: %s fue baneado, razón:Abuso de /AD [Total: 6]", GetPlayerNameEx(giveplayerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
					Info[giveplayerid][pBannedZC] = 2;
					new ip[32];
					GetPlayerIp(giveplayerid,ip,sizeof(ip));
					AddBan(ip);
					Kick(giveplayerid);
				}
			}
			else{
				if(Info[playerid][pAdminZC] >= 2){
					ShowAdMuteFine(giveplayerid);
					format(string, sizeof(string), "Ofreciste a %s una posibilidad de desmutearse del comando /ad.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya está muteado del comando /ad.");
 			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}
CMD:prision(playerid, params[]){
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2648.9587,-2384.3145,13.6328)){
		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el punto de arresto para Fort DeMorgan.");
		return 1;
	}
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /prision (playerid)");
	if(Info[playerid][pRank] < 2)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Usted debe tener al menos el rango 2.");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_WHITE, " No puedes meterte a la prisión a ti mismo."); return 1; }
		if(Info[giveplayerid][pJudgeJailTime] == 0 && Info[giveplayerid][pJudgeJailType] != 2) { SendClientMessageEx(playerid, COLOR_WHITE, "Este jugador no tiene que estar en la cárcel."); return 1; }
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new string[37 + MAX_PLAYER_NAME];
			SetPVarInt(giveplayerid, "IsFrozen", 0);
			format(string, sizeof(string), "* Has traído a %s a Fort DeMorgan.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s te ha llevado a Fort DeMorgan.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			GameTextForPlayer(giveplayerid, "~w~Bienvenido to ~n~~r~Fort DeMorgan", 5000, 3);
			TogglePlayerControllable(giveplayerid, 1);
			ClearAnimations(giveplayerid);
			Info[giveplayerid][pEstado] = 0;
			SetPVarInt(giveplayerid, "PlayerCuffed", 0);
			Info[giveplayerid][pWantedLevel] = 0;
			SetPlayerToTeamColor(giveplayerid);
			SetPlayerWantedLevel(giveplayerid, 0);
			SetPlayerSkin(giveplayerid, 50);
			Info[giveplayerid][pJailed] = 5;
			PhoneOnline[giveplayerid] = 1;
			Info[giveplayerid][pJailTime] = Info[giveplayerid][pJudgeJailTime];
			SetPlayerInterior(giveplayerid, 0);
			Info[giveplayerid][pInt] = 0;
			SetPlayerSkin(giveplayerid, 50);
			SetPlayerVirtualWorld(giveplayerid, 1000);
			Info[giveplayerid][pVW] = 1000;
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			LoadObjects(giveplayerid);
			new rand = random(sizeof(ICPrisonSpawns));
			Streamer_UpdateEx(giveplayerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
			SetPlayerPos(giveplayerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
			ResetPlayerWeaponsEx(giveplayerid);
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Jugador no válido.");
	return 1;
}
CMD:orden(playerid, params[])
{
	if(Info[playerid][pMember] != 9)
	{
  		SendClientMessageEx(playerid, COLOR_WHITE, "No formas parte del sistema judicial.");
  		return 1;
	}
	if(Info[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado a usar este comando, razón: Rango insuficiente.");
  		return 1;
	}
	new string[128], crime[64], giveplayerid;
	if(sscanf(params, "ds[64]", giveplayerid, crime)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /orden (playerid) (crimen)");

	if(IsPlayerConnected(giveplayerid))
	{
		if(strlen(Info[giveplayerid][pWarrant]) != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya tiene órdenes activas.");
		format(Info[giveplayerid][pWarrant], 64, crime);
		format(string, sizeof(string), "* Corte: Se ordena detener y presentar ante la corte judicial a %s para responder a las acusaciones de:", GetPlayerNameEx(giveplayerid));
		for(new i = 1; i < 5; i++)
		{
		    SendRadioMessage(i, TEAM_RADIO_COLOR, string);
		}
		SendRadioMessage(7, TEAM_RADIO_COLOR, string);
		SendRadioMessage(9, TEAM_RADIO_COLOR, string);
		format(string, sizeof(string), "* Corte: %s", crime);
		for(new i = 1; i < 5; i++)
		{
		    SendRadioMessage(i, TEAM_RADIO_COLOR, string);
		}
		SendRadioMessage(7, TEAM_RADIO_COLOR, string);
		SendRadioMessage(9, TEAM_RADIO_COLOR, string);
	}
	return 1;
}

CMD:qorden(playerid, params[])
{
    if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del sistema judicial.");
	if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto - sólo rangos mayores a 3.");
  	new string[128], giveplayerid;
  	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /qorden (playerid)");
	if(IsPlayerConnected(giveplayerid))
	{
 		if(strlen(Info[giveplayerid][pWarrant]) == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene órdenes pendientes.");
		format(Info[giveplayerid][pWarrant], 128, "");
		format(string, sizeof(string), "Removiste la órden de %s.", GetPlayerNameEx(giveplayerid));
  		SendClientMessageEx(playerid, COLOR_GRAD2, string);
	}
	return 1;
}

CMD:arrestojudicial(playerid, params[])
{
    new string[128];

    if(IsACop(playerid))
	{
	    if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Deben estar al menos conectados un juez para hacer esto.");
        if(!IsPlayerInRangeOfPoint(playerid, 4.0, 1735.1194,-1325.8646,13.2494))
		{
  			SendClientMessageEx(playerid, COLOR_GREY, "Debes estar en el punto de arresto judicial (Espalda de la corte judicial).");
	    	return 1;
		}
		new suspect = GetClosestPlayer(playerid);
		if(IsPlayerConnected(suspect))
		{
			if(ProxDetectorS(5.0, playerid,suspect))
			{
				if(strlen(Info[suspect][pWarrant]) < 1)
				{
	   				SendClientMessageEx(playerid, COLOR_WHITE, "El jugador debe tener órdenes de activos.");
				    return 1;
				}
				format(string, sizeof(string), "* Fuiste transladado a la carceleta judicial %s!", GetPlayerNameEx(suspect));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				ResetPlayerWeaponsEx(suspect);
				format(string, sizeof(string), "* Acusado %s fue entregado a la corte por el oficial %s, ahora el sujeto está esperando por un juez", GetPlayerNameEx(suspect), GetPlayerNameEx(playerid));
				SendRadioMessage(5, TEAM_RADIO_COLOR, string);
				SetPlayerInterior(suspect, 1);
				SetPlayerVirtualWorld(suspect, 20025);
				Info[suspect][pVW] = 20025;
				TogglePlayerControllable(suspect, 0);
				new rand = random(sizeof(WarrantJail));
				SetPlayerFacingAngle(suspect, 0);
				SetPlayerPos(suspect, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2]);
				if(rand != 0) courtjail[suspect] = 2;
				else courtjail[suspect] = 1;
    			SetCameraBehindPlayer(suspect);
       			GameTextForPlayer(suspect, "Objects loading...", 4000, 5);
    			SetPVarInt(suspect, "LoadingObjects", 1);
    			SetTimerEx("SafeLoadObjects", 4000, 0, "d", suspect);
    			SetPVarInt(suspect, "IsFrozen", 0);
				Info[suspect][pEstado] = 0;
				SetPVarInt(suspect, "PlayerCuffed", 0);
				PlayerCuffedTime[suspect] = 0;
				PhoneOnline[suspect] = 1;
    			Info[suspect][pArrested] += 1;
		    	Info[suspect][pWantedLevel] = 0;
		    	SetPlayerToTeamColor(suspect);
		    	SetPlayerWantedLevel(suspect, 0);
				ClearAnimations(suspect);
				Info[suspect][pBeingSentenced] = 60;
				SendClientMessageEx(suspect, COLOR_LIGHTBLUE, "Usted ha sido arrestado por una orden judicial pendiente, usted será atendido por un juez en breve.");
                foreach(Player, i)
				{
					if(IsACop(i))
					{
						format(string, sizeof(string), "HQ: A todas las unidades, oficial %s completó su objetivo.",playerid);
						SendClientMessageEx(i, TEAM_RADIO_COLOR, string);
						format(string, sizeof(string), "HQ: %s ha sido procesado, razón: %s.",suspect,Info[suspect][pWarrant]);
						SendClientMessageEx(i, TEAM_RADIO_COLOR, string);
					}
				}
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres policía.");
	return 1;
}

CMD:buscados(playerid, params[])
{
    if(IsACop(playerid)||Info[playerid][pMember] == 9)
    {
    	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Debe de estar en línea al menos un juez.");
		SendClientMessageEx(playerid, COLOR_YELLOW, "Lista de órdenes judiciales pendientes:");

		new
			fCounter,
			string[128];

		foreach(Player, i)
		{
			if(!isnull(Info[i][pWarrant]))
			{
				format(string, sizeof(string), "%s (%d) - razón: %s.",GetPlayerNameEx(i),i,Info[i][pWarrant]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
		}
		if(fCounter <= 0)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "No hay órdenes judiciales pendientes.");
		}
  	}
	return 1;
}

CMD:presentar(playerid, params[])
{
    if(Info[playerid][pMember] == 9 || Info[playerid][pLeader] == 9)
	{
		new giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /presentar (playerid)");
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto contigo mismo.");
			if(Info[giveplayerid][pBeingSentenced] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene sentencias pendientes.");
			if(courtjail[giveplayerid] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está en la carceleta de la Corte.");
			if(courtjail[giveplayerid] == 2)
			{
				SetPlayerPos(giveplayerid, 2132.0679,1314.2238,7699.0547);
		    	SetPlayerFacingAngle(giveplayerid, 354.2492);
			}
			else if(courtjail[giveplayerid] == 1)
			{
				SetPlayerPos(giveplayerid, 2131.8599,1294.4722,7699.0547);
		    	SetPlayerFacingAngle(giveplayerid, 182.6859);
			}
			courtjail[giveplayerid] = 0;
		    SetCameraBehindPlayer(giveplayerid);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del Sistema Judicial.");
	return 1;
}

CMD:multajudicial(playerid, params[])
{
    if(Info[playerid][pMember] != 9)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No formas parte del sistema judicial.");
  		return 1;
	}
	if(Info[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando, rango mayores a 3.");
  		return 1;
	}
	new string[128], giveplayerid, judgefine, reason[64];
	if(sscanf(params, "dds", giveplayerid, judgefine, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /multajudicial (playerid) (Multa max de $250,000) (razón)");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo!");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no se tiene una sentencia.");
		if(judgefine < 1 && judgefine > 250000) return SendClientMessageEx(playerid, COLOR_WHITE, "Monto de la multa no podrá ser inferior a $ 1 o superior a $ 250.000!");
		GivePlayerCash(giveplayerid, -judgefine);
		Tax += judgefine;
		format(string, sizeof(string), "Multaste a %s por $%d, razón: %s", GetPlayerNameEx(giveplayerid), judgefine, reason);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Fuiste multado por $%d por %s, razón: %s", judgefine, GetPlayerNameEx(playerid), reason);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:juicio(playerid, params[])
{
	new string[128], giveplayerid;

    if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del Sistema Judicial.");
	if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando, rango mayores a 3.");
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /juicio (playerid)");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(Info[giveplayerid][pBeingSentenced])
	    {
	    	Info[giveplayerid][pBeingSentenced] += 10;
	    	format(string, sizeof(string), "Has extendido el juicio de %s por 10 minutos más, Tiempo: %d", GetPlayerNameEx(giveplayerid), Info[giveplayerid][pBeingSentenced]);
	    	SendClientMessageEx(playerid, COLOR_WHITE, string);
	    	format(string, sizeof(string), "%s extendieron tu juicio a 10 minutos más, Tiempo: %d", GetPlayerNameEx(playerid), Info[giveplayerid][pBeingSentenced]);
	    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "El jugador tiene que estar en la sala de juicio.");
	}
	return 1;
}

CMD:librarcargos(playerid, params[])
{
	new string[128], giveplayerid;

    if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del Sistema Judicial.");
	if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando, rango mayores a 3.");
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /librarcargos (playerid)");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(Info[giveplayerid][pBeingSentenced])
	    {
	    	Info[giveplayerid][pBeingSentenced] = 0;
	    	TogglePlayerControllable(giveplayerid, 1);
	    	SetPVarInt(giveplayerid, "IsFrozen", 0);
			PhoneOnline[giveplayerid] = 0;
			format(Info[giveplayerid][pWarrant], 128, "");
	    	format(string, sizeof(string), "Dejaste libre de todos los cargos a %s.", GetPlayerNameEx(giveplayerid));
	    	SendClientMessageEx(playerid, COLOR_WHITE, string);
	    	format(string, sizeof(string), "%s ganaste el juicio! Te liberaron de todos los cargos, ahora eres libre.", GetPlayerNameEx(playerid));
	    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "El jugador tiene que estar en la sala de juicio.");
	}
	return 1;
}

CMD:recompensa(playerid, params[])
{
    if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del Sistema Judicial.");
	if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes rango suficiente para usar este comando (4).");

	new
		giveplayerid,
		money;

	if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /recompensa (playerid) [Dinero(max de $50,000)]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
	if(Info[giveplayerid][pMember] == Info[playerid][pMember]) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando a uno de tu facción.");
	if(IsPlayerConnected(giveplayerid))
	{
		new
			string[64 + (MAX_PLAYER_NAME * 2)];

  		if(money < 1 || money > 50000) return SendClientMessageEx(playerid, COLOR_GRAD5, "Max de $50,000 y Minimo 0!");
    	new rank[64], division[64], employer[64];
   		GetPlayerFactionInfo(playerid, rank, division, employer);
	    format(string, sizeof(string), "{AA3333}Perfect City:{FFFF00} %s %s acaba de recompensar a %s con $%d.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money);
	    ABroadCast(COLOR_YELLOW,string, 2);
	    new year,month,day,log[128];
		getdate(year, month, day);
		format(log, sizeof(log), "AdmCmd: %s %s has just rewarded %s $%d(%d-%d-%d)", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money, month, day, year);
		Log("logs/rpspecial.log", log);
  		GivePlayerCash(giveplayerid, money);
    	format(string, sizeof(string), "Diste una recompensa de $%d a %s.", money, GetPlayerNameEx(giveplayerid));
	    SendClientMessageEx(playerid, COLOR_WHITE, string);
	    format(string, sizeof(string), "Recibiste una recompensa de $%d del %s %s.", money, rank, GetPlayerNameEx(playerid));
	   	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:verjuicios(playerid, params[])
{
    if(IsACop(playerid))
    {

    	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Deben estar almenos 1 juez en línea.");
		SendClientMessageEx(playerid, COLOR_YELLOW, "Juicios pendientes:");

		new
			string[53],
			fCounter;

		foreach(Player, i)
		{
			if(Info[i][pJudgeJailType] == 1)
			{
	  			if(Info[i][pJailed] == 2)
		    	{
					format(string, sizeof(string), "Sentenciado: %s - Carceleta (transporte completado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
				else
				{
    				format(string, sizeof(string), "Sentenciado: %s - Carceleta (siendo transportado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
			}
			else if(Info[i][pJudgeJailType] == 2)
			{
				if(Info[i][pJailed] == 5)
    			{
					format(string, sizeof(string), "Sentenciado: %s - Prisión (transporte completado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
				else
				{
    				format(string, sizeof(string), "Sentenciado: %s - Prisión (siendo transportado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
			}
		}
		if(fCounter <= 0)
		{
  			SendClientMessageEx(playerid, COLOR_WHITE, "No hay jucios pendientes.");
		}
  	}
	return 1;
}

CMD:revertir(playerid, params[])
{

    if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del Sistema Judicial.");
	if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes rango suficiente para usar este comando (4).");

	new
		giveplayerid;

	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /revertir (playerid)");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar el comando de esta manera.");
	if(IsPlayerConnected(giveplayerid))
	{
 		if(Info[giveplayerid][pJudgeJailTime] != 0)
   		{
     		new rank[64], division[64], employer[64], string[52 + (MAX_PLAYER_NAME * 2)];
       		GetPlayerFactionInfo(playerid, rank, division, employer);
			if(Info[giveplayerid][pJailTime] != 0) Info[giveplayerid][pJailTime] = 0;
			Info[giveplayerid][pJudgeJailTime] = 0;
   			switch(Info[giveplayerid][pSex])
			{
			    case 1: format(string, sizeof(string), "%s %s ha revertido el juicio de %s, ahora él es libre de irse.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    case 2: format(string, sizeof(string), "%s %s ha revertido el juicio de %s, ahora ella es libre de irse.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			}
			for(new i = 1; i < 5; i++)
			{
		    	SendRadioMessage(i, TEAM_RADIO_COLOR, string);
			}
			SendRadioMessage(7, TEAM_RADIO_COLOR, string);
			SendRadioMessage(9, TEAM_RADIO_COLOR, string);
   		}
	    else
   		{
        	SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene una sentencia de prisión.");
   		}
	}
	return 1;
}

CMD:perdonar(playerid, params[])
{
    if(Presidente(playerid))
    {
		new
			giveplayerid;

        if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /perdonar (playerid)");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar el comando de esta manera!");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(Info[giveplayerid][pJudgeJailTime] != 0)
		    {
				new string[58 + (MAX_PLAYER_NAME * 2)];
		        if(Info[giveplayerid][pJailTime] != 0) Info[giveplayerid][pJailTime] = 0;
		        Info[giveplayerid][pJudgeJailTime] = 0;
		        switch(Info[giveplayerid][pSex])
				{
				    case 1: format(string, sizeof(string), "Gobernador %s ha perdonado a %s de todos sus crimenes, él ahora es libre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				    case 2: format(string, sizeof(string), "Gobernador %s ha perdonado a %s de todos sus crimenes, ella ahora es libre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				}
				for(new i = 1; i < 5; i++)
				{
			    	SendRadioMessage(i, TEAM_RADIO_COLOR, string);
				}
				SendRadioMessage(7, TEAM_RADIO_COLOR, string);
				SendRadioMessage(9, TEAM_RADIO_COLOR, string);
		    }
		    else
	   		{
	       		SendClientMessageEx(playerid, COLOR_WHITE, "Este jugador no está en una condena de prisión.");
	   		}
		}
	}
 	else
  	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Sólo el Gobernador puede usar este comando.");
  	}
	return 1;
}

CMD:scarcel(playerid, params[])
{
    if(Info[playerid][pMember] != 9)
	{
  		SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del sistema judicial.");
  		return 1;
	}
	if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes rango suficiente para usar este comando (3).");

	new string[128], giveplayerid, jailtime, reason[64];
	if(sscanf(params, "dds", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /scarcel (playerid) (tiempo 1-60 minutos) (razón) (Cmd para sentenciar a Cárcel)");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto contigo mismo.");
	if(IsPlayerConnected(giveplayerid))
	{
		if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está sentenciado.");
		if(jailtime < 1 && jailtime > 60) return SendClientMessageEx(playerid, COLOR_WHITE, "Tiempo no puede ser mayor a 60 minutos.");
		Info[giveplayerid][pJudgeJailType] = 1;
		Info[giveplayerid][pJudgeJailTime] = jailtime*60;
		format(string, sizeof(string), "Sentenciaste a %s a cumplir %d minutos en la cárcel, razón: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Usted ha sido sentenciado a cumplir %d minutos en la cárcel por %s, razón: %s", jailtime, GetPlayerNameEx(playerid), reason);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		if(IsACop(giveplayerid))
		{
		    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE,"* Usted ha sido auto eliminado de su facción al ser condenado a la cárcel, ahora eres un civil más.");
	 		Info[giveplayerid][pTeam] = 3;
	 		gTeam[giveplayerid] = Info[giveplayerid][pTeam];
			Info[giveplayerid][pMember] = 0;
			Info[giveplayerid][pRank] = 0;
			Info[giveplayerid][pChar] = 0;
			OnDuty[playerid] = 0;
			Info[giveplayerid][pLeader] = 0;
			SetPlayerToTeamColor(giveplayerid);
   			pTazer[giveplayerid] = 0;
		}
	}
	return 1;
}

CMD:sprision(playerid, params[])
{
    if(Info[playerid][pMember] != 9)
	{
  		SendClientMessageEx(playerid, COLOR_WHITE, "No eres parte del sistema judicial.");
  		return 1;
	}
	if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes rango suficiente para usar este comando (3).");
	new string[128], giveplayerid, jailtime, reason[64];
	if(sscanf(params, "dds", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /sprision (playerid) (tiempo 1-1200 minutos) (razón) (Cmd para sentenciar a Prisión)");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto contigo mismo.");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no se está condenado.");
		if(jailtime < 1 && jailtime > 1200) return SendClientMessageEx(playerid, COLOR_WHITE, "Tiempo no puede ser mayor a 1200 minutos.");
		Info[giveplayerid][pJudgeJailType] = 2;
		Info[giveplayerid][pJudgeJailTime] = jailtime*60;
		format(string, sizeof(string), "Sentenciaste a %s a cumplir %d minutos en prisión, razón: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Usted ha sido sentenciado a cumplir %d minutos en prisión por %s, razón: %s", jailtime, GetPlayerNameEx(playerid), reason);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		if(IsACop(giveplayerid))
		{
		    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE,"* Usted ha sido auto eliminado de su facción al ser condenado a la prisión, ahora eres un civil más.");
	 		Info[giveplayerid][pTeam] = 3;
	 		gTeam[giveplayerid] = Info[giveplayerid][pTeam];
			Info[giveplayerid][pMember] = 0;
			Info[giveplayerid][pRank] = 0;
			Info[giveplayerid][pChar] = 0;
			OnDuty[playerid] = 0;
			Info[giveplayerid][pLeader] = 0;
			SetPlayerToTeamColor(giveplayerid);
   			pTazer[giveplayerid] = 0;
		}
	}
	return 1;
}

CMD:qfa(playerid, params[])
{
	new giveplayerid, string[73];
	if(!sscanf(params, "u", giveplayerid))
	{
	    if(!Info[playerid][pAdminZC]) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		if(IsPlayerConnected(giveplayerid))
		{
			format(string,sizeof(string),"%s: La última persona que me mató fue %s.",GetPlayerNameEx(giveplayerid),QFA[giveplayerid]);
			SendClientMessageEx(playerid,COLOR_YELLOW,string);
		}
		else return SendClientMessageEx(playerid,COLOR_YELLOW,"El jugador no esta conectado.");
	}
	else
	{
		format(string,sizeof(string),"La última persona que te mato fue %s.", QFA[playerid]);
		SendClientMessageEx(playerid,COLOR_YELLOW,string);
		if(Info[playerid][pAdminZC]) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /qfa (id)");
	}
	return 1;
}
CMD:investigar(playerid, params[])
{
	new giveplayerid, string[128];
 	if(!Team_FBI(playerid) || Info[playerid][pDivision] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No perteneces a la División de Homicidios.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto si estas herido.");
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Usa /investigar [id]");
	if(!sscanf(params, "u", giveplayerid))
	{
		if(GetPVarInt(giveplayerid, "Injured") == 0) SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Este jugador no está herido.");
		if(ProxDetectorS(4.0, playerid, giveplayerid))
		{
			if(IsPlayerConnected(giveplayerid))
			{
		    	if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer eso contigo mismo.");
   				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); //animacion
    			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); //otra por si no la hace
  				format(string, sizeof(string), "* %s con ayuda de su equipo forense investiga quien podria haber matado a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
     			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string,sizeof(string),"La posible persona que mató al sujeto fué {AB0000}%s.",QFA[giveplayerid]);
				SendClientMessageEx(playerid,COLOR_WHITE,string);
			}
			else return SendClientMessageEx(playerid,COLOR_YELLOW,"El jugador no esta conectado.");
		}
		else return SendClientMessageEx(playerid,COLOR_YELLOW,"Este jugador no está cerca tuyo.");
	}
	return 1;
}
CMD:ddnext(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] >= 4000)
	{
		for(new x;x<MAX_DDOORS;x++)
		{
		    if(DDoorsInfo[x][ddDescription] == 0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d está disponible para el uso.", x);
		        SendClientMessageEx(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "No estás autorizado para usar este comando!");
		return 1;
	}
	return 1;
}

CMD:shopdoor(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 4000 || Info[playerid][pShopTech] == 1)
	{
		new string[128], doorid;
		if(!sscanf(params, "d", doorid))
		{
		    if (DDoorsInfo[doorid][ddDescription] == 1)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Esa puerta ya está creada, Utiliza: /ddedit");
				return 1;
	    	}
			if(doorid >= MAX_DDOORS)
			{
				SendClientMessageEx( playerid, COLOR_WHITE, "Door ID Inválida!");
				return 1;
			}
			GetPlayerPos(playerid, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]);
			GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddExteriorA]);
			DDoorsInfo[doorid][ddExteriorVW] = GetPlayerVirtualWorld(playerid);
			DDoorsInfo[doorid][ddExteriorInt] = GetPlayerInterior(playerid);
			DDoorsInfo[doorid][ddCustomInterior] = 0;
			DDoorsInfo[doorid][ddCustomExterior] = 0;
			DDoorsInfo[doorid][ddVIP] = 0;
			DDoorsInfo[doorid][ddFamily] = 0;
			DDoorsInfo[doorid][ddPickupModel] = 0;
			DDoorsInfo[doorid][ddColor] = 1;
			DDoorsInfo[doorid][ddVehicleAble] = 0;
			DDoorsInfo[doorid][ddWanted] = 0;
			DDoorsInfo[doorid][ddAdmin] = 0;
        	DDoorsInfo[doorid][ddFaction] = 0;
			DDoorsInfo[doorid][ddInteriorInt] = 0;
			DDoorsInfo[doorid][ddInteriorVW] = 0;
			DDoorsInfo[doorid][dMusic] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Creaste el exterior de esta puerta, usa /ddedit para terminar de editar la puerta.");
			if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
			if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
			CreateDynamicDoor(doorid);
			SaveDynamicDoors();
			format(string, sizeof(string), "%s ha creado la DoorID %d.", GetPlayerNameEx(playerid), doorid);
			Log("logs/ddedit.log", string);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /shopdoor (ID Libre)");
	}
	return 1;
}

CMD:ddedit(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 89650)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
		return 1;
	}

	new string[128], choice[32], doorid, amount;
	if(sscanf(params, "s[32]dD", choice, doorid, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "Utiliza: /ddedit (nombre) (doorid) (valor)");
		SendClientMessageEx(playerid, COLOR_GREY, "Available names: Exterior, Interior, CustomInterior, CustomExterior, VIP");
		SendClientMessageEx(playerid, COLOR_GREY, "Familia, Faccion, Wanted, Admin, VehicleAble, Color, PickupModel, Borrar, Musica");
		return 1;
	}

	if(doorid >= MAX_DDOORS)
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "Door ID Inválida!");
		return 1;
	}

	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddInteriorX], DDoorsInfo[doorid][ddInteriorY], DDoorsInfo[doorid][ddInteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddInteriorA]);
		DDoorsInfo[doorid][ddInteriorInt] = GetPlayerInterior(playerid);
		DDoorsInfo[doorid][ddInteriorVW] = GetPlayerVirtualWorld(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el interior!");
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Interior", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomInterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomInterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Interior Personalizado!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomInterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Interior Normal!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Interior Personalizado.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomExterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomExterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Exterior Personalizado!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomExterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Exterior Normal!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Exterior Personalizado.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddExteriorA]);
		DDoorsInfo[doorid][ddExteriorVW] = GetPlayerVirtualWorld(playerid);
		DDoorsInfo[doorid][ddExteriorInt] = GetPlayerInterior(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el exterior!");
		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Exterior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
	}
	else if(strcmp(choice, "vip", true) == 0)
	{
		DDoorsInfo[doorid][ddVIP] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - VIP Nivel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - VIP Nivel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "familia", true) == 0)
	{
		DDoorsInfo[doorid][ddFamily] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Familia %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Familia.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "faccion", true) == 0)
	{
		DDoorsInfo[doorid][ddFaction] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Facción %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Facción.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "AdminZC", true) == 0)
	{
		DDoorsInfo[doorid][ddAdmin] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Admin Nivel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Admin Nivel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "wanted", true) == 0)
	{
		DDoorsInfo[doorid][ddWanted] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Wanted %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Wanted.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "vehicleable", true) == 0)
	{
		DDoorsInfo[doorid][ddVehicleAble] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - VehicleAble %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Disponible Vehs.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "color", true) == 0)
	{
		DDoorsInfo[doorid][ddColor] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Color %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Color.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "pickupmodel", true) == 0)
	{
		DDoorsInfo[doorid][ddPickupModel] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - PickupModel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - PickupModel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "musica", true) == 0)
	{
	    DDoorsInfo[doorid][dMusic] = amount;
		format(string, sizeof(string), "* Has editado la DoorID - Musica %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		SaveDynamicDoors();
		switch(amount)
		{
		    case 0: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Sin música"); //
        	case 1: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Reggeaton"); //
            case 2: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Electro"); //
            case 3: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Techno"); //
            case 4: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Hip hop"); //
            case 5: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Variada"); //
		}
		return 1;
	}
	else if(strcmp(choice, "borrar", true) == 0)
	{
	    if (DDoorsInfo[doorid][ddDescription] == 0)
		{
	        format(string, sizeof(string), "DoorID %d no existe.", doorid);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			return 1;
	    }
    	if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
	    DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		DDoorsInfo[doorid][ddDescription] = 0;
		DDoorsInfo[doorid][ddCustomInterior] = 0;
		DDoorsInfo[doorid][ddExteriorVW] = 0;
		DDoorsInfo[doorid][ddExteriorInt] = 0;
		DDoorsInfo[doorid][ddInteriorVW] = 0;
		DDoorsInfo[doorid][ddInteriorInt] = 0;
		DDoorsInfo[doorid][ddExteriorX] = 0;
		DDoorsInfo[doorid][ddExteriorY] = 0;
		DDoorsInfo[doorid][ddExteriorZ] = 0;
		DDoorsInfo[doorid][ddExteriorA] = 0;
		DDoorsInfo[doorid][ddInteriorX] = 0;
		DDoorsInfo[doorid][ddInteriorY] = 0;
		DDoorsInfo[doorid][ddInteriorZ] = 0;
		DDoorsInfo[doorid][ddInteriorA] = 0;
		DDoorsInfo[doorid][ddCustomExterior] = 0;
		DDoorsInfo[doorid][ddVIP] = 0;
		DDoorsInfo[doorid][ddFamily] = 0;
		DDoorsInfo[doorid][ddFaction] = 0;
		DDoorsInfo[doorid][ddAdmin] = 0;
		DDoorsInfo[doorid][ddWanted] = 0;
		DDoorsInfo[doorid][ddVehicleAble] = 0;
		DDoorsInfo[doorid][ddColor] = 0;
		DDoorsInfo[doorid][dPass] = 0;
		DDoorsInfo[doorid][dLocked] = 0;
		DDoorsInfo[doorid][dMusic] = 0;
		SaveDynamicDoors();
		format(string, sizeof(string), "Borraste la DoorID %d.", doorid);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s a borrado DoorID %d.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	return 1;
}

CMD:clave(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] < 4000)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
		return 1;
	}
    for(new i = 0; i < sizeof(DDoorsInfo); i++)
	{
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
			if(DDoorsInfo[i][dPass] < 1)
                return SendClientMessageEx(playerid, COLOR_WHITE, "Esta puerta ya está bloqueada.");
         	if(strcmp(DDoorsInfo[i][dPass], "Nada", true) == 0)
                return SendClientMessageEx(playerid, COLOR_WHITE, "Esta puerta no está autorizada a ser bloqueada.");

			SafeDialogEx(playerid, DOORLOCK, DIALOG_STYLE_INPUT, "{008EC1}Seguridad de puerta","Ingresa la contraseña de la puerta","Ingresar","Cancelar");
			SetPVarInt(playerid, "Door", i);
		}
	}
	return 1;
}

CMD:goindoor(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 4000)
	{
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /goindoor (doornumber)");
		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddInteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddInteriorA]);
		if(DDoorsInfo[doornum][ddCustomInterior])
		{
			LoadObjects(playerid);
		}
		Info[playerid][pInt] = DDoorsInfo[doornum][ddInteriorInt];
		Info[playerid][pVW] = DDoorsInfo[doornum][ddInteriorVW];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddInteriorVW]);
	}
	return 1;
}

CMD:gotodoor(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 4000)
	{
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /gotodoor (doornumber)");

		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		if(DDoorsInfo[doornum][ddCustomExterior])
		{
			LoadObjects(playerid);
		}
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddExteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddExteriorA]);
		Info[playerid][pInt] = DDoorsInfo[doornum][ddExteriorInt];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddExteriorVW]);
		Info[playerid][pVW] = DDoorsInfo[doornum][ddExteriorVW];
	}
	return 1;
}

CMD:ddname(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 89650)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
		return 1;
	}
	new string[128], doorid, doorname[128];

	if(sscanf(params, "ds[128]", doorid, doorname)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ddname (doorid) (nombre)");

	format(DDoorsInfo[doorid][ddDescription], 128, "%s", doorname);
	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el nombre de la puerta.");
	if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
	if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
	CreateDynamicDoor(doorid);
	SaveDynamicDoors();

	format(string, sizeof(string), "%s editó la DoorID %d - nombre a %s.", GetPlayerNameEx(playerid), doorid, doorname);
	Log("logs/ddedit.log", string);
	return 1;
}

CMD:ddpass(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 89650)
		return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");

	new string[128],
		doorid,
		doorpass[24];

	if(sscanf(params, "ds[24]", doorid, doorpass)) { SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /ddpass (doorid) (pass)"); SendClientMessageEx(playerid, COLOR_WHITE, "Para remover la contraseña escribe 'nada'."); return 1; }
	format(DDoorsInfo[doorid][dPass], 24, "%s", doorpass);
	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste la contraseña de la puerta.");
	SaveDynamicDoors();
	format(string, sizeof(string), "%s editó la DoorID %d - pass a %s.", GetPlayerNameEx(playerid), doorid, doorpass);
	Log("logs/ddedit.log", string);
	return 1;
}

//CMD:llaves(playerid, params[]) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Comando eliminado use /gps ");
CMD:cambiarclaveusuario(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
    if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
    new accountName[24], password[24];
    if(sscanf(params, "s[MAX_PLAYER_NAME]s[18]", accountName, password)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /cambiarclaveusuario (Nombre_Apellido) (password)");
    if(INI_Exist(accountName))
	{
	    if(strlen(accountName) > 24) return SendClientMessageEx(playerid, COLOR_WHITE, "la cuenta no puede tener más de 24 letras/números.");
		new string[128], PlayerFile[MAX_PLAYER_NAME + 32];
		format( PlayerFile , sizeof PlayerFile, "accounts/%s.ini", accountName);
	    new INI:File = INI_Open(PlayerFile);
	    INI_SetTag(File,"data");
     	INI_WriteInt(File,"Password",udb_hash(password));
		INI_Close(File);
        format(string, sizeof(string), "Cambiaste la contraseña de %s. Ahora es '%s'", accountName, password);
        SendClientMessageEx(playerid, COLOR_YELLOW, string);
        format(string, sizeof(string), "AdmCmd: Contraseña de %s fue cambiada por %s", accountName, GetPlayerNameEx(playerid));
        Log("logs/password.log", string);
        return ABroadCast(COLOR_LIGHTRED,string,2);
    }
    else SendClientMessageEx( playerid, COLOR_WHITE, "Esta cuenta no existe." );
    return 1;
}
CMD:adminconcesionario(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_WHITE,"No puedes usar este comando.");
	if(IsPlayerConnected(playerid))
	    SendClientMessageEx(playerid, COLOR_GENERAL, "Comandos administrativos para los Concesionarios:");
	    SendClientMessageEx(playerid, COLOR_WHITE, "/editarconce - /editarcoche - /vConcesionario - cConcesionario");
	    SendClientMessageEx(playerid, COLOR_WHITE, "/crearautoconce /destroyautoconce /crearconce [Crear Concesionario] /destruirconce [Borrar Concesionario]");
	return 1;
}


CMD:editarconce(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }
	for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, CDSInfo[d][cdRadius], CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ])) {
            if(IsPlayerOwnerOfCDEx(playerid, d))
			{
                SetPVarInt(playerid, "editingcd", d);
                SetPVarInt(playerid, "editingcdveh", -1);
                SetPVarInt(playerid, "editingcdvehpos", 0);
                SetPVarInt(playerid, "editingcdvehnew", 0);
                new listitems[] = "1 Nuevo coche\n2 Mis coches\n3 Mejorar\n4 Ganancias";
                SafeDialogEx(playerid,DIALOG_CDEDIT,DIALOG_STYLE_LIST,"{008EC1} Elige y continuar", listitems,"Ok","Cancelar");
                return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "No eres dueño de este Concesionario.");
                return 1;
            }
        }
    }
    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Debes estar de pie dentro del radio del Concesionario.");
    return 1;
}

CMD:editarcoche(playerid, params[])
{
	if(AdminDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF}Tienes que estar en servicio (/adminduty)");
    if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }
	new vehicleid = GetPlayerVehicleID(playerid);
    new v, d;
    v = GetCarDealershipVehicleId(vehicleid);
    d = GetCarDealershipId(vehicleid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: Usted no está en un coche.");
    if(v != -1 && d != -1)
	{
        if(IsPlayerOwnerOfCDEx(playerid, d))
		{
            SetPVarInt(playerid, "editingcd", d);
            SetPVarInt(playerid, "editingcdveh", v);
            SetPVarInt(playerid, "editingcdvehpos", 0);
            SetPVarInt(playerid, "editingcdvehnew", 0);
            new listitems[] = "1 Editar Modelo\n2 Editar Costo\n3 Editar Park\n4 Borrar Coche";
            SafeDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Concesionario:", listitems,"Ok","Cancelar");
            return 1;
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Usted no es dueño de este Concesionario.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} El coche no es parte de un Concesionario.");
    }
    return 1;
}

CMD:vconcesionario(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }
	new string[128];

    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
		{
            if(IsPlayerOwnerOfCDEx(playerid, d))
			{
                SetPVarInt(playerid, "editingcd", d);
                format(string,128,"¿Seguro que deseas vender este Concesionario de coches por $%d?\n.", CDSInfo[d][cdPrice] / 2);
                SafeDialogEx(playerid,DIALOG_CDSELL,DIALOG_STYLE_MSGBOX,"{008EC1} Advertencia:",string,"Vender","Cancelar");
                return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Usted no es el dueño de este Concesionario de coches.");
                return 1;
            }
        }
    }
    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Usted tiene que estar cerca de un Concesionario de coches.");
    return 1;
}

CMD:cconcesionario(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }
	for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
		{
            if(!CDSInfo[d][cdOwned])
			{
                if(GetPVarInt(playerid, "Cash") < CDSInfo[d][cdPrice])
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No tienes suficiente dinero para comprar el Concesionario de coches.");
                    return 1;
                }
                SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-CDSInfo[d][cdPrice]);
                SetPlayerOwnerOfCD(playerid, d);
                PlayerPlayMusic(playerid);
                SendClientMessageEx(playerid, COLOR_GREEN, " Felicitaciones, por su nueva compra.");
                SendClientMessageEx(playerid, COLOR_WHITE, " Usa /ayuda para ver la sección de Concesionario para ver más información.");
                SendClientMessageEx(playerid, COLOR_GRAD1, " Por favor establece la posición que quieres que los coches den spawn.");
                SendClientMessageEx(playerid, COLOR_GRAD2, " Ponte en el lugar deseado, una vez listo usa el botón FIRE (CLICK).");
                SendClientMessageEx(playerid, COLOR_WHITE, " Nota: Si no estableces los coches sus clientes no podrán comprar autos.");
                SetPVarInt(playerid, "editingcdvehpos", 2);
                SetPVarInt(playerid, "editingcd", d);
                return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_WHITE, "Este Concesionario no está en venta.");
            }
        }
    }
    return 1;
}

CMD:crearautoconce(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, " No puedes usar este comando.");
        return 1;
    }

    new string[128], price, dealershipid, modelid;
    if(sscanf(params, "ddd", price, dealershipid, modelid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /crearautoconce [price] [dealership] [modelid]");

    new Float:X,Float:Y,Float:Z,Float:A;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    new cdvehicleid = CreateCarDealershipVehicle(dealershipid, modelid, X, Y, Z, A, price);
    if(cdvehicleid == -1)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} ha alcanzado el límite de autos por concesionario.");
    }
    else
	{
        format(string, sizeof(string), " Coche creado con la ID %d.", cdvehicleid);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
    }
    return 1;
}

CMD:destroyautoconce(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_WHITE, " No puedes usar este comando.");
        return 1;
    }

    new string[128], vehid;
    if(sscanf(params, "d", vehid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /destroyautoconce [vehicleid]");

    DestroyCarDealershipVehicle(GetCarDealershipId(vehid), GetCarDealershipVehicleId(vehid));
    SavecDealership(GetCarDealershipId(vehid));
    format(string, sizeof(string), " Coche eliminado - ID %d.", vehid);
    SendClientMessageEx(playerid, COLOR_WHITE, string);
    return 1;
}

CMD:crearconce(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	 if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, " No puedes usar este comando.");
        return 1;
    }

    new string[128], price, radius, message[64];
    if(sscanf(params, "dds[64]", price, radius, message)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /crearconce [precio] [radio] [mensaje]");

    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    new dealershipid = CreateCarDealership(X, Y, Z, radius, price, message);
    if(dealershipid == -1)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Concesionarios llegó al limite.");
    }
    else
	{
        format(string, sizeof(string), " Concesionario creado - ID %d.", dealershipid);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
    }
    return 1;
}

CMD:destruirconce(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] < 6000)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }

    new string[128], dealershipid;
    if(sscanf(params, "d", dealershipid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /destruirconce [ID]");

    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CDSInfo[d][cdEntranceX], CDSInfo[d][cdEntranceY], CDSInfo[d][cdEntranceZ]))
		{
            DestroyCarDealership(d);
            format(string, sizeof(string), " Concesionario destruido - ID %d.", d);
            SendClientMessageEx(playerid, COLOR_WHITE, string);
            return 1;
        }
    }
    if(dealershipid > MAX_CARDEALERSHIPS) return 1;
    if(dealershipid < 0) return 1;
    DestroyCarDealership(dealershipid);
    format(string, sizeof(string), " Concesionario destruido - ID %d.", dealershipid);
    SendClientMessageEx(playerid, COLOR_WHITE, string);
    return 1;
}
CMD:duda(playerid, params[])
{
	new Texto[81];
	if(AdminHOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FF0000}No hay {FF0000}administradores ni ayudantes{FF0000} en este momento, intenta más tarde!");
  	if(JustDuda[playerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Espera 60 segundos para mandar otra duda.");
	if(sscanf(params, "s[81]", Texto)) return SendClientMessage(playerid, -1, "Utiliza: {008EC1}/duda{FFFFFF} (texto)");
	HayDuda[playerid] = 1;
	new string[322];
	format(string, 322, "{0066B6}%s (ID: {FFFFFF}%d) {0066B6}pregunta: {FFFFFF}%s", GetPlayerNameEx(playerid),playerid, Texto);
    for(new i=0;i<MAX_PLAYERS;i++)
    {
		if(IsPlayerConnected(i))
		{
			if(IsPlayerConnected(i) == 1)
			{
				if (Info[i][pAdminZC] >= 1 || Info[i][pHelper] >=1)
				{
					SendClientMessage(i, 0x0000FFFF, string);
				}
			}
		}
	}
	SendClientMessage(playerid,COLOR_GRAD2, "Tú duda ha sido enviada al staff, espera una respuesta.");
	JustDuda[playerid] = 60;
	return 1;
}
zcmd(aduda, playerid,params[])
{
	//if(Info[playerid][pHelper] >= 0 && papillah[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio como Ayudante{00E300} (/cduty) {FFFFFF}para usar este comando.");
	if(Info[playerid][pAdminZC] >= 2 || Info[playerid][pHelper] >= 1)
	{
	    new id;
		if(sscanf(params, "u", id)) return SendClientMessage(playerid, -1, "Utiliza: {FF0000}/aduda {FFFFFF}(ID/Nombre)");
		if(HayDuda[id] == 0) return SendClientMessage(playerid, 0xFF0000FF, "Este jugador no tiene una duda.");
		new string[128];
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, 0xFF0000FF, "Jugador no conectado.");
		format(string, sizeof(string), "Tú duda ha sido aceptada por %s, en breve te responderá.",GetPlayerNameEx(playerid));
		SendClientMessage(id,COLOR_GRAD2,string);
		SendClientMessage(playerid,COLOR_GRAD2,"{82F65C}INFO:{FFFFFF} Si eres Administrador responde con /w, si eres Ayudante usa /responder");
		HayDuda[id]=0;
		format(string, sizeof(string), "{827FE1}%s {FFFFFF}ha aceptado la duda de {827FE1}%s{FFFFFF} (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(id), id);
		ABroadCast(COLOR_GREEN, string, 2);
		format(string, sizeof(string), "{827FE1}%s {FFFFFF}ha aceptado la duda de {827FE1}%s{FFFFFF} (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(id), id);
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
	}
	return 1;
}
zcmd(rduda, playerid,params[])
{
	//if(Info[playerid][pHelper] >= 0 && papillah[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio como Ayudante{00E300} (/cduty) {FFFFFF}para usar este comando.");
	if(Info[playerid][pAdminZC] >= 1 || Info[playerid][pHelper] >= 1)
	{
	    new id;
		if(sscanf(params, "u", id)) return SendClientMessage(playerid, -1, "Utiliza: {FF0000}/rduda {FFFFFF}(ID/Nombre)");
		if(HayDuda[id] == 0) return SendClientMessage(playerid, 0xFF0000FF, "Este jugador no tiene una duda.");
		new string[128];
  		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, 0xFF0000FF, "Jugador no conectado.");
		SendClientMessage(id,-1,"{FFFFFF}Tú duda fué rechazada, explicate mejor para la próxima.");
		format(string, sizeof(string), "{827FE1}%s {FFFFFF}ha rechazado la duda de {827FE1}%s{FFFFFF} (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(id), id);
		ABroadCast(COLOR_ORANGE, string, 2);
		format(string, sizeof(string), "{827FE1}%s {FFFFFF}ha rechazado la duda de {827FE1}%s{FFFFFF} (ID: %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(id), id);
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);

	}
	return 1;
}

CMD:togduda(playerid, params[])
{
	if (!gNewbie[playerid]){
		gNewbie[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_WHITE, "Deshabilitaste el canal de ayuda.");
	}
	else{
		gNewbie[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_WHITE, "Habilitaste el canal de ayuda.");
	}
	return 1;
}

CMD:darobjeto(playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338){
		new string[128], giveplayerid, object, slot;
		if(sscanf(params, "ddd", giveplayerid, object, slot)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darobjeto (playerid) (objeto) (slot)");
		if(slot < 0 || slot > 8) return SendClientMessageEx(playerid, COLOR_WHITE, "Slot Inválido, De 0 a 8.");{
			if (IsPlayerConnected(giveplayerid)){
				PlayerToyInfo[giveplayerid][slot][ptModelID] = object;
				PlayerToyInfo[giveplayerid][slot][ptBone] = 1;
				format(string, sizeof(string), "Entregaste a %s el objeto ID %d en el slot %d", GetPlayerNameEx(giveplayerid), object, slot);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, "Recibiste un nuevo objeto (/toys) de un administrador!");
			}
			return 1;
		}
	}
	return 1;
}

CMD:smstodos(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 5) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	new string[128];
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /smstodos (texto)");
	format(string, sizeof(string), "SMS: %s, Destinatario: MOLE (555)",params);
 	SendMoleMessage(COLOR_YELLOW, string);
	return 1;
}

CMD:famchat(playerid, params[])
{
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 4000) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /famchat (Mensaje para miembros en las familias)");
	new string[128];
	format(string, sizeof(string), "* [Administador %s]: %s.", GetPlayerNameEx(playerid),params);
	foreach(Player, i)
	{
		if(Info[i][pFMember] < 255)
		{
			SendClientMessageEx(i, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:facchat(playerid, params[]){
    if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 6 || Info[playerid][pFactionModerator] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /facchat (Mensaje para miembros en las facciones)");
	new string[128];
	format(string, sizeof(string), "* [Administrador %s]: %s.", GetPlayerNameEx(playerid),params);
	foreach(Player, i){
		if(Info[i][pMember] >= 1){
			SendClientMessageEx(i, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:showsound(playerid, params[]){
	new sound;
    if(sscanf(params, "d", sound)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /showsound (ID)");
    PlayerPlaySound(playerid, sound, 0,0,0);
    return 1;
}

CMD:expdoble(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 89650 || Info[playerid][pShopTech] == 1){
		new string[128], giveplayerid, hours, invoice[64];
		if(sscanf(params, "uds[64]", giveplayerid, hours, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /expdoble (playerid) (Horas) (Detalles)");
		format(string, sizeof(string), " %s te dio %d horas de doble experiencia, cada payday recibirás doble EXP y en trabajos también.", GetPlayerNameEx(playerid), hours);
		SendClientMessageEx(giveplayerid,COLOR_YELLOW,string);
		format(string, sizeof(string), " Estableciste su experiencia doble a %d horas a %s.", hours,GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid,COLOR_YELLOW,string);
		Info[giveplayerid][pDobleExp] += hours;
		format(string, sizeof(string), "[SHOP ExpDoble] %s dió %d horas a %s - Pagó fue de %s", GetPlayerNameEx(playerid), hours,GetPlayerNameEx(giveplayerid), invoice);
		Log("logs/shoplog.log", string);
	}
	return 1;
}

CMD:dedicados(playerid, params[]){
	if(!IsPlayerConnected(playerid)) return 1;
	new string[2500];
	foreach(Player, i)
	{
		if(Info[i][pExp] >= 150)
		{
			format(string, sizeof(string), "%s%s", string, GetPlayerNameEx(i));
			format(string, sizeof(string), "%s\n", string);
		}
	}
	format(string, sizeof(string), "%s\n", string);
	SafeDialogEx(playerid, INVALID_DIALOG, DIALOG_STYLE_LIST,"{008EC1}Usuarios Dedicados",string,"Volver","");
	return 1;
}

CMD:venderfichasvip(playerid, params[]){
	new string[128], giveplayerid, amount, price;
	if(sscanf(params, "ddd", giveplayerid, amount, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /venderfichasvip (playerid) (Monto) (Precio)");
	if(amount < 1 || amount > 99999999) { SendClientMessageEx(playerid, COLOR_WHITE, "* Los valores no pueden ser mayores a 99999999 gramos ni menores a 1."); return 1; }
	if(price < 1) { SendClientMessageEx(playerid, COLOR_WHITE, "El precio no puede ser menor que 1."); return 1; }
	if(IsPlayerConnected(playerid)){
		if(IsPlayerConnected(giveplayerid)){
			if(ProxDetectorS(8.0, playerid, giveplayerid)){
				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes venderte a ti mismo.");
				format(string, sizeof(string), "* Has ofrecido a %s, %d fichas VIP por $%d.", GetPlayerNameEx(giveplayerid), amount, price);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s quiere venderte %d fichas VIP por $%d, (Usa: /aceptar fichasvip para comprar).", GetPlayerNameEx(playerid), amount, price);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				FOffer[giveplayerid] = playerid;
				FPrice[giveplayerid] = price;
				return FAmount[giveplayerid] = amount;
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está cerca tuyo.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "ID Inválida.");
	return 1;
}

CMD:viplocker(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, 798.4911,-1416.1251,1016.4688)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás cerca del {FFFF00}VIP{FFFFFF} locker!");
	switch(Info[playerid][pVIP])
	{
		case 1: SafeDialogEx(playerid, DIALOG_VIPLOCKER, DIALOG_STYLE_LIST, "{008EC1}VIP Locker", "Botiquín HP (Gratis)\nArmadura ($15000)\nCambiar Ropa\nTrabajos\nVIP Color", "Seleccionar", "Cancelar");
		case 2: SafeDialogEx(playerid, DIALOG_VIPLOCKER, DIALOG_STYLE_LIST, "{008EC1}VIP Locker", "Botiquín HP (Gratis)\nArmadura ($15000)\nCambiar Ropa\nTrabajos\nVIP Color", "Seleccionar", "Cancelar");
		case 3,4,5: SafeDialogEx(playerid, DIALOG_VIPLOCKER, DIALOG_STYLE_LIST, "{008EC1}VIP Locker", "Botiquín HP (Gratis)\nArmadura (Gratis)\nCambiar Ropa\nTrabajos\nVIP Color", "Seleccionar", "Cancelar");
		default: SendClientMessageEx(playerid, COLOR_WHITE, "No eres usuario VIP!");
	}
	return 1;
}

CMD:weaponr(playerid, params[])
{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 6)
	{
		new string[128], giveplayerid, hours;
		if(sscanf(params, "dd", giveplayerid,hours)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /weaponr (playerid) (horas)");
		if(IsPlayerConnected(giveplayerid))
		{
			if(Info[giveplayerid][pWRestricted] == 0)
			{
			    Info[giveplayerid][pWRestricted] = hours;
				format(string, sizeof(string), "* Diste a %s %i horas de restricción de armas.", GetPlayerNameEx(giveplayerid),hours);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* Administrador %s te dió %i horas de restricción de armas.", GetPlayerNameEx(playerid),hours);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "[AdmCmdExe]: %s dió restricción de armas a %s por %d horas.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),hours);
  				ABroadCast(COLOR_GENERAL,string,2);
				return 1;
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "* Ese jugador ya tiene restricción de armas.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "ID Inválida.");
	}
	return 1;
}
CMD:invitaramigo(playerid, params[]){
	if(Info[playerid][pVIP] >= 2){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /invitaramigo (playerid)");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pVIP] < 1){
				new days, daytime;
				if(Info[playerid][pVIP] == 2){ daytime = 7; }
				else if(Info[playerid][pVIP] >= 3) { daytime = 1; }
				ConvertTime(gettime() - Info[playerid][pVIPInviteDay], .ctd=days);
				if(days >= daytime || Info[giveplayerid][pVIP] >= 4 || Info[playerid][pAdminZC] == 89650){
					Info[giveplayerid][pVIP] = 1;
					Info[giveplayerid][pTempVIP] = 10800;
					Info[giveplayerid][pBuddyInvited] = 1;
					format(string, sizeof(string), "Invitaste a %s a ser un {FFFF00}BRONCEVIP{FFFFFF} por %d horas.", GetPlayerNameEx(giveplayerid),3);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "Fuiste invitado por %s a ser un {FFFF00}BRONCEVIP{FFFFFF} por %d horas. Disfrutalo!", GetPlayerNameEx(playerid), 3);
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "BUDDY INVITE: %s ha invitado %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					Log("logs/setvip.log", string);
					Info[playerid][pVIPInviteDay] = gettime();
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Sólo puedes invitar a una persona como {FFFF00}SILVERVIP{FFFFFF} cada 7 días y a una como {FFFF00}GOLDVIP{FFFFFF} cada día.");
			}
			else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador ya es {FFFF00}VIP{FFFFFF}.");
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está conectado.");
	}
	return 1;
}

CMD:recompensas(playerid, params[])
{
    new string[128];
    SendClientMessageEx(playerid, COLOR_YELLOW, "Información de Recompensas:");
    format(string, sizeof(string), "Horas de Recompensa Total: %d Horas.", Info[playerid][pExp]);
    SendClientMessageEx(playerid, COLOR_GREEN, string);
    format(string, sizeof(string), "Horas de Usuario Dedicado: %d Horas.", Info[playerid][pDPHours]);
    SendClientMessageEx(playerid, COLOR_WHITE, string);
    if(Info[playerid][pExp] >= 150)
    {
        if(Info[playerid][pExp] >= 150) return SendClientMessageEx(playerid, COLOR_YELLOW, "Eres un Miembro Dedicado!");
    	format(string, sizeof(string), "Te faltan %i Horas para ser un Miembro Dedicado.", 150-Info[playerid][pExp]);
        SendClientMessageEx(playerid, COLOR_YELLOW, string);
        return 1;
	}
    else
    {
    	format(string, sizeof(string), "Te faltan %i Horas para ser un Usuario Dedicado.", 150-Info[playerid][pExp]);
    	SendClientMessageEx(playerid, COLOR_YELLOW, string);
    }
	return 1;
}
CMD:ad(playerid, params[]) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} El comando /ad(s) ha sido removido, usa /anuncios estando en la central de Televisión");
CMD:ads(playerid, params[]) return cmd_ad(playerid, params);
CMD:anuncios(playerid, params[]) {
	if(!PlayerToPoint(5.0,playerid,1775.8372,-1711.3041,13.5950)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en la central de televisión.");
	if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Fuiste bloqueado del comando /ad.");
	if(iAdverTimer >= 1)return SendClientMessageEx(playerid, COLOR_GREY, "Sólo se puede enviar un anuncio global cada 1 Minuto");
	if(gPlayerLogged{playerid} == 0) {
		SendClientMessageEx(playerid, COLOR_WHITE, "No has ingresado al servidor correctamente.");
	}
	else if(GetPVarType(playerid, "Injured") == 1) {
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer anuncios mientras estás herido.");
	}
	else if(Info[playerid][pEstado] != 0) {
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer anuncios en este momento.");
	}
	else if(Info[playerid][pJailTime] > 0) {
		SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer anuncios en prisión.");
	}
	else SafeDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "{A2DC35}Anuncios", "Compra y Venta\nClasificados\nEmpleo\nExtras", "Seleccionar", "Cancelar");
	return 1;
}

/*zcmd(anuncios, playerid, params[])
 {
     if(!sscanf(params, "s[220]", params[0]))
     {
  	     if(iAdverTimer >= 1)return SendClientMessageEx(playerid, COLOR_GREY, "Sólo se puede enviar un anuncio global cada 1 Minuto");
       	 if(DetectarSpam(params)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste Spam, esto está prohibido."); return 0; }
         if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "Debes ser mínimo nivel 2.");
         if(!PlayerToPoint(5.0,playerid,645.3606,-1360.7416,13.5887)) return SendClientMessageEx(playerid, COLOR_GREY, "No estas en MBRTV.");
         if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en el 24/7.");
         if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Fuiste bloqueado del comando /ad.");
         new string[220];
         if(CheckMoney(playerid, 100))
         {
             format(string, sizeof(string), "{00AD00}[Anuncio]{FFFFFF} %s {00AD00}{00D1FF}[Telefono: %d]",  params[0], Info[playerid][pPnumber]);
         	 OOCNews(-1,string);
       		 Bought(playerid, 100);
   	  		 format(string, sizeof(string), "[{FFFFFF}Anunciante:{FFB400} Nombre: %s ID:%d{FF0000}]", GetPlayerNameEx(playerid), playerid);
         	 ABroadCast(COLOR_LIGHTGREEN,string,1);
	       	 iAdverTimer = 60;
   		}
  	}
  		else SendClientMessageEx(playerid, COLOR_GRAD2, "Utilize: /anuncios [anuncio]");
        return 1;
 }*/

CMD:cinturon(playerid, params[]){
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehiculo.");
	new string[50 + MAX_PLAYER_NAME];
    if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 0){
        Seatbelt[playerid] = 1;
        if(IsABike(GetPlayerVehicleID(playerid))){format(string, sizeof(string), "* %s agarra su casco, y se lo pone.", GetPlayerNameEx(playerid));}
        else { format(string, sizeof(string), "* %s pone las manos en su cinturón y se lo pone.", GetPlayerNameEx(playerid)); }
    }
    else if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 1){
        Seatbelt[playerid] = 0;
        if(IsABike(GetPlayerVehicleID(playerid))){format(string, sizeof(string), "* %s pone las manos en su casco, y se lo quita.", GetPlayerNameEx(playerid));}
        else { format(string, sizeof(string), "* %s pone las manos en su cinturón y se lo quita.", GetPlayerNameEx(playerid)); }
    }
    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    return 1;
}

CMD:vercinturon(playerid, params[]){
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vercinturon (Jugador)");
    if(GetPlayerState(giveplayerid) == PLAYER_STATE_ONFOOT) return SendClientMessageEx(playerid,COLOR_GREY,"Ese jugador no está en un vehiculo!");
    if (ProxDetectorS(9.0, playerid, giveplayerid)){
		new string[128];
        new stext[4];
        if(Seatbelt[giveplayerid] == 0) { stext = "sin"; }
        else { stext = "con"; }
        if(IsABike(GetPlayerVehicleID(playerid))){
            format(string, sizeof(string), "%s está %s casco." , GetPlayerNameEx(giveplayerid) , stext);
            SendClientMessageEx(playerid,COLOR_WHITE,string);

            format(string, sizeof(string), "* %s mira a %s, mirando si tiene puesto su casco.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else{
            format(string, sizeof(string), "%s está %s cinturón." , GetPlayerNameEx(giveplayerid) , stext);
            SendClientMessageEx(playerid,COLOR_WHITE,string);

            format(string, sizeof(string), "* %s observa a travez de la ventana de %s, mirando si usa el cinturón.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    else { SendClientMessageEx(playerid, COLOR_WHITE, "No estás cerca de ese jugador!"); }
    return 1;
}

CMD:darvip(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new nick[MAX_PLAYER_NAME];
		GetPlayerName(playerid, nick, sizeof(nick));
		if(!strcmp(nick, "Jack_Williams", true))
		{
		new string[128], giveplayerid, level;
		if(sscanf(params, "dd", giveplayerid, level)){
			SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darvip (playerid) (level)");
			SendClientMessageEx(playerid, COLOR_GRAD3, "Niveles de VIP: |0| None |1| Bronce |2| Silver |3| Gold |4| Platinum |5| Moderador");
			return 1;
		}
		if(IsPlayerConnected(giveplayerid)){
			if(giveplayerid != INVALID_PLAYER_ID){
				if(level < 0 || level > 5) return SendClientMessageEx(playerid, COLOR_WHITE, "VIP Level: 0 a 5!");
				Info[giveplayerid][pVIP] = level;
				Info[giveplayerid][pTempVIP] = 0;
				Info[giveplayerid][pBuddyInvited] = 0;
				new year, month,day;
				getdate(year, month, day);
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				if(month == 12)
				{
				    Info[giveplayerid][pVIPDateM] = 1;
				}
				else
				{
				    new total;
					total = month + 1;
				    Info[giveplayerid][pVIPDateM] = total;
				}
				Info[giveplayerid][pVIPDateD] = day;
				if(level == 0){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Ninguno (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Ninguno (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido establecido a nada por %s (0).", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
                    Info[giveplayerid][pVIPDateD] = -1;
                    Info[giveplayerid][pVIPDateM] = -1;
					format(string, sizeof(string), "[AdmCmd]: %s has set %s's (IP:%s) VIP level to none (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 1){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Bronce (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Bronce (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido establecido a Bronce por %s (1).", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "[AdmCmd]: %s has set %s's (IP:%s) VIP level to Bronce (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 2){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Silver (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Silver (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido establecido a Silver por %s (2).", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "[AdmCmd]: %s has set %s's (IP:%s) VIP level to Silver (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 3){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s has establecido a %s, VIP level a Gold (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Gold (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido establecido a Gold por %s (3).", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "[AdmCmd]: %s has set %s's (IP:%s) VIP level to Gold (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 4){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Platinum (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido a %s, VIP level a Platinum (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido establecido a Platinum por %s (4).", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

					// Level 5 Arms Job - Platinum VIP
					Info[giveplayerid][pArmsSkill] = 401;

					format(string, sizeof(string), "[AdmCmd]: %s ha establecido %s's (IP:%s) VIP level a Platinum (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 5){
					if (Info[playerid][pAdminZC] < 1338){
						format(string, sizeof(string), "[AdmCmd]: %s ha establecido %s's VIP level a Moderador (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					format(string, sizeof(string), "[AdmCmd]: %s ha establecido %s's VIP level a Moderador (%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 1337);
					format(string, sizeof(string), "Tu Nivel de VIP ha sido a Moderador por %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "[AdmCmd]: %s has set %s's (IP:%s) VIP level to Moderator (%d). (%d-%d-%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level, month,day,year);
					Log("logs/setvip.log", string);
					return 1;
				}
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
	return 1;
}

CMD:togvip(playerid, params[]){
	if(Info[playerid][pVIP] > 0 || Info[playerid][pAdminZC] >= 1338){
		switch(Info[playerid][pVIPCHAT]){
			case 0:{
				Info[playerid][pVIPCHAT] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Chat VIP habilitado. Utiliza /vip (texto) para hablar.");
			}
			case 1:{
				Info[playerid][pVIPCHAT] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "Chat VIP deshabilitado.");
			}
		}
	}
	return 1;
}
CMD:vip(playerid, params[])
{
	if(Info[playerid][pVIP] > 0 || Info[playerid][pAdminZC] >= 1338){
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /vip (Mensaje - Chat)");
		if(VIPTimer[playerid] > 0){
			format(string, sizeof(string), "Debes esperar %d segundos para hablar de nuevo por este canal.", VIPTimer[playerid]);
			SendClientMessageEx(playerid, COLOR_GREY, string);
			return 1;
		}
		if(Info[playerid][pVIPCHAT] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes el canal deshabilitado, /togvip para re-habilitarlo!");
		switch(Info[playerid][pAdminZC]){
		    case 1338: format(string, sizeof(string), "** [ADM] [Líder] %s: %s", GetPlayerNameEx(playerid), params);
		    case 6000: format(string, sizeof(string), "** [ADM] [Fundador] %s: %s", GetPlayerNameEx(playerid), params);
		    case 89650: format(string, sizeof(string), "** [ADM] [Fundador] %s: %s", GetPlayerNameEx(playerid), params);
		    case 89651: format(string, sizeof(string), "** [ADM] [Fundadora] %s: %s", GetPlayerNameEx(playerid), params);
		}
		switch(Info[playerid][pVIP]){
		    case 1:{
				format(string, sizeof(string), "** Bronce VIP %s: %s", GetPlayerNameEx(playerid), params);
				VIPTimer[playerid] = 8;
			}
			case 2: {
				format(string, sizeof(string), "** Silver VIP %s: %s", GetPlayerNameEx(playerid), params);
				VIPTimer[playerid] = 6;
			}
			case 3:
			{
				format(string, sizeof(string), "** Gold VIP %s: %s", GetPlayerNameEx(playerid), params);
				VIPTimer[playerid] = 5;
			}
			case 4:{
				format(string, sizeof(string), "** Platinum VIP %s: %s", GetPlayerNameEx(playerid), params);
				VIPTimer[playerid] = 5;
			}
			case 5: format(string, sizeof(string), "** VIP Moderador %s: %s", GetPlayerNameEx(playerid), params);
		}
		if (Info[playerid][pVIP] >= 1 || Info[playerid][pAdminZC] >= 2){
			SendVIPMessage(COLOR_VIP, string);
		}
		Log("logs/vipchat.log", string);
	}
	return 1;
}
CMD:regaloatodos(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 5000){
    	if(GiftAllowed){
			new string[128];
      		format(string, sizeof(string), "Perfect CityPerfect City: %s ha enviado regalos a todos los usuarios.", GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL, string, 2);
      		format(string, sizeof(string), "Día de Regalos! %s ha enviado regalos a todos los usuarios!", GetPlayerNameEx(playerid));
			BroadCast(COLOR_GREEN, string);
			GiftAllowed = 0;
			foreach(Player, i)
			{
			    GiftPlayer(i);
			    Info[i][pGiftTime] = 3600;
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Este comando ya fue usado, puedes usarlo en el próximo payday.");
	}
	return 1;
}
CMD:horaregalo(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /horaregalo (playerid)");
    if(Info[playerid][pAdminZC] >= 5000){
		if(giveplayerid != INVALID_PLAYER_ID)
		{
		    format(string, sizeof(string), "[AdmCmd]: %s reseteó el tiempo de regalo a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_YELLOW, string, 2);
		    Info[giveplayerid][pGiftTime] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no está conectado.");
	}
	return 1;
}

CMD:spawncasa(playerid, params[]){
    if( Info[playerid][pPhousekey] != INVALID_HOUSE_ID){
        if(Info[playerid][pVIP] >= 4){
        	switch(Info[playerid][pTypeSpawn]){
				case 0:{
            		Info[playerid][pTypeSpawn] = 1;
            		SendClientMessageEx( playerid, COLOR_YELLOW, "{FFFF00}[PLATINUMVIP]:{FFFFFF} Ahora aparecerás en tu casa cuando mueras." );
				}
				case 1:{
            		Info[playerid][pTypeSpawn] = 0;
            		SendClientMessageEx( playerid, COLOR_YELLOW, "{FFFF00}[PLATINUMVIP]:{FFFFFF} Ahora aparecerás en el hospital cuando mueras." );
				}
			}
		}
        else return SendClientMessageEx( playerid, COLOR_WHITE, "No eres VIP Platinum." );
    }
    else SendClientMessageEx( playerid, COLOR_WHITE, "No eres dueño de una casa." );
    return 1;
}

CMD:automensaje(playerid, params[]){
	if(Info[playerid][pVIP] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No eres {FFFF00}VIP{FFFFFF}.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /automensaje [texto]");
	new string[128];
	if(strlen(params) >= 1 && strlen(params) < 63){
		format(Info[playerid][pAutoTextReply], 64, "%s", params);
		format(string, sizeof(string), "Cambiaste el auto mensaje de respuesta: %s", params);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Tu automensaje no puede tener más de 64 letras ni menos de 1.");
	return 1;
}
	zcmd(repararpremium, playerid, params[])
	{
        if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} Necesitas ser VIP Silver");
			{
			new engine;
			if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes de tener el motor apagado. ({5ABAFF}Usa /motor{FFFFFF}).");
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    		RepairVehicle(GetPlayerVehicleID(playerid));
			SendClientMessageEx(playerid, COLOR_WHITE, "Vehículo Premium reparado.");
			new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Ha reparado su vehiculo. )) *", GetPlayerNameEx(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			}
		return 1;
    }

	zcmd(skinpremium, playerid, params[]){
 	    if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_RED2, "{FFFF00}[ERROR]:{FFFFFF} Necesitas ser VIP Silver");
 	    if(!sscanf(params, "i", params[0]))
        {
            if(params[0] > 0 && params[0] < 311)
            {
            Info[playerid][pChar] = params[0];
			SetPlayerSkin(playerid, Info[playerid][pChar]);
            new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Se ha cambiado de skin. )) *", GetPlayerNameEx(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Utilize: /skinpremium <ID>");
 	    }
		return 1;
	}
CMD:venderfichasv(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 1338 || Info[playerid][pShopTech] == 1){
		new string[128], giveplayerid, amount, invoice[32];
		if(sscanf(params, "dds[32]", giveplayerid, amount, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /venderfichasv (playerid) (valor) (invoice #)");
		Info[giveplayerid][pVTokens] += amount;
		format(string, sizeof(string), "Recibiste %d Fichas VIP de la tienda tecnica %s.", amount, GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "[FICHASVIP] %s a %s, dió %d Tokens VIP - Detalles %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, invoice, GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		Log("logs/shoplog.log", string);
	}
	else SendClientMessageEx(playerid, -1, "No puedes usar este comando.");
	return 1;
}

CMD:banear(playerid, params[]){
    //if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 4){
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /banear (player) (razón)");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pAdminZC] > Info[playerid][pAdminZC]){
				format(string, sizeof(string), "[AdmCmd]: %s ha sido autobaneado, razón: Intentar banear a un nivel mayor de admin.", GetPlayerNameEx(playerid));
				ABroadCast(COLOR_YELLOW,string,2);
				Info[playerid][pBannedZC] = 2;
				UnloadPlayerVehicles(playerid);
				Kick(playerid);
				return 1;
			}
			else{
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "AdmCmd: %s(IP:%s) was banned by %s, reason: %s (%d-%d-%d)", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason,month,day,year);
				Log("logs/ban.log", string);
				format(string, sizeof(string), "%s ha sido baneado por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				SetTimerEx("TimerBAN",1000,false,"d",giveplayerid);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	}
	return 1;
}

CMD:banip(playerid, params[]){

	if (Info[playerid][pAdminZC] >= 5){
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /banip (player) (razón)");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pAdminZC] > Info[playerid][pAdminZC]){
				format(string, sizeof(string), "[AdmCmd]: %s ha sido auto baneado, razón: Intentar banear a un nivel mayor de admin.", GetPlayerNameEx(playerid));
				ABroadCast(COLOR_YELLOW,string,2);
				Info[playerid][pBannedZC] = 2;
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				return 1;
			}
			else{
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "[AdmCmd]: %s fue baneado por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				SetTimerEx("TimerBANIP",1000,false,"d",giveplayerid);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	}
	return 1;
}

CMD:kick(playerid, params[]){
	//if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if (Info[playerid][pAdminZC] >= 2){
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /kick (playerID) (razón)");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pAdminZC] >= Info[playerid][pAdminZC]){
				format(string, sizeof(string), "[AdmCmd]: %s ha sido auto expulsado, razón: Intentar usar /kick a un administrador mayor.", GetPlayerNameEx(playerid));
				ABroadCast(COLOR_YELLOW,string, (Info[playerid][pAdminZC] == 1) ? (1) : (2));
				SetTimerEx("TimerKICK",1000,false,"d",playerid);
				return 1;
			}
			else{
				new year, month,day;
				getdate(year, month, day);
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdmCmd: %s (IP:%s) fue expulsado por %s, razón: %s (%d-%d-%d)", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason,month,day,year);
				Log("logs/kick.log", string);
				if(Info[playerid][pAdminZC] == 1) Log("logs/moderator.log", string);
				format(string, sizeof(string), "%s ha sido expulsado por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				SetTimerEx("TimerKICK",1000,false,"d",giveplayerid);
			}
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	return 1;
}

CMD:buscar(playerid, params[]){
	new string[128];
	if(!Hitman(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No eres de Sicarios.");
	if(UsedFind[playerid]){
		format(string, sizeof(string), "Tienes que esperar %d segundos para buscar de nuevo.", UsedFind[playerid]);
		return SendClientMessageEx(playerid, COLOR_GREY, string);
	}
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /buscar (playerid)");
	if(IsPlayerConnected(giveplayerid)){
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando contigo mismo.");
		if(GetPlayerInterior(giveplayerid)!=0) return SendClientMessageEx(playerid, COLOR_WHITE, "Está persona está en un interior.");
		if(Info[giveplayerid][pAdminZC] >= 1338) return SendClientMessageEx(playerid, COLOR_WHITE, "No está disponible buscar a está persona.");
		new reload, level = Info[playerid][pRank];
		switch(level){
		    case 1: reload = 90;
		    case 2: reload = 70;
		    case 3: reload = 60;
		    case 4: reload = 40;
		    case 5: reload = 20;
		    case 6: reload = 5;
		}
	    new Float:X[3];
	    GetPlayerPos(giveplayerid, X[0], X[1], X[2]);
	    SetPlayerCheckpoint(playerid,X[0], X[1], X[2], 4.0);
		new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(giveplayerid, zone, sizeof(zone));
		format(string, sizeof(string), "%s - su última posición fue en %s.", GetPlayerNameEx(giveplayerid), zone);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		UsedFind[playerid] = reload;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
	return 1;
}

CMD:verregalo(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338 || Info[playerid][pShopTech] == 1){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /verregalo (playerid)");
		new rtxt[18];
		if(Info[giveplayerid][pRegalo] >= 0){
		   	switch(Info[giveplayerid][pRegalo]){
				case 0:rtxt="5 USD Shop";
				case 1:rtxt="Laser Toy";
				case 2:rtxt="10 USD Shop";
				case 3:rtxt="Police Vest";
				case 4:rtxt="Custom Product";
				case 5:rtxt="SVIP 1 Mes";
				case 6:rtxt="Auto Custom";
				case 7:rtxt="BVIP 1 Mes";
				case 8:rtxt="Casa";
		   	}
			format(string, sizeof(string), "* %s(%d) Premio: %s.",GetPlayerNameEx(giveplayerid),giveplayerid,rtxt);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
        else return SendClientMessageEx(playerid, COLOR_WHITE, "No tiene ningún premio.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando");
	return 1;
}

CMD:limpiarregalo(playerid, params[]){
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 1338){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /limpiarregalo (playerid)");
		if(IsPlayerConnected(giveplayerid)){
			if(Info[giveplayerid][pRegalo] >= 0){
				Info[giveplayerid][pRegalo] = -1;
				format(string, sizeof(string), "[AdmCmd]: %s ha limpiado los regalos de %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_ORANGE,string,2);
			}
			else{
				format(string, sizeof(string), "%s no ha recibído premios últimamente activos.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}

		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando.");
	return 1;
}

CMD:luces(playerid, params[])
{
	if(Team_LSPD(playerid) || Team_FBI(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
		    new vehicleid = GetPlayerVehicleID(playerid);
		    if(!LSPD_IsACopCar(vehicleid) && !FBI_Vehicle(vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Debes estar en un vehiculo de LSPD o FBI.");
		    if(Lamp[vehicleid] == 0)
			{
				for(new i=0; i<sizeof(Offsets); i++){
                	if(Offsets[i][getID] == 560 && GetVehicleModel(vehicleid) == 560)
					{
                    	Lamp[vehicleid] = 1;
                    	SendClientMessageEx(playerid, -1, "Luces activadas correctamente.");
						light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
						AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
						return 1;
                	}
                	if(Offsets[i][getID] == 415 && GetVehicleModel(vehicleid) == 415){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 421 && GetVehicleModel(vehicleid) == 421){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 426 && GetVehicleModel(vehicleid) == 426){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 579 && GetVehicleModel(vehicleid) == 579){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 402 && GetVehicleModel(vehicleid) == 402){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 461 && GetVehicleModel(vehicleid) == 461){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 521 && GetVehicleModel(vehicleid) == 521){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
                	if(Offsets[i][getID] == 506 && GetVehicleModel(vehicleid) == 506){
                    Lamp[vehicleid] = 1;
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
                	}
				}
            	SendClientMessageEx(playerid, -1, "{FFFF00}[ERROR]:{FFFFFF} Modelos compatibles:");
            	return SendClientMessageEx(playerid, -1, "Sultan, Cheetah, Washington, Premier, Huntley, Buffalo, PCJ 600, FCR 900, Super Gt");
            }
			else
			{
            	DestroyObject(light[vehicleid]);
                Lamp[vehicleid] = 0;
                SendClientMessageEx(playerid, -1, "Luces desactivadas correctamente.");
                return 1;
			}
		}
		else return SendClientMessageEx(playerid, -1, "Debes estar en un vehiculo.");
	}
	else SendClientMessageEx(playerid, -1, "No puedes usar este comando (No eres Agente).");
	return 1;
}
zcmd(forzarpayday, playerid, params[])
{
new string[64];
if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
if(Info[playerid][pAdminZC] > 1338)
{
format(string, sizeof(string), "[AdmCmdExe]: %s adelantó el PayDay.", GetPlayerNameEx(playerid));
ABroadCast(COLOR_GENERAL, string, 2);
PayDay();
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
return 1;
}
CMD:inventario(playerid, params[])
{
    ShowInventario(playerid,playerid);
    return 1;
}
ShowInventario(playerid,targetid)
{
    if(!IsPlayerConnected(targetid)) return Message(playerid, COLOR_WHITE, "No estás conectado.");
    new coordsstring[1024], string2[1024];
	if(pbomba[playerid] > 0){
 		strcat(coordsstring, "{FF493E}Bomba C4\n");
 	}
	if(Info[playerid][pMask] > 0){
		strcat(coordsstring, "{FFD1FF}Máscara\n");
	}
	if(Info[playerid][pGanzuas] > 0){
		strcat(coordsstring, "{00717B}Ganzúas\n");
	}
	if(Rope[playerid] > 0){
	    strcat(coordsstring, "{C80099}Soga y Venda\n");
	}
	if(Info[playerid][pReanimador] > 0){
		strcat(coordsstring, "{00FF00}Reanimador\n");
	}
	if(Info[playerid][pPnumber] > 0){
	    strcat(coordsstring, "{99DE00}Teléfono Móvil\n");
	}
	if(autorepara[playerid] > 0){
		strcat(coordsstring, "{FFD019}Bidón de gasolina\n");
	}
	if(Info[playerid][pWSeeds] > 0){
		strcat(coordsstring, "{00B000}Semillas de hierba\n");
	}
	if(Info[playerid][pPhoneBook] > 0){
		strcat(coordsstring, "{4763EC}Agenda telefónica\n");
	}
	new cash = GetPlayerMoney(playerid);
 	format(string2, sizeof(coordsstring),"{FFFFFF}Dinero: {00BCFF}$%d\n",cash);
 	strcat(coordsstring, string2);
 	
	new spray =  Info[playerid][pSpraycan];
	format(string2, sizeof(string2), "{FFFFFF}Latas de spray: {00BCFF}%d\n", spray);
	strcat(coordsstring, string2);
	
	new mat = Info[playerid][pMats];
	format(string2, sizeof(string2), "{FFFFFF}Materiales: {00BCFF}%d\n", mat);
	strcat(coordsstring, string2);
	
 	new cos = Info[playerid][pCosecha];
	format(string2, sizeof(string2), "{FFFFFF}Kilos de cosecha: {00BCFF}%d\n", cos);
 	strcat(coordsstring, string2);
 	
  	new gs = Info[playerid][pPot];
	format(string2, sizeof(string2), "{FFFFFF}Gramos de hierba: {00BCFF}%d\n", gs);
	strcat(coordsstring, string2);

	new crack = Info[playerid][pCrack];
	format(string2, sizeof(string2), "{FFFFFF}Gramos de crack: {00BCFF}%d\n", crack);
	strcat(coordsstring, string2);

	new weaponname[50];
	for (new i = 0; i < 13; i++){
		if(Info[playerid][pWeapons][i] > 0){
 			//strcat(coordsstring, "{CE0000}Armas:\n");
			GetWeaponName(Info[playerid][pWeapons][i], weaponname, sizeof(weaponname));
			format(string2, sizeof(string2), "{F45600}%s\n", weaponname);
			strcat(coordsstring, string2);
		}
	}
    ShowPlayerDialog(playerid,INVENTARIO,DIALOG_STYLE_MSGBOX,"{FFFFFF}Mi Inventario",coordsstring,"Acetar","");
	return 1;
}
CMD:hpsave(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en la arena.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar esto ahora mismo.");
	if(Info[playerid][pFirstaid] > 0)
	{
		if(GetPVarInt(playerid, "usingfirstaid") == 0)
		{
			new string[128];
			Info[playerid][pFirstaid]--;
			SetPVarInt(playerid, "firstaid5", SetTimerEx("firstaid5", 5000, 1, "d", playerid));
			SetPVarInt(playerid, "firstaidexpire", SetTimerEx("firstaidexpire",10*60000, 0, "d", playerid));
			SetPVarInt(playerid, "usingfirstaid", 1);
			format(string, sizeof(string), "* %s usa su kit de primeros auxilos [HP Save].", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar el HP Save en este momento.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes HP Save.");
	return 1;
}
CMD:ponercam(playerid, params[])
{
	if(Info[playerid][pSurveillance] > 0)
	{
		if(GetPVarInt(playerid, "cameraactive") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Espera que tu otra cámara expire.");
		new string[128];
		Info[playerid][pSurveillance]--;
		SendClientMessageEx(playerid, COLOR_WHITE, "Pusiste tu camara, marchate y después usa /vercam. Duración de Baterias: 2 Minutos.");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPVarInt(playerid, "cameraactive", 1);
		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		Camera3D[playerid] = CreateDynamic3DTextLabel("** Una cámara pequeña **",COLOR_WHITE,X,Y,Z,4.0);
		SetPVarFloat(playerid, "cameraX", X);
		SetPVarFloat(playerid, "cameraY", Y);
		SetPVarFloat(playerid, "cameraZ", Z);
		SetPVarInt(playerid, "cameravw", GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid, "cameraint", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "cameraexpire", SetTimerEx("cameraexpire", 120000, 0, "d", playerid));
		format(string, sizeof(string), "* %s pone algo en el suelo.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una cámara oculta.");
	return 1;
}
CMD:quitarcam(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
		}
		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		SendClientMessageEx(playerid, COLOR_WHITE, "Cámara destruida.");
		KillTimer(GetPVarInt(playerid, "cameraexpire"));
		DeletePVar(playerid, "cameraexpire");
		DeletePVar(playerid, "cameraactive");
		DeletePVar(playerid, "camerasc");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No hay nada para destruir.");
	return 1;
}
CMD:vercam(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
	    if(GetPVarInt(playerid,"Injured") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto mientras estas herido.");
		new string[128];
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
			DeletePVar(playerid, "camerasc");
			KillTimer(GetPVarInt(playerid, "cameraexpire"));
		}
		else
		{
			format(string, sizeof(string), "* %s mira mediante una pantalla.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "La cámara va a caducar en un máximo de 2 minutos. (( %s ))", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPVarFloat(playerid, "cameraX2", X);
			SetPVarFloat(playerid, "cameraY2", Y);
			SetPVarFloat(playerid, "cameraZ2", Z);
			SetPVarInt(playerid, "cameravw2", GetPlayerVirtualWorld(playerid));
			SetPVarInt(playerid, "cameraint2", GetPlayerInterior(playerid));

			TogglePlayerControllable(playerid,0);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") - 30.0);
			SetPlayerCameraPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") + 20.0); //viewcam on
			SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint"));
			SetPVarInt(playerid, "camerasc", 1);
		}
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una cámara activa.");
	return 1;
}
zcmd(peaje, playerid, params[])
{
if(PeajeCerrado[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Los peajes están cerrados temporalmente por las autoridades.");
if(IsPlayerInRangeOfPoint(playerid,15.0,66.34, -1537.61, 4.94))
{
if(GetPlayerMoney(playerid) > 50)
{
if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
MoveDynamicObject(peaje2,67.8501, -1545.8888, 0.7158, 2.0);
SetTimer("GateClosepeaje2", 7000, 0);
GivePlayerMoney(playerid,-20); /// -20 Es El Precio Al Abrir El Peaje
GameTextForPlayer(playerid,"~w~Bienvenido~g~ a Los Santos",3000,5);
PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,COLOR_WHITE,"No estas en un vehiculo o no eres conductor.");
}
}
else
{
SendClientMessage(playerid,COLOR_WHITE,"No tienes suficiente dinero.");
}
}
else if(IsPlayerInRangeOfPoint(playerid,15.0,37.75, -1525.50, 4.94))
{
if(GetPlayerMoney(playerid) > 50)
{
MoveDynamicObject(peaje1,35.2573, -1516.9640, 0.9605, 2.0);
SetTimer("GateClosepeaje1", 7000, 0);
GivePlayerMoney(playerid,-20); /// -20 Es El Precio Al Abrir El Peaje
GameTextForPlayer(playerid,"~w~Perfect City ~g~Te da la bienvenida a San Fierro",3000,5);
PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,COLOR_WHITE,"No tienes suficiente dinero");
}
}
return 1;
}
zcmd(activarbanco, playerid, params[])
{
if(AdminDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF}Tienes que estar en servicio (/adminduty)");
if(Info[playerid][pAdminZC] >= 6)
{
if(Banco_Activo == 0)
{
Banco_Activo = 1;
SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ADM]:{FF0000} Activaste el robo al banco (Al final de rol desactivarlo (/activarbanco).");
}
else if(Banco_Activo == 1)
{
Banco_Activo = 0;
SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ADM]:{FF0000} Robo al Banco desactivado.");
}
}
return 1;
}
zcmd(mispuntos, playerid, params[])
{
	if(Info[playerid][pPTR] > 0)
	{
		new string[128];
		format(string, sizeof(string), "Usted tiene %d punto(s) de rol actualmente, use {008EC1}/tiendarol{FFFFFF} para canjearlo", Info[playerid][pPTR]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	} else SendClientMessageEx(playerid, COLOR_WHITE, " No tienes punto de rol! ");
return 1;
}
zcmd(tiendarol, playerid, params[])
	{
	if(Info[playerid][pPTR] > 0)
	{
	SafeDialogEx(playerid, Tienda_OOC, DIALOG_STYLE_LIST, "{008EC1}Tienda de Rol Perfect City", "Sacar 200.000$ - [150 Puntos de Rol]\nSacar 100.000$ - [50 Puntos de Rol]\nSacar 50.000$ - [25 Puntos de Rol]\nSacar 30.000$ - [10 Puntos de Rol]\nSacar 15.000$ - [5 Puntos de Rol]", "Canjear", "Cancelar");
	return 1;
	} else SendClientMessageEx(playerid, COLOR_WHITE, " No tienes punto de rol! ");
	return 1;
	}
zcmd(darpuntosrol, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 6000 ) return SendClientMessage(playerid, COLOR_YELLOW,"{FFFF00}[ADM]:{FF0000} No eres el encargado de esto ó no eres admin");

	if(!sscanf(params, "di", params[0], params[1]))
	{
	if(IsPlayerConnected(params[0]))
	{
	new string[400];
	{
    Info[params[0]][pPTR] += params[1];
	format(string, sizeof(string), "[AdmCmd]: %s {FFFFFF}ha dado {FF0000}%d{FFFFFF} Puntos de Rol a {FF0000}%s",GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
	ABroadCast(COLOR_GENERAL,string,1);
	}
	} else SendClientMessageEx(playerid, COLOR_WHITE, " Jugador no conectado.");
	} else SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /darpuntorol (ID) (Cantidad)");
	return 1;
	}

	zcmd(quitarpuntosrol, playerid, params[])
	{
	if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_YELLOW,"{FFFF00}[ADM]:{FF0000} No eres el encargado de esto ó no eres admin");
	if(!sscanf(params, "di", params[0], params[1]))
	{
	if(IsPlayerConnected(params[0]))
	{
	new string[250];
	{
	Info[params[0]][pPTR] -= params[1];
	format(string, sizeof(string), "[AdmCmd]: %s {FFFFFF}ha quitado {FF0000}%d{FFFFFF} Puntos de Rol a %s ",GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
	ABroadCast(COLOR_GENERAL,string,1);
	}
	} else SendClientMessageEx(playerid, COLOR_WHITE, " Jugador no conectado.");
	} else SendClientMessageEx(playerid, COLOR_WHITE, "USO: /quitarpuntosrol (ID) (Cantidad)");
	return 1;
	}

    CMD:buscartrabajo(playerid,params[]) return SafeDialogEx(playerid, JOBFINDMENU, DIALOG_STYLE_LIST, "{008EC1}Buscar - Trabajos disponibles","Pizzero\nCamionero\nTaxista\nJardinero\nLeñador\nArmero\nVendedor de drogas\nVendedor de chalecos\nGranjero\nTraficante de drogas", "Ok", "Cancelar");

	CMD:contrato(playerid, params[])
	{
		if (PlayerToPoint(10, playerid,1407.7058,-1307.4529,9.0442)){
		if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto ahora.");
		if(Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No puedes hacer esto estando en la carcel.");

		new string[128], giveplayerid, moneys, detail[32];
		if(sscanf(params, "dds[32]", giveplayerid, moneys, detail)) return SendClientMessageEx(playerid, COLOR_WHITE, "USO: /contrato [ID] [Monto] [Detalles]");

		if( moneys < 2000 || moneys > 1000000)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} No se puede hacer contratos de menos de $ 2000 o más de $ 1.000.000");
			return 1;
		}
		else if((moneys < 20000 || moneys > 1000000) && IsACop(giveplayerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} La cantidad de dinero mínimo para un agente es de $ 20.000");
			return 1;
		}
		if(Info[playerid][pLevel] < 3)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "{A2DC35}SICARIOS:{FFFFFF} Debes ser el nivel 3 para hacer un contrato.");
			return 1;
		}
		if(Info[giveplayerid][pConnectTime] < 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "{A2DC35}SICARIOS:{FFFFFF} No se puede hacer contratos a los jugadores con menos de 1 horas de juego.");
			return 1;
		}
		if (IsPlayerConnected(giveplayerid))
		{
			if(Hitman(giveplayerid))
			{
				SendClientMessageEx( playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} No se puede poner un contrato a un Sicario." );
			}
			else
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if( moneys >= 1000001 )
					{
						SendClientMessageEx( playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} El precio máximo del contrato es de $ 1.000.000!" );
						return 1;
					}

					if( Info[giveplayerid][pHead] >= 1000000 )
					{
						SendClientMessageEx( playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} Ese jugador ya tiene un contrato maximo." );
						return 1;
					}
					if(moneys + Info[giveplayerid][pHead] >= 1000001 )
     				{
						SendClientMessageEx( playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} Ese jugador ya tiene un contrato maximo." );
						return 1;
					}

					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} No te puedes hacer un contrato."); return 1; }
					new playermoney = GetPlayerCash(playerid);
					if (moneys > 0 && playermoney >= moneys)
					{
						if(strlen(detail) > 32) return SendClientMessageEx(playerid, COLOR_GRAD1, "{A2DC35}[INFO]:{FFFFFF} Los detalles del contrato no podrá ser superior a 32 carácteres.");
						GivePlayerCash(playerid, (0 - moneys));
						Info[giveplayerid][pHead]+=moneys;
						strmid(Info[giveplayerid][pContractBy], GetPlayerNameEx(playerid), 0, strlen(GetPlayerNameEx(playerid)), MAX_PLAYER_NAME);
						strmid(Info[giveplayerid][pContractDetail], detail, 0, strlen(detail), 32);
						format(string, sizeof(string), "%s ha hecho un contrato: Matar a %s por $%d, detalles: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
						SendFamilyMessage(17, COLOR_YELLOW, string);
						format(string, sizeof(string), "* Has hecho un contrato: Matar a %s for $%d, detalles: %s.",GetPlayerNameEx(giveplayerid), moneys, detail);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						new year, month,day;
						new hour,minuite,second;
						getdate(year, month, day);
						gettime(hour,minuite,second);
						format(string, sizeof(string), "<< %s hizó un contrato: Matar a %s por $%d, detalles: %s (%d-%d-%d)(%d:%d) >>",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),moneys,detail,month,day,year,hour,minuite);
						Log("logs/contracts.log", string);
						format(string, sizeof(string), "%s hizó un contrato: Matar a %s por $%d, detalles: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
						ABroadCast(COLOR_YELLOW,string,4);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} No tienes dinero para esto.");
					}
				}
			}
		}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} Jugador especificado inválido.");
		return 1;
	}

	    zcmd(acontrato, playerid, params[])
    {
		new string[256];
    	if(HitOffer[playerid] < 999)
		{
			if(HitToGet[playerid] < 999)
			{
            	if(IsPlayerConnected(HitToGet[playerid]))
				{
                	format(string, sizeof(string), "* %s aceptó el contrato para matar a %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(HitToGet[playerid]));
                    SendClientMessageEx(HitOffer[playerid], COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Aceptaste el contrato para matar a %s, recibirás $%d cuando completes la misión.", GetPlayerNameEx(HitToGet[playerid]), Info[HitToGet[playerid]][pHead] / 4 * 2);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "%s se le ha asignado un contrato a %s, por $%d.", GetPlayerNameEx(playerid), GetPlayerNameEx(HitToGet[playerid]),  Info[HitToGet[playerid]][pHead] / 4 * 2);
                    SendFamilyMessage(8, COLOR_YELLOW, string);
                    GoChase[playerid] = HitToGet[playerid];
                    GetChased[HitToGet[playerid]] = playerid;
                    GotHit[HitToGet[playerid]] = 1;
                    HitToGet[playerid] = 999;
                    HitOffer[playerid] = 999;
                    return 1;
				}
				else
				{
					HitToGet[playerid] = 999;
                    HitOffer[playerid] = 999;
                    return 1;
                }
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Nadie te ha ofrecido un contrato!");
                return 1;
            }
    	}
    	return 1;
    }
	CMD:hrangos(playerid, params[])
	{
		if (!Hitman(playerid) && Info[playerid][pAdminZC] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No eres de Sicarios!");
		SendClientMessageEx(playerid, COLOR_WHITE, "{5ABAFF}|__________________ Rangos __________________|");

		new string[128];
		foreach(Player, i)
		{
			if(Hitman(i))
			{
				if( GoChase[playerid] == 999 )
				{
					format(string, sizeof(string), "* Nombre: %s | Rango %d | Hits Completados: %d | Hits Fallados: %d", GetPlayerNameEx(i),Info[i][pRank], Info[i][pCHits], Info[i][pFHits]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
				else
				{
					format(string, sizeof(string), "* Nombre: %s | Rango %d | Hits Completados: %d | Hits Fallados: %d | Siguiendo: %s", GetPlayerNameEx(i),Info[i][pRank], Info[i][pCHits], Info[i][pFHits], GetPlayerNameEx(GoChase[i]));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
			}
		}
		return 1;
	}
	CMD:darhit(playerid, params[])
	{
		if(Hitman(playerid))
		{
			if(Info[playerid][pRank] < 4)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} Sólo rangos 4 y superiores pueden asignar contactos a la gente!");
				return 1;
			}

			new string[128], giveplayerid, targetid;
			if(sscanf(params, "dd", giveplayerid, targetid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darhit [playerid] [ID de Objetivo]");

			if(IsPlayerConnected(giveplayerid))
			{
				if(GoChase[giveplayerid] < 999)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} Ese sicario ya está ocupado con otro contrato!");
					return 1;
				}
				if(GotHit[targetid] == 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}SICARIOS:{FFFFFF} Otro asesino ya fue asignado ese contrato!");
					return 1;
				}
				if(IsPlayerConnected(targetid))
				{
					if(Info[targetid][pHead] == 0)
					{
						SendClientMessageEx(playerid, COLOR_GREY, "{A2DC35}[INFO]:{FFFFFF} Ese objetivo no tiene un contrato con la agencia!");
						return 1;
					}

					format(string, sizeof(string), "* Ofreciste %s un contrato para matar a %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(targetid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Sicario %s te ofreció un contrato para matar a %s (Usa /acontrato), para aceptarlo.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					HitOffer[giveplayerid] = playerid;
					HitToGet[giveplayerid] = targetid;
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} La persona contratada no está en línea, utiliza /contratos!");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Ese sicario no está online");
				return 1;
			}
		}
		return 1;
	}
	CMD:borrarhit(playerid, params[])
	{
		if( Info[playerid][pAdminZC] >= 4 || Hitman(playerid) && Info[playerid][pRank] >= 5)
		{
			new string[128], giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /deletehit [playerid]");

			if(!IsPlayerConnected(giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} Jugador no está online.");
				return 1;
			}

			if(Info[giveplayerid][pHead] >= 1 )
			{
				Info[giveplayerid][pHead] = 0;
				new year, month,day;
				getdate(year, month, day);
				format(string, sizeof(string), "<< %s has removido el contrato de %s(%d-%d-%d) >>", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), month,day,year);
				Log("logs/contracts.log", string);
				format(string, sizeof(string), "Has removido el contrato por la cabeza de %s.", GetPlayerNameEx(giveplayerid) );
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				GoChase[giveplayerid] = 999;

				foreach(Player, i)
				{
					if( HitToGet[i] == giveplayerid )
					{
						HitToGet[i] = 999;
						HitOffer[i] = 999;
					}
				}
			}
			else
			{
				SendClientMessageEx( playerid, COLOR_GREY, "{FFFF00}[ERROR]:{FFFFFF} No hay un contrato activo en ese jugador!" );
			}
		}
		return 1;
	}
	zcmd(amascara, playerid, params[]){
        if(Info[playerid][pMask] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, " Ya tienes una máscara.");
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, 1107,-323,68.66)){
            	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Cogiste una máscara, /mascara para ponertela.");
            	Info[playerid][pMask] = 1;
			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No eres sicario.");
		return 1;
	}
    zcmd(hits, playerid, params[])
    {
        if(Hitman(playerid)) SearchingHit(playerid);
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando.");
        return 1;
    }
    /*CMD:tarma(playerid, params[]) //By Valentin
	{
	if(manubrio[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puedes tirar un arma mientas la estás ofreciendo.");
	if(GetPVarInt(playerid, "IsInArena") >= 1) return SendClientMessageEx(playerid, COLOR_WHITE,"{5ABAFF}PAINTBALL:{5ABAFF} No puedes hacer esto en el paintball");
	else
 	{
 	    if(tarmalimit[playerid] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "{A2DC35}[INFO]:{FFFFFF} Espera 60 segundos para tirar otra arma.");
		new gunID = GetPlayerWeapon(playerid);
		if(gunID != 0)
		{
			new f = MAX_ARMAS+1;
			for(new a = 0; a < sizeof(ObjCoords); a++)
			{
				if(ObjCoords[a][0] == 0.0)
				{
					f = a;
					break;
				}
			}
			if(f > MAX_ARMAS) return SendClientMessage(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No puede tirar armas en éste momento, intenta más tarde."); // Éste mensaje aparece si se superó el límite [MAX_ARMAS]
		    new gunname[25];
		    new string[100];
			GetWeaponName(gunID, gunname, sizeof(gunname));
			format(string, sizeof(string), "* %s tira al suelo un %s.", GetPlayerNameEx(playerid), gunname);
			tarmalimit[playerid] = 60;
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, gunID);
			ObjectID[f][0] = gunID;
	        GetPlayerPos(playerid, ObjCoords[f][0], ObjCoords[f][1], ObjCoords[f][2]);
	        Object[f] = CreateDynamicObject(GunObjects[gunID][0],ObjCoords[f][0],ObjCoords[f][1],ObjCoords[f][2]-1,93.7,120.0,120.0);
		}
	}
 	return 1;
}*/


/*CMD:rarma(playerid, params[])
 {
 if(GetPVarInt(playerid, "IsInArena") >= 1) return SendClientMessageEx(playerid, COLOR_WHITE,"{5ABAFF}PAINTBALL:{5ABAFF} No puedes hacer esto en el paintball");

 else
 {
  new f = MAX_ARMAS+1;
  for(new a = 0; a < sizeof(ObjCoords); a++)
  {
   if(IsPlayerInRangeOfPoint(playerid, 5.0, ObjCoords[a][0], ObjCoords[a][1], ObjCoords[a][2]))
   {
    f = a;
    break;
   }
  }
  if(f > MAX_ARMAS) return SendClientMessage(playerid, 0x33AA3300, "{FFFF00}[ERROR]:{FFFFFF} No estás cerca de ningún arma.");
  else
  {
      new gunname[25];
      new string[100];

   ObjCoords[f][0] = 0.0;
   ObjCoords[f][1] = 0.0;
   ObjCoords[f][2] = 0.0;

   DestroyDynamicObject(Object[f]);
   GivePlayerValidWeapon(playerid, ObjectID[f][0]);
   GetWeaponName(ObjectID[f][0], gunname, sizeof(gunname));
   format(string, sizeof(string), "* %s recoge del suelo %s.", GetPlayerNameEx(playerid), gunname);
   ProxDetector(30.0, playerid, string,

COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  }
 }
 return 1;
}*/
 zcmd(qfaccoff, playerid, params[])
	{
		if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 6 || Info[playerid][pFactionModerator] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado");
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /qfaccoff [Nombre_Apellido]");
  		if(INI_Exist(params))
		{
			new PlayerFile[MAX_PLAYER_NAME + 32];
	    	format( PlayerFile , sizeof PlayerFile, USERFILE, params);
	    	new INI:File = INI_Open(PlayerFile);
    		INI_SetTag(File,"data");
	    	INI_WriteInt(File,"Leader",0);
        	INI_WriteInt(File,"Member",0);
        	INI_WriteInt(File,"Rank",0);
    		INI_Close(File);
           	format(string, sizeof(string), "{FFFF00}[AdmCmd]:{FF0000} %s quitó la facción a %s (CMD OFFLINE)", GetPlayerNameEx(playerid), params);
           	ABroadCast(COLOR_ORANGE,string,4);
           	Log("logs/admin.log", string);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} Está cuenta no existe.");
		return 1;
	}
 	zcmd(odespedir, playerid, params[])
	{
	    if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted no es lider de facción.");
	    new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /odespedir [Nombre_Apellido]");
		if(INI_Exist(params))
		{
			if(Info[playerid][pLeader] == Info[params[0]][pMember])
			{
				new PlayerFile[MAX_PLAYER_NAME + 32];
 				format( PlayerFile , sizeof PlayerFile, USERFILE, params);
	    		new INI:File = INI_Open(PlayerFile);
    			INI_SetTag(File,"data");
            	INI_WriteInt(File,"Division",0);
        		INI_WriteInt(File,"Member",0); 
        		INI_WriteInt(File,"Rank",0);
    			INI_Close(File);
				format(string, sizeof(string), " Echaste de la facción a %s con el comando offline.", params);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "{FFFF00}[ERROR]:{FFFFFF} El jugador no pertenece a tu facción.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} Está cuenta no existe.");
        return 1;
	}
    zcmd(boombox, playerid, params[])
	{
	new string[300];
	if(IsPlayerConnected(playerid))
	{
		new Float:BBCoord[4];
		GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
		GetPlayerFacingAngle(playerid, BBCoord[3]);
		SetPVarFloat(playerid, "BBX", BBCoord[0]);
		SetPVarFloat(playerid, "BBY", BBCoord[1]);
		SetPVarFloat(playerid, "BBZ", BBCoord[2]);
		BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
		BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
		BBCoord[2] -= 1.0;
		if(Info[playerid][pBoombox] == 0) return SendClientMessage(playerid, COLOR_WHITE, "* No tienes una boombox, puedes comprarla en un 24/7.");
		if(GetPVarInt(playerid, "PlacedBB")) return SendClientMessage(playerid, COLOR_WHITE, "* Utiliza /cboombox para cambiar la emisora de la boombox y /qboombox para recoger la boombox del suelo y guardarla.");
		foreach(Player, i)
		{
			if(GetPVarType(i, "PlacedBB"))
			{
				if(IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "* No puedes colocar tu boombox aquí, ya hay una colocada cerca de donde estás.");
					return 1;
				}
			}
		}
		SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2103, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
		format(string, sizeof(string), "Dueño: %s - [%d]\n",GetPlayerNameEx(playerid), playerid);
		SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(string, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 5, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
		SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
		SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
		ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
		ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Has colocado tu boombox. Comandos: /cboombox y /qboombox.");
	}
	return 1;
}

zcmd(cboombox, playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPVarType(playerid, "PlacedBB"))
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ")))
			{
				ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,"{008EC1}Lista de emisoras","Jazz\nPop\nRap\nR&B and Urban\nRock\nReggaeton\nURL streaming\nApagar la Boombox","Select", "Cancel");
			}
			else
			{
				return SendClientMessage(playerid, COLOR_WHITE, "* No estás cerca de tu boombox");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "* No has colocado ninguna boombox");
		}
	}
	return 1;
}

zcmd(qboombox, playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(!GetPVarInt(playerid, "PlacedBB"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "* No has colocado ninguna boombox");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ")))
		{
			PickUpBoombox(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "* Has cogido tu boombox del suelo");
		}
	}
	return 1;
}
	zcmd(creditos, playerid, params[])
	{
    SendClientMessage(playerid, COLOR_LIGHTGREEN, "---------------Creditos Perfect City-------------------------------");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Fundadores: {FFFFFF}Jack_Williams, Emily_Rose");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Encargados: {FFFFFF}Jack_Williams");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Mappers: {FFFFFF}Jack_Williams");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "WebMaster: {FFFFFF}Jack_Williams");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Hoster: {FFFFFF}Jack_Williams");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Scripter/Editor: {FFFFFF}Jack_Williams");
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Creador de la GM: {FFFFFF}Tony Zill & Stil");
    SendClientMessage(playerid, COLOR_GENERAL, "{FFDB00}Perfect City - todos los derechos reservados {FFFFFF}2016 - 2017");
    SendClientMessage(playerid, COLOR_LIGHTGREEN, "---------------Fin de Creditos Perfect City------------------------");
    return 1;
	}
	/*CMD:ppersona(playerid, params[])
	{
	 if(camaraon[playerid] == 0)
	  {
        camaraon[playerid] = 1;
		SendClientMessage(playerid, -1, "{9ACD32}[Oakland City]: {00CED3}Has cambiado la cámara a primera persona.");
		AttachObjectToPlayer(FPS[playerid], playerid, 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
		AttachCameraToObject(playerid, FPS[playerid]);
	  }
	else if(camaraon[playerid] == 1)
	  {
	    camaraon[playerid] = 0;
        SendClientMessage(playerid, -1, "{9ACD32}[Oakland City]: {00CED3}Has cambiado la cámara a la normal.");
		SetCameraBehindPlayer(playerid);
      }
	return 1;
	}*/
	CMD:nocanal(playerid, params[])
    {
       if(Info[playerid][pAdminZC] >= 2 ||Info[playerid][pHelper] >= 1)
       {
          if (!nonewbie){
             nonewbie = 1;
             BroadCast(COLOR_GENERAL, "CMD: El canal de ayuda fue deshabilitado por un administrador/ayudante.");
          }
          else{
             nonewbie = 0;
             BroadCast(COLOR_GENERAL, "CMD: El canal de ayuda fue habilitado por un administrador/ayudante.");
          }
       }
       else return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando.");
       return 1;
    }
 CMD:n(playerid, params[])
{
  if(gPlayerLogged{playerid} == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No estás logeado correctamente.");
  if(Info[playerid][pTut] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando en el tutorial.");
  if ((nonewbie) && Info[playerid][pAdminZC] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "El canal de ayuda está desactivado por un administrador.");
  if(Info[playerid][pNMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Estás silenciado del canal de ayuda, intentalo mas tarde.");
  new string[512];
  if(NewbieTimer[playerid] > 0)
  {
     format(string, sizeof(string), "Debes esperar %d segundos para volver a hablar por el canal de ayuda.", NewbieTimer[playerid]);
     SendClientMessageEx(playerid, COLOR_GREY, string);
     return 1;
  }
  if(gNewbie[playerid]==1) return SendClientMessageEx(playerid, COLOR_GREY, "Tienes el canal apagado, /togduda para re-habilitarlo!");
  if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /n (Texto)");
  if(isnumeric(params)) return SendClientMessageEx(playerid, COLOR_GRAD1, "ERROR: No se puede enviar números por este canal.");
  if(Info[playerid][pHelper]<1 && Info[playerid][pAdminZC] < 2)
  {
     NewbieTimer[playerid] = 60;
  }
  else if(Info[playerid][pHelper]==1&&Info[playerid][pAdminZC] < 2)
  {
     NewbieTimer[playerid] = 15;
  }
  else if(Info[playerid][pAdminZC] == 2)
  {
     NewbieTimer[playerid] = 15;
  }
  else if(Info[playerid][pHelper] >= 2 && Info[playerid][pAdminZC] < 2)
  {
     NewbieTimer[playerid] = 10;
  }
  if(Info[playerid][pHelper]<1&&Info[playerid][pAdminZC]<1)
  {
     format(string, sizeof(string), "{00D44F}[DUDAS][Usuario] %s(%d): {FFFFFF}%s", GetPlayerNameEx(playerid),playerid, params);
  }
  if(Info[playerid][pHelper] >= 1)
  {
     format(string, sizeof(string), "{00D44F}[DUDAS][Ayudante] %s(%d): {FFFFFF}%s", GetPlayerNameEx(playerid),playerid, params);
  }
  if(Info[playerid][pAdminZC] >= 2)
  {
     format(string, sizeof(string), "{00D44F}[DUDAS][Staff] %s(%d): {FFFFFF}%s", GetPlayerNameEx(playerid),playerid, params);
  }
  foreach(Player, n)
  {
     if (gNewbie[n] == 0)
     {
        SendClientMessageEx(n, COLOR_NEWBIE, string);
     }
  }
  return 1;
}
CMD:nonewbie(playerid, params[])
{
if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 5)
	{
		if (!nonewbie){
			nonewbie = 1;
			BroadCast(COLOR_GENERAL, "AdmCmd: El canal de ayuda fue deshabilitado por un administrador!");
		}
		else{
			nonewbie = 0;
			BroadCast(COLOR_GENERAL, "AdmCmd: El canal de ayuda fue habilitado por un administrador!");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
	return 1;
}
    
CMD:vendertodas(playerid, params[]) //vender todas las casas
{
if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
	if(Info[playerid][pAdminZC] >= 89650)
	{
for(new c = 0; c < MAX_HOUSES; c++)
{
new string[200], house;
HouseInfo[c][hLock] = 1;
ClearHouse(c);
format( HouseInfo[c][hOwner], 128, "Nobody" );
HouseInfo[c][hGLUpgrade] = 1;
PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
SaveHouses();
DestroyDynamicPickup(HouseInfo[c][hPickupID]);
HouseInfo[c][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[c][hExteriorX], HouseInfo[c][hExteriorY], HouseInfo[c][hExteriorZ]);
DestroyDynamic3DTextLabel(HouseInfo[c][hTextID]);
format(string, sizeof(string), "{DA0000}¡Casa en Venta!\n{FF1811}Costo:{FFFFFF} $%d\n {FF1811}Nivel:{FFFFFF} %d\nUtiliza: /comprarcasa",HouseInfo[house][hValue],HouseInfo[house][hLevel]);
HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
format(string, sizeof(string), "[AdmCmdExe]: %s a puesto todas las casas en venta",GetPlayerNameEx(playerid));
return ABroadCast(COLOR_GENERAL, string, 3);
}
     }
	 else return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
return 1;
}
//Desarrollado por Spycol(pawnoscript)
//
zcmd(nmute, playerid, params[])
{
	new giveplayerid;
    if(Info[playerid][pAdminZC] < 2 &&Info[playerid][pHelper] < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando!");
	if(!sscanf(params, "d", giveplayerid))
	{
	    if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa ID es inválida.");
   		if(Info[giveplayerid][pAdminZC] >= 1)
		{
			return SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}No puedes usar {9c2828}/nmute{FFFFFF} a administradores.");
		}
	    if(Info[giveplayerid][pNMute] == 0)
		{
		    new string[128];
   			Info[giveplayerid][pNMute] = 1;
   			Info[giveplayerid][pNMuteTotal]++;
			if(Info[giveplayerid][pNMuteTotal] == 10)
			{
				Info[giveplayerid][pBannedZC] = 2;
				format(string, sizeof(string), "[AdmWarning]: %s fue baneado automaticamente - Razón: 10 Newbie Muted en Total.", GetPlayerNameEx(giveplayerid));
				BroadCast(COLOR_LIGHTRED,string);
				Kick(giveplayerid);
				return 1;
			}
			format(string, sizeof(string), "* %s te ha silenciado del canal de ayuda por 5 minutos, razón: Mal uso del canal",GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid,COLOR_LIGHTRED,string);
			foreach(Player, n)
			{
				if (gNewbie[n] == 0 || Info[n][pNMute] == 0)
				{
				    format(string, sizeof(string), "[AdmCmd]: %s ha silenciado del canal de ayuda a %s por 5 minutos, razón: Mal uso del canal",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(n, COLOR_LIGHTRED, string);
				}
			}
			SetTimerEx("NewbieUnMuted", 300000, 0, "d", giveplayerid);
		}
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "* /nmute (PlayerID)");
	return 1;
}

CMD:armas(playerid, params[])
{
    if(GetPVarInt(playerid, "ArenaMode") > 0)
    {
        SafeDialogEx(playerid, PB_ARMAS, DIALOG_STYLE_LIST, "{008EC1}Armas","9mm(1 Ficha)\nDesert Eagle(1 Ficha)\nMP5(1 Ficha)\nAK-47(1 Ficha)\nM4(2 Fichas)\nShotgun(1 Fichas)\nCombat Shotgun(2 Fichas)\nArmadura(1 Ficha)","OK","Atrás");
	}
    else
	{
        SendClientMessageEx(playerid,COLOR_WHITE,"{FFFF00}[ERROR]:{FFFFFF} No puedes usar este comando si no estás en el paintball.");
    }
    return 1;
}

zcmd(animaciones, playerid, params[]){
		SendClientMessageEx(playerid, COLOR_GREEN,"_________________________________________________________________________________");
        SendClientMessageEx(playerid,COLOR_WHITE,"Animaciones:");
        SendClientMessageEx(playerid,COLOR_WHITE,"/poli /rendirse /sentarse /sinaliento /asiento /bailar /rap /cruzar /ped");
        SendClientMessageEx(playerid,COLOR_WHITE,"/gesto /fumar /sexo /orinar /chora /relax /saludo[2] /llorar /jiggy /dj");
        SendClientMessageEx(playerid,COLOR_WHITE,"/saludo /quieto /enganche /cpr /palmada /borracho /rap /beso /taichi");
        SendClientMessageEx(playerid,COLOR_WHITE,"/arobar /reir /lookout /robman /esconder /vomitar /comer /crack /jodete");
		return SendClientMessageEx(playerid, COLOR_GREEN,"_________________________________________________________________________________");
	}
//***telefonos publicos***
CMD:publico(playerid, params[])
	{
		new string[128], phonenumb;
        if(!IsAtCelPublic(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No te encuentras en un telefono publico.");
		if(sscanf(params, "d", phonenumb)) return SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /publico (Numero Telefónico)");
		if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"{A2DC35}[INFO]:{FFFFFF} No puedes usar este Comando mientras estás en Prisión.");
		if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid,COLOR_WHITE,"No puedes usar el teléfono publico.");


		if(Mobile[playerid] != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ya se Encuentra en una Llamada...");
		if(Info[playerid][pJailed] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este Numero no lo puedes usar en Jail-Admin.");
		format(string, sizeof(string), "* %s Pasa su tarjeta y Hace una llamada.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL);
		PlayerPlaySound(playerid, 3600, 0, 0, 0);
		if(phonenumb == 911){
            SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SendClientMessageEx(playerid, COLOR_WHITE, "Información: Ahora usa T, y Habla por el Chat por Teléfono. Usa /Colgar para Finalizar la Llamada.");
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Central: Que servicio desea? Policia, Bomberos o Paramédico?");
			Mobile[playerid] = 911;
			return 1;
		}
		if(phonenumb == 757){
            if(InLive == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "En este momento la línea está fuera de servicio u ocupada.");
			InLive = 0;
            Mobile[playerid] = 758;
			format(string,128,"Llamada Entrante desde un Telefono Publico.", Info[playerid][pPnumber]);
			SendFamilyMessage(5, COLOR_YELLOW, string);
            SetPlayerAttachedObject(playerid, 9, 330, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			Bought(playerid, 20);
            return SendClientMessageEx(playerid, COLOR_WHITE, "LSRTV: Hola... estás en Línea, desde este momento puedes hablar.");

		}
		else if(phonenumb == 3900){
		   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Bienvenido. ¿ Tiene algúna noticia, quiere participar ?");
		   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Déjenos un mensaje después de la señal, ¡hasta la vista!");
		  	SendClientMessageEx(playerid, COLOR_WHITE, "Biiip!");
			Bought(playerid, 20);
		   	return Mobile[playerid] = 3901;

		}
		if(phonenumb == Info[playerid][pPnumber]) return SendClientMessageEx(playerid, COLOR_GRAD2, "Está ocupado...");
		foreach(Player, i){
			if(Info[i][pPnumber] == phonenumb && phonenumb != 0){
				new giveplayerid = i;
				Mobile[playerid] = giveplayerid; //caller connecting
				if(IsPlayerConnected(giveplayerid)){
					if(giveplayerid != INVALID_PLAYER_ID){
						if(GetPVarInt(giveplayerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "El jugador está en el paintball arena no puede recibir llamadas.");
						if(PhoneOnline[giveplayerid] > 0){
							SendClientMessageEx(playerid, COLOR_GREY, "Tono Apagado.");
							Mobile[playerid] = INVALID_PLAYER_ID;
							return 1;
						}
						if(Mobile[giveplayerid] != INVALID_PLAYER_ID){
							SendClientMessageEx(playerid, COLOR_GRAD2, "Tono Ocupado...");
							Mobile[playerid] = INVALID_PLAYER_ID;
							return 1;
						}
						if (Mobile[giveplayerid] == INVALID_PLAYER_ID){
						    SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
							format(string, sizeof(string), "Tu telefono está Sonando - Usa /Contestar para Atender la Llamada. [Número %d].", Info[playerid][pPnumber]);
							format(string, sizeof(string), "* Teléfono de %s Suena.", GetPlayerNameEx(i));
							SendClientMessageEx(playerid, COLOR_WHITE, "{FF8000}[INDICACION]:{FFFFFF} Ahora usa T, y Habla por el chat por Teléfono.");
							ProxDetector(30.0, i, string, COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL,COLOR_GENERAL);
							CellTime[playerid] = 1;
							Bought(playerid, 20);
							return 1;
						}
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GRAD2, "Su Llamada no puede darse por el Numero Marcado, por favor, Compruebe el Número e Inténtelo Nuevamente.");
		return 1;
	}
//***sistema de fire***
    zcmd(desactivofuego, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando..");
        if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        for(new f = 0; f < sizeof(Fire); f ++)
        {
            DestroyObject(Fire[f]);
            DestroyObject(Fire[f]);
        }
        F = true;
        for(new i = 0; i < MAX_PLAYERS; i ++)
        {
            Apagandofire[i] = 0;
            llegarf[i] = false;
            DisablePlayerCheckpoint(i);
            KillTimer(Timerfire);
        }
        SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} El sistema de incendio ha sido desactivado.");
        return 1;
    }
    zcmd(activofuego, playerid, params[])
    {
        if(papilla[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FC0000}[ANTI-ABUSOS]:{FFFFFF} Tienes que estar en servicio {00E300}(/adminduty) {FFFFFF}para usar este comando.");
        if(Info[playerid][pAdminZC] < 6000) return SendClientMessageEx(playerid, COLOR_GRAD2, "{FFFF00}[ERROR]:{FFFFFF} No tienes autorización a usar este comando.");
        F = false;
        SendClientMessage(playerid, COLOR_WHITE, "{FFFF00}[ADM]:{FFFFFF} El sistema de incendio ha sido activado.");
        return 1;
    }
    zcmd(buscarfuego, playerid, params[])
    {
        if(Team_BomberosLS(playerid))
        {
    	if(F == false) return SendClientMessage(playerid, COLOR_WHITE, "No hay emergencias de incendio por ahora.");
        SetPlayerCheckpoint(playerid, LugarFuego[0], LugarFuego[1], LugarFuego[2], 8.0);
        SendClientMessage(playerid, 0x8D8DFFFF, "* Central: Se ha advertido a los bomberos de un incendio, sigue el checkpoint.");
        lugarfire = GetTickCount();
        }
        return 1;
    }

CMD:cmueble(playerid, params[])
{
    if (PlayerToPoint(10, playerid,2115.1011,-1739.1328,13.6391))
	{
	ProxDetector(20.0, playerid,"Timoteo_Martinez dice: ¡Buenas! ¿Qué mueble desea?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
    return ShowModelSelectionMenu(playerid, MueblesObj, "Muebles", 0x4A5A6BBB, 0x88888899, 0xFAFAFA);
    }
	return 1;
}

CMD:ajustarcasa(playerid, params[]){
    new string[128];
	if(Info[playerid][pPhousekey] != -1 || Info[playerid][pPhousekey2] != -1 && IsPlayerInRangeOfPoint(playerid, 25.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000)
	{
		format(string, sizeof(string), "{BFE44E}» {FFFFFF}Dinero guardado en la casa ($%d).\n{BFE44E}» {FFFFFF}Muebles en o de la casa.", HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
		SafeDialogEx(playerid, MENU_CASA, DIALOG_STYLE_LIST, "{BFE44E}» Propiedad", string, "Aceptar", "Salir");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "{BFE44E}» No eres dueño de una casa, o no estás en una de ellas.");
	return 1;
}
CMD:afk(playerid,params[])
	{
	    if(Afk[playerid]==0){
		Afk[playerid]=1;
		Timer[playerid] = SetTimer("SendMessage",100,0);
		TogglePlayerControllable(playerid,0);
		SetPlayerVirtualWorld(playerid,5);
		SetPlayerCameraPos(playerid,-2663.0913,1595.6005,225.7578 ); // Le da las cordenadas de la camara para el afk.
   		SetPlayerCameraLookAt(playerid,-2663.0913,1595.6005,225.7578); // Lo mismo que el de arriba.
		SendClientMessage(playerid,COLOR_WHITE, "{A2DC35}Perfect City:{FFFFFF} Has entrado en modo /afk, para salir de este estado usa {FF0000}/salirafk{FFFFFF}.");
		}
		else
		{
		SendClientMessage(playerid,COLOR_WHITE, "{A2DC35}Perfect City:{FFFFFF} Ya estas en modo afk, para dejar este estado usa {FF0000}/salirafk{FFFFFF}.");
		}
		return 1;
	}
CMD:salirafk(playerid,params[])
	{
	    if(Afk[playerid]==1){
		Afk[playerid]=0;
		Timer[playerid] = SetTimer("SendMessage",100,0);
		TogglePlayerControllable(playerid,1);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid); // Le quita la camara
		SendClientMessage(playerid,COLOR_WHITE, "{A2DC35}Perfect City:{FFFFFF} Has salido del modo /afk, sigue disfrutando tu estadia.");
		}
		else
		{
		SendClientMessage(playerid,COLOR_WHITE, "{A2DC35}Perfect City:{FFFFFF} No estas en modo afk.");
		}
		return 1;
	}
CMD:listaafk(playerid, params[])
{
	if(Info[playerid][pAdminZC] >= 2)
	{
   		SendClientMessageEx(playerid,COLOR_GREEN,"Lista de todos los usuarios /afk.");
		new
			estaafk[14 + MAX_PLAYER_NAME];
    	foreach(Player, i) if(Afk[i]==1)
		{
			format(estaafk, sizeof(estaafk), "* %s (ID %i)", GetPlayerNameEx(i), i);
			SendClientMessageEx(playerid, COLOR_GREY, estaafk);
		}
	}
	return 1;
}
/*//Comando para reiniciar las casas NO ACTIVAR EN CASO DE EMERGENCIA.
CMD:btlascasitas(playerid, params[]) //Comando
{
for(new c = 0; c < MAX_HOUSES; c++)
{
new string[200], house;
HouseInfo[c][hLock] = 1;
ClearHouse(c);
format( HouseInfo[c][hOwner], 128, "Nobody" );
HouseInfo[c][hGLUpgrade] = 1;
PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
SaveHouses();
DestroyDynamicPickup(HouseInfo[c][hPickupID]);
HouseInfo[c][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[c][hExteriorX], HouseInfo[c][hExteriorY], HouseInfo[c][hExteriorZ]);
DestroyDynamic3DTextLabel(HouseInfo[c][hTextID]);
format(string, sizeof(string), "{FFFFFF}¡Casa en Venta!\n{FFFFFF}Descripción: {FFFF00}%s\n{FFFFFF}Precio: {00FF00}$%d\n{FFFFFF}Nivel: {FFFF00}%d\n{FFFFFF}ID: {FFFF00}%d\n{FFFFFF}Para comprar usa: {FFFF00}/comprarcasa{FFFFFF}.",HouseInfo[house][hDescription],HouseInfo[house][hValue],HouseInfo[house][hLevel]);
HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
}
return 1;
}*/
zcmd(actualizaciones, playerid, params[])
{
        new iString[3000];
        strcat(iString, "{00A700}Actualizaciones de la versión v0.9:\n");
        strcat(iString, "\n");
        strcat(iString, "{FB7319}>>{FFFFFF} Fixeo de bug's \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Agregado Anti-Fly hack \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Añadido diálogo en el ayuntamiento \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Mejorado el Sistema de Negocio (/ayuda - negocio) \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Agregado job Traficante de drogas \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Agregado /equipo para las Mafias \n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Reparado Interior de la zona VIP\n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Reparado bug al pintar un auto en mecanicos\n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Agregado job de vendedor de chalecos\n");
    	strcat(iString, "{FB7319}>>{FFFFFF} Aumentada las pagas en los jobs\n");
     	strcat(iString, "\n");
    	/*strcat(iString, "{FFFFFF} Mejorado el Anti-Cheat: Agregado Anti-Sobeit y Anti-SpeedHack \n");
    	strcat(iString, "\n");*/
		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, " {FF0000}Actualizaciones - Perfect City:", iString, "Aceptar", "") ;
		return 1;
}
zcmd(primerospasos, playerid, params[])
{
		if(Info[playerid][pLevel] == 2)
		{
        new iString[1200];
        strcat(iString, "{00A700}¿Cómo movilizarte por la ciudad?:\n");
        strcat(iString, "\n");
        strcat(iString, "{FFFFFF}Usa {FBBD3D}/vermapa{FFFFFF} en los mapas para buscar empleo y ganar dinero. Te recomendamos {4BE267}Camionero o Jardinero{FFFFFF} para comenzar.\n");
        strcat(iString, "{FFFFFF}Puedes trabajar usando {FBBD3D}/unirse{FFFFFF}, si quieres dejarlo usa {EA4735}/renunciar.\n");
        strcat(iString, "{FFFFFF}Existen varias tiendas de ropa en donde puedes {EA7935}cambiar tu estilo{FFFFFF}, incluso prendas, ahí adentro te dirá las instrucciones.\n");
        strcat(iString, "{FFFFFF}Puedes comprarte un teléfono móvil y varios productos en las tiendas 24/7.\n");
        strcat(iString, "{FFFFFF}Para más ayuda utiliza {7779DA}/ayuda - /n - /duda.\n");
        strcat(iString, "{FFFFFF}Si ves a un usuario cometiendo anti-rol o hacks, usa {FD4133}/re (ID) (razón)\n");
        strcat(iString, "{F81300}INFO: {FFFFFF}Tienes restricción de uso de armas durante dos horas\n");
        strcat(iString, "\n");
        strcat(iString, "\n");
        strcat(iString, "{FFFFFF} Tambien visita nuestro foro para estar al tanto de las noticias del servidor: {01DCF3}Perfectcity-rp.com\n");
        ShowPlayerDialog(playerid, 1200, DIALOG_STYLE_MSGBOX, " {FF0000}Primeros Pasos:", iString, "Aceptar", "") ;
        }
        else
		{
		Message(playerid, COLOR_GRAD2, "No eres un usuario nuevo.");
		}
		return 1;
}

/*CMD:velocimetro(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No eres el conductor del vehiculo.");
	}
	else if(!Info[playerid][pSpeedo])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Habilitaste el velocimetro.");
		Info[playerid][pSpeedo] = 1;

		if(arr_Engine{GetPlayerVehicleID(playerid)} != 0)
		{

			new vehicleid = GetPlayerVehicleID(playerid), szSpeed[84];
			format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%.0f MPH - Gas: %d", player_get_speed(playerid), VehicleFuel[vehicleid]);
			GameTextForPlayer(playerid, szSpeed, 1500, 3);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Desactivaste el velocimetro.");
		Info[playerid][pSpeedo] = 0;
		if(arr_Engine{GetPlayerVehicleID(playerid)} != 0) GameTextForPlayer(playerid, " ", 1500, 3);
	}
	return 1;
}*/
//******************************CMDS FIN******************************
//***cajero por textdraw***
/*public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(_:clickedid != INVALID_TEXT_DRAW)
    {
    	if(clickedid == Textcajero[4])
    	{
		SafeDialogEx(playerid,BANCO_DEPOSITAR, DIALOG_STYLE_INPUT, "{008EC1}Depositar Dinero", "{FFFFFF}Por favor ingrese la cantidad ha depositar.", "Depositar", "Cancelar");
    	}
    	else if(clickedid == Textcajero[5])
    	{
    	SafeDialogEx(playerid,BANCO_SACAR, DIALOG_STYLE_INPUT, "{008EC1}Retirar Dinero", "{FFFFFF}Por favor ingrese la cantidad ha retirar.", "Retirar", "Cancelar");
		}
 		else if(clickedid == Textcajero[6])
    	{
    	SafeDialogEx(playerid,BANCO_TRANSFERIR, DIALOG_STYLE_INPUT, "{008EC1}Transferir Dinero * PASO 1 *", "{FFFFFF}Por favor ingrese la {008EC1}ID del jugador a transferir el dinero.", "Siguiente", "Cancelar");
		}
    	else if(clickedid == Textcajero[3])
    	{
       		for(new i = 0; i < 9; i++)
			{
				TextDrawHideForPlayer(playerid, Textcajero[i]);
			}
			CancelSelectTextDraw(playerid);
    	}
 	}
    return 1;
}*/
//***************************
stock SendMoleMessage(color, string[]){
	foreach(Player, i){
		if(gPlayerLogged{i} == 1){
			SendClientMessageEx(i, color, string);
		}
	}
}
function cameraexpire(playerid)
{
	SetPVarInt(playerid, "cameraactive", 0);
 	SetCameraBehindPlayer(playerid);
 	if(GetPVarInt(playerid, "camerasc") == 1)
 	{
	 	SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
	  	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
	  	SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
	}
 	TogglePlayerControllable(playerid,1);
  	DestroyDynamic3DTextLabel(Camera3D[playerid]);
   	SendClientMessageEx(playerid, COLOR_GRAD1, "A tu cámara se le acabaron las baterias.");
}
CreateDynamicDoor(doorid){
	new string[128];
	format(string, sizeof(string), "{FFFFFF}%s\n{008EC1}ID: {FFFFFF}%d",DDoorsInfo[doorid][ddDescription],doorid);
	switch(DDoorsInfo[doorid][ddColor]){
	    case -1:{ /* Disable 3d Textdraw */ }
	    case 1:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWWHITE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 2:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPINK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 3:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWRED, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 4:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBROWN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 5:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGRAY, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 6:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWOLIVE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 7:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPURPLE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 8:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWORANGE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 9:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWAZURE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 10:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGREEN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 11:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLUE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 12:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLACK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		default:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	}
	switch(DDoorsInfo[doorid][ddPickupModel]){
	    case -1: { /* Disable Pickup */ }
		case 1:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1210, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 2:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1212, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 3:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1239, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 4:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1240, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 5:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1241, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 6:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1242, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 7:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1247, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 8:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1248, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 9:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1252, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 10:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1253, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 11:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1254, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 12:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1313, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 13:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1272, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 14:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1273, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 15:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1274, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 16:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1275, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 17:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1276, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 18:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1277, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 19:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1279, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 20:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1314, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 21:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1316, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 22:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1317, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 23:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1559, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 24:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1582, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		case 25:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(2894, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    default: DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1318, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);
	}
}
function PlayerPlayMusic(playerid){
	if(IsPlayerConnected(playerid)){
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

function StopMusic(){
	foreach(Player, i){
		PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
	}
}

function FishCost(playerid, fish){
	if(IsPlayerConnected(playerid)){
		new cost = 0;
		switch (fish){
			case 1: cost = 3;
			case 2: cost = 4;
			case 3: cost = 6;
			case 5: cost = 7;
			case 6: cost = 4;
			case 8: cost = 10;
			case 9: cost = 14;
			case 11: cost = 12;
			case 12: cost = 9;
			case 14: cost = 14;
			case 15: cost = 10;
			case 16: cost = 9;
			case 17: cost = 8;
			case 18: cost = 11;
			case 19: cost = 5;
			case 21: cost = 4;
		}
		return cost;
	}
	return 0;
}



//*******************Checks*******************
AdminHOnlineCheck(){
	new count;
	foreach(Player, i){
		if(Info[i][pAdminZC] > 1 || Info[i][pHelper] > 0){
			count++;
		}
	}
	return count;
}
AdminOnlineCheck(){
	new count;
	foreach(Player, i){
		if(Info[i][pAdminZC] > 1){
			count++;
		}
	}
	return count;
}
JudgeOnlineCheck(){
	new count;
	foreach(Player, i){
		if(Info[i][pMember] == 9 || Info[i][pLeader] == 9){
			count++;
		}
	}
	return count;
}

stock ConvertTime(cts, &ctm=-1,&cth=-1,&ctd=-1,&ctw=-1,&ctmo=-1,&cty=-1){

    #define PLUR(%0,%1,%2) (%0),((%0) == 1)?((#%1)):((#%2))

    #define CTM_cty 31536000
    #define CTM_ctmo 2628000
    #define CTM_ctw 604800
    #define CTM_ctd 86400
    #define CTM_cth 3600
    #define CTM_ctm 60

    #define CT(%0) %0 = cts / CTM_%0; cts %= CTM_%0


    new strii[128];

    if(cty != -1){
        CT(cty); CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(cty,"year","years"),PLUR(ctmo,"month","months"),PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    if(ctmo != -1){
        CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(ctmo,"month","months"),PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    if(ctw != -1){
        CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    if(ctd != -1){
        CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, and %d %s",PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    if(cth != -1){
        CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, and %d %s",PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    if(ctm != -1){
        CT(ctm);
        format(strii, sizeof(strii), "%d %s, and %d %s",PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
        return strii;
    }
    format(strii, sizeof(strii), "%d %s", PLUR(cts,"second","seconds"));
    return strii;
}

stock IsValidVehicleID(vehicleid)
{
   if(GetVehicleModel(vehicleid)) return 1;
   return 0;
}

ShowAdMuteFine(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new allmoney;
 	if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
	{
 		allmoney = HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]+GetPlayerCash(playerid)+Info[playerid][pAccount];
   	}
   	else
    {
	 	  allmoney = GetPlayerCash(playerid)+Info[playerid][pAccount];
    }
    new fine = 10*allmoney/100;
	if(Info[playerid][pADMuteTotal] < 4) format(string,sizeof(string),"Prisión por %d Minutos\nPerder Dinero ($%d)",Info[playerid][pADMuteTotal]*15,fine);
	if(Info[playerid][pADMuteTotal] == 4) format(string,sizeof(string),"Prisión por 1 Hora");
	if(Info[playerid][pADMuteTotal] == 5) format(string,sizeof(string),"Prisión por 1 Hora y 15 Minutos)");
	if(Info[playerid][pADMuteTotal] == 6) format(string,sizeof(string),"Prisión por 1 Hora y 30 Minutos");
	SafeDialogEx(playerid,ADMUTE,DIALOG_STYLE_LIST,"Selecciona tu castigo - AD Mutes",string,"Ok","Cancelar");
}

function WeedGrowth(weedid)
{
	if(Info[weedid][pWExists])
	{
	    if(Info[weedid][pWValue] < 45)
	    {
			new level = Info[weedid][pDrugsSkill];
	        if(level >= 0 && level <= 50)
			{ Info[weedid][pWValue]+= 1; }
			else if(level >= 51 && level <= 100)
			{ Info[weedid][pWValue]+= 2; }
			else if(level >= 101 && level <= 200)
			{ Info[weedid][pWValue]+= 2; }
			else if(level >= 201 && level <= 400)
			{ Info[weedid][pWValue]+= 2; }
			else if(level >= 401)
			{ Info[weedid][pWValue]+= 3; }
			if(Info[weedid][pWValue] > 45)
			{
			    Info[weedid][pWValue] = 45;
			}
		}
	}
	return 1;
}

WeedLogin(playerid)
{
	if(Info[playerid][pWExists])
	{
		Info[playerid][pWObject] = CreateDynamicObject(19473, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ], 0.0, 0.0, 0.0, Info[playerid][pWVW], Info[playerid][pWInt]);
		Info[playerid][pWTimer] = SetTimerEx("WeedGrowth", 60000, 1, "i", playerid);
		return 1;
	}
	return 1;
}

WeedLogout(WeedID)
{
	if(Info[WeedID][pWExists])
	{
		KillTimer(Info[WeedID][pWTimer]);
		DestroyDynamicObject(Info[WeedID][pWObject]);
		return 1;
	}
	return 1;
}

ClearWeed(WeedID)
{
	KillTimer(Info[WeedID][pWTimer]);
	DestroyDynamicObject(Info[WeedID][pWObject]);
	Info[WeedID][pWX] = 0.0;
	Info[WeedID][pWY] = 0.0;
	Info[WeedID][pWZ] = 0.0;
	Info[WeedID][pWValue] = 0;
	Info[WeedID][pWExists] = 0;
	return 1;
}
stock GiftPlayer(playerid)
{
		new string[128];
		new gift = Random(1, 19);
		switch(gift)
		{
		    case 1:
		    {
	        	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return GiftPlayer(playerid);
		    	GivePlayerValidWeapon(playerid, 24);
		    	GivePlayerValidWeapon(playerid, 31);
		    	GivePlayerValidWeapon(playerid, 29);
	        	SendClientMessageEx(playerid, -1, " Felicidades, ahora tienes un set de armas!");
	        	format(string, sizeof(string), "* A %s le regalaron un set de armas completo, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 2:
		    {
    			GivePlayerCash(playerid, 20000);
	        	SendClientMessageEx(playerid, -1, "  Felicidades, has ganado $20,000!");
	        	format(string, sizeof(string), "* A %s le regalaron $20,000 que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 3:
		    {
	        	Info[playerid][pMats] += 1500;
	        	SendClientMessageEx(playerid, -1, " Felicidades, has ganado 1,500 materiales!");
	        	format(string, sizeof(string), "* A %s le regalaron 1,500 materiales, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 4:
		    {
				return GiftPlayer(playerid);
		    }
		    case 5:
		    {
				Info[playerid][pCrack] += 20;
				SendClientMessageEx(playerid, -1, " Felicidades, ganaste 20 gramos de crack!");
				format(string, sizeof(string), "* A %s le regalaron 20 gramos de crack, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 6:
		    {
	        	GivePlayerCash(playerid, 26000);
				SendClientMessageEx(playerid, -1, " Felicidades, ganaste $26,000!");
				format(string, sizeof(string), "* A %s le regalaron $26,000 en efectivo, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 7:
		    {
	        	GivePlayerCash(playerid, 19000);
				SendClientMessageEx(playerid, -1, "  Felicidades, has ganado $19,000!");
				format(string, sizeof(string), "* A %s le regalaron $19,000 en efectivo, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 8:
		    {
	        	GivePlayerCash(playerid, 30000);
				SendClientMessageEx(playerid, -1, "  Felicidades, has ganado $30,000!");
				format(string, sizeof(string), "* A %s le regalaron $30,000 en efectivo, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 9:
		    {
		    	GivePlayerCash(playerid, 36000);
				SendClientMessageEx(playerid, -1, " Felicidades - has ganado $36,000!");
				format(string, sizeof(string), "* A %s le regalaron $36,000 en efectivo, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 10:
		    {
		    	Info[playerid][pMats] += 1300;
				SendClientMessageEx(playerid, -1, " Felicidades - Has ganado 1,300 materiales!");
				format(string, sizeof(string), "* A %s le regalaron 1,300 materiales, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 11:
		    {
			    Info[playerid][pExp] += 3;
				SendClientMessageEx(playerid, -1, " Felicidades - has ganado 3 puntos de experiencia!");
				format(string, sizeof(string), "* A %s le regalaron 3 puntos de experiencia, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 12:
		    {
			    Info[playerid][pExp] += 5;
				SendClientMessageEx(playerid, -1, " Felicidades - has ganado 5 puntos de experiencia!");
				format(string, sizeof(string), "* A %s le regalaron 5 puntos de experiencia, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 13:
		    {
		    Info[playerid][pExp] += 15;
				SendClientMessageEx(playerid, -1, " Felicidades - has ganado 15 puntos de experiencia!");
				format(string, sizeof(string), "* A %s le regalaron 15 puntos de experiencia, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 14:
		    {
				Info[playerid][pPaintTokens] += 150;
				SendClientMessageEx(playerid, COLOR_GRAD2, " Felicidades - has ganado 150 Fichas de PaintBall!");
				format(string, sizeof(string), "* A %s le regalaron 150 fichas de paintball, que lo disfrute!", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				Log("logs/regalos.log", string);
		    }
		    case 17:
		    {
          		if(Info[playerid][pVIP] > 0)
		        {
					Info[playerid][pVTokens] += 50;
					SendClientMessageEx(playerid, COLOR_GRAD2, " Felicidades - has ganado 50 Fichas VIP!");
					SendClientMessageEx(playerid, -1, " Puedes venderlas o usarlas en el lounge VIP!");
					format(string, sizeof(string), "* A %s le regalaron 50 Fichas VIP, que lo disfrute!", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					Log("logs/regalos.log", string);
				}
				else
			    {
			        Info[playerid][pVIP] = 1;
        			Info[playerid][pTempVIP] = 10800;
		    		Info[playerid][pBuddyInvited] = 1;
				    SendClientMessageEx(playerid, COLOR_GRAD2, "Has sido invitado a ser Bronce VIP por 3 horas. Disfrutalo!");
				    format(string, sizeof(string), "BUDDY INVITE: %s ha ganado un buddyinvite.", GetPlayerNameEx(playerid));
				    Log("logs/setvip.log", string);
				    format(string, sizeof(string), "* A %s le regalaron 3 horas de Bronce VIP, que lo disfrute!", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                    Log("logs/regalos.log", string);
				}
		    }
		    default: return GiftPlayer(playerid);
		}
	    return 1;
}


public OnPlayerCommandReceived(playerid, cmdtext[])
{
    printf("[CMD] [%s]: %s", GetPlayerNameEx(playerid), cmdtext);
    if(!gPlayerLogged{playerid}) return SendClientMessageEx(playerid, COLOR_GRAD2, "* No puedes utilizar comandos si no estás logeado en el servidor");
	if(strfind(cmdtext, "|", true) != -1)
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar el carácter '|' en un comando.");
		return 0;
	}
	if(GetPVarInt(playerid, "LoadingObjects") == 1)
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar comandos en este momento.");
	    return 0;
	}
 	if(Info[playerid][pAdminZC] < 2)
	{
		if(strfind(cmdtext, ":", true) != -1)
		{
			new
				i_numcount,
				i_period,
				i_pos;
			while(cmdtext[i_pos])
			{
				if('0' <= cmdtext[i_pos] <= '9') i_numcount++;
				else if(cmdtext[i_pos] == '.') i_period++;
				i_pos++;
			}
			if(i_numcount >= 8 && i_period >= 3)
			{
				new string[128];
				format(string,sizeof(string),"Atención: (ID: %d) %s puede estar haciendo SPAM: '%s'.", playerid, GetPlayerNameEx(playerid),cmdtext);
				SendAdminMessage(COLOR_RED, string);
				return 0;
			}
		}
	}
    return 1;
}
//------------------------------------------------------------------------------------------------------
stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

encode_tires(tire1, tire2, tire3, tire4)
{
	return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}

ProxDetector(Float: f_Radius, playerid, string[],col1,col2,col3,col4,col5)
{
	new
		Float: f_playerPos[3];
	GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
	foreach(Player, i)
	{
		if(!BigEar[i])
		{
			if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
			{
				if(IsPlayerInRangeOfPoint(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col1, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col2, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col3, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col4, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col5, string);
				}
			}
		}
		else SendClientMessageEx(i, col1, string);
	}
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new
		Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}

function PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public OnPlayerText(playerid, text[])
{
    if(DetectarSpam(text)) { SendClientMessage(playerid,0xFFFFFFFF,"Hiciste SPAM."); return 0; }
	// Anti-MG
	if(strfind(text, ":)", true) != -1 || strfind(text, "xD", true) != -1 || strfind(text, ":v", true) != -1 || strfind(text, "lol", true) != -1 || strfind(text, "Noob", true) != -1 || strfind(text, "RP", true) != -1 || strfind(text, ":D", true) != -1 || strfind(text, ":c", true) != -1)
	{
	SendClientMessage(playerid,0xDC092FFF,"No hagas MG, podrás ser sancionado.");
	return 0;
    }
	new sendername[MAX_PLAYER_NAME],string[256],tmp[32];
	new giveplayer[MAX_PLAYER_NAME];
	if(Muted[playerid] == 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "* ¡Has sido silenciado!");
		return 0;
	}
	if(!gPlayerLogged{playerid})
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "No puedes usar el chat en el Login - Kikeado automáticamente.");
		Kick(playerid);
		return 0;
	}
	if(TutStep[playerid] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "* Estás en el tutorial no puedes hablar.");
		return 0;
	}
	if(TalkingLive[playerid] != INVALID_PLAYER_ID)
	{
		if(Team_LSTV(playerid))
		{
			format(string, sizeof(string), "[News Live] Reportero %s: %s", GetPlayerNameEx(playerid), text);
			OOCNews(COLOR_NEWS2, string);
		}
		else
		{
			format(string, sizeof(string), "[News Live] Invitado %s: %s", GetPlayerNameEx(playerid), text);
			OOCNews(COLOR_NEWS2, string);
		}
		return 0;
	}
	if(MarriageCeremoney[playerid] > 0)
	{
		if (strcmp("si", text, true) == 0)
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Sacerdote: %s aceptas a %s como tu esposa para siempre? (Escribe 'Si' - cualquier otro caracter arruinaria el matrimonio).", giveplayer,sendername);
					SendClientMessageEx(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0; // Yeah... no more "YES DILDOS SEX RAPE LOL" broadcast to the whole server
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(Info[playerid][pSex] == 1 && Info[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar a la novia.", sendername, giveplayer);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar al novio.", giveplayer, sendername);
						SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticias: Tenemos una nueva linda pareja! %s y %s ahora están casados!!", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(Info[playerid][pSex] == 1 && Info[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Marido, puedes besar al novio.", sendername, giveplayer);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Marido, puedes besar al novio.", giveplayer, sendername);
						SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticias: Tenemos una nueva pareja gay! %s & %s se han casado.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(Info[playerid][pSex] == 2 && Info[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Mujer & Mujer, puedes besar a la novia.", sendername, giveplayer);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Mujer & Mujer, puedes besar a la novia.", giveplayer, sendername);
						SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticias: Tenemos una nueva pareja de lesbianas! %s & %s se han casado.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(Info[ProposedTo[playerid]][pMarriedTo], MAX_PLAYER_NAME, "%s", sendername);
					format(Info[playerid][pMarriedTo], MAX_PLAYER_NAME, "%s", giveplayer);
					GivePlayerCash(playerid, - 100000);
					Info[playerid][pMarried] = 1;
					Info[ProposedTo[playerid]][pMarried] = 1;
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		else
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					format(string, sizeof(string), "* No quisiste casarse con %s, no dijiste 'si'.", GetPlayerNameEx(GotProposedBy[playerid]));
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s no quisó casaste contigo, no dijo 'si'.",GetPlayerNameEx(playerid));
					SendClientMessageEx(GotProposedBy[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					format(string, sizeof(string), "* No quisiste casarse con %s, no dijiste 'si'.",GetPlayerNameEx(ProposedTo[playerid]));
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s no quisó casaste contigo, no dijo 'si'.",GetPlayerNameEx(playerid));
					SendClientMessageEx(ProposedTo[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		return 0;
	}
	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(UnidentifedCall[playerid] == 1)
		{
		    format(string, sizeof(string), "(Teléfono) Desconocido: %s", text);
		}
		else
		{
			format(string, sizeof(string), "(Teléfono) %s", text);
		}
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		// -============================ · ============================- //
		if(Mobile[playerid] == 915)
		{
		    if(!strlen(tmp))
			{
				SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Central: Entendido, ¿su ubicación porfavor?");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			format(wanted, sizeof(wanted), "Central: %s necesita una ambulancia en %s",turner, text);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "Incidente: %s",Situacion[playerid]);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
			SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Central: Ahora enviaremos una ambulancia, sea paciente.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Colgaron.");
			Mobile[playerid] = INVALID_PLAYER_ID;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
			return 0;
		}
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessageEx(playerid, COLOR_ALLDEPT, "Central: Por favor, ¿una breve explicación de la situación?");
				return 0;
			}
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿su ubicación porfavor?");
			strmid(Situacion[playerid], text, 0, strlen(text), 255);
			Mobile[playerid] = 915;
			return 0;
		}
		if(Mobile[playerid] == 758)
		{
		    format(string, sizeof(string), "(celular) %s", text);
		    SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
			format(string, sizeof(string), "[News Live - %s] Celular: %s",GetPlayerNameEx(playerid), text);
			OOCNews(COLOR_NEWS2, string);
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessageEx(playerid, COLOR_ALLDEPT, "Comisaria: repítame que no le he entendido!");
				return 0;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(strfind(text, " ", true))
			{
			    format(string, sizeof(string), "** Central: han solicitado una patrulla en: %s",text);
				SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
				format(string, sizeof(string), "** Central: un tal %s denuncia: %s",sendername, Situacion[playerid]);
				SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
				SendClientMessageEx(playerid, COLOR_GRAD2, "Comisaria: una patrulla se pasará por la zona.");
				SendClientMessageEx(playerid, COLOR_GRAD2, "Comisaria: ¡Gracias por su información!");
				SendClientMessageEx(playerid, COLOR_GRAD2, "Colgaron <--");
				Mobile[playerid] = INVALID_PLAYER_ID;
				new Float:trace_x, Float:trace_y, Float:trace_z;
				GetPlayerPos(playerid, trace_x, trace_y, trace_z);
				pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				RemovePlayerAttachedObject(playerid, 9);
				return 0;
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_GRAD2, "Comisaria: Por favor calmese y vuelva a repetir su situación diciendo la ciudad.");
			    return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessageEx(playerid, COLOR_ALLDEPT, "Comisaria: no le entiendo., repíta porfavor!");
				return 0;
			}
			strmid(Situacion[playerid], text, 0, strlen(text), 255);
			format(string, sizeof(string), "Comisaria: entendido señor %s, díganos en donde se encuentra y alguna referencia.", GetPlayerNameEx(playerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			if(!strlen(tmp))
			{
				SendClientMessageEx(playerid, COLOR_ALLDEPT, "EMERGENCIA:  Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
			else if ((strcmp("Policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Policia")))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "--> Conexión establecida con LSPD.");
				SendClientMessageEx(playerid, COLOR_GRAD2, "Central: Explique brevemente lo ocurrido.");
				Mobile[playerid] = 912;
				return 0;
			}
			else if ((strcmp("paramedico", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("paramedico")))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "--> Conexión establecida con LSMD.");
				SendClientMessageEx(playerid, COLOR_GRAD2, "Central: Explique brevemente los detalles del accidente.");
				Mobile[playerid] = 914;

				return 0;
			}
			else
			{
				SendClientMessageEx(playerid, 0x0080FFFF, "EMERGENCIA: Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
		}
		if(Mobile[playerid] == 3901)
		{
			SendFamilyMessage(5, COLOR_GREEN, "Central: Llegó un nuevo mensaje a SA News:");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[ID:%d] Mensaje de %s: %s", playerid, sendername, text);
			SendFamilyMessage(5, COLOR_GREEN, string);
			SendClientMessageEx(playerid, COLOR_GREEN, "SA News Estudio: Gracias por su información !");
			SendClientMessageEx(playerid, COLOR_GRAD2, "   la llamada se colgo...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[Mobile[playerid]] == playerid)
			{
				if(Info[Mobile[playerid]][pSpeaker] != 0)
				{
			   		format(string, sizeof(string), "[Altavoz] %s", text);
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
			   		SendClientMessageEx(Mobile[playerid], COLOR_YELLOW,string);
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_YELLOW,"No hay nadie!");
		}
		return 0;
	}
	if(GetPVarInt(playerid, "IsInArena") == 1)
	{
		if(GetPVarInt(playerid, "ArenaMode") == 2)
		{
			switch(Info[playerid][pPaintTeam])
			{
			    case 1:
				{
					format(string, sizeof(string), "[Paintball Arena] ({FF0000}Equipo Rojo{FFFFFF}) %s dice: %s", GetPlayerNameEx(playerid), text);
				}
				case 2:
				{
					format(string, sizeof(string), "[Paintball Arena] ({FFFFFF}Equipo Azul{FFFFFF}) %s dice: %s", GetPlayerNameEx(playerid), text);
				}
			}
		}
		if(GetPVarInt(playerid, "ArenaMode") == 1)
		{
			format(string, sizeof(string), "[Paintball Arena] %s dice: %s", GetPlayerNameEx(playerid), text);
		}
		if(GetPVarInt(playerid, "ArenaMode") == 3)
		{
			format(string, sizeof(string), "[Paintball Arena] %s dice: %s", GetPlayerNameEx(playerid), text);
		}
		SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_WHITE, string);
		return 0;
	}
	if(Info[playerid][pMaskuse] == 1)
	{
		format(string, sizeof(string), "Desconocido dice: %s", text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		return 0;
	}
	switch(Info[playerid][pAccent])
	{
		case 0, 1:
		{
			format(string, sizeof(string), "%s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid,string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 2:
		{
			format(string, sizeof(string), "[Acento Britanico] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 3, 4, 5:
		{
			format(string, sizeof(string), "[Acento Asiático] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 6:
		{
			format(string, sizeof(string), "[Acento Venezolano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 7:
		{
			format(string, sizeof(string), "[Acento Peruano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 8:
		{
			format(string, sizeof(string), "[Acento Ruso] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 9:
		{
			format(string, sizeof(string), "[Acento Americano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 10:
		{
			format(string, sizeof(string), "[Acento Español] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 11:
		{
			format(string, sizeof(string), "[Acento Colombiano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 12:
		{
			format(string, sizeof(string), "[Acento Francés] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 13:
		{
			format(string, sizeof(string), "[Acento Italiano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 14:
		{
			format(string, sizeof(string), "[Acento Gangster] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 15:
		{
			format(string, sizeof(string), "[Acento Uruguayo] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 16:
		{
			format(string, sizeof(string), "[Acento Brasileiro] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 17:
		{
			format(string, sizeof(string), "[Acento Argentino] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 18:
		{
			format(string, sizeof(string), "[Acento Chileno] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 19:
		{
			format(string, sizeof(string), "[Acento Cubano] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 20:
		{
			format(string, sizeof(string), "[Acento Israeli] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 21:
		{
			format(string, sizeof(string), "[Acento Alemán] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		case 22:
		{
			format(string, sizeof(string), "[Acento Hippie] %s dice: %s", GetPlayerNameEx(playerid), text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
	}
	return 0;
}

function FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}
stock IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

    function TeleportPlayer(playerid)
    {
            new Float:cx, Float:cy, Float:cz;
            GetPlayerPos(playerid, cx, cy, cz);
    		for(new i = 0; i < sizeof(DDoorsInfo); i++)
                            {
                            if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]))
							{
           						 SendClientMessageEx(playerid, COLOR_GRAD2, "Usa el comando /entrar o presiona la tecla [H] para entrar a un interior, para salir usa /salir, o pulsa [H]");
            					return 1;
       						 }
                            if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW])
                                    {
                            if(DDoorsInfo[i][ddVIP] > 0 && Info[playerid][pVIP] < DDoorsInfo[i][ddVIP])
                                            {
                                    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar necesitas ser un mayor nivel de VIP.");
                                    return 1;
                            }
                            if(DDoorsInfo[i][ddFamily] > 0)
                                            {
                                    if(Info[playerid][pFMember] != DDoorsInfo[i][ddFamily]-1)
                                                    {
                                    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, sólo para miembros de la familia.");
                                                    return 1;
                                            }
                                }
                                if(DDoorsInfo[i][ddFaction] > 0)
                                            {
                                                    if(DDoorsInfo[i][ddFaction] >= 1 && DDoorsInfo[i][ddFaction] <= 3)
                                                    {
                                                            if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, esta puerta está restringida. (Sólo Policías)");
                                                    }
                                                    else if(DDoorsInfo[i][ddFaction] < 32 && Info[playerid][pMember] != DDoorsInfo[i][ddFaction])
                                                    {
                                                            return  SendClientMessageEx(playerid, COLOR_GRAD2, "Sólo ingreso a miembros de la facción.");
                                                    }
                                }
                                if(DDoorsInfo[i][ddAdmin] > 0 && Info[playerid][pAdminZC] < DDoorsInfo[i][ddAdmin])
                                            {
                                    return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, necesitas ser de más nivel administrativo.");
                                }

                                if(DDoorsInfo[i][ddWanted] > 0 && Info[playerid][pWantedLevel] != 0)
                                            {
                                    return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta esta restringida a personas con nivel de búsqueda.");
                                }

                                            if(DDoorsInfo[i][dLocked] == 1)
                                            {
                                                return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta está bloqueada.");
                                            }
                            SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
                            Info[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
                            Info[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
                            SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
                            if(DDoorsInfo[i][ddCustomInterior])
                                            {
                               LoadObjects(playerid);
                            }
                            if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                                            {
                            SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                            SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
                            LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
                            }
                            else
                                            {
                                    SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                                    SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
                                    SetCameraBehindPlayer(playerid);
                            }
                            if(DDoorsInfo[i][dMusic] == 0) return 1;
                            else
                            {
                                switch(DDoorsInfo[i][dMusic])
                                {
                                    case 1: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349", 1, 1, 1, 1, 0); // Reggeaton
                                case 2: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=860870", 1, 1, 1, 1, 0); // Electro
                                case 3: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200", 1, 1, 1, 1, 0); // Techno
                                case 4: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016", 1, 1, 1, 1, 0); // Hip hop
                                case 5: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366", 1, 1, 1, 1, 0); // Variada
                            }
                        }
                                            return 1;
                            }
                        }
                        for(new i = 0; i < sizeof(fINFO); i++)
                            {
                            if (IsPlayerInRangeOfPoint(playerid,3.0,fINFO[i][FamilyEntrance][0], fINFO[i][FamilyEntrance][1], fINFO[i][FamilyEntrance][2]))
                                    {
                                    LoadObjects(playerid);
                            SetPlayerInterior(playerid,fINFO[i][FamilyInterior]);
                            Info[playerid][pInt] = fINFO[i][FamilyInterior];
                            Info[playerid][pVW] = fINFO[i][FamilyVirtualWorld];
                            SetPlayerVirtualWorld(playerid, fINFO[i][FamilyVirtualWorld]);
                            if(fINFO[i][FamilyCustomMap])
                                            {
                                    LoadObjects(playerid);
                            }
                            Streamer_UpdateEx(playerid, fINFO[i][FamilyExit][0],fINFO[i][FamilyExit][1],fINFO[i][FamilyExit][2]);
                            SetPlayerPos(playerid,fINFO[i][FamilyExit][0],fINFO[i][FamilyExit][1],fINFO[i][FamilyExit][2]);
                            SetPlayerFacingAngle(playerid,fINFO[i][FamilyExit][3]);
                            return 1;
                            }
                            }
                            //FBI
                    if(PlayerToPointStripped(1, playerid,325.4713,-1514.8862,36.0325, cx,cy,cz))
                    {
                        LoadObjects(playerid);
                            SetPlayerPos(playerid,278.0079,-1505.8489,-45.1302); Info[playerid][pVW] = 600;
                            SetPlayerVirtualWorld(playerid, 600); SetPlayerFacingAngle(playerid, ESTE);
                            SetCameraBehindPlayer(playerid);
                    }
            if(PlayerToPointStripped(1, playerid,278.0079,-1505.8489,-45.1302, cx,cy,cz))
            {
                    SetPlayerPos(playerid,325.4713,-1514.8862,36.0325); SetPlayerFacingAngle(playerid, 90);
                    SetCameraBehindPlayer(playerid); SetPlayerVirtualWorld(playerid, 0);
            }
             if(PlayerToPointStripped(1, playerid,-1440.8188, -1562.2168, 101.2912, cx,cy,cz))
            {
                    SetPlayerPos(playerid,-1466.7860, -1464.3353, 16.4638); SetPlayerFacingAngle(playerid, 90);
                    SetCameraBehindPlayer(playerid); SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPointStripped(1, playerid,-1466.7860, -1464.3353, 16.4638, cx,cy,cz))
            {
                    SetPlayerPos(playerid,-1440.8188, -1562.2168, 101.2912); SetPlayerFacingAngle(playerid, 90);
                    SetCameraBehindPlayer(playerid); SetPlayerVirtualWorld(playerid, 0);
            }
            //FBI HELIPAD
            else if (PlayerToPointStripped(1, playerid,2789.2639,-1099.1514,94.1871, cx,cy,cz))
			{
			SafeDialogEx( playerid, ELEVATOR4 , DIALOG_STYLE_LIST, "Elevador", "Interior", "Ir", "Cancelar");
			}
            else if (PlayerToPointStripped(1, playerid,301.5812,-1490.6759,-45.1302, cx,cy,cz))
            {
                    if(!Team_FBI(playerid))
                    {
                            SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
                            return 1;
                    }
                    else SafeDialogEx( playerid, ELEVATOR5 , DIALOG_STYLE_LIST, "Elevador", "Helipuerto", "Ir", "Cancelar");
            }
            else if (PlayerToPointStripped(1, playerid,2789.2639,-1099.1514,94.1871, cx,cy,cz))
            {
                    SafeDialogEx( playerid, ELEVATOR7 , DIALOG_STYLE_LIST, "Elevador", "Interior", "Ir", "Cancelar");
            }
            else if (PlayerToPointStripped(1, playerid,364.7064,-11.3221,1001.8516, cx,cy,cz) && GetPlayerInterior(playerid) == 9)
            {
                    SetPosEx(playerid, 928.6895,-1353.0563,13.3438,89.7594,0,0);
                GameTextForPlayer(playerid, "~w~Perfect City", 5000, 1);
            }
                            if (IsPlayerInRangeOfPoint(playerid,3,2281.1748,-1724.4528,13.2521)) //  GARAGE 1
                            {
                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                            SetVehiclePos(GetPlayerVehicleID(playerid),  2233.9280,-1758.3882,2031.3885);
                            SetVehicleZAngle(GetPlayerVehicleID(playerid),  11.4);
                            Streamer_Update(playerid);
                    }
                    else{
                                            SetPlayerPos(playerid, 2235.1851,-1763.5916,2032.9728);
                                            SetPlayerFacingAngle(playerid, 14.9);
                                            SetCameraBehindPlayer(playerid);
                                            LoadObjects(playerid);
                                    }
                                    return 1;
                            }
                            if (IsPlayerInRangeOfPoint(playerid,3,1242.2382,-1732.4800,13.2911)) //  GARAGE 2
                            {

                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                            SetVehiclePos(GetPlayerVehicleID(playerid),  1134.0381,-1591.4459,6602.5879);
                            SetVehicleZAngle(GetPlayerVehicleID(playerid),  176.3030);
                            Streamer_Update(playerid);
                    }
                    else{
                                            SetPlayerPos(playerid, 1134.0381,-1591.4459,6602.5879);
                                            SetPlayerFacingAngle(playerid, 14.9);
                                            SetCameraBehindPlayer(playerid);
                                            LoadObjects(playerid);
                                    }
                                    return 1;
                            }
                            if (IsPlayerInRangeOfPoint(playerid,3,853.3862,-1387.1884,13.7470)) //  GARAGE VIP
                            {

                                    if(Info[playerid][pVIP] == 0) return GameTextForPlayer(playerid, "~r~No eres VIP", 2000, 4);
                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                                    {
                            SetVehiclePos(GetPlayerVehicleID(playerid),  855.6053,-1412.6117,4202.1577);
                            SetVehicleZAngle(GetPlayerVehicleID(playerid),  NORTE);
                            Streamer_Update(playerid);
                    }
                    else{
                                            SetPlayerPos(playerid, 855.6053,-1412.6117,4202.1577);
                                            SetPlayerFacingAngle(playerid, NORTE);
                                            SetCameraBehindPlayer(playerid);
                                            LoadObjects(playerid);
                                    }
                                    return 1;
                            }
                        for(new i = 0; i < sizeof(HouseInfo); i++){
                            if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ])){
                            if(Info[playerid][pPhousekey] == i || Info[playerid][pPhousekey2] == i || HouseInfo[i][hLock] == 0 || Info[playerid][pRenting] == i){
                                            LoadObjects(playerid);
                                    SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
                                    Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
                                    Info[playerid][pVW] = i+6000;
                                    SetPlayerVirtualWorld(playerid, i+6000);
                                    if(HouseInfo[i][hCustomInterior] == 1){
                                    LoadObjects(playerid);
                                    }
                                    SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                                    SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorA]);
                                    SetCameraBehindPlayer(playerid);
                                    GameTextForPlayer(playerid, "~w~Bienvenido", 5000, 1);
                                    Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                            }
                            else
                            {
                                    GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
                            }
                            return 1;
                    }
                    }
                    for(new i = 0; i <  sizeof(DDoorsInfo); i++)
                    {
                    if (IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
                            {
                    SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
                    Info[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
                    SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
                    Info[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
                    if(DDoorsInfo[i][ddCustomExterior])
                                    {
                                            LoadObjects(playerid);
                    }
                    if(DDoorsInfo[i][dMusic] != 0) StopAudioStreamForPlayer(playerid);
                    if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                                    {
                            SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                            SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
                            LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
                    }
                    else
                                    {
                            SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                            SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
                            SetCameraBehindPlayer(playerid);
                            return 1;
                    }
                    }
            }
            for(new i = 0; i < sizeof(fINFO); i++)
                    {
                    if (IsPlayerInRangeOfPoint(playerid,3.0,fINFO[i][FamilyExit][0], fINFO[i][FamilyExit][1], fINFO[i][FamilyExit][2]) && Info[playerid][pVW] == fINFO[i][FamilyVirtualWorld]) {
                    Info[playerid][pInt] = 0;
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerInterior(playerid,0);
                    Streamer_UpdateEx(playerid, fINFO[i][FamilyEntrance][0],fINFO[i][FamilyEntrance][1],fINFO[i][FamilyEntrance][2]);
                    SetPlayerPos(playerid,fINFO[i][FamilyEntrance][0],fINFO[i][FamilyEntrance][1],fINFO[i][FamilyEntrance][2]);
                    SetPlayerFacingAngle(playerid,fINFO[i][FamilyEntrance][3]);
                    return 1;
                    }
            }
                    if (IsPlayerInRangeOfPoint(playerid,8,2233.9280,-1758.3882,2031.3885)) //  GARAGE 1
                    {
                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                    SetVehiclePos(GetPlayerVehicleID(playerid),  2281.1748,-1724.4528,13.2521);
                    SetVehicleZAngle(GetPlayerVehicleID(playerid),  179.93);
                    Streamer_Update(playerid);
                }
                else{
                                    SetPlayerPos(playerid, 2280.5620,-1722.8878,13.5469);
                                    SetPlayerFacingAngle(playerid, 181);
                                    SetCameraBehindPlayer(playerid);
                            }
                            return 1;
                    }
                    if (IsPlayerInRangeOfPoint(playerid,8,1140.7430,-1592.1893,6602.4922)) //  GARAGE 1
                    {
                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                    SetVehiclePos(GetPlayerVehicleID(playerid),  1242.2382,-1732.4800,13.2911);
                    SetVehicleZAngle(GetPlayerVehicleID(playerid),  359.47);
                    Streamer_Update(playerid);
                }
                else{
                                    SetPlayerPos(playerid, 1241.9020,-1734.0985,13.5899);
                                    SetPlayerFacingAngle(playerid, 354.9746);
                                    SetCameraBehindPlayer(playerid);
                            }
                            return 1;
                    }
                    if (IsPlayerInRangeOfPoint(playerid,8,855.6053,-1412.6117,4202.1577)) //  GARAGE VIP
                    {
                    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
                    SetVehiclePos(GetPlayerVehicleID(playerid),  853.3862,-1387.1884,13.7470);
                    SetVehicleZAngle(GetPlayerVehicleID(playerid),  182.4513);
                    Streamer_Update(playerid);
                }
                else{
                                    SetPlayerPos(playerid, 853.3862,-1387.1884,13.7470);
                                    SetPlayerFacingAngle(playerid, 182.4513);
                                    SetCameraBehindPlayer(playerid);
                            }
                            return 1;
                    }
                for(new i = 0; i <  sizeof(HouseInfo); i++)
                    {
                    if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && Info[playerid][pVW] == i+6000)
                            {
                            SetPlayerInterior(playerid,0);
                        Info[playerid][pInt] = 0;
                        if(HouseInfo[i][hCustomExterior])
                        {
                            LoadObjects(i);
                        }
                        SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
                        SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorA]);
                        SetCameraBehindPlayer(playerid);
                        SetPlayerVirtualWorld(playerid, 0);
                        Info[playerid][pVW] = 0;
                        return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
                    }
                }
            return 1;
    }


ClearChatbox(playerid)
{
	for(new i = 0; i < 10; i++)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "");
	}
	return 1;
}

stock IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

function RadarCooldown(playerid)
{
   DeletePVar(playerid, "RadarTimeout");
   return 1;
}

function MapsRemoveForPlayer(playerid)
{
//removes de mapeos original GTA SAN ANDREAS
// plaza
RemoveBuildingForPlayer(playerid, 6491, 717.4844, -1357.3047, 20.2969, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 665.8125, -1390.2422, 16.3125, 0.25);
RemoveBuildingForPlayer(playerid, 1689, 650.8359, -1377.6641, 21.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1689, 650.8359, -1356.5859, 21.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1689, 650.8359, -1338.2422, 21.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 677.1953, -1328.8750, 25.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1689, 745.5859, -1381.1094, 25.8750, 0.25);
RemoveBuildingForPlayer(playerid, 1689, 751.3359, -1368.0313, 25.8750, 0.25);
RemoveBuildingForPlayer(playerid, 6490, 717.4844, -1357.3047, 20.2969, 0.25);
RemoveBuildingForPlayer(playerid, 6516, 717.6875, -1357.2813, 18.0469, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 696.1953, -1328.8750, 25.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 702.2344, -1328.8750, 25.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 721.2109, -1328.8750, 25.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1415, 732.8516, -1332.8984, 12.6875, 0.25);
RemoveBuildingForPlayer(playerid, 1439, 732.7266, -1341.7734, 12.6328, 0.25);
//casa nico
RemoveBuildingForPlayer(playerid, 708, 286.0000, -1362.3906, 51.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3738, 249.0469, -1370.9922, 55.7422, 0.25);
RemoveBuildingForPlayer(playerid, 673, 244.0313, -1387.2109, 51.7969, 0.25);
RemoveBuildingForPlayer(playerid, 673, 230.2266, -1379.2109, 51.5469, 0.25);
RemoveBuildingForPlayer(playerid, 669, 275.2891, -1374.8359, 51.8828, 0.25);
RemoveBuildingForPlayer(playerid, 673, 228.4375, -1368.7500, 51.8594, 0.25);
RemoveBuildingForPlayer(playerid, 700, 223.2656, -1369.0938, 52.3438, 0.25);
RemoveBuildingForPlayer(playerid, 3619, 249.0469, -1370.9922, 55.7422, 0.25);
RemoveBuildingForPlayer(playerid, 762, 287.2734, -1362.1016, 56.1094, 0.25);
RemoveBuildingForPlayer(playerid, 620, 272.1172, -1361.4141, 50.8047, 0.25);
RemoveBuildingForPlayer(playerid, 669, 298.4219, -1355.3281, 52.0938, 0.25);
RemoveBuildingForPlayer(playerid, 669, 269.5000, -1354.5391, 52.2422, 0.25);
RemoveBuildingForPlayer(playerid, 671, 256.4219, -1350.3906, 51.9688, 0.25);
RemoveBuildingForPlayer(playerid, 671, 270.8047, -1349.3125, 52.1563, 0.25);
RemoveBuildingForPlayer(playerid, 669, 273.8125, -1344.1797, 52.5000, 0.25);
//hq en el campo fbi
RemoveBuildingForPlayer(playerid, 785, -1368.7188, -1588.6953, 98.4922, 0.25);
RemoveBuildingForPlayer(playerid, 17351, -1432.5469, -1545.8672, 108.5313, 0.25);
RemoveBuildingForPlayer(playerid, 17352, -1458.0938, -1499.7813, 100.6328, 0.25);
RemoveBuildingForPlayer(playerid, 17353, -1423.5859, -1490.4766, 100.6563, 0.25);
RemoveBuildingForPlayer(playerid, 17354, -1458.4531, -1522.6328, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 17355, -1440.8125, -1460.1094, 100.6328, 0.25);
RemoveBuildingForPlayer(playerid, 17356, -1447.7188, -1576.7344, 100.7422, 0.25);
RemoveBuildingForPlayer(playerid, 17051, -1426.7656, -1594.4844, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1427.8516, -1600.0859, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1439.2656, -1600.3359, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1451.1016, -1599.6016, 101.5547, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1462.6484, -1599.2031, 101.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1420.6563, -1594.0313, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1468.4766, -1593.0625, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3425, -1456.9531, -1592.5000, 112.1250, 0.25);
RemoveBuildingForPlayer(playerid, 791, -1368.7188, -1588.6953, 98.4922, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1417.7969, -1583.0313, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1468.9766, -1581.4844, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1470.7422, -1535.7734, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1471.7031, -1524.7422, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1469.2422, -1569.8125, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1469.6250, -1558.2578, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1470.0000, -1546.9766, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 17053, -1458.4531, -1522.6328, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 17056, -1462.0156, -1532.5313, 101.9063, 0.25);
RemoveBuildingForPlayer(playerid, 17057, -1451.5313, -1569.6094, 100.7422, 0.25);
RemoveBuildingForPlayer(playerid, 17059, -1458.7656, -1535.5703, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 17058, -1447.7188, -1576.7344, 100.7422, 0.25);
RemoveBuildingForPlayer(playerid, 17335, -1432.5469, -1545.8672, 108.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1501, -1437.8906, -1545.2344, 101.2813, 0.25);
RemoveBuildingForPlayer(playerid, 17050, -1411.2188, -1530.5547, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1411.1641, -1561.1016, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1414.6016, -1572.0938, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1403.1719, -1528.8359, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1402.6719, -1540.2031, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1406.4219, -1550.8438, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 17049, -1412.8438, -1520.3984, 100.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1405.3828, -1517.0469, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3425, -1439.7891, -1520.9375, 112.1250, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1407.5938, -1505.7188, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1472.4531, -1513.1563, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 17052, -1458.0938, -1499.7813, 100.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1409.4922, -1494.2422, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1472.0547, -1501.3281, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3374, -1435.1484, -1499.2891, 102.1641, 0.25);
RemoveBuildingForPlayer(playerid, 17061, -1423.5859, -1490.4766, 100.6563, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1470.5313, -1489.8906, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3374, -1435.2031, -1490.5156, 102.1641, 0.25);
RemoveBuildingForPlayer(playerid, 17060, -1457.6875, -1485.7578, 100.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1411.0078, -1482.7969, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1468.2656, -1478.3203, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1467.5469, -1467.2422, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1468.2188, -1455.6875, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 17054, -1440.8125, -1460.1094, 100.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1411.9531, -1461.7578, 101.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3374, -1419.1016, -1454.3672, 102.1016, 0.25);
RemoveBuildingForPlayer(playerid, 3374, -1423.5781, -1460.7188, 102.1641, 0.25);
RemoveBuildingForPlayer(playerid, 17055, -1439.2422, -1446.6563, 102.9297, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1412.2656, -1450.2266, 101.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1463.4297, -1447.6406, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3374, -1427.2656, -1453.7734, 102.1016, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1452.9609, -1443.3516, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1441.4609, -1440.7891, 101.4844, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1417.9766, -1443.6797, 100.7969, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -1429.5313, -1441.8203, 101.0391, 0.25);
RemoveBuildingForPlayer(playerid, 790, -1454.5078, -1431.2109, 105.7031, 0.25);
// ammunation unity
RemoveBuildingForPlayer(playerid, 1412, 1989.0859, -1982.4766, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 1412, 1983.8125, -1982.4766, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 1412, 1978.5313, -1982.4766, 13.8203, 0.25);
// rusa
RemoveBuildingForPlayer(playerid, 732, 782.7969, -1304.0781, 12.3906, 0.25);
RemoveBuildingForPlayer(playerid, 620, 651.1094, -1305.9766, 12.5859, 0.25);
//familia 1
RemoveBuildingForPlayer(playerid, 726, 816.1563, -1530.1094, 10.7422, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 783.5469, -1539.1250, 15.9375, 0.25);
RemoveBuildingForPlayer(playerid, 621, 798.0078, -1528.4531, 10.4531, 0.25);
RemoveBuildingForPlayer(playerid, 620, 799.5625, -1521.5313, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 759, 800.4375, -1519.9375, 12.0469, 0.25);
RemoveBuildingForPlayer(playerid, 762, 807.1016, -1527.2188, 15.0781, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 827.1016, -1553.6172, 15.8750, 0.25);
RemoveBuildingForPlayer(playerid, 762, 826.4063, -1528.2578, 15.0781, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 856.4844, -1551.7656, 15.7734, 0.25);
RemoveBuildingForPlayer(playerid, 6214, 849.3359, -1490.0625, 15.2031, 0.25);
//24/7 hospital
RemoveBuildingForPlayer(playerid, 5967, 1259.4375, -1246.8125, 17.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1388, 1238.3750, -1258.2813, 57.2031, 0.25);
RemoveBuildingForPlayer(playerid, 1391, 1238.3750, -1258.2734, 44.6641, 0.25);
RemoveBuildingForPlayer(playerid, 1294, 1254.6875, -1276.1641, 17.0781, 0.25);
RemoveBuildingForPlayer(playerid, 5857, 1259.4375, -1246.8125, 17.1094, 0.25);
//Taller
RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);
//Ayuntamiento
		RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
        RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
        RemoveBuildingForPlayer(playerid, 4046, 1479.5234, -1852.6406, 24.5156, 0.25);
        RemoveBuildingForPlayer(playerid, 4047, 1531.6328, -1852.6406, 24.5156, 0.25);
        RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
        RemoveBuildingForPlayer(playerid, 4217, 1449.2500, -1852.5703, 22.3672, 0.25);
        RemoveBuildingForPlayer(playerid, 1266, 1482.0859, -1859.9688, 25.0391, 0.25);
        RemoveBuildingForPlayer(playerid, 713, 1405.2344, -1821.1172, 13.1016, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
        RemoveBuildingForPlayer(playerid, 1294, 1393.2734, -1796.3516, 16.9766, 0.25);
        RemoveBuildingForPlayer(playerid, 1265, 1465.4766, -1848.2500, 12.9922, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1466.9453, -1847.8438, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1419.7344, -1846.5469, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1265, 1420.4297, -1845.3438, 12.9844, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1419.6953, -1844.2031, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1220, 1420.4922, -1842.4375, 12.9297, 0.25);
        RemoveBuildingForPlayer(playerid, 1220, 1419.7266, -1842.8516, 12.9297, 0.25);
        RemoveBuildingForPlayer(playerid, 1230, 1419.6719, -1842.0313, 12.9766, 0.25);
        RemoveBuildingForPlayer(playerid, 4170, 1433.9531, -1844.4063, 21.4219, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1432.3047, -1832.9141, 15.2891, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
        RemoveBuildingForPlayer(playerid, 1260, 1482.0859, -1859.9688, 25.0391, 0.25);
        RemoveBuildingForPlayer(playerid, 4004, 1479.5234, -1852.6406, 24.5156, 0.25);
        RemoveBuildingForPlayer(playerid, 1357, 1487.6953, -1848.1094, 12.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1486.2109, -1848.1250, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1468.0625, -1847.7891, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1230, 1488.9219, -1848.2734, 12.9766, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1480.0313, -1832.9141, 15.2891, 0.25);
        RemoveBuildingForPlayer(playerid, 4171, 1503.3984, -1848.3359, 21.4609, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
        RemoveBuildingForPlayer(playerid, 1265, 1515.3828, -1850.0547, 12.9844, 0.25);
        RemoveBuildingForPlayer(playerid, 1265, 1514.4219, -1850.0391, 12.9922, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1516.6875, -1850.0547, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
        RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
        RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
        RemoveBuildingForPlayer(playerid, 4048, 1531.6328, -1852.6406, 24.5156, 0.25);
        RemoveBuildingForPlayer(playerid, 1372, 1538.9453, -1849.2734, 12.6641, 0.25);
        RemoveBuildingForPlayer(playerid, 1230, 1538.8359, -1847.6250, 13.6719, 0.25);
        RemoveBuildingForPlayer(playerid, 1220, 1538.3906, -1847.9297, 12.9297, 0.25);
        RemoveBuildingForPlayer(playerid, 1220, 1539.1016, -1847.2969, 12.9297, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1529.2891, -1832.9141, 15.2891, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
//Spawn
RemoveBuildingForPlayer(playerid, 4985, 1394.9453, -2286.1563, 17.5391, 0.25);
//Bombero:
RemoveBuildingForPlayer(playerid, 4606, 1825.0000, -1413.9297, 12.5547, 0.25);
RemoveBuildingForPlayer(playerid, 4594, 1825.0000, -1413.9297, 12.5547, 0.25);
//Textura
RemoveBuildingForPlayer(playerid, 4064, 1571.6016, -1675.7500, 35.6797, 0.25);
RemoveBuildingForPlayer(playerid, 3976, 1571.6016, -1675.7500, 35.6797, 0.25);
//LSRTV
RemoveBuildingForPlayer(playerid, 4075, 1791.7969, -1716.9844, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 1531, 1799.1328, -1708.7656, 14.1016, 0.25);
RemoveBuildingForPlayer(playerid, 4018, 1791.7969, -1716.9844, 12.5234, 0.25);
//Mueble
RemoveBuildingForPlayer(playerid, 5551, 2140.5156, -1735.1406, 15.8906, 0.25);
RemoveBuildingForPlayer(playerid, 5410, 2140.5156, -1735.1406, 15.8906, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 2175.3125, -1730.8906, 12.7031, 0.25);
//****************************TAXISTAS************
RemoveBuildingForPlayer(playerid, 5318, 2267.9609, -1997.8906, 18.5781, 0.25);
RemoveBuildingForPlayer(playerid, 1266, 2236.5625, -1988.0469, 26.2813, 0.25);
RemoveBuildingForPlayer(playerid, 5293, 2282.8203, -2033.5000, 20.5469, 0.25);
RemoveBuildingForPlayer(playerid, 5372, 2282.8203, -2033.5000, 20.5469, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 2255.8438, -2013.5859, 15.1484, 0.25);
RemoveBuildingForPlayer(playerid, 1687, 2236.1406, -2010.2344, 18.2969, 0.25);
RemoveBuildingForPlayer(playerid, 5310, 2267.9609, -1997.8906, 18.5781, 0.25);
RemoveBuildingForPlayer(playerid, 1260, 2236.5625, -1988.0469, 26.2813, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 2245.7422, -1981.6406, 11.5156, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 2235.8281, -1982.2031, 17.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 2272.4688, -1981.8516, 11.5156, 0.25);
RemoveBuildingForPlayer(playerid, 1687, 2300.1797, -1997.0547, 25.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 2296.6719, -1982.2031, 17.6250, 0.25);
RemoveBuildingForPlayer(playerid, 5266, 2278.0000, -1942.8672, 20.0781, 0.25);
//***********************CAMIONEROS Perfect City*****************
RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2194.4766, -2242.8750, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2235.1641, -2231.8516, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);
//**********************ESTACIONAMIENTO SUBTERRANEO*******************
RemoveBuildingForPlayer(playerid, 4009, 1421.3750, -1477.6016, 42.2031, 0.25);
RemoveBuildingForPlayer(playerid, 4007, 1421.3750, -1477.6016, 42.2031, 0.25);
//************************LUGAR TRAFICANTE DE ARMAS Y /CREARARMA**********
RemoveBuildingForPlayer(playerid, 3686, 2169.1172, -2276.5859, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2165.0703, -2288.9688, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2169.1172, -2276.5859, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3577, 2126.8516, -2270.4453, 14.4688, 0.25);
RemoveBuildingForPlayer(playerid, 3577, 2126.8359, -2270.4297, 16.0156, 0.25);
RemoveBuildingForPlayer(playerid, 3631, 2149.1406, -2266.9063, 12.8750, 0.25);
//***********************PARQUE E IGLESIA ANTIGUO HOSPITAL********
RemoveBuildingForPlayer(playerid, 5930, 1134.2500, -1338.0781, 23.1563, 0.25);
RemoveBuildingForPlayer(playerid, 5708, 1134.2500, -1338.0781, 23.1563, 0.25);
RemoveBuildingForPlayer(playerid, 617, 1178.6016, -1332.0703, 12.8906, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1184.0078, -1353.5000, 12.5781, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1184.0078, -1343.2656, 12.5781, 0.25);
RemoveBuildingForPlayer(playerid, 618, 1177.7344, -1315.6641, 13.2969, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1184.8125, -1292.9141, 12.5781, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1184.8125, -1303.1484, 12.5781, 0.25);
//**************************RESIDENCIA NAVAJA Y YO***************
RemoveBuildingForPlayer(playerid, 17445, -11.2734, -2498.9766, 35.4766, 0.25);
RemoveBuildingForPlayer(playerid, 17446, -34.8594, -2486.6016, 35.4766, 0.25);
RemoveBuildingForPlayer(playerid, 17447, -10.1719, -2526.5859, 37.2500, 0.25);
RemoveBuildingForPlayer(playerid, 17041, -34.8594, -2486.6016, 35.4766, 0.25);
RemoveBuildingForPlayer(playerid, 17042, -24.3203, -2528.1641, 35.5469, 0.25);
RemoveBuildingForPlayer(playerid, 17070, -23.3750, -2507.1250, 35.6719, 0.25);
RemoveBuildingForPlayer(playerid, 17044, -11.2734, -2498.9766, 35.4766, 0.25);
RemoveBuildingForPlayer(playerid, 17045, -10.1719, -2526.5859, 37.2500, 0.25);
//**********************FBI REMOVER GRAFFITI*********************************
RemoveBuildingForPlayer(playerid, 1530, 2797.9219, -1097.6953, 31.0625, 0.25);
//***********************AYUNTAMIENTO BY BENJAMIN ALASTRE**********++
/*RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);*/
//********************CASAS BY ELIAS RIVAS************************
RemoveBuildingForPlayer(playerid, 3738, 215.4297, -1244.4297, 80.8828, 0.25);
RemoveBuildingForPlayer(playerid, 762, 180.9844, -1249.9375, 78.3984, 0.25);
RemoveBuildingForPlayer(playerid, 3619, 215.4297, -1244.4297, 80.8828, 0.25);
RemoveBuildingForPlayer(playerid, 620, 251.1250, -1236.1328, 70.6641, 0.25);
//*************************CASA MAPEADA BY ELIAS RIVAS****************
RemoveBuildingForPlayer(playerid, 6143, 779.6484, -1428.8672, 17.1172, 0.25);
RemoveBuildingForPlayer(playerid, 6193, 717.1953, -1490.9844, 15.7578, 0.25);
RemoveBuildingForPlayer(playerid, 6137, 779.6484, -1428.8672, 17.1172, 0.25);
RemoveBuildingForPlayer(playerid, 620, 785.9453, -1416.9531, 12.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 792.5156, -1435.6875, 15.9375, 0.25);
RemoveBuildingForPlayer(playerid, 1311, 796.1406, -1424.2109, 16.5547, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 798.3750, -1415.6719, 15.6328, 0.25);
//*************************gasolinera ganton*************************
RemoveBuildingForPlayer(playerid, 5224, 2385.1875, -1906.5156, 18.4453, 0.25);
RemoveBuildingForPlayer(playerid, 1527, 2392.3594, -1914.5703, 14.7422, 0.25);
RemoveBuildingForPlayer(playerid, 5233, 2374.7734, -1937.1797, 20.1953, 0.25);
RemoveBuildingForPlayer(playerid, 5168, 2385.1875, -1906.5156, 18.4453, 0.25);
RemoveBuildingForPlayer(playerid, 1522, 2396.3047, -1899.6172, 12.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1522, 2399.3281, -1899.6172, 12.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1687, 2398.3906, -1910.9609, 21.2266, 0.25);
RemoveBuildingForPlayer(playerid, 643, 2401.9141, -1901.5625, 13.0234, 0.25);
RemoveBuildingForPlayer(playerid, 643, 2401.9141, -1905.1094, 13.0234, 0.25);
RemoveBuildingForPlayer(playerid, 643, 2401.9141, -1908.4531, 13.0234, 0.25);
//*************************Autos Chocones*************************
RemoveBuildingForPlayer(playerid, 6464, 379.0625, -2065.0234, 11.7969, 0.25);
RemoveBuildingForPlayer(playerid, 1529, 399.0078, -2066.8828, 11.2344, 0.25);
RemoveBuildingForPlayer(playerid, 6466, 374.6953, -2054.8828, 8.7031, 0.25);
RemoveBuildingForPlayer(playerid, 1215, 381.0313, -2070.9375, 7.3750, 0.25);
RemoveBuildingForPlayer(playerid, 6283, 379.0625, -2065.0234, 11.7969, 0.25);
RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2055.1016, 7.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2061.9531, 7.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2049.3516, 7.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1340, 388.8594, -2071.6641, 7.9453, 0.25);

//*************************alhambra*************************
RemoveBuildingForPlayer(playerid, 1537, 1837.4375, -1683.9688, 12.3047, 0.25);
RemoveBuildingForPlayer(playerid, 1533, 1837.4375, -1680.9375, 12.2969, 0.25);

//*************************exterior vip*************************
RemoveBuildingForPlayer(playerid, 1283, 807.9531, -1406.5391, 15.5703, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 786.9453, -1394.5703, 15.7031, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 828.7656, -1390.1172, 15.6406, 0.25);
RemoveBuildingForPlayer(playerid, 1462, 826.8516, -1385.6719, 12.5078, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 798.3828, -1384.3516, 15.6094, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 802.7109, -1375.6875, 15.3672, 0.25);
RemoveBuildingForPlayer(playerid, 5817, 848.8594, -1370.4297, 17.7969, 0.25);
RemoveBuildingForPlayer(playerid, 1440, 857.3750, -1381.1641, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 861.9844, -1380.4609, 13.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1462, 853.1953, -1359.7266, 12.5547, 0.25);
RemoveBuildingForPlayer(playerid, 1635, 860.9141, -1359.8047, 16.0859, 0.25);
RemoveBuildingForPlayer(playerid, 5816, 877.3516, -1363.7109, 21.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1462, 886.3438, -1357.3047, 12.5547, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 870.1484, -1343.6563, 14.0859, 0.25);
RemoveBuildingForPlayer(playerid, 1438, 872.2656, -1346.4141, 12.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 875.4141, -1343.6563, 14.0859, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 778.8594, -1391.1563, 16.3125, 0.25);


//*************************Bar las 4p´s*************************
RemoveBuildingForPlayer(playerid, 14739, 752.3984, 1439.9453, 1104.2813, 0.25);
RemoveBuildingForPlayer(playerid, 2425, 756.6406, 1441.5391, 1102.8047, 0.25);

//*********************SAEM CAMPO LV*********************
RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
RemoveBuildingForPlayer(playerid, 16095, 279.1328, 1829.7813, 16.6328, 0.25);
RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
RemoveBuildingForPlayer(playerid, 16671, 193.9531, 2051.7969, 20.1797, 0.25);
RemoveBuildingForPlayer(playerid, 16668, 357.9375, 2049.4219, 16.8438, 0.25);
RemoveBuildingForPlayer(playerid, 16669, 380.2578, 1914.9609, 17.4297, 0.25);

//*********************SAEM exterior*********************
RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2481.5156, 19.8438, 0.25);
RemoveBuildingForPlayer(playerid, 5326, 2661.5156, -2465.1406, 20.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2416.5234, 19.8438, 0.25);
RemoveBuildingForPlayer(playerid, 3577, 2744.5703, -2427.3203, 13.3516, 0.25);

//*********************SAEM barco SF*********************
RemoveBuildingForPlayer(playerid, 3791, -1289.9766, 494.7734, 10.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3795, -1294.1172, 499.3359, 10.5469, 0.25);
RemoveBuildingForPlayer(playerid, 3791, -1290.5000, 496.4375, 10.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3787, -1290.2656, 499.9609, 10.7734, 0.25);
RemoveBuildingForPlayer(playerid, 3787, -1290.3125, 497.9609, 10.7734, 0.25);
RemoveBuildingForPlayer(playerid, 3792, -1294.5938, 497.3750, 10.3359, 0.25);
RemoveBuildingForPlayer(playerid, 3787, -1300.6406, 504.0391, 10.7734, 0.25);
RemoveBuildingForPlayer(playerid, 3789, -1301.5859, 511.1094, 10.5469, 0.25);
RemoveBuildingForPlayer(playerid, 3792, -1301.5859, 511.9688, 10.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3800, -1298.2109, 503.1641, 10.2031, 0.25);
RemoveBuildingForPlayer(playerid, 3798, -1297.7422, 501.6172, 10.2031, 0.25);
RemoveBuildingForPlayer(playerid, 3788, -1294.0156, 509.2188, 10.7188, 0.25);
RemoveBuildingForPlayer(playerid, 3793, -1294.0156, 510.1563, 10.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3794, -1294.6172, 501.3281, 10.7188, 0.25);
RemoveBuildingForPlayer(playerid, 3798, -1293.2344, 512.4531, 10.2031, 0.25);
RemoveBuildingForPlayer(playerid, 3795, -1290.3984, 503.4688, 10.5469, 0.25);
RemoveBuildingForPlayer(playerid, 3792, -1289.7031, 503.9922, 10.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3793, -1294.3750, 503.1094, 10.4297, 0.25);
//*********************removes Grovve*********************
RemoveBuildingForPlayer(playerid, 1265, 2488.8047, -1684.7891, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2532.9844, -1719.4297, 13.1797, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2537.1172, -1719.9922, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2537.9688, -1700.7109, 13.1797, 0.25);
RemoveBuildingForPlayer(playerid, 760, 2520.6016, -1670.7422, 13.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2490.1016, -1654.6563, 16.1328, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2491.2344, -1653.9609, 12.9219, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2492.2656, -1653.9922, 12.8984, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2505.6719, -1658.9063, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2510.9219, -1656.1328, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2501.9297, -1650.5078, 12.9141, 0.25);
RemoveBuildingForPlayer(playerid, 947, 2533.8828, -1667.5781, 16.2891, 0.25);
RemoveBuildingForPlayer(playerid, 760, 2520.5469, -1662.8828, 13.1641, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2514.3906, -1658.6016, 13.1406, 0.25);
RemoveBuildingForPlayer(playerid, 762, 2446.5547, -1681.0703, 12.3828, 0.25);
RemoveBuildingForPlayer(playerid, 3593, 2457.8672, -1679.6719, 12.9453, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2415.8203, -1662.8828, 16.4297, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2415.2031, -1653.1328, 12.6797, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2453.9609, -1653.6953, 12.6797, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2475.0000, -1653.6094, 12.7891, 0.25);
RemoveBuildingForPlayer(playerid, 3593, 2437.4844, -1644.1172, 12.9844, 0.25);
//*********************Estacionamiento*********************
RemoveBuildingForPlayer(playerid, 713, 1109.6953, -1752.6172, 11.8516, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1098.4141, -1725.7422, 12.1563, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1055.2813, -1725.7422, 12.1563, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1051.4688, -1775.6094, 13.9766, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1049.7891, -1757.1172, 12.3516, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1051.4688, -1752.2500, 13.9766, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1109.6953, -1752.6172, 11.8516, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1098.4141, -1725.7422, 12.1563, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1055.2813, -1725.7422, 12.1563, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1051.4688, -1775.6094, 13.9766, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1049.7891, -1757.1172, 12.3516, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1051.4688, -1752.2500, 13.9766, 0.25);
//*********************Bomberos Exterior*********************
RemoveBuildingForPlayer(playerid, 11010, -2113.3203, -186.7969, 40.2813, 0.25);
RemoveBuildingForPlayer(playerid, 11048, -2113.3203, -186.7969, 40.2813, 0.25);
RemoveBuildingForPlayer(playerid, 11091, -2133.5547, -132.7031, 36.1328, 0.25);
RemoveBuildingForPlayer(playerid, 11245, -2023.7109, 83.9688, 37.8750, 0.25);
RemoveBuildingForPlayer(playerid, 11272, -2037.5391, 79.9297, 34.1094, 0.25);
RemoveBuildingForPlayer(playerid, 11376, -2144.3516, -132.9609, 38.3359, 0.25);
RemoveBuildingForPlayer(playerid, 11011, -2144.3516, -132.9609, 38.3359, 0.25);
RemoveBuildingForPlayer(playerid, 11009, -2128.5391, -142.8438, 39.1406, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -2137.6172, -110.9375, 48.3516, 0.25);
RemoveBuildingForPlayer(playerid, 1226, -2137.1328, -66.2266, 38.1875, 0.25);
RemoveBuildingForPlayer(playerid, 1226, -2097.4219, -74.3359, 38.1875, 0.25);
RemoveBuildingForPlayer(playerid, 11008, -2037.5391, 79.9297, 34.1094, 0.25);
//*********************sapd Exterior*********************
RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1709.6406, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1689.9844, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1661.0313, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
//*****************************FIN REMOVES*****************************
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(IsKeyJustDown(KEY_CTRL_BACK, newkeys, oldkeys))
	{
		for(new x = 0; x < MAX_BUSINESS; x++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]))
			{
				if(businessVariables[x][bLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Este local esta cerrado.");
				businessTypeMessages(x, playerid);
				SetPlayerPos(playerid, businessVariables[x][bInteriorPos][0], businessVariables[x][bInteriorPos][1], businessVariables[x][bInteriorPos][2]);
				SetPlayerInterior(playerid, businessVariables[x][bInterior]);
				SetPlayerVirtualWorld(playerid, BUSINESS_VIRTUAL_WORLD+x);
				LoadObjects(playerid);
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bInteriorPos][0], businessVariables[x][bInteriorPos][1], businessVariables[x][bInteriorPos][2]) && GetPlayerVirtualWorld(playerid) == BUSINESS_VIRTUAL_WORLD+x)
			{
				SetPlayerPos(playerid, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				if(GetPlayerInterior(playerid) != 0) LoadObjects(playerid);
				return 1;
			}
		}
	}
	//Garages por Y
	if (newkeys == KEY_YES)
	{
 		if(PuedeP[playerid] == 1) return GameTextForPlayer(playerid, "~b~Espera. . .", 200, 6);
		if(TutStep[playerid] == 1)
		{
			switch(TutTime[playerid])
			{
		    	case 1: TutTime[playerid] = 2;
		    	case 2: TutTime[playerid] = 3;
		    	case 3: TutTime[playerid] = 4;
		    	case 4: TutTime[playerid] = 5;
		    	case 5: TutTime[playerid] = 6;
		    	case 6: TutTime[playerid] = 7;
		    	case 7: TutTime[playerid] = 8;
		    	case 8: TutTime[playerid] = 9;
		    	case 9: TutTime[playerid] = 10;
		    	case 10: TutTime[playerid] = 11;
		    	case 11: TutTime[playerid] = 12;
		    	case 12: TutTime[playerid] = 13;
		    	case 13: TutTime[playerid] = 14;
		    }
		    Tutorial_Inside(playerid);
		}
	    if(IsAPolice(playerid)){
        	if (PlayerToPoint(10, playerid,1584.68250, -1637.97388, 12.53610)){
      			MoveDynamicObject(pdgate1,1584.68250, -1637.97388, 9.23851, 0.8);
      			SetTimer("GateClose", 7000, 0);
				return 1;
			}
			if (PlayerToPoint(15, playerid,1544.63647, -1627.31799, 14.16765)){
      			MoveDynamicObject(pdgate2,1544.63647, -1627.31799, 10.62060, 3.0);
      			SetTimer("GateClose5", 7000, 0);
      			return 1;
			}
    	}
    	else if(Team_LSTV(playerid)){
      		if (PlayerToPoint(30, playerid,1803.49744, -1721.39587, 14.32406)){
	       		MoveDynamicObject(tvp, 1803.49744, -1721.39587, 7.12444, 5.0);
	       		SetTimer("GateCloseCNN", 7000, 0);
	       		return 1;
       		}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
		else if(Team_LCN(playerid)){
      		if (PlayerToPoint(30, playerid,1303.3156, -2057.1909, 60.0301)){
	       		MoveDynamicObject(LCNgate, 1303.3156, -2057.1909, 54.3713, 5.0);
	       		SetTimer("GateCloseLCN", 7000, 0);
	       		return 1;
       		}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
		else if(Team_FBI(playerid)){
      		if (PlayerToPoint(30, playerid,-1410.1038, -1474.5354, 101.0403)){
	       		MoveDynamicObject(FBIgate, -1412.1141, -1474.1333, 96.8709, 5.0);
	       		SetTimer("CloseFBI", 7000, 0);
	       		return 1;
       		}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
		else if(Team_YAK(playerid)){
      		if (PlayerToPoint(30, playerid,321.8579, -1189.5417, 76.5000)){
	       		MoveDynamicObject(YAKgate, 321.7614, -1187.9587, 71.3130, 5.0);
	       		SetTimer("GateCloseYAK", 7000, 0);
	       		return 1;
       		}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
		else if(Team_NDRA(playerid)){
      		if (PlayerToPoint(30, playerid,2969.8242, -1825.7269, 6.3272)){
	       		MoveDynamicObject(NDRgate, 2972.8318, -1825.7244, 2.2958, 5.0);
	       		SetTimer("GateCloseNDR", 7000, 0);
	       		return 1;
       		}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
	   else if(Team_RUSA(playerid)){
        	if (PlayerToPoint(10, playerid,664.9735, -1312.1351, 12.4533)){
      			MoveDynamicObject(RUgate,664.9177, -1309.5563, 8.6041, 5.0);
      			SetTimer("GateCloseRU", 7000, 0);
				return 1;
			}
			if (PlayerToPoint(15, playerid,656.1259, -1225.5602, 16.3761)){
      			MoveDynamicObject(RUgate2,658.7844, -1226.6669, 9.9733, 5.0);
      			SetTimer("GateCloseRU2", 7000, 0);
      			return 1;
      		}
      		if (PlayerToPoint(15, playerid,793.1713, -1152.4261, 25.3750)){
      			MoveDynamicObject(RUgate3,786.4653, -1152.4625, 18.5836, 5.0);
      			SetTimer("GateCloseRU3", 7000, 0);
      			return 1;
      			
			}
    	}
    	else if(Team_SAEM(playerid))
		{
      		if (PlayerToPoint(30, playerid,2457.7957, -2254.7603, 26.9004)){
      		    MoveDynamicObject(saem1, 2457.7957, -2254.7603, 21.2877, 5.0);
	       		SetTimer("OpenDoorNG", 7000, 0);
	       		return 1;
	       	}
      		if (PlayerToPoint(30, playerid,-1529.0433, 482.4390, 9.0600)){
      		    MoveDynamicObject(saem2, -1529.0433, 482.4390, 3.4648, 5.0);
	       		SetTimer("OpenDoorNG2", 7000, 0);
	       		return 1;
	       	}
          	else SendClientMessageEx(playerid, COLOR_WHITE,"");
		}
	    	if(Info[playerid][pVIP] > 0 || Info[playerid][pAdminZC] >= 1338){
	      	if (PlayerToPoint(30, playerid,2901.7615,-666.2679,10.8576)){
		       	MoveDynamicObject(rejavip,2909.96484, -666.21680, 16.67045, 2.0, -1000.0, -1000.0, -1000.0);
		       	SetTimer("GateCloseRejavip", 7000, 0);
		       	return 1;
		       	}
            else SendClientMessageEx(playerid, COLOR_WHITE,"");
	    }
     	if(Team_Mecanicos(playerid))
    	{
	    	if (PlayerToPoint(30, playerid,2423.98120, -2089.46729, 15.73482))
	    	{
				Message(playerid, COLOR_GENERAL, "Para cerrar el portón usa /cerrarp");
		       	MoveDynamicObject(portonmeca,2423.98120, -2089.46729, 8.57945, 2.0);
		       	return 1;
	    	}
		}
		new nick[MAX_PLAYER_NAME];
		GetPlayerName(playerid, nick, sizeof(nick));
		if( !strcmp(nick, "Jack_Williams", true))
		{
	    	if (PlayerToPoint(30, playerid,-40.3037, -2507.4250, 34.8363))
	    	{
		       	MoveDynamicObject(portonres,-40.30374, -2507.42505, 31.41318, 2.0);
		       	SetTimer("GateCloseRes", 7000, 0);
		       	return 1;
	    	}
		}
		new nick2[MAX_PLAYER_NAME];
		GetPlayerName(playerid, nick2, sizeof(nick));
		if( !strcmp(nick2, "Jack_Williams", true) || !strcmp(nick2, "Hachiman_Hikigaya",true)|| !strcmp(nick2, "Samuel_Paz", true))
		{
	    	if (PlayerToPoint(30, playerid,1003.3000, -643.5000, 124.1000))
	    	{
		       	MoveDynamicObject(SamuelGate,1003.3000, -643.5000, 114.8154, 2.0);
		       	SetTimer("SamuelOFF", 7000, 0);
		       	return 1;
	    	}
		}
		new nick3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, nick3, sizeof(nick));
		if( !strcmp(nick3, "Jack_Williams", true) || !strcmp(nick3, "Nicolas_Guevara",true))
		{
	    	if (PlayerToPoint(30, playerid,268.5060100,-1330.3514400,54.9451600))
	    	{
		       	MoveDynamicObject(NicoGate,276.9198, -1324.9174, 54.9452, 2.0);
		       	SetTimer("NicoOFF", 7000, 0);
		       	return 1;
	    	}
		}
		new nick1[MAX_PLAYER_NAME];
		GetPlayerName(playerid, nick, sizeof(nick));
		if( !strcmp(nick1, "Jack_Williams", true))
		{
	    	if (PlayerToPoint(30, playerid,-40.3037, -2507.4250, 34.8363))
	    	{
		       	MoveDynamicObject(portonres,-40.30374, -2507.42505, 31.41318, 2.0);
		       	SetTimer("GateCloseRes", 7000, 0);
		       	return 1;
	    	}
		}
		else if(Team_Judicial(playerid)){
	        if (PlayerToPoint(10, playerid,1386.099609375, -1647.8994140625, 14.10000038147)){
	      		MoveDynamicObject(gobiernogate,1390.39074707,-1639.57287598,16.29999924, 5.0);
	            SetTimer("GateCloseGob", 7000, 0);
	            return 1;
			}
			if (PlayerToPoint(15, playerid,1391.29980469,-1629.89941406,12.52500343) || PlayerToPoint(15, playerid,1391.29980469,-1629.89941406,37.20010376)){
	      		MoveDynamicObject(gobiernogate1,1391.29980469,-1629.89941406,37.20010376, 5.0);
	      		SetTimer("GateCloseGob1", 7000, 0);
	      		return 1;
			}
            else SendClientMessageEx(playerid, COLOR_WHITE,"");
	    }
	    else SendClientMessageEx(playerid, COLOR_WHITE,"Usted no tiene un mando a distancia.");
	    return 1;
 	}
	if(HOLDING(KEY_FIRE))
    {
        SetTimerEx("Checkfire", 750, false, "i", playerid);
        Apagandofire[playerid] = 1;
    }
    if(RELEASED(KEY_FIRE))
    {
        Apagandofire[playerid] = 0;
    }
//*********************
//**security**
#if defined AntiArmas 1
new Menu[1024];
if(newkeys & KEY_FIRE && ArmaProhibida(playerid))
{
new Arma, Balas;
GetPlayerWeaponData(playerid, 7, Arma, Balas);
SetPlayerHealth(playerid, 0);
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Arma prohibida detectada.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
#endif
return 1;
}
	//************
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(IsPlayerNPC(playerid)) return 1;
	if(IsKeyJustDown(KEY_SPRINT,newkeys,oldkeys) && gPlayerUsingLoopingAnim[playerid] == 1 && Info[playerid][pBeingSentenced] == 0)
	{
	    StopLoopingAnim(playerid);
    }
	if((newkeys & KEY_FIRE) && GetPVarInt(playerid, "SpeedRadar") == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    if(GetPVarInt(playerid, "RadarTimeout") == 0)
	    {
			if(GetPlayerWeapon(playerid) == SPEEDGUN)
			{
			    new Float:x,Float:y,Float:z;
				for(new veh = 1; veh < MAX_VEHICLES; veh++)
				{
				    if(IsVehicleStreamedIn(veh, playerid))
				    {
					    GetVehiclePos(veh,x,y,z);
					    if(IsPlayerAimingAt(playerid,x,y,z,10))
					    {
					        new string[128];
							new Float: Speed = GetVehicleSpeed(veh, 0);
							format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~b~Placa: ~w~%d~n~~b~Vel: ~w~%d MPH", veh, floatround(Speed/1.609));
							GameTextForPlayer(playerid, string,3500, 3);
							format(string, sizeof(string), "Placa: %d Vel: %d MPH", veh, floatround(Speed/1.609));
							SendClientMessageEx(playerid, COLOR_GRAD4, string);
							SetPVarInt(playerid, "RadarTimeout", 1);
							SetTimerEx("RadarCooldown", 3000, 0, "i", playerid);
							return 1;
						}
					}
			    }
			}
		}
	}
	if((newkeys & KEY_FIRE) && pTazer[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
 		if(TazerTimeout[playerid] > 0) return 1;
		new Float:X, Float:Y, Float:Z;
		foreach(Player, i)
		{
		    if(IsPlayerStreamedIn(i, playerid))
		    {
			    GetPlayerPos(i, X, Y, Z);
				if(IsPlayerAimingAt(playerid,X,Y,Z,1) && Info[i][pEstado] == 0 && GetPlayerState(i) == PLAYER_STATE_ONFOOT && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
				{
					if(IsACop(i))
					{
					    return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes tazear a esta persona.");
					}
					new string[44 + (MAX_PLAYER_NAME * 2)];
		    		format(string, sizeof(string), "* %s dispará su tazer hacia %s, paralizandolo.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(i, "~r~Tazeado", 3500, 3);
					//SendAudioToRange(10300, 100, 0, X, Y, Z, 20.0);
					TogglePlayerControllable(i, 0);
					PlayerPlaySound(i, 1085, X, Y, Z);
					PlayerPlaySound(playerid, 1085, X, Y, Z);
					Info[i][pEstado] = 1;
					SetPVarInt(i, "PlayerCuffed", 1);
					PlayerCuffedTime[i] = 16;
					SetPVarInt(i, "IsFrozen", 1);
					//Frozen[i] = 1;
					TazerTimeout[playerid] = 4;
					SetTimerEx("TazerTimer",1000,false,"d",playerid);
					ApplyAnimation(i,"PED","KO_skid_front",4.1,0,1,1,1,0);
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~r~Recargando Tazer... ~w~5", 1500,3);
					return 1;
				}
			}
		}
	}
	if (IsKeyJustDown(KEY_FIRE, newkeys, oldkeys))
	{
		if(GetPVarInt(playerid, "editingcdvehpos"))
		{
			TogglePlayerControllable(playerid, false);
		    SafeDialogEx(playerid,DIALOG_CDEDITPARK,DIALOG_STYLE_MSGBOX,"Advertencia:","Esta es la nueva posición que quieres?","Ok","Cancelar");
		}
		if(GetPVarInt(playerid, "editingcdvehnew"))
		{
            TogglePlayerControllable(playerid, false);
	        SafeDialogEx(playerid,DIALOG_CDEDITPARK,DIALOG_STYLE_MSGBOX,"Advertencia:","Esta es la nueva posición que quieres?","Ok","Cancelar");
		}
		if(GetPVarInt(playerid, "editingfamhq") != 255)
		{
		    if(GetPVarInt(playerid, "editingfamhqaction") == 1)
		    {
      			DeletePVar(playerid, "editingfamhqaction");
		        TogglePlayerControllable(playerid, false);
	        	SafeDialogEx(playerid,HQENTRANCE,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Es está la entrada que quieres?","Ok","Cancelar");
		    }
		    else if(GetPVarInt(playerid, "editingfamhqaction") == 2)
		    {
		        DeletePVar(playerid, "editingfamhqaction");
		        TogglePlayerControllable(playerid, false);
	        	SafeDialogEx(playerid,HQEXIT,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Es está la salida que quieres?","Ok","Cancelar");
		    }
		    else if(GetPVarInt(playerid, "editingfamhqaction") == 5)
		    {
		        TogglePlayerControllable(playerid, false);
	        	SafeDialogEx(playerid,HQENTRANCE,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Es está la entrada que quieres?","Ok","Cancelar");
		    }
		    else if(GetPVarInt(playerid, "editingfamhqaction") == 6)
		    {
		        TogglePlayerControllable(playerid, false);
	        	SafeDialogEx(playerid,HQEXIT,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Es está la salida que quieres?","Ok","Cancelar");
		    }

		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_SPRUNK && (newkeys & KEY_FIRE))
	{
	    if(GetPVarInt(playerid, "DrinkCooledDown") == 1)
	    {
			new Float: cHealth;
			GetPlayerHealth(playerid, cHealth);
		    if(cHealth < 100)
		    {
				SetHP(playerid, cHealth+2);
		    }
		    else
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "* Terminaste de tomar la bebida.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
		    DeletePVar(playerid, "DrinkCooledDown");
		    SetTimerEx("DrinkCooldown", 2500, 0, "i", playerid);
			return 1;
		}
	}
	if(IsKeyJustDown(KEY_SECONDARY_ATTACK, newkeys, oldkeys))
	{
		if(GetPVarInt(playerid, "UsingSprunk"))
		{
			DeletePVar(playerid, "UsingSprunk");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			return 1;
		}
	}
	if (IsKeyJustDown(KEY_FIRE, newkeys, oldkeys))
	{
 		new Float:health;
 		GetPlayerHealth(playerid, health);

		if(GetPVarInt(playerid, "UsingSprunk"))
		{
		    new hpint = floatround( health, floatround_round );
		    if( hpint >= 100 )
			{
  				SendClientMessageEx(playerid, COLOR_GREY, " Estás con tu vida llena.");
	 			return 1;
	   		}
	   		else
	   		{
				GetPlayerHealth(playerid, health);
				SetHP(playerid, health+1.0);
			}
		}
	}
	if(newkeys & KEY_SPRINT)
    {
    	if(IsPlayerConnected(playerid))
		{
		    if(ShowRules[playerid] == 0)
			{
				return 1;
			}
  			if(PlayerDrunk[playerid] > 9) { ApplyAnimation(playerid,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[playerid]*1000); }
  			if(PuedeD[playerid] == 1)
	    	{
				return GameTextForPlayer(playerid, "Espera. . .", 5000, 1);
			}
			else if(ShowRules[playerid] == 1)
			{
				switch(RulesTime[playerid])
				{
		    		case 1: RulesTime[playerid] = 2;
		    		case 2: RulesTime[playerid] = 3;
		    		case 3: RulesTime[playerid] = 4;
		    		case 4: RulesTime[playerid] = 5;
		    		case 5: RulesTime[playerid] = 6;
		    		case 6: RulesTime[playerid] = 7;
		    		case 7: RulesTime[playerid] = 8;
		    		case 8: RulesTime[playerid] = 9;
		    		case 9: RulesTime[playerid] = 10;
		    	}
		    	ShowRol(playerid);
		    }
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if (GetPlayerState(playerid) == 1)
			{
				TeleportPlayer(playerid);
				if(ReduceTime[playerid] == 0)
				{
				    new Float:hp; GetPlayerHealth(playerid, hp);
					if(PlayerToPoint(1.0,playerid,-36.3182,-56.8905,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-19.1974,-56.8366,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-35.9060,-139.2014,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-15.2743,-139.2626,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+5);
					}
					else if(PlayerToPoint(1.0,playerid,-16.7039,-139.3292,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
				}
			}
			else if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
    }
   if(newkeys == KEY_CTRL_BACK)
	{
	 new params[1];
	 cmd_entrar(playerid, params);
	 cmd_salir(playerid, params);
	}
    if(newkeys & KEY_FIRE)
	{
		if(HaveTaser[playerid] == 1)
		{
 			ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,0,0,1);

		    new victimid = GetClosestPlayer(playerid);
			if(IsPlayerConnected(victimid))
	     	{
	        	if(GetDistanceBetweenPlayers(playerid,victimid) < 2)
	            {
	                Info[victimid][pEstado] = 1;
	                GameTextForPlayer(victimid, "~r~Has sido tazeado", 3500, 3);
                    TogglePlayerControllable(victimid, 0);
					Info[victimid][pEstado] = 1;
					SetPVarInt(victimid, "PlayerCuffed", 2);
					SetPVarInt(victimid, "IsFrozen", 1);
					PlayerCuffedTime[victimid] = 300;
					SetTimerEx("TimerGCRP",30000,false,"d",victimid);
	                return 1;
	             }
	         }
         }
	}
	return 1;
}

stock ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}

// SpeedCam System
stock CreateSpeedCam(newid,Float:x,Float:y,Float:z,Float:rot,range,limit,fine)
{
	new text_info[64];
	vCameraInfo[newid][vCameraPos][0] = x;
	vCameraInfo[newid][vCameraPos][1] = y;
	vCameraInfo[newid][vCameraPos][2] = z;
	vCameraInfo[newid][vCameraRot] = rot;
	vCameraInfo[newid][vCameraRange] = range;
	vCameraInfo[newid][vCameraLimit] = limit;
	vCameraInfo[newid][vCameraTicket] = fine;
	vCameraInfo[newid][vCameraStatus] = 0;
	saveSpeedCam();
	vCameraInfo[newid][vCameraObject] = CreateDynamicObject(18880, vCameraInfo[newid][vCameraPos][0],vCameraInfo[newid][vCameraPos][1],vCameraInfo[newid][vCameraPos][2],0,0,vCameraInfo[newid][vCameraRot]);
	switch(vCameraInfo[newid][vCameraStatus])
	{
	    case 0: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\nLímite: MPH {FFC800}%d", newid,vCameraInfo[newid][vCameraLimit]);
		case 1: format(text_info, sizeof(text_info), "{FFFFFF}(%d)\nCámara de Velocidad\n{FF0000}(DESACTIVADA)", newid);
	}
	vCameraInfo[newid][vCameraLabel] = CreateDynamic3DTextLabel(text_info,-1,vCameraInfo[newid][vCameraPos][0],vCameraInfo[newid][vCameraPos][1],vCameraInfo[newid][vCameraPos][2]+5,10.0);
}

stock DeleteSpeedCam(newid)
{
	vCameraInfo[newid][vCameraPos][0] = 0.0;
	vCameraInfo[newid][vCameraPos][1] = 0.0;
	vCameraInfo[newid][vCameraPos][2] = 0.0;
	vCameraInfo[newid][vCameraRot] = 0.0;
	vCameraInfo[newid][vCameraRange] = 0;
	vCameraInfo[newid][vCameraLimit] = 0;
	vCameraInfo[newid][vCameraTicket] = 0;
	saveSpeedCam();
	DestroyDynamicObject(vCameraInfo[newid][vCameraObject]);
	DestroyDynamic3DTextLabel(vCameraInfo[newid][vCameraLabel]);
}

stock IsPlayerInAguaForaDoMar(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if((x >= -1408.0629 && y >= 2021.0587 && x <= -460.9319 && y <= 2861.4893) ||//Represa do deserto de Las Venturas
    (x >= 1269.5886 && y >= -810.4507 && x <= 1288.8916 && y <= -800.5959) ||//Piscina de uma casa em VineWood (Mad Dog's Mansion)
    (x >= 1086.6010 && y >= -683.6998 && x <= 1103.0225 && y <= -662.1832) ||//Piscina de uma casa em VineWood (Perto Mad Dog's Mansion)
    (x >= 169.6879 && y >= -1392.6630 && x <= 281.5444 && y <= -1168.9749) ||// 2 Piscinas em VineWood
    (x >= -828.3018 && y >= -2107.1487 && x <= -443.5032 && y <= -1855.6273) ||//Lago da árvore caída, ou Lago Morto
    (x >= 1198.9982 && y >= -2407.0581 && x <= 1275.7397 && y <= -2341.6262) ||//Lago perto do aeroporto Los Santos
    (x >= 2293.1467 && y >= -1432.5869 && x <= 2331.7388 && y <= -1397.6476) ||//Lago perto da Igreja Los Santos
    (x >= 1915.3196 && y >= -1236.2382 && x <= 2016.6565 && y <= -1167.9290) ||//Park Glen Los Santos
    (x >= -2747.1692 && y >= -510.1152 && x <= -2663.2468 && y <= -411.4905) ||//Lago em San Fierro
    (x >= 1838.8041 && y >= 1463.2024 && x <= 2035.4167 && y <= 1703.0480) ||//Cascata do Login em Las Venturas
    (x >= 2049.6646 && y >= 1843.3029 && x <= 2119.9021 && y <= 1983.5464) ||//Navio Pirata em Las Venturas
    (x >= 2094.9255 && y >= 1085.2852 && x <= 2179.1790 && y <= 1183.0610) ||//Frente de um Cascino em Las Venturas
    (x >= 2545.3718 && y >= 2347.7112 && x <= 2593.6794 && y <= 2403.8040))//Piscina de um prédio em Las Venturas
    {
     return 1;
    }
    return 0;
}

forward ChecarFlyHackers();//CallBack chamada a cada 1 segundo para verificação do Cheat...
public ChecarFlyHackers()
{
   for(new i; i < MAX_PLAYERS; i++)
   {
     if(IsPlayerConnected(i))
     {
       if(IsPlayerNadando(i))// Primeiro detecta se o player está em movimentos de natação!
       {
         new Float:XPos,Float:YPos,Float:ZPos, string[128];
         GetPlayerPos(i,XPos,YPos,ZPos);
         if(ZPos > 2.0)// Acima de 1.0 não está em águas do mar!
         {
            if(!IsPlayerInAguaForaDoMar(i))//Se não está no mar e nem em águas fora dele está com Cheats(Voando)!
            {
              if(Info[i][pAdminZC] < 2)// Você pode colocar exceções, tipo, não ter afeito contra admins, etc...
              {
    			 format(string, sizeof(string), "AdmCmd: %s fue expulsado por el servidor, razón: Fly Hack", GetPlayerNameEx(i));
			     SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				 Message(i, COLOR_RED, "Has sido kickeado por Fly-Hack");
                 SetTimerEx("KickxD",500,0,"d",i);
                 return 1;
              }
            }

         }

       }

     }

   }
   return 1;
}

stock RemovePlayerWeapon(playerid, weapon){
	switch(weapon) {
		case 0, 1: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][0] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 2, 3, 4, 5, 6, 7, 8, 9: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][1] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 22, 23, 24: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][2] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 25, 26, 27: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][3] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 28, 29, 32: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][4] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 30, 31: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][5] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 33, 34: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][6] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 35, 36, 37, 38: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][7] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 16, 17, 18, 39: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][8] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 41, 42, 43: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][9] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 10, 11, 12, 13, 14, 15: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][10] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 44, 45, 46: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][11] = 0;
			SetPlayerWeapons(playerid);
	    }
	    case 40: {
		    ResetPlayerWeapons(playerid);
	        Info[playerid][pWeapons][12] = 0;
			SetPlayerWeapons(playerid);
	    }
	}
	return 1;
}

/*RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[13];
	for(new s = 0; s < 13; s++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, s, wep, ammo);
		if(wep != weaponid)
		{
			GetPlayerWeaponData(playerid, s, plyWeapons[s], ammo);
		}
		else
		{
			Info[playerid][pWeapons][s] = 0;
		}
	}
	ResetPlayerWeapons(playerid);
 	for(new s = 0; s < 13; s++)
	{
		GivePlayerValidWeapon(playerid, plyWeapons[s]);
	}
	return 1;
}*/

function ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}

function FreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 0);	}

function UnfreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 1);	}

function Heal(playerid)			{	SetHP(playerid, 100);			return 1;	}

function CheckForCloseDoor(playerid)
{
	if(IsAPolice(playerid))
    {
        if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
		{
			MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
      		return 1;
		}
    }
    else if(Team_Mecanicos(playerid))
    {
	    if (PlayerToPoint(30, playerid,2423.98120, -2089.46729, 15.73482))
	    {
    		MoveDynamicObject(portonmeca,2423.98120, -2089.46729, 15.73482, 2.0);
     		return 1;
	    }
	}
    return 1;
}


stock Bought(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
 		new a[12];
		format(a,sizeof(a),"~r~ -%d$",amount);
		GameTextForPlayer(playerid, a, 5000, 1);
		GivePlayerCash(playerid, -amount);
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock Earn(playerid, amount){
	if(IsPlayerConnected(playerid)){
		new a[12];
		format(a,sizeof(a),"~g~ %d$",amount);
	    GameTextForPlayer(playerid, a, 5000, 1);
		GivePlayerCash(playerid, amount);
		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock CheckMoney(playerid, money){
    if(IsPlayerConnected(playerid)){
	    new b[64];
	    new xx;
		xx = money - (GetPlayerCash(playerid));
	    if(GetPlayerCash(playerid) >= money){ return 1; }
		else{
		    format(b,sizeof(b),"No tienes dinero suficiente! Te faltan %d$",xx);
			SendClientMessageEx(playerid, COLOR_GRAD2, b);
			return 0;
		}
	}
	return 0;
}

function ClearDrugs(playerid)
{
	UsedWeed[playerid] = 0;
	UsedCrack[playerid] = 0;
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}

function NewUs(playerid)
{
	  NewUsed[playerid] = 0;
      return 1;
}

function PuedePTimer(playerid)
{
	PuedeP[playerid] = 0;
	return 1;
}

function ReleasePlayer(playerid)
{
	SetPVarInt(playerid, "IsFrozen", 0);
	TogglePlayerControllable(playerid,1);
}

function NewbieUnMuted(playerid)
{
    Info[playerid][pNMute] = 0;
    SendClientMessage(playerid, COLOR_WHITE, "Ahora ya no estas silenciado del canal de ayuda recuerda usarlo sólo para preguntas.");
    SendClientMessage(playerid, COLOR_WHITE, "Si sigues recuerda que puedes resultar baneado automáticamente del servidor.");
	return 1;
}

//function Reg_ShowDNI(playerid) { ShowDNI(playerid,playerid); }

function Reg_ShowDNI(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[18], otext[36];
	    new sendername[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(Info[playerid][pSex] == 1) { sex = "Masculino"; }
   		if(Info[playerid][pSex] == 2) { sex = "Femenino"; }
   		if(Info[targetid][pOrigin] == 1) { otext = "Norteamericana"; }
		else if(Info[targetid][pOrigin] == 2) { otext = "Centroamericana"; }
		else if(Info[targetid][pOrigin] == 3) { otext = "Sudamericana"; }
		else if(Info[targetid][pOrigin] == 4) { otext = "Europea"; }
		else if(Info[targetid][pOrigin] == 5) { otext = "Asiática"; }
		else if(Info[targetid][pOrigin] == 6) { otext = "Africana"; }
		else if(Info[targetid][pOrigin] == 7) { otext = "Oceánica"; }
		
   		format(string, sizeof(string), "Nombre: %s  Sexo: %s   Edad: %d", sendername, sex, Info[playerid][pAge]);
   		SendClientMessageEx(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "Fecha Nacimiento: %d   Nacionalidad: %s", 2016-Info[playerid][pAge], otext);
   		SendClientMessageEx(targetid, COLOR_WHITE, string);
	}
}
//**********************
//**licencias por textdraw***
function ShowLicencia(playerid,giveplayerid,tipo)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(giveplayerid))
	{
 		new sex[18],string[200];
	    if(Info[playerid][pSex] == 1) { sex = "Hombre"; }
   		if(Info[playerid][pSex] == 2) { sex = "Mujer"; }

   		format(string, sizeof(string), "%s", GetPlayerNameEx(playerid));
		PlayerTextDrawSetString(giveplayerid, LICENCIA2[giveplayerid], string);

		format(string, sizeof(string), "%s", sex);
		PlayerTextDrawSetString(giveplayerid, LICENCIA8[giveplayerid], string);

		format(string, sizeof(string), "%d", Info[playerid][pAge]);
		PlayerTextDrawSetString(giveplayerid, LICENCIA4[giveplayerid], string);

   		PlayerTextDrawSetPreviewModel(giveplayerid, LICENCIA1[giveplayerid], Info[playerid][pChar]);
	    if(tipo == 1)
	    {
	        PlayerTextDrawSetString(giveplayerid,LICENCIA3[giveplayerid], "ld_drv:gold");
	        PlayerTextDrawShow(giveplayerid, LICENCIA0[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA1[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA2[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA3[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA4[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA5[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA6[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA7[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA8[giveplayerid]);

            SetTimerEx("qlicencia",10000,false,"i",giveplayerid);
	    }
	    if(tipo == 2)
	    {
	        PlayerTextDrawSetString(giveplayerid,LICENCIA3[giveplayerid], "ld_drv:goboat");
	        PlayerTextDrawShow(giveplayerid, LICENCIA0[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA1[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA2[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA3[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA4[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA5[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA6[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA7[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA8[giveplayerid]);

            SetTimerEx("qlicencia",10000,false,"i",giveplayerid);
	    }
	    if(tipo == 3)
	    {
	        PlayerTextDrawSetString(giveplayerid,LICENCIA3[giveplayerid], "ld_drv:golfly");
	        PlayerTextDrawShow(giveplayerid, LICENCIA0[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA1[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA2[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA3[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA4[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA5[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA6[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA7[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA8[giveplayerid]);

            SetTimerEx("qlicencia",10000,false,"i",giveplayerid);
	    }
	    if(tipo == 4)
	    {
	        PlayerTextDrawSetString(giveplayerid,LICENCIA3[giveplayerid], "hud:fist");
	        PlayerTextDrawShow(giveplayerid, LICENCIA0[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA1[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA2[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA3[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA4[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA5[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA6[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA7[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA8[giveplayerid]);

            SetTimerEx("qlicencia",10000,false,"i",giveplayerid);
	    }
	    if(tipo == 5)
	    {
	        PlayerTextDrawSetString(giveplayerid,LICENCIA3[giveplayerid], "ld_drv:silver");
	        PlayerTextDrawShow(giveplayerid, LICENCIA0[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA1[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA2[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA3[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA4[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA5[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA6[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA7[giveplayerid]);
	        PlayerTextDrawShow(giveplayerid, LICENCIA8[giveplayerid]);

            SetTimerEx("qlicencia",10000,false,"i",giveplayerid);
	    }
	}
}
//***************************
function RegMsn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[1024],
		edad = Info[playerid][pAge],
		correo[64],
		sex[20],
		otext[36];
		format(correo, sizeof(correo), "%s", Info[playerid][pCorreo]);
  		if(Info[playerid][pSex] == 1) { sex = "Masculino"; }
   		if(Info[playerid][pSex] == 2) { sex = "Femenino"; }
   		if(Info[playerid][pOrigin] == 1) { otext = "Norteamericana"; }
		else if(Info[playerid][pOrigin] == 2) { otext = "Centroamericana"; }
		else if(Info[playerid][pOrigin] == 3) { otext = "Sudamericana"; }
		else if(Info[playerid][pOrigin] == 4) { otext = "Europea"; }
		else if(Info[playerid][pOrigin] == 5) { otext = "Asiática"; }
		else if(Info[playerid][pOrigin] == 6) { otext = "Africana"; }
		else if(Info[playerid][pOrigin] == 7) { otext = "Oceánica"; }
		format(string, sizeof(string), "{FFFFFF}Asegúrate que tus datos son correctos ya que no podrán ser cambiados al finalizar el registro\n\n{009D7A}Resumen de tus datos:{FFFFFF}\n{C9AA21}Sexo:{FFFFFF} %s\n{C9AA21}Nacionalidad:{FFFFFF} %s\n{C9AA21}Edad:{FFFFFF} %d\n{C9AA21}Correo Electrónico:{FFFFFF} %s\n\n¿Desea confirmar estos datos?, de no ser así pulse {CA5730}Cambiar", sex, otext, edad, correo);
	    SafeDialogEx(playerid,DIALOG_REG_MSN,DIALOG_STYLE_MSGBOX, "{008EC1}6.- Confirmación de tus datos", string,"Validar","Cambiar");
		//SafeDialogEx(playerid,DIALOG_REG_MSN,DIALOG_STYLE_MSGBOX,"{008EC1}6.- Confirmación de tus datos","{FFFFFF}Asegúrate bien en los datos no podrás cambiar tus datos al acabar el registro.\n\n¿Los datos son correctos?","Si","No");
		//SafeDialogEx(playerid,DIALOG_CORREO,DIALOG_STYLE_INPUT,"{008EC1}4.- Escribe tu Correo Electrónico:","{FFFFFF}Ahora necesitamos saber tú correo electrónico para que en un futuro puedas recibir actualizaciones del servidor o recuperar tu contraseña\n\nIngresa un correo electrónico {00A900}Válido:","Aceptar","Atrás");
		return 1;
	}
	return 1;
}

stock Admin(lvl,playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new admin = Info[playerid][pAdminZC];
	    if(admin	>=	lvl)
		{
		    return 1;
		}
	}
	return 0;
}

function Detective_FindPerson(playerid)
{
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(WhoFind[playerid], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
	WhoFind[playerid] = 0;
	return 1;
}

function Detective_FindCar(playerid)
{
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(WhoFind[playerid], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 10);
	SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
	WhoFind[playerid] = 0;
	return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    gPlayerUsingLoopingAnim[playerid] = 1;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
 	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

LoadAnimLibs(playerid)
{
    PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"WUZI");
   	PreloadAnimLib(playerid,"PED");
   	PreloadAnimLib(playerid,"ped");
   	PreloadAnimLib(playerid,"SCRATCHING");
    PreloadAnimLib(playerid,"FAT");
    PreloadAnimLib(playerid,"POLICE");
   	PreloadAnimLib(playerid,"Attractors");
   	PreloadAnimLib(playerid,"FOOD");
   	PreloadAnimLib(playerid,"CRIB");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"FIGHT_D");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"benchpress");
}
SearchingHit(playerid)
{
	new string[ 256 ];
   	SendClientMessageEx(playerid, COLOR_WHITE, "Contratos Habilitados:");
   	new hits;
	foreach(Player, i)
	{
		if(Info[i][pMember] != 8 && Info[i][pHead] > 0)
		{
	 		if(GotHit[i] == 0)
  			{
				hits++;
				format(string, sizeof(string), "Nombre: %s (ID %d) | Precio: $%d | Contratado por: %s | Detalles: %s | Seguido por: Nobody", GetPlayerNameEx(i), i, Info[i][pHead], Info[i][pContractBy], Info[i][pContractDetail]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
			else
			{
  				format(string, sizeof(string), "Nombre: %s (ID %d) | Precio: $%d |  Contratado por: %s | Detalles: %s | Seguido por: %s", GetPlayerNameEx(i), i, Info[i][pHead], Info[i][pContractBy], Info[i][pContractDetail], GetPlayerNameEx(GetChased[i]));
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
  		}
	}
	if(hits && Info[playerid][pRank] >= 6 && Info[playerid][pMember] == 8 && Info[playerid][pLeader] == 8)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Usa {5ABAFF}/darhit{FFFFFF} para asignar un contrato a uno de los Sicarios.");
	}
	if(hits == 0)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "No hay contratos disponibles.");
	}
	return 0;
}

SendPaintballArenaMessage(arenamodo, color, message[])
{
	foreach(Player, p)
	{
   		new modo = GetPVarInt(p, "ArenaMode");
   		if(arenamodo == modo)
       	{
	      	SendClientMessageEx(p, color, message);
		}
	}
	return 1;
}

function BackupClear(playerid, faction, timer)
{
	if(IsPlayerConnected(playerid))
	{
		if(faction == 1)
		{
			if(Info[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Team_LSPD(i) && OnDuty[i] == 1)
						DisablePlayerCheckpoint(playerid);
						SetPlayerToTeamColor(playerid);
					}
				}
				if(timer != 1) 	SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
				else 					SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");

				Info[playerid][pRequestingBackup] = 0;
			}
		}
	}
	return 1;
}

//·| << Timers de Objetos >> ========================================================================================|·
function Puerta2Abierta()
{
    MoveObject(PuertaH2,250.67543029785, 130.39466552734, 1037.9182128906, 0.97);
    SetTimer("Puerta2Cerrada", 5000, 0);
}
function Puerta1Abierta()
{
    MoveObject(PuertaH1,250.56510925293, 130.34936218262, 1032.2158203125, 0.97);
    SetTimer("Puerta1Cerrada", 8000, 0);
}
function Puerta2Cerrada()
{
    MoveObject(PuertaH2,250.67543029785, 131.59466552734, 1037.9182128906, 0.97);
    if(HaciaAbajo == 1) {
    SetTimer("Eabajo", 2000, 0); }
    else { }
}
function Puerta1Cerrada()
{
    MoveObject(PuertaH1,250.56510925293, 131.54936218262, 1032.2158203125, 0.97);
    if(HaciaArriba == 1) {
    SetTimer("Earriba", 2000, 0); }
    else {
    }
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
    SetPlayerPos(playerid, X, Y, Z);
    SetPlayerFacingAngle(playerid, A);
    SetPlayerInterior(playerid, interiorid);
    SetPlayerVirtualWorld(playerid, worldid);
	Info[playerid][pVW] = interiorid;
	Info[playerid][pInt] = worldid;
}

function TazerTimer(playerid)
{
	if (TazerTimeout[playerid] > 0)
   	{
		new string[128];
   		format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~r~Recargando Tazer... ~w~%d", TazerTimeout[playerid]);
		GameTextForPlayer(playerid, string,1500, 3);
		TazerTimeout[playerid] -= 1;
		SetTimerEx("TazerTimer",1000,false,"d",playerid);
   	}
	return 1;
}

GetPlayerNameEx(playerid) {

	new
		sz_playerName[MAX_PLAYER_NAME],
		i_pos;

	GetPlayerName(playerid, sz_playerName, MAX_PLAYER_NAME);
	while ((i_pos = strfind(sz_playerName, "_", false, i_pos)) != -1) sz_playerName[i_pos] = ' ';
	return sz_playerName;
}

function BikeModel(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 509) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 523) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 471) { return 1; }
	}
	return 0;
}

//Buttons
function CloseChief()
{
	MoveDynamicObject(chief1,229.59960938,119.50000000,1009.21875000,4);
 MoveDynamicObject(chief2,232.59960938,119.53515625,1009.21875000,4);
	return 1;
}
function CloseEastLobby()
{
	MoveDynamicObject(eastlobby1,253.14941406,110.59960938,1002.21502686,4);
	MoveDynamicObject(eastlobby2,253.18457031,107.59960938,1002.21502686,4);
	return 1;
}
function CloseWestLobby()
{
	MoveDynamicObject(westlobby1,239.71582031,116.09179688,1002.21502686,4);
	MoveDynamicObject(westlobby2,239.67968750,119.09960938,1002.21502686,4);
	return 1;
}

function CloseLocker()
{
	MoveDynamicObject(locker1,267.29980469,112.56640625,1003.61718750,4);
 MoveDynamicObject(locker2,264.29980469,112.52929688,1003.61718750,4);
	return 1;
}
function CloseCCTV()
{
	MoveDynamicObject(cctv1,264.44921875,115.79980469,1003.61718750,4);
 MoveDynamicObject(cctv2,267.46875000,115.83691406,1003.61718750,4);
	return 1;
}
function CloseFBILobbyLeft()
{
	MoveDynamicObject(FBILobbyLeft,295.40136719,-1498.43457031,-46.13965225,4);
	return 1;
}
function CloseFBILobbyRight()
{
	MoveDynamicObject(FBILobbyRight,302.39355469,-1521.62988281,-46.13965225,4);
	return 1;
}
function CloseFBIPrivate()
{
	MoveDynamicObject(FBIPrivate[0],299.29986572,-1492.82666016,-28.73300552,4);
	MoveDynamicObject(FBIPrivate[1],299.33737183,-1495.83911133,-28.73300552,4);
	return 1;
}

ExecuteNOPAction(playerid)
{
	NOPTrigger[playerid]++;
	RemovePlayerFromVehicle(playerid);
	new newcar = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPos(playerid, X, Y, Z+2);
	SetVehicleToRespawn(newcar);
	if(NOPTrigger[playerid] >= 1)
	{
		new sec = (NOPTrigger[playerid] * 1000)/1000-1, string[128];
		format(string, sizeof(string), "AdmWarning: %s (ID %d) tal vez es `NOP hacking explote´, (Modelo: %d) por %d segundos.", GetPlayerNameEx(playerid), playerid, GetVehicleModel(newcar),sec);
		ABroadCast(COLOR_ORANGE, string, 2);
		format(string, sizeof(string), "AdmCmd: %s fue expulsado por el servidor, razón: Posible Crasher", GetPlayerNameEx(playerid));
		SendClientMessageToAllEx(COLOR_LIGHTRED, string);
 		SafeDialogEx(playerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Haz sido expulsado del servidor","El Servidor\nte ha expulsado\nRazon: Posible Car Crash","Salir","");
		SetTimerEx("KickxD",500,0,"d",playerid);
	}
	return 1;
}

stock PlayerFacePlayer(playerid, targetplayerid) { // Yeah, this'll fix the handshake headaches we had last time around (shaking air).
	new
		Float: Angle;

	GetPlayerFacingAngle(playerid, Angle);
	SetPlayerFacingAngle(targetplayerid, Angle+180);
	return 1;
}

stock GivePlayerEventWeapons( playerid )
{
	if( GetPVarInt( playerid, "EventToken" ) == 1 )
	{
		GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 0 ], 9999);
		GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 1 ], 9999);
		GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 2 ], 9999);
		GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 3 ], 9999);
		GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 4 ], 9999);
	}
	return 1;
}

function SafeLoadObjects(playerid)
{
	if(GetPVarType(playerid, "LoadingObjects"))
	{
		DeletePVar(playerid, "LoadingObjects");
		TogglePlayerControllable(playerid, 1);
	}
}


function ReFill(playerid)
{
	if(!IsAtGasStation(playerid) || !IsPlayerInAnyVehicle(playerid) || VehicleFuel[GetPlayerVehicleID(playerid)] >= 200 || GetPlayerCash(playerid) < 1)
	{
		StopRefueling(playerid);
	}
	else
	{
	    new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON) return StopRefueling(playerid);
		VehicleFuel[GetPlayerVehicleID(playerid)] += 125; RefuelingVehiclePrice[playerid] += 20;
		if(VehicleFuel[GetPlayerVehicleID(playerid)] >= 200) VehicleFuel[GetPlayerVehicleID(playerid)] = 200;
	}
	return true;
}

stock StopRefueling(playerid)
{
	new string[128];
	GivePlayerCash(playerid, -RefuelingVehiclePrice[playerid]);
	format(string, sizeof(string), "Tu vehiculo a sido llenado por $%d.", RefuelingVehiclePrice[playerid]);
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	TogglePlayerControllable(playerid, 1);

	RefuelingVehicle[playerid] = 0; RefuelingVehiclePrice[playerid] = 0; KillTimer(RefuelingVehicleTimer[playerid]);
	return true;
}

public OnVehicleSpawn(vehicleid)
{
    if(Lamp[vehicleid] == 1)
	{
    	DestroyObject(light[vehicleid]);
        Lamp[vehicleid] = 0;
    }
    VehicleStatus{vehicleid} = 0;
    estacionveh[vehicleid] = 0;
	foreach(Player, i)
	{
	    new v;
	    v = GetPlayerVehicle(i, vehicleid);
	    if (v != -1)
	    {
 			if(PlayerVehicleInfo[i][v][pvId] == vehicleid && GetVehicleModel(vehicleid) != PlayerVehicleInfo[i][v][pvModelId])
	  		{
	   			DestroyVehicle(vehicleid);
				PlayerVehicleInfo[i][v][pvId] = CreateVehicle(PlayerVehicleInfo[i][v][pvModelId], PlayerVehicleInfo[i][v][pvPosX], PlayerVehicleInfo[i][v][pvPosY], PlayerVehicleInfo[i][v][pvPosZ], PlayerVehicleInfo[i][v][pvPosAngle],PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2], -1);
				if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
	            ChangeVehiclePaintjob(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvPaintJob]);
				ChangeVehicleColor(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
                SetVehicleVirtualWorld(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvVW]);
                SetVehicleHealth(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvHealth]);
				//SetVehicleNumberPlate(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvNumberPlate]);
				for(new m = 0; m < MAX_MODS; m++)
	   			{
   					AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
	      		}
 			}
 			else
			{
			    ChangeVehiclePaintjob(vehicleid, PlayerVehicleInfo[i][v][pvPaintJob]);
				ChangeVehicleColor(vehicleid, PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
				SetVehicleVirtualWorld(vehicleid, PlayerVehicleInfo[i][v][pvVW]);
				SetVehicleHealth(vehicleid, PlayerVehicleInfo[i][v][pvHealth]);
				for(new m = 0; m < MAX_MODS; m++)
	            {
  	            	AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
	            }
				if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
			}
			new string[128];
			format(string,sizeof(string),"Tu %s ha sido enviado a la última posición donde lo aparcaste.",GetVehicleName(vehicleid));
			SendClientMessageEx(i, COLOR_GRAD1, string);
		}
	}
 	if(LockStatus[vehicleid])
	{
		foreach(Player, i)
		{
			if(Info[i][pLockCar] == vehicleid)
			{
				Info[i][pLockCar] = INVALID_VEHICLE_ID;
			}
		}
	}
	arr_Engine{vehicleid} = 0;
	VehicleFuel[vehicleid] = 200;
	TruckContents[vehicleid] = 0;
}

function SetPlayerJoinCamera(playerid)
{
InterpolateCameraPos(playerid, 704.9758, -1552.4816, 36.2988,  783.7677, -1679.8702, 35.4873, 15000, CAMERA_MOVE);
InterpolateCameraLookAt(playerid, 705.4279, -1553.3850, 35.8588, 782.8253, -1679.5056, 35.1923, 15000, CAMERA_MOVE);
}

stock IsPlayerInVehicleRadio(playerid, Float:radius)
{
    new Float:r, Float:rr, Float:rrr, Float:rc, Float:rrc, Float:rrrc;
    GetPlayerPos(playerid, r, rr, rrr);
    for(new i; i < MAX_VEHICLES; i++)
    {
        GetVehiclePos(i, rc, rrc, rrrc);
        if(PlayerToPoint(radius,playerid,rc,rrc,rrrc))
        {
            return i;
        }
    }
    return false;
}

stock CleanScreen()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        ClearChatbox(i);
    }
    return 1;
}

function DisableVehicleAlarm(vehicleid)
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

function HospitalFun(playerid)
{
	ClearChatbox(playerid);
	ClearChatbox(playerid);
	if(Info[playerid][pPlan] == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Se te han removido las pertenencias ilegales que tenías.");
		SendClientMessageEx(playerid, COLOR_WHITE, "Te salvaste de milagro, {A2DC35}valora tu vida{FFFFFF}, que tengas buen día.");
		SendClientMessageEx(playerid, COLOR_WHITE, "{48C61B}[PLAN]:{FFFFFF} Como tienes un Plan Médico activo, no se te cobró por la atención médica.");
	}
	else
	{
    	SendClientMessageEx(playerid, COLOR_WHITE, "Se te han removido las pertenencias ilegales que tenías.");
    	SendClientMessageEx(playerid, COLOR_WHITE, "Los gastos por la atención médica recibida fueron de {FF0000}$500{FFFFFF}.");
    	SendClientMessageEx(playerid, COLOR_WHITE, "Te salvaste de milagro, {A2DC35}valora tu vida{FFFFFF}, que tengas buen día.");
    	SendClientMessageEx(playerid, COLOR_WHITE, "{48C61B}NOTA:{FFFFFF} Puedes adquirir un plan médico en el ayuntamiento y no se te cobrará por la atención médica que recibas.");
    	Bought(playerid, 500);
    	Tax += 500;
    }
	SetCameraBehindPlayer(playerid);
	Info[playerid][pCrack] = 0;
	Info[playerid][pDrugs] = 0;
	Info[playerid][pPot] = 0;
	SetPosEx(playerid, 2034.5580,-1412.3188,16.9922,ESTE,0,0);
}

function OtherTimerEx(playerid, type)
{
	if(type == TYPE_GIVEWEAPONTIMER)
	{
	    if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
		{
			SetPVarInt(playerid, "GiveWeaponTimer", GetPVarInt(playerid, "GiveWeaponTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(type == TYPE_GUARDTIMER)
	{
	    if(GetPVarInt(playerid, "GuardTimer") > 0)
	    {
	        SetPVarInt(playerid, "GuardTimer", GetPVarInt(playerid, "GuardTimer")-1);
	        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
	    }
	}
	else if(type == TYPE_FLOODPROTECTION)
	{
 		if( CommandSpamUnmute[playerid] >= 1)
 		{
  			CommandSpamUnmute[playerid]--;
  			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
    	}
	}
	else if(type == TYPE_PAYTIMER)
	{
	    if(GetPVarInt(playerid, "GiveMoneyTimer") > 0)
		{
			SetPVarInt(playerid, "GiveMoneyTimer", GetPVarInt(playerid, "GiveMoneyTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PAYTIMER);
		}
	}
	else if(type == TYPE_GUARDARCUENTA)
	{
	    if(GetPVarInt(playerid, "GuardadoTimer") > 0)
		{
			SetPVarInt(playerid, "GuardadoTimer", GetPVarInt(playerid, "GuardadoTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDARCUENTA);
		}
	}
	else if(type == TYPE_REANIMAR)
	{
	    if(GetPVarInt(playerid, "ReanimadorTimer") > 0)
		{
			SetPVarInt(playerid, "ReanimadorTimer", GetPVarInt(playerid, "ReanimadorTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_REANIMAR);
		}
	}
	else if(type == TYPE_ARMSTIMER)
	{
	    if(GetPVarInt(playerid, "ArmsTimer") > 0)
		{
			SetPVarInt(playerid, "ArmsTimer", GetPVarInt(playerid, "ArmsTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
		}
	}
	else if(type == TYPE_OOC)
	{
	    if(GetPVarInt(playerid, "OOCTimer") > 0)
		{
			SetPVarInt(playerid, "OOCTimer", GetPVarInt(playerid, "OOCTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_OOC);
		}
	}
	else if (type == TYPE_TPPIZZARUNTIMER)
	{
		if(GetPVarInt(playerid, "tpPizzaTimer") > 0 && GetPVarInt(playerid, "Pizza"))
		{
			SetPVarInt(playerid, "tpPizzaTimer", GetPVarInt(playerid, "tpPizzaTimer")-1);
			SetTimerEx("OtherTimerEx", 2000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
		}
	}
	else if(type == TYPE_TPDRUGRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpDrugRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpDrugRunTimer", GetPVarInt(playerid, "tpDrugRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
		}
	}
	if(type == TYPE_TPMATRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpMatRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpMatRunTimer", GetPVarInt(playerid, "tpMatRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		}
	}
	else if(type == TYPE_TPTRUCKRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpTruckRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpTruckRunTimer", GetPVarInt(playerid, "tpTruckRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
		}
	}
	else if (type == TYPE_PIZZATIMER)
	{
	    if(GetPVarInt(playerid, "pizzaTimer") == 0)
		{
            SendClientMessageEx(playerid, COLOR_WHITE, "No lograste entregar la pizza a la casa antes de que se se enfriara!");
            SetPVarInt(playerid, "Pizza", 0);
            DestroyProgressBar(PizzaBar[playerid]);
            DisablePlayerCheckpoint(playerid);
	    }
	    else if (GetPVarInt(playerid, "Pizza") == 0)
	    {
	        DestroyProgressBar(PizzaBar[playerid]);
            DisablePlayerCheckpoint(playerid);
	    }
	    else if (GetPVarInt(playerid, "pizzaTimer") > 0 && GetPVarInt(playerid, "Pizza") > 0)
	    {
			SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTimer")-1);
	        SetProgressBarValue(PizzaBar[playerid], (GetPVarInt(playerid, "pizzaTimer") * 100.0 / GetPVarInt(playerid, "pizzaTotal")));
	        UpdateProgressBar(PizzaBar[playerid], playerid);
	        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
	    }
	}
}

stock IsLocolowVehicle(veh)
{
	new model = GetVehicleModel(veh);
    switch(model)
    {
        case 412,534,535,536,566,567,576: return 1;
    }
    return 0;
}

stock SendReportToQue(reportfrom, report[])
{
    new bool:breakingloop = false, newid = INVALID_REPORT_ID;

        for(new i=0;i<MAX_REPORTS;i++)
        {
                if(!breakingloop)
                {
                        if(Reports[i][HasBeenUsed] == 0)
                        {
                                breakingloop = true;
                                newid = i;
                        }
                }
    }
    if(newid != INVALID_REPORT_ID)
    {
        strmid(Reports[newid][Report], report, 0, strlen(report), 128);
        Reports[newid][ReportFrom] = reportfrom;
        Reports[newid][TimeToExpire] = 5;
        Reports[newid][HasBeenUsed] = 1;
        Reports[newid][BeingUsed] = 1;
        Reports[newid][ReportExpireTimer] = SetTimerEx("ReportTimer", 30000, 0, "d", newid);
        new string[128];
        format(string, sizeof(string), "Reporte de [%i] %s (RID: %i): %s", reportfrom, GetPlayerNameEx(reportfrom), newid, (report));
        ABroadCast(COLOR_REPORT,string, 2);
    }
    else
    {
        ClearReports();
        SendReportToQue(reportfrom, report);
        }
    if(Info[reportfrom][pVIP] >= 4){
        new string[128];
                format(string, sizeof(string), "~r~Reporte VIP: ~g~%d", newid);
                foreach(Player, i){
                    if(Info[i][pAdminZC] >= 2){
                        GameTextForPlayer(i, string, 1500, 1);
                        }
                }
        }
        return 1;
}

function ClearReports()
{
	for(new i=0;i<MAX_REPORTS;i++)
	{
		strmid(Reports[i][Report], "None", 0, 4, 4);
		Reports[i][CheckingReport] = 999;
        Reports[i][ReportFrom] = 999;
        Reports[i][TimeToExpire] = 5;
        Reports[i][HasBeenUsed] = 0;
        Reports[i][BeingUsed] = 0;
	}
	return 1;
}

function ReportTimer(reportid)
{
	if(Reports[reportid][BeingUsed] == 1)
	{
	    if(Reports[reportid][TimeToExpire] > 0)
	    {
	        Reports[reportid][TimeToExpire]--;
	        if(Reports[reportid][TimeToExpire] == 0)
	        {
	            SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_GRAD2, "Tu reporte ha expirado. Tu puedes intentar mandando otro reporte.");
	            SendClientMessageEx(Reports[reportid][ReportFrom], COLOR_GRAD2, "También es recomendable que busques ayuda en nuestro foro www.Perfectcity-rp.com");
	            Reports[reportid][BeingUsed] = 0;
	            Reports[reportid][ReportFrom] = 999;
	            return 1;
	        }
  			Reports[reportid][ReportExpireTimer] = SetTimerEx("ReportTimer", 30000, 0, "d", reportid);
		}
	}
	return 1;
}

function ReplyTimer(reportid)
{
    Reports[reportid][BeingUsed] = 0;
	Reports[reportid][ReportFrom] = 999;
    Reports[reportid][CheckingReport] = 999;
}

/*ReadyToCapture(pointid)
{
	new string[128];
	//if(Points[pointid][Type] == 3 && Points[pointid][Type] == 4) return 1;
	format(string, sizeof(string), "%s está disponible para capturar! En el punto escribe /capturar!", Points[pointid][Name]);
	Points[pointid][CaptureProccess] = Create3DTextLabel(string, COLOR_POINTGEN, Points[pointid][Pointx], Points[pointid][Pointy], Points[pointid][Pointz]+0.6, 10.0, 0, 0);
	Points[pointid][CaptureProccessEx] = 1;
	return 1;
}

function CaptureTimer(point)
{
	new string[128];
	new fam;
	if (Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
	{
		new claimer = Points[point][ClaimerId];
		new Float: x, Float: y, Float: z;
		GetPlayerPos(claimer, x, y, z);
		if (Points[point][Capturex] != x || Points[point][Capturey] != y || Points[point][Capturez] != z || GetPVarInt(Points[point][ClaimerId],"Injured") == 1)
		{
			SendClientMessageEx(Points[point][ClaimerId], COLOR_LIGHTBLUE, "No pudiste capturar el punto, te moviste o te moriste mientras intentabas capturar.");
			Points[point][ClaimerId] = INVALID_PLAYER_ID;
			Points[point][TimeToClaim] = 0;
		}
		else
		{
			if(Points[point][Vulnerable] > 0)
			{
			    SendClientMessageEx(Points[point][ClaimerId], COLOR_LIGHTBLUE, "No pudiste capturar, el punto ya fue capturado.");
				Points[point][ClaimerId] = INVALID_PLAYER_ID;
				Points[point][TimeToClaim] = 0;
				return 1;
			}
			fam = Info[claimer][pFMember];
            Points[point][PlayerNameCapping] = GetPlayerNameEx(claimer);
		   	format(string, sizeof(string), "%s ha intentado tomar el control de %s por %s, será de ellos en %d minutos.", Points[point][PlayerNameCapping], Points[point][Name], fINFO[fam][FamilyName], TIME_TO_TAKEOVER);
			SendClientMessageToAllEx(COLOR_POINTGEN, string);
			if(Points[point][CaptureProccessEx] >= 1)
			{
				Update3DTextLabelText(Points[point][CaptureProccess], COLOR_POINTGEN, string);
				Points[point][CaptureProccessEx] = 2;
			}
			Points[point][TakeOverTimerStarted] = 1;
			Points[point][TakeOverTimer] = 5;
			Points[point][ClaimerId] = INVALID_PLAYER_ID;
			Points[point][ClaimerTeam] = fam;
			Points[point][TimeToClaim] = 0;
			if(Points[point][CaptureTimerEx2] != -1) KillTimer(Points[point][CaptureTimerEx2]);
			Points[point][CaptureTimerEx2] = SetTimerEx("CaptureTimerEx", 60000, 1, "d", point);
		}
	}
	return 1;
}
function ProgressTimer(point)
{
	if (Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
	{
	    Points[point][TimeLeft]--;
		SetProgressBarValue(Points[point][PointBarID], GetProgressBarValue(Points[point][PointBarID])-10.0);
		UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		if(GetProgressBarValue(Points[point][PointBarID]) >= 10) SetTimerEx("ProgressTimer", 1000, 0, "d", point);
		new string[128];
		format(string, sizeof(string), "%s está tratando de capturar el punto, tiempo restante: %d", GetPlayerNameEx(Points[point][ClaimerId]), Points[point][TimeLeft]);
		if(Points[point][TimeLeft] == 9) Points[point][CaptureProgress] = CreateDynamic3DTextLabel(string, COLOR_RED, Points[point][Pointx], Points[point][Pointy], Points[point][Pointz]+1.0, 10.0);
				else if(Points[point][TimeLeft] < 9 && Points[point][TimeLeft] >= 0) UpdateDynamic3DTextLabelText(Points[point][CaptureProgress], COLOR_RED, string);

		if(GetProgressBarValue(Points[point][PointBarID]) == 50.0)
		{
		    SetProgressBarColor(Points[point][PointBarID], COLOR_YELLOW);
		    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		}
		else if(GetProgressBarValue(Points[point][PointBarID]) == 20.0)
		{
		    SetProgressBarColor(Points[point][PointBarID], COLOR_RED);
		    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		}
		else if(GetProgressBarValue(Points[point][PointBarID]) <= 0.0 && Points[point][TimeLeft] <= 0)
		{
		    CaptureTimer(point);
		    Points[point][TimeLeft] = 0;
		    DestroyProgressBar(Points[point][PointBarID]);
		    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
		}
	}
	else
	{
	    DestroyProgressBar(Points[point][PointBarID]);
	    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
	    Points[point][ClaimerId] = INVALID_PLAYER_ID;
		Points[point][TimeToClaim] = 0;
	}
	return 1;
}

function CaptureTimerEx(point)
{
	new string[128];
	new fam;
	if (Points[point][TakeOverTimerStarted])
	{
		fam = Points[point][ClaimerTeam];
		if (Points[point][TakeOverTimer] > 0)
		{
			Points[point][TakeOverTimer]--;
			format(string, sizeof(string), "%s ha intentado tomar el control de %s por %s, será de ellos en %d minutos!",
			Points[point][PlayerNameCapping], Points[point][Name], fINFO[fam][FamilyName], Points[point][TakeOverTimer]);
			Update3DTextLabelText(Points[point][CaptureProccess], COLOR_POINTGEN, string);
		}
		else
		{
			Points[point][ClaimerTeam] = INVALID_PLAYER_ID;
			Points[point][TakeOverTimer] = 0;
			Points[point][TakeOverTimerStarted] = 0;
			Points[point][Announced] = 0;
			Points[point][Vulnerable] = NEW_VULNERABLE;
			Delete3DTextLabel(Points[point][CaptureProccess]);
			Points[point][CaptureProccessEx] = 0;
			strmid(Points[point][Owner], fINFO[fam][FamilyName], 0, 32, 32);
			strmid(Points[point][CapperName], Points[point][PlayerNameCapping], 0, 32, 32);
			format(string, sizeof(string), "%s ha tomado correctamente el control de %s por %s.", Points[point][CapperName], Points[point][Name], Points[point][Owner]);
			SendClientMessageToAllEx(COLOR_POINTGEN, string);
			UpdatePoints();
			KillTimer(Points[point][CaptureTimerEx2]);
			Points[point][CaptureTimerEx2] = -1;
  	for(new i = 0; i < sizeof(fINFO); i++)
			{
				if(strcmp(Points[point][Owner], fINFO[i][FamilyName], true) == 0)
				{
				fINFO[i][FamilyBank] += 15000;
				}
			}
		}
	}
}*/

// CHECK VIP EXPIRE
CheckVIPExpire(playerid){
   	print("DEBUG CheckVIPExpire");
   	new year, month,day;
   	getdate(year, month, day);
   	if(Info[playerid][pVIP] == 0){
	   Info[playerid][pVIPDateD] = -1;
	   Info[playerid][pVIPDateM] = -1;
	   return 1;
	}
	if(Info[playerid][pVIPDateD] >= 1 && Info[playerid][pVIPDateM] >= 1){
    	if(Info[playerid][pVIP] >= 1 && Info[playerid][pBuddyInvited] == 0){

	    	if(day >= Info[playerid][pVIPDateD] && Info[playerid][pVIPDateM] == 12 && month != 12){
	    	    //print("DEBUG: DICIEMBRE EXPLOIT [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "Perfect City: {FFFFFF} {FFFFFF}Tu VIP ha expirado, puedes hacer tu orden de renovación ahora mismo.");
			}
			if(day >= Info[playerid][pVIPDateD] && month >= Info[playerid][pVIPDateM]){
                //print("DEBUG: NORMAL [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "Perfect City: {FFFFFF} {FFFFFF}Tu VIP ha expirado, puedes hacer tu orden de renovación ahora mismo.");
			}
			if(Info[playerid][pVIPDateD] >= 30 && month > Info[playerid][pVIPDateM]){
			    //print("DEBUG: Si es 30 y pasó el mes [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "Perfect City: {FFFFFF} {FFFFFF}Tu VIP ha expirado, puedes hacer tu orden de renovación ahora mismo.");
			}
		}
	}
	return 1;
}

stock IsWAAVehicle(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
    {
        case 558,559,560,561,562,565: return 1;
    }
    return 0;
}

function RadioBroadCast(playerid, color, string[])
{
	new MiscString[128], Float: aaaPositions[3];
	foreach(Player, i)
	{
		if(Info[i][pRadioFreq] == Info[playerid][pRadioFreq] && Info[i][pRadio] >= 1 && gRadio[i] != 0)
		{
			GetPlayerPos(i, aaaPositions[0], aaaPositions[1], aaaPositions[2]);
			format(MiscString, sizeof(MiscString), "** Radio (%d khz) ** %s: %s", Info[playerid][pRadioFreq], GetPlayerNameEx(playerid), string);
			SendClientMessageEx(i, PUBLICRADIO_COLOR, MiscString);
			format(MiscString, sizeof(MiscString), "(radio) %s", string);
			SetPlayerChatBubble(playerid,MiscString,COLOR_WHITE,15.0,5000);
		}
	}
}

function ShowRol(playerid)
{
	if(ShowRules[playerid] == 1)
	{
	    switch(RulesTime[playerid])
	    {
	        case 1:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
	        	gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1; gNewbie[playerid]=1;
	        	SetPlayerVirtualWorld(playerid, playerid+1);
	        	TogglePlayerControllable(playerid, 0);
				Streamer_UpdateEx(playerid,370.0804,-2087.8767,7.8359);
				SetPlayerPos(playerid,370.0804,-2087.8767,-10.0);
				SetPlayerCameraPos(playerid,423.3802,-2067.7915,29.8605);
				SetPlayerCameraLookAt(playerid,370.0804,-2087.8767,7.8359);
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Hola! Bienvenido al tutorial, esperamos que aprendas y te diviertas junto a todos.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Un administrador te envió al tutorial con el fin de ayudarte a aprender y a disfrutar el roleplay.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Pulsa la tecla ESPACIO para seguir.");

			}
	        case 2:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "DeathMatch [DM]");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es DeathMatch [DM]? Bueno esto se llama a matar o golpear a una persona sin tener una razon para hacerlo.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Un ejemplo, si vas por la calle y empiezas a pegarle o a dispararle a alguien sin tener ninún motivo");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "hasta matarlo, la persona te reportará y tu puedes ser encarcelado por 10 a 30 minutos.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Haciendo esto estarias haciendo DeathMatch y va en contra las reglas del servidor.");
	        }
	        case 3:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Metagaming [MG]");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Metagaming [MG]? Es usar información OOC dentro de IC o viceversa ¿No te quedo muy claro no?");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "bueno, como verás cada usuario tiene un nombre en su cabeza, es obvio que en la vida real no pasa lo mismo");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "para saber su nombre tienes que preguntarle; Hola ¿Cual es tu nombre? y el te responderá, desde ese momento ya");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "puedes llamarlo por su nombre. También es usar signos de caracteres en el chat IC (xD, :), xP, etc).");
	        }
	        case 4:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 13000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "In Character - Out of Character (IC - OOC)");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "IC : Es la información que tu personaje obtiene en su vida (In Game), y sólo tu personaje la sabe.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "OOC: Es la información que tu sabes como persona, la que está manejando el personaje desde tu computador.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Por eso es que no puedes mezclar información IC con OOC o viceversa. Por que estarías haciendo Metagaming.");
	        }
	        case 5:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Powergaming [PG]");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Powergaming [PG]? Esto se llama a realizar actos (roles) ficticios y fuera de lo posible en la vida real.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Por ejemplo, Usas el comando /me se tira del edificio y sige caminando. Es lógico que tu no vas a tirarte");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "de un quinto piso y salir vivo no?. También es obligar/forzar a una persona hacer un ROL.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Por ejemplo, usando el comando /me le roba su dinero y se va corriendo. Imposible, para rolear tienes que tener criterio.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Recuerda eres un personaje REAL y tienes que portate como tal.");
	        }
	        case 6:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Revenge Kill (RK)");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Revenge Kill [RK]? Cuando `mueres´ en un ROL (Asalto a un banco, guerra de pandillas, etc)");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "tu no puedes regresar al mismo lugar y vengarte a por quien te mató, ya que tu exactamente no mueres, resultas herido");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "y cuando te recuperas no recuerdas nada, entonces no puedes volver al mismo lugar, ya que no recuerdas nada.");
	        }
	        case 7:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Bad Driving (BD) - Badly Parked Car (BPC)");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Bad Driving (BD) y Badly Parked Car (BPC)?");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Esto es muy sencillo y creo que su mismo nombre lo dice, se llama a manejar incorrectamente (por las veredas, atropellando gente, etc),");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "y es en contra las reglas del servidor, recuerda que estás simulando la vida real.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Badly Parked Car se define en estacionar tu vehiculo de una manera imposible, o No-RP, por ejemplo en medio del asfalto.");
	        }
	        case 8:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Car Kill - Car Jack");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Car Kill (CK) y Car Jack (CJ)?");
	        	SendClientMessageEx(playerid, COLOR_WHITE, " * Car Kill es matar a una persona atropellandolo en varias ocaciones hasta matarlo.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, " * Car Jack es sacar a una persona de su auto sin ningún rol alguno.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, " * Esos 2 Terminos son en contra del servidor y puedes ser castigado.");
	        }
	        case 9:
	        {
	            ClearChatbox(playerid);
	        	PuedeD[playerid] = 1;
	        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
	        	SendClientMessageEx(playerid, COLOR_GENERAL, "Fin - Reglas de Rol");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Bien, espero que hayas aprendido en este resumen de las reglas de nuestro servidor, puedes entrar a nuestro");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "foro (Perfectcity-rp.com) y buscar más información, ahora volverás a tu posición anterior, no perderás nada.");
	        	SendClientMessageEx(playerid, COLOR_WHITE, "Recuerda siempre que más importante es el rol de un presonaje. Bienvenido y disfruta del servidor!");
	        }
	        case 10:
	        {
	            ClearChatbox(playerid);
	            gNewbie[playerid]=1; gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; RulesTime[playerid] = 0; RulesTime[playerid] = 0;
				SetPlayerPos(playerid, GetPVarFloat(playerid, "rOldX"), GetPVarFloat(playerid, "rOldY"), GetPVarFloat(playerid, "rOldZ"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "rOldVW"));
				SetPlayerInterior(playerid, GetPVarInt(playerid, "rOldInt"));
				Info[playerid][pVW] = GetPVarInt(playerid, "rOldVW");
				Info[playerid][pInt] = GetPVarInt(playerid, "rOldInt");
		        TogglePlayerControllable(playerid, 1);
		        ClearAnimations(playerid);
		        SetCameraBehindPlayer(playerid);
	        }
		}
	}
	return 1;
}

function TutRolTimer(playerid)
{
	PuedeD[playerid] = 0;
	GameTextForPlayer(playerid, "Pulsa ESPACIO", 2000, 3);
}
CreateTextDrawTutorial(playerid)
{
	TextTut[playerid] =
	TextDrawCreate			(175.500000, 160.719985, "Bienvenido");
	TextDrawLetterSize		(TextTut[playerid], 0.212498, 1.532799);
	TextDrawAlignment		(TextTut[playerid], 1);
	TextDrawColor			(TextTut[playerid], -1);
	TextDrawSetShadow		(TextTut[playerid], 0);
	TextDrawSetOutline		(TextTut[playerid], 1);
	TextDrawBackgroundColor	(TextTut[playerid], 51);
	TextDrawFont			(TextTut[playerid], 1);
	TextDrawSetProportional	(TextTut[playerid], 1);
	TextDrawShowForPlayer	(playerid, TextTut[playerid]);
}
DestroyTextDrawTutorial(playerid)
{
    TextDrawHideForPlayer	(playerid, TextTut[playerid]);
	TextDrawDestroy			(TextTut[playerid]);
}
function Tutorial_Inside(playerid) // Tutorial optimizado
{
	new string[512];
	if(TutStep[playerid] == 1)
	{
		if(TutTime[playerid] >= 1)
		{
			switch (TutTime[playerid])
			{
				case 1:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
					ClearChatbox(playerid);
				    CreateTextDrawTutorial(playerid);
					for(new p = 0; p < 4; p++){ TextDrawShowForPlayer(playerid, TutTxt[p]); }
				    gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1; gNewbie[playerid]=1;
                    InterpolateCameraPos(playerid, 148.1241, -1856.0055, 7.7307, 148.1241, -1856.0055, 7.7307, 3000);
                    InterpolateCameraLookAt(playerid, 148.2032, -1855.0042, 7.2907, 148.6079, -1856.8859, 7.8457, 3000);
                    SetPlayerPos(playerid,148.1241, -1856.0055, 7.7307);
                    Streamer_UpdateEx(playerid,148.1241, -1856.0055, 7.7307);
                    SetPlayerVirtualWorld(playerid, 0);
                    TogglePlayerControllable(playerid, 0);
	    			format(string, sizeof(string), 		"Bienvenido a este servidor de Modo Roleplay, es muy importante~n~\
														 que te registres y visites nuestro foro para que obtengas informacion que~n~\
														 necesites, tambien recuerda que tenemos administradores que pueden ayudarte~n~\
														 en cualquier duda o problema que tengas.~n~\
														 Puedes usar el comando ~y~/duda ~w~para hacer una pregunta a nuestro staff.");
					TextDrawSetString(TextTut[playerid], string);

				}
				case 2:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 724.5404, -1565.0773, 6.3878, 743.6802, -1672.9032, 23.9621, 3000);
                    InterpolateCameraLookAt(playerid, 724.6097, -1566.0796, 6.3928, 743.1426, -1672.0546, 23.5721, 3000);
                    SetPlayerPos(playerid,724.5404, -1565.0773, 6.3878);
                    Streamer_UpdateEx(playerid,724.5404, -1565.0773, 6.3878);
					format(string, sizeof(string), 		"Bien, comenzemos con algo sencillo, el modo del Servidor es Roleplay~n~\
														Este se basa en dar vida a tu personaje y simularlo perfectamente como lo~n~\
														harias en la vida real, tambien existen reglas que tienes que aprender para~n~\
														evitar ser sancionado. Tienes que adaptarte al rol que tendra tu personaje.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 3:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 2251.6497, -2220.1519, 27.5478, 2269.4307, -2201.9316, 37.4711, 3000);
                    InterpolateCameraLookAt(playerid, 2250.6616, -2219.9680, 27.2428, 2268.6938, -2202.6147, 37.0660, 3000);
                    SetPlayerPos(playerid,2251.6497, -2220.1519, 27.5478);
                    Streamer_UpdateEx(playerid,2251.6497, -2220.1519, 27.5478);
					format(string, sizeof(string), 		"Tambien existen muchas formas de ganar dinero, principalmente a traves de~n~\
														los diversos trabajos que se encuentran distribuidos por toda la ciudad, ~n~\
														para buscarlos solo tienes que ir a los mapas y usar el comando ~y~/vermapa.~n~~n~\
														~h~~w~Puedes usar el comando /ayuda para mas informacion.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 4:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 2197.5686, -1149.5341, 48.5785, 2199.3291, -1136.0958, 44.7296, 3000);
                    InterpolateCameraLookAt(playerid, 2198.5344, -1149.8109, 48.1385, 2198.9976, -1135.1473, 44.6446, 3000);
                    SetPlayerPos(playerid,2197.5686, -1149.5341, 48.5785);
                    Streamer_UpdateEx(playerid,2197.5686, -1149.5341, 48.5785);
					format(string, sizeof(string), 		"Las familias y bandas nacen dentro de la ciudad, para ello se necesita una~n~\
														 historia y rol clara de la misma y postularla en nuestro foro, si tiene buena~n~\
														 reputación podrá ser convertida en facción, estas siempre tratan de ser conocidas~n~\
	 													 en la ciudad y para ingresar en una puedes rolear con ellos en sus negocios o barrios.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 5:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 2150.1799, -1117.8855, 39.1392, 2179.4429, -1198.9844, 39.1392, 3000);
                    InterpolateCameraLookAt(playerid, 2149.3281, -1118.4172, 38.5042, 2178.6575, -1198.3594, 38.6392, 3000);
                    SetPlayerPos(playerid,2150.1799, -1117.8855, 39.1392);
                    Streamer_UpdateEx(playerid,2150.1799, -1117.8855, 39.1392);
					format(string, sizeof(string), 		"Tambien existen diversos concesionarios donde podras adquirir tu vehiculo,~n~\
														 solo tienes que subir a un vehiculo del lugar y seguir las indicaciones~w~.~n~\
														 Es posible tener hasta 4 vehiculos, tambien puedes adquirir un seguro de traba~n~\
														 para evitar que te los roben, en las tiendas ~y~24/7~w~.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 6:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    SetPlayerPos(playerid,1387.5209,-1269.4641,37.1565);
	                InterpolateCameraPos(playerid, 1298.506591, -1290.417846, 54.651672, 1322.438720, -1283.208251, 40.679603, 3000);
	                InterpolateCameraLookAt(playerid, 1301.642211, -1287.030395, 52.729793, 1326.991577, -1282.590209, 38.707355, 3000);
	                Streamer_UpdateEx(playerid,1387.5209,-1269.4641,37.1565);
					format(string, sizeof(string), 		"La defensa personal es muy importante, existen varias tiendas de armas para comprar~n~\
														 de forma legal, tambien se pueden adquirir ilegalemente al igual que puedes ir a la~n~\
														 segunda planta del local para jugar partidas de PaintBall con tus amigos.~n~~n~\
														 ~w~Nota: ~r~Recuerda que tienes restriccion de armas las 2 primeras horas de juego.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 7:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    SetPlayerPos(playerid,2257.4529,-1677.5936,36.3233);
                    InterpolateCameraPos(playerid, 2283.090087, -1648.484375, 32.701992, 2263.932617, -1657.526977, 24.980293, 3000);
                    InterpolateCameraLookAt(playerid, 2278.778076, -1646.055786, 31.989580, 2259.914306, -1659.860595, 23.134399, 3000);
                    Streamer_UpdateEx(playerid,2257.4529,-1677.5936,36.3233);
					format(string, sizeof(string), 		"Tu apariencia lo vale todo, existen varias tiendas de ropa en la ciudad en donde~n~\
														 podras adquirir varias vestimentas y prendas a un buen precio, existen gran~n~\
														 variedad de tiendas como Binco, Pro-Laps, ZIP, Victim y Sub-Urban.~n~~n~\
														 ~b~Comandos: ~w~/cropa y /ctoys.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 8:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    Streamer_UpdateEx(playerid, 1564.1481,-1673.1346,52.0905);
                    InterpolateCameraPos(playerid, 1505.785156, -1651.219726, 54.730693, 1512.489868, -1685.406860, 38.450412, 3000);
                    InterpolateCameraLookAt(playerid, 1508.276123, -1648.697875, 51.204315, 1516.743652, -1684.369262, 36.036163, 3000);
                    SetPlayerPos(playerid, 1564.1481,-1673.1346,52.0905);
					format(string, sizeof(string), 		"Las fuerzas de la ley estan para la tranquilidad de cada ciudadano, recuerda que~n~\
														 si cometes un crimen puedes quedar como buscado en el sistema del gobierno o~n~\
														 ser arrestado, puedes contactar con ellos en el juego para obtener tu licencia de~n~\
														 armas y tambien para ser parte de ellos.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 9:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    Streamer_UpdateEx(playerid,1960.1655, -1461.3805, 31.4371);
                    SetPlayerPos(playerid, 1960.1655, -1461.3805, 31.4371);
                    InterpolateCameraPos(playerid, 1960.1655, -1461.3805, 31.4371, 1999.9570, -1477.2595, 31.4371, 3000);
                    InterpolateCameraLookAt(playerid, 1959.9240, -1462.3495, 31.1272, 2000.3405, -1476.3373, 31.2522, 3000);
					format(string, sizeof(string), 		"Si resultas herido puedes usar los /servicios medicos y esperar que una ambulancia~n~\
														 de SAMD llegue por ti. Cuando te den de alta, conficaran todo lo ilegal que tenias.~n~\
														 Puedes unirte a ellos contactandolos en el juego.~n~~n~\
														 Tambien puedes comprar planes medicos en el ayuntamiento.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 10:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    TogglePlayerControllable(playerid, 0);
                    Streamer_UpdateEx(playerid,1496.9926,-1665.6772,14.0469);
                    SetPlayerCameraPos(playerid,1413.4297, -1477.2891, 343.0046);
                    SetPlayerCameraLookAt(playerid,1480.3210,-1782.5449,39.5468);
                    SetPlayerPos(playerid,1413.9030, -1476.4097, 342.5700);
					format(string, sizeof(string), 		"~r~Reglas basicas~n~\
														 ~w~| No DeathMatch - No matar personas sin razon alguna o por diversion.~n~\
														 | No PowerGaming - No cometer actos fuera de la realidad.~n~\
														 | No MetaGaming - No usar informacion OOC/FP para benefico IC/DP.~n~\
														 | No desconectarse en una situacion de Rol, seras sancionado.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 11:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
					format(string, sizeof(string), 		"~r~VIP - Informacion~n~\
														 ~w~Contamos con un sistema de Premium que puedes adquirir siguiendo las~n~\
														 indicaciones en nuestro foro, en la cual obtendras muchos beneficios. . .~n~~n~\
														 ~g~Recuerda que con esta compra estas ayudando con los gastos del servidor.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 12:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    format(string, sizeof(string),          "~w~Dar las gracias a quien hace posible todo esto.~n~\
                                                                                             | ~y~Scripters : 	~w~Jack_Williams.~n~\
                                                                                             | ~y~Mappers: 		~w~Jack_Williams.~n~\
                                                                                             | ~y~Webmasters: 	~w~Nadie.~n~\
                                                                                             | ~y~Hoster: 		~w~Jack_Williams.~n~\
                                                                                             | ~y~Agradecimientos: ~w~Kye/Kalcor por SA-MP.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 13:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
					format(string, sizeof(string), 		"Fin del tutorial, esperamos que tengas una idea de como funciona este servidor~n~\
														 y como puedes aprovechar al maximo la experiencia del Role Play.~n~\
														 Si tienes otra duda puedes ingresar a nuestro foro que esta abajo.~n~\
														 Si ves algun jugador sospechoso no dudes en reportarlo, usando el comando~n~\
														 ~y~/re id razon~w~.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 14:
				{
				    DestroyTextDrawTutorial(playerid);
					for(new p = 0; p < 4; p++){TextDrawHideForPlayer(playerid, TutTxt[p]);}
  		 			SetTimerEx("TEST_ROL", 3000, 0, "d", playerid);
   				 	GameTextForPlayer(playerid, "CARGANDO TEST DE ROL",3000,5);
   				}
			}
		}
	}
	return 1;
}

public OnPlayerInteriorChange(playerid,newinteriorid,oldinteriorid){
	if(gPlayerLogged{playerid} && gPlayerSpawned[playerid] && GetPVarInt(playerid, "EventToken") == 0){
		Info[playerid][pInt] = newinteriorid;
	}
	Streamer_Update(playerid);
}

hackerTrigger(playerid,newweapon){
	if(!gPlayerLogged{playerid}) { return 1; }
	if(Info[playerid][pTut] == 0) { return 1; }
	if(GetPVarInt(playerid, "IsInArena") == 1) { return 1; }

	new	reason[94],string[94];
	format(string, sizeof(string), "AdmWarning: {FFFFFF}%s -  Weapon Hacking (%s).", GetPlayerNameEx(playerid), WeaponNames[newweapon]);
	ABroadCast(COLOR_ORANGE,string, 2);
	format(string, sizeof(string), "AdmCmd: %s fue expulsado por el servidor, razón: weapon hack", GetPlayerNameEx(playerid));
		SendClientMessageToAllEx(COLOR_LIGHTRED, string);
 		SafeDialogEx(playerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Has sido expulsado del servidor","El Servidor\nte ha expulsado\nRazon: Weapon Hack","Salir","");
		SetTimerEx("KickxD",500,0,"d",playerid);

 	format(reason, sizeof(reason), "Weapon Hacking (%s).", WeaponNames[newweapon]);
	return 1;
}
stock scriptBan(playerid, reason[]){
	new ip[32], aString[128];
	Info[playerid][pBannedZC] = 2;
   	format(aString, sizeof(aString), "Perfect City: {FFFFFF} %s fue baneado, razón: %s", GetPlayerNameEx(playerid), reason);
   	SendClientMessageToAllEx(COLOR_LIGHTRED, aString);
   	GetPlayerIp(playerid,ip,sizeof(ip));
   	format(aString, sizeof(aString),"Perfect City: {FFFFFF} %s fue baneado, razón: %s (IP: %d)", GetPlayerNameEx(playerid), reason, ip);
   	Log("logs/ban.log", aString);
   	++TotalAutoBan;
	AddBan(ip);
	Kick(playerid);
	return 1;
}
OnPlayerChangeWeapon(playerid, newweapon)
{
	if(InsideMainMenu[playerid] == 1) { Kick(playerid); }
	if(gPlayerLogged{playerid}){
		if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0){
			if(GetPlayerWeapon(playerid) >= 1 && GetPlayerState(playerid) == 1){
			//if(Info[playerid][pWeapons][0] != 1 && GetPlayerWeapon(playerid) == 1) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 2 && GetPlayerWeapon(playerid) == 2) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 3 && GetPlayerWeapon(playerid) == 3) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 4 && GetPlayerWeapon(playerid) == 4) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 5 && GetPlayerWeapon(playerid) == 5) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 6 && GetPlayerWeapon(playerid) == 6) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 7 && GetPlayerWeapon(playerid) == 7) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 8 && GetPlayerWeapon(playerid) == 8) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][1] != 9 && GetPlayerWeapon(playerid) == 9) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][2] != 22 && GetPlayerWeapon(playerid) == 22) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][2] != 23 && GetPlayerWeapon(playerid) == 23) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][2] != 24 && GetPlayerWeapon(playerid) == 24) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][3] != 25 && GetPlayerWeapon(playerid) == 25) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][3] != 26 && GetPlayerWeapon(playerid) == 26) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][3] != 27 && GetPlayerWeapon(playerid) == 27) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][4] != 28 && GetPlayerWeapon(playerid) == 28) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][4] != 29 && GetPlayerWeapon(playerid) == 29) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][4] != 32 && GetPlayerWeapon(playerid) == 32) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][5] != 30 && GetPlayerWeapon(playerid) == 30) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][5] != 31 && GetPlayerWeapon(playerid) == 31) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][6] != 33 && GetPlayerWeapon(playerid) == 33) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][6] != 34 && GetPlayerWeapon(playerid) == 34) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][7] != 35 && GetPlayerWeapon(playerid) == 35) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][7] != 36 && GetPlayerWeapon(playerid) == 36) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][7] != 37 && GetPlayerWeapon(playerid) == 37) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][7] != 38 && GetPlayerWeapon(playerid) == 38) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][8] != 16 && GetPlayerWeapon(playerid) == 16) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][8] != 17 && GetPlayerWeapon(playerid) == 17) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][8] != 18 && GetPlayerWeapon(playerid) == 18) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][8] != 39 && GetPlayerWeapon(playerid) == 39) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][9] != 41 && GetPlayerWeapon(playerid) == 41) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][9] != 42 && GetPlayerWeapon(playerid) == 42) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][9] != 43 && GetPlayerWeapon(playerid) == 43) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 10 && GetPlayerWeapon(playerid) == 10) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 11 && GetPlayerWeapon(playerid) == 11) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 12 && GetPlayerWeapon(playerid) == 12) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 13 && GetPlayerWeapon(playerid) == 13) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 14 && GetPlayerWeapon(playerid) == 14) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][10] != 15 && GetPlayerWeapon(playerid) == 15) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][11] != 44 && GetPlayerWeapon(playerid) == 44) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][11] != 45 && GetPlayerWeapon(playerid) == 45) hackerTrigger(playerid,newweapon);
			//if(Info[playerid][pWeapons][11] != 46 && GetPlayerWeapon(playerid) == 46) hackerTrigger(playerid,newweapon);
			if(Info[playerid][pWeapons][12] != 40 && GetPlayerWeapon(playerid) == 40) hackerTrigger(playerid,newweapon);
			}
		}
	}
}
stock fcreate(filename[]){
	if (fexist(filename)) return false;
	new File:fhnd;
	fhnd=fopen(filename,io_write);
	if (fhnd) {
		fclose(fhnd);
		return true;
	}
	return false;
}

function splits(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}

function DrinkCooldown(playerid)
{
    SetPVarInt(playerid, "DrinkCooledDown", 1);
    return 1;
}

function ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nadie");
		strmid(Info[playerid][pMarriedTo], string, 0, strlen(string), 255);
		Info[playerid][pMarried] = 0;
	}
	return 1;
}

function ClearHouse(houseid)
{
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hSafeMoney] = 0;
	HouseInfo[houseid][hPot] = 0;
	HouseInfo[houseid][hCrack] = 0;
	HouseInfo[houseid][hMaterials] = 0;
	HouseInfo[houseid][hWeapons][0] = 0;
	HouseInfo[houseid][hWeapons][1] = 0;
	HouseInfo[houseid][hWeapons][2] = 0;
	HouseInfo[houseid][hWeapons][3] = 0;
	HouseInfo[houseid][hWeapons][4] = 0;
	HouseInfo[houseid][hGLUpgrade] = 1;
	/*  Muebles a la puta calle	*/
	if(HouseInfo[houseid][hMuebleId][0] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][0]);
	}
	if(HouseInfo[houseid][hMuebleId][1] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][1]);
	}
	if(HouseInfo[houseid][hMuebleId][2] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][2]);
	}
	if(HouseInfo[houseid][hMuebleId][3] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][3]);
	}
	if(HouseInfo[houseid][hMuebleId][4] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][4]);
	}
	if(HouseInfo[houseid][hMuebleId][5] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][5]);
	}
	if(HouseInfo[houseid][hMuebleId][6] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][6]);
	}
	if(HouseInfo[houseid][hMuebleId][7] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][7]);
	}
	if(HouseInfo[houseid][hMuebleId][8] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][8]);
	}
	if(HouseInfo[houseid][hMuebleId][9] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][9]);
	}
	if(HouseInfo[houseid][hMuebleId][10] > 0){
 		DestroyDynamicObject(HouseInfo[houseid][hMuebleId][10]);
	}
         	HouseInfo[houseid][hMuebles][0] = 0;
			HouseInfo[houseid][hMueblesPOSX][0] = 0;
			HouseInfo[houseid][hMueblesPOSY][0] = 0;
			HouseInfo[houseid][hMueblesPOSZ][0] = 0;
			HouseInfo[houseid][hMueblesPOSRy][0] = 0;
            HouseInfo[houseid][hMueblesPOSRx][0] = 0;
            HouseInfo[houseid][hMueblesPOSRz][0] = 0;

            HouseInfo[houseid][hMuebles][1] = 0;
           	HouseInfo[houseid][hMueblesPOSX][1] = 0;
			HouseInfo[houseid][hMueblesPOSY][1] = 0;
			HouseInfo[houseid][hMueblesPOSZ][1] = 0;
            HouseInfo[houseid][hMueblesPOSRx][1] = 0;
            HouseInfo[houseid][hMueblesPOSRy][1] = 0;
            HouseInfo[houseid][hMueblesPOSRz][1] = 0;

			HouseInfo[houseid][hMuebles][2] = 0;
			HouseInfo[houseid][hMueblesPOSX][2] = 0;
			HouseInfo[houseid][hMueblesPOSY][2] = 0;
			HouseInfo[houseid][hMueblesPOSZ][2] = 0;
			HouseInfo[houseid][hMueblesPOSRx][2] = 0;
			HouseInfo[houseid][hMueblesPOSRy][2] = 0;
			HouseInfo[houseid][hMueblesPOSRz][2] = 0;

			HouseInfo[houseid][hMuebles][3] = 0;
			HouseInfo[houseid][hMueblesPOSX][3] = 0;
			HouseInfo[houseid][hMueblesPOSY][3] = 0;
			HouseInfo[houseid][hMueblesPOSZ][3] = 0;
			HouseInfo[houseid][hMueblesPOSRz][3] = 0;
			HouseInfo[houseid][hMueblesPOSRy][3] = 0;
			HouseInfo[houseid][hMueblesPOSRx][3] = 0;

			HouseInfo[houseid][hMuebles][4] = 0;
			HouseInfo[houseid][hMueblesPOSX][4] = 0;
			HouseInfo[houseid][hMueblesPOSY][4] = 0;
			HouseInfo[houseid][hMueblesPOSZ][4] = 0;
			HouseInfo[houseid][hMueblesPOSRz][4] = 0;
			HouseInfo[houseid][hMueblesPOSRy][4] = 0;
			HouseInfo[houseid][hMueblesPOSRx][4] = 0;

			HouseInfo[houseid][hMuebles][5] = 0;
			HouseInfo[houseid][hMueblesPOSX][5] = 0;
			HouseInfo[houseid][hMueblesPOSY][5] = 0;
			HouseInfo[houseid][hMueblesPOSZ][5] = 0;
			HouseInfo[houseid][hMueblesPOSRx][5] = 0;
			HouseInfo[houseid][hMueblesPOSRy][5] = 0;
			HouseInfo[houseid][hMueblesPOSRz][5] = 0;

			HouseInfo[houseid][hMuebles][6] = 0;
			HouseInfo[houseid][hMueblesPOSX][6] = 0;
			HouseInfo[houseid][hMueblesPOSY][6] = 0;
			HouseInfo[houseid][hMueblesPOSZ][6] = 0;
			HouseInfo[houseid][hMueblesPOSRx][6] = 0;
			HouseInfo[houseid][hMueblesPOSRy][6] = 0;
			HouseInfo[houseid][hMueblesPOSRz][6] = 0;

			HouseInfo[houseid][hMuebles][7] = 0;
			HouseInfo[houseid][hMueblesPOSX][7] = 0;
			HouseInfo[houseid][hMueblesPOSY][7] = 0;
			HouseInfo[houseid][hMueblesPOSZ][7] = 0;
			HouseInfo[houseid][hMueblesPOSRx][7] = 0;
			HouseInfo[houseid][hMueblesPOSRy][7] = 0;
			HouseInfo[houseid][hMueblesPOSRz][7] = 0;

			HouseInfo[houseid][hMuebles][8] = 0;
			HouseInfo[houseid][hMueblesPOSX][8] = 0;
			HouseInfo[houseid][hMueblesPOSY][8] = 0;
			HouseInfo[houseid][hMueblesPOSZ][8] = 0;
			HouseInfo[houseid][hMueblesPOSRx][8] = 0;
			HouseInfo[houseid][hMueblesPOSRy][8] = 0;
			HouseInfo[houseid][hMueblesPOSRz][8] = 0;

			HouseInfo[houseid][hMuebles][9] = 0;
			HouseInfo[houseid][hMueblesPOSX][9] = 0;
			HouseInfo[houseid][hMueblesPOSY][9] = 0;
			HouseInfo[houseid][hMueblesPOSZ][9] = 0;
			HouseInfo[houseid][hMueblesPOSRx][9] = 0;
			HouseInfo[houseid][hMueblesPOSRy][9] = 0;
			HouseInfo[houseid][hMueblesPOSRz][9] = 0;

			HouseInfo[houseid][hMuebles][10] = 0;
			HouseInfo[houseid][hMueblesPOSX][10] = 0;
			HouseInfo[houseid][hMueblesPOSY][10] = 0;
			HouseInfo[houseid][hMueblesPOSZ][10] = 0;
			HouseInfo[houseid][hMueblesPOSRx][10] = 0;
			HouseInfo[houseid][hMueblesPOSRy][10] = 0;
			HouseInfo[houseid][hMueblesPOSRz][10] = 0;
}

function ClearFamily(family)
{
	foreach(Player, i)
	{
		if(Info[i][pFMember] == family)
		{
			SendClientMessageEx(i, COLOR_LIGHTBLUE, "* La Banda/Familia en la que tu estás fue eliminada por un administrador, fuiste expulsado automáticamente.");
			Info[i][pFMember] = 255;
		}
	}
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Ninguna");
	fINFO[family][FamilyTaken] = 0;
	strmid(fINFO[family][FamilyName], string, 0, strlen(string), 255);
	strmid(fINFO[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(fINFO[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Novato");
	strmid(fINFO[family][FamilyRank1], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Asociado");
	strmid(fINFO[family][FamilyRank2], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Soldado");
	strmid(fINFO[family][FamilyRank3], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Capo");
	strmid(fINFO[family][FamilyRank4], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Mano Derecha");
	strmid(fINFO[family][FamilyRank5], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Padrino");
	strmid(fINFO[family][FamilyRank6], string, 0, strlen(string), 255);
	fINFO[family][FamilyColor] = 0;
	fINFO[family][FamilyTurfTokens] = 24;
	fINFO[family][FamilyMembers] = 0;
	fINFO[family][FamilySpawn][0] = 0.0;
	fINFO[family][FamilySpawn][1] = 0.0;
	fINFO[family][FamilySpawn][2] = 0.0;
	fINFO[family][FamilySpawn][3] = 0.0;
    fINFO[family][FamilyGuns][0] = 0;
    fINFO[family][FamilyGuns][2] = 0;
    fINFO[family][FamilyGuns][3] = 0;
    fINFO[family][FamilyGuns][4] = 0;
    fINFO[family][FamilyGuns][5] = 0;
    fINFO[family][FamilyGuns][6] = 0;
    fINFO[family][FamilyGuns][7] = 0;
	fINFO[family][FamilyGuns][8] = 0;
	fINFO[family][FamilyGuns][9] = 0;
	fINFO[family][FamilyCash] = 0;
	fINFO[family][FamilyMats] = 0;
	fINFO[family][FamilyPot] = 0;
	fINFO[family][FamilyCrack] = 0;
	fINFO[family][FamilySafe][0] = 0.0;
	fINFO[family][FamilySafe][1] = 0.0;
	fINFO[family][FamilySafe][2] = 0.0;
	fINFO[family][FamilyUSafe] = 0;
	if(IsValidDynamicPickup(fINFO[family][FamilyEntrancePickup])) DestroyDynamicPickup( fINFO[family][FamilyEntrancePickup] );
	if(IsValidDynamicPickup(fINFO[family][FamilyExitPickup])) DestroyDynamicPickup( fINFO[family][FamilyExitPickup] );
	DestroyDynamic3DTextLabel( Text3D:fINFO[family][FamilyEntranceText] );
	DestroyDynamic3DTextLabel( Text3D:fINFO[family][FamilyExitText] );
	DestroyDynamicPickup( fINFO[family][FamilyPickup] );
	saveFamilies();
	return 1;
}

Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ,  Float:ObjX, Float:ObjY, Float:ObjZ,  Float:FrX, Float:FrY, Float:FrZ)
{

    new Float:TGTDistance;

    // get distance from camera to target
    TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

    new Float:tmpX, Float:tmpY, Float:tmpZ;

    tmpX = FrX * TGTDistance + CamX;
    tmpY = FrY * TGTDistance + CamY;
    tmpZ = FrZ * TGTDistance + CamZ;

    return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}

stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
    new Float:cx,Float:cy,Float:cz,Float:fx,Float:fy,Float:fz;
    GetPlayerCameraPos(playerid, cx, cy, cz);
    GetPlayerCameraFrontVector(playerid, fx, fy, fz);
    return (radius >= DistanceCameraTargetToLocation(cx, cy, cz, x, y, z, fx, fy, fz));
}

stock GetPlayerSpeed(playerid, get3d)
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	else GetPlayerVelocity(playerid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

stock GetVehicleSpeed(vehicleid, get3d)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}


IsValidIP(ip[])
{
    new a;
	for (new i = 0; i < strlen(ip); i++)
	{
		if (ip[i] == '.')
		{
		    a++;
		}
	}
	if (a != 3)
	{
	    return 1;
	}
	return 0;
}

CheckBan(ip[])
{
	new string[20];
    new File: file = fopen("ban.cfg", io_read);
	while(fread(file, string))
	{
	    if (strcmp(ip, string, true, strlen(ip)) == 0)
	    {
	        fclose(file);
	        return 1;
	    }
	}
	fclose(file);
	return 0;
}

AddBan(ip[])
{
	if (CheckBan(ip) == 0)
	{
		new File: file = fopen("ban.cfg", io_append);
		new string[20];
		format(string, sizeof(string), "\n%s", ip);
	 	fwrite(file, string);
	 	fclose(file);
	 	foreach(Player, playerid)
		{
		    new playerIP[16];
			GetPlayerIp(playerid, playerIP, sizeof(playerIP));
			if (strcmp(playerIP, ip) == 0)
			{
	            SendClientMessage(playerid, COLOR_GENERAL, "Perfect City: {FFFFFF} Fuiste baneado del servidor.");
				Kick(playerid);
			}
		}
		return 1;
	}
	return 0;
}

RemoveBan(ip[])
{
    if (CheckBan(ip) == 1)
	{
	    new string[20];
		new File: file = fopen("ban.cfg", io_read);
		fcreate("tempBan.cfg");
		new File: file2 = fopen("tempBan.cfg", io_append);
		while(fread(file, string))
		{
			if (strcmp(ip, string, true, strlen(ip)) != 0 && strcmp("\n", string) != 0)
		    {
				fwrite(file2, string);
			}
		}
		fclose(file);
		fclose(file2);
		file = fopen("ban.cfg", io_write);
		file2 = fopen("tempBan.cfg", io_read);
		while(fread(file2, string))
		{
			fwrite(file, string);
		}
		fclose(file);
		fclose(file2);
		fremove("tempBan.cfg");
		return 1;
    }
	return 0;
}
public OnPlayerUpdate(playerid)
{
    new pCurWeap = GetPlayerWeapon(playerid);
    if(InsideMainMenu[playerid] == 1) SetPlayerArmedWeapon(playerid, 0);
    if(TutStep[playerid] > 0) SetPlayerArmedWeapon(playerid, 0);
    if(GetPVarInt(playerid, "Injured") == 1) SetPlayerArmedWeapon(playerid, 0);
	if(GetPVarInt(playerid, "IsFrozen") == 1) TogglePlayerControllable(playerid, 0);
    if(pCurWeap != pCurrentWeapon[playerid])
    {
        OnPlayerChangeWeapon(playerid, pCurWeap);
        pCurrentWeapon[playerid] = pCurWeap;
	}
	if(refuer[playerid] == 1)
	{
		new Float:px,Float:py,Float:pz; GetPlayerPos(playerid, px, py, pz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsACop(i) && OnDuty[i] == 1)
			{
			SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
			if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
			}
		}
	}
	//**Armas en la espalda**
    if(GetPlayerState(playerid)==PLAYER_STATE_ONFOOT)
	{
		new weaponid=GetPlayerWeapon(playerid),oldweapontype=GetWeaponType(OldWeapon[playerid]);
		new weapontype=GetWeaponType(weaponid);
		if(HoldingWeapon[playerid]==weaponid)
		    StopPlayerHoldingObject(playerid);

		if(OldWeapon[playerid]!=weaponid)
		{
		    new modelid=GetWeaponModel(OldWeapon[playerid]);
		    if(modelid!=0 && oldweapontype!=WEAPON_TYPE_NONE && oldweapontype!=weapontype)
		    {
		        HoldingWeapon[playerid]=OldWeapon[playerid];
		        switch(oldweapontype)
		        {
		            case WEAPON_TYPE_LIGHT:
						SetPlayerHoldingObject(playerid, modelid, 8,0.0,-0.1,0.15, -100.0, 0.0, 0.0);

					case WEAPON_TYPE_MELEE:
					    SetPlayerHoldingObject(playerid, modelid, 7,0.0,0.0,-0.18, 100.0, 45.0, 0.0);

					case WEAPON_TYPE_HEAVY:
					    SetPlayerHoldingObject(playerid, modelid, 1, 0.2,-0.125,-0.1,0.0,25.0,180.0);
		        }
		    }
		}

		if(oldweapontype!=weapontype)
			OldWeapon[playerid]=weaponid;
	}
    //***********************
	return 1;
}

function restartTimer() {
	iGMXTick--;
	switch(iGMXTick)
	{
	    case 0:{
		    GameTextForAll("~w~Es servidor va ser reiniciado ahora...", 9000, 5);
		    SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd:{FFFFFF} Es servidor ha sido reiniciado, porfavor vuelve a re-conectarte.");
			KillTimer(iGMXTimer);
			SendRconCommand("exit");
	    }
	    case 1: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~1~w~ segundo.", 1110, 5);
	    case 2: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~2~w~ segundos.", 1110, 5);
	    case 3: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~3~w~ segundos.", 1110, 5);
	    case 4: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~4~w~ segundos.", 1110, 5);
	    case 5: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~5~w~ segundos.", 1110, 5);
	}
	return 1;
}

function SyncPlayerTime(playerid)
{
	new hour, minute, second;
	gettime(hour, minute, second);
	SetPlayerTime(playerid, hour, minute);
	return 1;
}

Random(min, max)
{
    new a = random(max - min) + min;
    return a;
}

LoadObjects(playerid)
{
	if(Info[playerid][pPusoEstado] == 1)
	{
    	Attach3DTextLabelToPlayer(LabelYo[playerid], playerid, 0.0, 0.0, 0.4);
    }
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "LoadingObjects", 1);
	return SetTimerEx("SafeLoadObjects", 4000, 0, "d", playerid);
}

function MessageTaxiDriver(job, color, string[])
{
	foreach(Player, i)
	{
		if(job == 9 && TransportDuty[i] > 0 && (Info[i][pJob] == 8 || Info[i][pJob2] == 8 || Info[i][pTaxiLicense] == 1 ))
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

FMemberCounter() {

	new
		arrCounts[sizeof(fINFO)],
		szFileStr[128],
		arrTimeStamp[2][3],
		File: iFileHandle = fopen("logs/countfam.log", io_append);

	gettime(arrTimeStamp[0][0], arrTimeStamp[0][1], arrTimeStamp[0][2]);
	getdate(arrTimeStamp[1][0], arrTimeStamp[1][1], arrTimeStamp[1][2]);
	foreach(Player, i) if(Info[i][pAdminZC] < 2 && Info[i][pFMember] != 255) ++arrCounts[Info[i][pFMember]];

	format(szFileStr, sizeof(szFileStr), "----------------------------------------\r\nFecha: %d/%d/%d - Hora: %d:%d\r\n", arrTimeStamp[1][1], arrTimeStamp[1][2], arrTimeStamp[1][0], arrTimeStamp[0][0], arrTimeStamp[0][1]);
	fwrite(iFileHandle, szFileStr);

	for(new iFam; iFam < sizeof(fINFO); ++iFam) format(szFileStr, sizeof(szFileStr), "(%i) %s: %i\r\n", iFam+1, fINFO[iFam][FamilyName], arrCounts[iFam]), fwrite(iFileHandle, szFileStr);
	return fclose(iFileHandle);
}

stock SendJobMessage(job, color, string[])
{
	foreach(Player, i)
	{
		if(Info[i][pJob] == job || Info[i][pJob2] == job)
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

IsPlayerInInvalidNosVehicle( playerid )
{
	switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
		case 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449: return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------
//----------------------DYNAMIC GANG VEHICLE SYSTEM-----------------------------
//------------------------------------------------------------------------------
stock CreateGangVehicle(f, fv, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, price)
{
	if(FVINFO[f][fv][fvId] == INVALID_VEHICLE_ID)
	{
		FVINFO[f][fv][fvModelId] = modelid;
		FVINFO[f][fv][fvSpawnx] = x;
		FVINFO[f][fv][fvSpawny] = y;
		FVINFO[f][fv][fvSpawnz] = z;
		FVINFO[f][fv][fvSpawna] = angle;
		FVINFO[f][fv][fvColor1] = color1;
		FVINFO[f][fv][fvColor2] = color2;
		FVINFO[f][fv][fvPrice] = price;
		FVINFO[f][fv][fvFuel] = 200;
		FVINFO[f][fv][fvLock] = 1;
		new carcreated = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
		FVINFO[f][fv][fvId] = carcreated;
		//printf("Created the gang vehicle for family %d | vehicleid #%d | familyvehicleslot #%d.", f, FVINFO[f][fv][fvId], fv);
		return carcreated;
	}
	return INVALID_VEHICLE_ID;
}

stock DestroyGangVehicle(f, fv)
{
	if(FVINFO[f][fv][fvId] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(FVINFO[f][fv][fvId]);
		FVINFO[f][fv][fvModelId] = 0;
		FVINFO[f][fv][fvSpawnx] = 0.0;
		FVINFO[f][fv][fvSpawny] = 0.0;
		FVINFO[f][fv][fvSpawnz] = 0.0;
		FVINFO[f][fv][fvSpawna] = 0.0;
		FVINFO[f][fv][fvPaintJob] = -1;
		FVINFO[f][fv][fvColor1] = 126;
		FVINFO[f][fv][fvColor2] = 126;
		FVINFO[f][fv][fvPrice] = 0;
		FVINFO[f][fv][fvImpounded] = 0;
		FVINFO[f][fv][fvFuel] = 200;
		FVINFO[f][fv][fvLock] = 0;
		VehicleFuel[FVINFO[f][fv][fvId]] = 200;
	    //printf("Family %d vehicle %d(vehicleid %d) has been destroyed.", f,fv,FVINFO[f][fv][fvId]);
	    FVINFO[f][fv][fvId] = INVALID_VEHICLE_ID;
	}
}

stock LoadGangVehicles(f)
{
	//printf(" Loading family %d's vehicles.", f);
	for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
    {
        if(FVINFO[f][fv][fvModelId] != 0)
        {
			new carcreated = CreateVehicle(FVINFO[f][fv][fvModelId], FVINFO[f][fv][fvSpawnx], FVINFO[f][fv][fvSpawny], FVINFO[f][fv][fvSpawnz], FVINFO[f][fv][fvSpawna],FVINFO[f][fv][fvColor1], FVINFO[f][fv][fvColor2], -1);
			FVINFO[f][fv][fvId] = carcreated;
			VehicleFuel[carcreated] = FVINFO[f][fv][fvFuel];
			if(FVINFO[f][fv][fvLocked] == 1) LockGangVehicle(f, FVINFO[f][fv][fvId], FVINFO[f][fv][fvLock]);
        }
    }
}

LockGangVehicle(family, carid, type)
{
	new v = GetGangVehicle(family, carid);
	if(FVINFO[family][v][fvId] == carid && type == 3)
	{
	    LockStatus[carid] = 1;
		vehicle_lock_doors(carid);
	}
}

UnLockGangVehicle(family, carid, type)
{
	new v = GetGangVehicle(family, carid);
	if(FVINFO[family][v][fvId] == carid && type == 3)
	{
	    LockStatus[carid] = 0;
		vehicle_unlock_doors(carid);
	}
}

stock UnloadGangVehicles(f)
{
	//printf(" Unloading %s's vehicles.", fINFO[f][FamilyName]);
	for(new fv = 0; fv < MAX_PLAYERVEHICLES; fv++)
    {
        if(FVINFO[f][fv][fvId] != INVALID_VEHICLE_ID)
        {
            if(LockStatus[FVINFO[f][fv][fvId]] != 0) LockStatus[FVINFO[f][fv][fvId]] = 0;
			DestroyVehicle(FVINFO[f][fv][fvId]);
			VehicleFuel[FVINFO[f][fv][fvId]] = 200.0;
			FVINFO[f][fv][fvId] = INVALID_VEHICLE_ID;
        }
    }
}

stock UpdateGangVehicleParkPosition(f, fv, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health, temp = 1, vw)
{
	if(FVINFO[f][fv][fvId] != INVALID_VEHICLE_ID)
	{
	    if(temp == 0)
		{
	 		new Float:oldx, Float:oldy, Float:oldz;
			oldx = FVINFO[f][fv][fvSpawnx];
			oldy = FVINFO[f][fv][fvSpawny];
			oldz = FVINFO[f][fv][fvSpawnz];
			if(oldx == newx && oldy == newy && oldz == newz) return 0;
			FVINFO[f][fv][fvSpawnx] = newx;
			FVINFO[f][fv][fvSpawny] = newy;
			FVINFO[f][fv][fvSpawnz] = newz;
			FVINFO[f][fv][fvSpawna] = newangle;
			DestroyVehicle(FVINFO[f][fv][fvId]);
			new carcreated = CreateVehicle(FVINFO[f][fv][fvModelId], FVINFO[f][fv][fvSpawnx], FVINFO[f][fv][fvSpawny], FVINFO[f][fv][fvSpawnz],
			FVINFO[f][fv][fvSpawna],FVINFO[f][fv][fvColor1], FVINFO[f][fv][fvColor2], -1);
	        FVINFO[f][fv][fvId] = carcreated;
	        SetVehicleHealth(carcreated, health);
	        SetVehicleVirtualWorld(carcreated, vw);
	        saveFamiliesHQ();
        	return 1;
		}
		else
		{
		    new Float:oldx, Float:oldy, Float:oldz;
			oldx = FVINFO[f][fv][fvSpawnxtmp];
			oldy = FVINFO[f][fv][fvSpawnytmp];
			oldz = FVINFO[f][fv][fvSpawnztmp];
			if(oldx == newx && oldy == newy && oldz == newz) return 0;
			FVINFO[f][fv][fvSpawnxtmp] = newx;
			FVINFO[f][fv][fvSpawnytmp] = newy;
			FVINFO[f][fv][fvSpawnztmp] = newz;
			FVINFO[f][fv][fvSpawnatmp] = newangle;
			DestroyVehicle(FVINFO[f][fv][fvId]);
			new carcreated = CreateVehicle(FVINFO[f][fv][fvModelId], FVINFO[f][fv][fvSpawnxtmp], FVINFO[f][fv][fvSpawnytmp], FVINFO[f][fv][fvSpawnztmp],
			FVINFO[f][fv][fvSpawnatmp],FVINFO[f][fv][fvColor1], FVINFO[f][fv][fvColor2], -1);
	        FVINFO[f][fv][fvId] = carcreated;
	        SetVehicleHealth(carcreated, health);
	        SetVehicleVirtualWorld(carcreated, vw);
	        saveFamiliesHQ();
        	return 1;
		}
	}
	return 0;
}

stock GetGangFreeVehicleId(f){
    new
		i = 0;
	while (i < MAX_GANG_VEHICLES && FVINFO[f][i][fvId] != INVALID_VEHICLE_ID){
		i++;
	}
	if (i == MAX_GANG_VEHICLES) return -1;
	return i;

}

stock GetGangVehicleCount(f)
{
    new
		i = 0,
		cars = 0;
	while (i < MAX_GANG_VEHICLES && FVINFO[f][i][fvId] != INVALID_VEHICLE_ID){
	    cars++;
		i++;
	}
	return cars;

}

stock GetGangVehicle(f, vehicleid)
{
	if(f == 255) return -1;
	if(vehicleid == -1) return -1;
    for(new v = 0; v < MAX_GANG_VEHICLES; v++)
    {
        if(FVINFO[f][v][fvId] == vehicleid)
        {
            return v;
        }
    }
    return -1;
}

ReturnUser(text[]) {

	new
		strPos,
		returnID = 0,
		bool: isnum = true;

	while(text[strPos]) {
		if(isnum) {
			if ('0' <= text[strPos] <= '9') returnID = (returnID * 10) + (text[strPos] - '0');
			else isnum = false;
		}
		strPos++;
	}
	if (isnum) {
		if(IsPlayerConnected(returnID)) return returnID;
	}
	else {

		new
			sz_playerName[MAX_PLAYER_NAME];

		foreach(Player, i) {
			GetPlayerName(i, sz_playerName, MAX_PLAYER_NAME);
			if(!strcmp(sz_playerName, text, true, strPos)) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

//------------------------------------------------------------------------------
//DEALERSHIP Cars SYSTEM BY ALEX DONUTS
//------------------------------------------------------------------------------
stock CreateCarDealership(Float: enx, Float: eny, Float: enz, Float: radius, price, message[])
{
	new dealershipid = GetFreeCarDealership();
	if(dealershipid == -1) return -1;
	new text_info[128];
	CDSInfo[dealershipid][cdEntranceX] = enx;
	CDSInfo[dealershipid][cdEntranceY] = eny;
	CDSInfo[dealershipid][cdEntranceZ] = enz;
	CDSInfo[dealershipid][cdRadius] = radius;
	CDSInfo[dealershipid][cdPrice] = price;
	strmid(CDSInfo[dealershipid][cdMessage], message, 0, strlen(message), 255);
	CDSInfo[dealershipid][cdPickupID] = CreateDynamicPickup(1239, 1, CDSInfo[dealershipid][cdEntranceX], CDSInfo[dealershipid][cdEntranceY], CDSInfo[dealershipid][cdEntranceZ], .interiorid = 0);
	format(text_info, sizeof(text_info),"Concesionario (%d) %s\nDueño: %s", dealershipid, CDSInfo[dealershipid][cdMessage], CDSInfo[dealershipid][cdPrice]);
    CDSInfo[dealershipid][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_GENERAL,CDSInfo[dealershipid][cdEntranceX], CDSInfo[dealershipid][cdEntranceY], CDSInfo[dealershipid][cdEntranceZ]+0.75,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
    SavecDealership(dealershipid);
    return dealershipid;
}

stock DestroyCarDealership(dealershipid)
{
	new string[30];
	CDSInfo[dealershipid][cdEntranceX] = 0.0;
	CDSInfo[dealershipid][cdEntranceY] = 0.0;
	CDSInfo[dealershipid][cdEntranceZ] = 0.0;
	CDSInfo[dealershipid][cdRadius] = 0.0;
	CDSInfo[dealershipid][cdTill] = 0;
	CDSInfo[dealershipid][cdOwned] = 0;
	CDSInfo[dealershipid][cdPrice] = 0;
	format(string, sizeof(string), "Nadie");
	strmid(CDSInfo[dealershipid][cdOwner], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Nada");
	strmid(CDSInfo[dealershipid][cdMessage], string, 0, strlen(string), 255);
	DestroyDynamic3DTextLabel(CDSInfo[dealershipid][cdTextLabel]);
	DestroyDynamicPickup(CDSInfo[dealershipid][cdPickupID]);
	CDSInfo[dealershipid][cdPickupID] = 0;
	CDSInfo[dealershipid][cdTextLabel] = Text3D:INVALID_3DTEXT_ID;
	CDSInfo[dealershipid][cdVehicleSpawn][0] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawn][1] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawn][2] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawn][3] = 0.0;
	for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
	{
		if (CDSInfo[dealershipid][cdVehicleModel][v] != 0)
		{
	        DestroyCarDealershipVehicle(dealershipid, v);
		}
	}
	SavecDealership(dealershipid);
}

stock GetFreeCarDealership()
{
    new
		i = 0;
	while (i < MAX_CARDEALERSHIPS && CDSInfo[i][cdEntranceX] != 0.0 && CDSInfo[i][cdEntranceY] != 0.0)
	{
		i++;
	}
	if (i == MAX_CARDEALERSHIPS) return -1;
	return i;

}

stock SetPlayerOwnerOfCD(playerid, dealershipid)
{
	new owner[MAX_PLAYER_NAME];
	CDSInfo[dealershipid][cdOwned] = 1;
	GetPlayerName(playerid, owner, sizeof(owner));
	strmid(CDSInfo[dealershipid][cdOwner], owner, 0, strlen(owner), 255);
	new text_info[128];
	format(text_info, sizeof(text_info),"Concesionario (%d) %s\nDueño: %s", dealershipid, CDSInfo[dealershipid][cdMessage], CDSInfo[dealershipid][cdOwner]);
	UpdateDynamic3DTextLabelText(CDSInfo[dealershipid][cdTextLabel], COLOR_GENERAL, text_info);
	SavecDealership(dealershipid);
}

stock SellCarDealership(dealershipid)
{
	CDSInfo[dealershipid][cdOwned] = 0;
	CDSInfo[dealershipid][cdVehicleSpawn][0] = 0.0;
	CDSInfo[dealershipid][cdVehicleSpawn][1] = 0.0;
	CDSInfo[dealershipid][cdVehicleSpawn][2] = 0.0;
	CDSInfo[dealershipid][cdVehicleSpawn][3] = 0.0;
	strmid(CDSInfo[dealershipid][cdOwner], "Nadie", 0, MAX_PLAYER_NAME, 255);
	new text_info[128];
	format(text_info, sizeof(text_info),"Concesionario (%d) %s En Venta\nPrecio: %d", dealershipid, CDSInfo[dealershipid][cdMessage], CDSInfo[dealershipid][cdPrice]);
	UpdateDynamic3DTextLabelText(CDSInfo[dealershipid][cdTextLabel], COLOR_GENERAL, text_info);
	SavecDealership(dealershipid);
}

stock IsPlayerOwnerOfCD(playerid)
{
	new owner[MAX_PLAYER_NAME];
	GetPlayerName(playerid, owner, sizeof(owner));
	for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
	    if(strcmp(CDSInfo[d][cdOwner],owner, true ) == 0)
	    {
			return d;
		}
	}
	return -1;
}

stock IsPlayerOwnerOfCDEx(playerid, dealershipid)
{
	new owner[MAX_PLAYER_NAME];
	GetPlayerName(playerid, owner, sizeof(owner));
	if(strcmp(CDSInfo[dealershipid][cdOwner],owner, true ) == 0)
	{
	    return 1;
	}
	return 0;
}

stock CreateCarDealershipVehicle(dealershipid, modelid, Float: x, Float: y, Float: z, Float: a, price)
{
    new cdvehicleid = GetFreeCarDealershipVehicleId(dealershipid);
    if(cdvehicleid == -1) return -1;
    new text_info[128];
    CDSInfo[dealershipid][cdVehicleModel][cdvehicleid] = modelid;
    CDSInfo[dealershipid][cdVehicleCost][cdvehicleid] = price;
    CDSInfo[dealershipid][cdVehicleSpawnX][cdvehicleid] = x;
    CDSInfo[dealershipid][cdVehicleSpawnY][cdvehicleid] = y;
    CDSInfo[dealershipid][cdVehicleSpawnZ][cdvehicleid] = z;
    CDSInfo[dealershipid][cdVehicleSpawnAngle][cdvehicleid] = a;
    new carcreated = CreateVehicle(modelid, x, y, z, a, 0, 0, 6);
    format(text_info, sizeof(text_info), "{4639F1}Modelo: {FFFFFF}%s\n{4639F1}Precio: {FFFFFF}%d", GetVehicleName(carcreated), CDSInfo[dealershipid][cdVehicleCost][cdvehicleid]);
    CDSInfo[dealershipid][cdVehicleLabel][cdvehicleid] = CreateDynamic3DTextLabel(text_info,COLOR_MAGENTA,0.0, 0.0, 0.0,5.0,INVALID_PLAYER_ID,carcreated,1);
	CDSInfo[dealershipid][cdVehicleId][cdvehicleid] = carcreated;
	SavecDealership(cdvehicleid);
    return cdvehicleid;
}

stock DestroyCarDealershipVehicle(dealershipid, cdvehicleid)
{
    CDSInfo[dealershipid][cdVehicleModel][cdvehicleid] = 0;
    CDSInfo[dealershipid][cdVehicleCost][cdvehicleid] = 0;
    CDSInfo[dealershipid][cdVehicleSpawnX][cdvehicleid] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawnY][cdvehicleid] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawnZ][cdvehicleid] = 0.0;
    CDSInfo[dealershipid][cdVehicleSpawnAngle][cdvehicleid] = 0.0;
    DestroyDynamic3DTextLabel(CDSInfo[dealershipid][cdVehicleLabel][cdvehicleid]);
    DestroyVehicle(CDSInfo[dealershipid][cdVehicleId][cdvehicleid]);
    CDSInfo[dealershipid][cdVehicleLabel][cdvehicleid] = Text3D:INVALID_3DTEXT_ID;
    CDSInfo[dealershipid][cdVehicleId][cdvehicleid] = 0;
}

stock GetFreeCarDealershipVehicleId(dealershipid)
{
    new
		i = 0;
	while (i < MAX_DEALERSHIPVEHICLES && CDSInfo[dealershipid][cdVehicleModel][i] != 0)
	{
		i++;
	}
	if (i == MAX_DEALERSHIPVEHICLES) return -1;
	return i;

}

stock GetCarDealershipVehicleId(vehicleid)
{
    for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
        for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
        {
            if(CDSInfo[d][cdVehicleId][v] == vehicleid)
            {
                return v;
            }
		}
    }
    return -1;
}

stock GetCarDealershipId(vehicleid)
{
    for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
        for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
        {
            if(CDSInfo[d][cdVehicleId][v] == vehicleid)
            {
                return d;
            }
		}
    }
    return -1;
}

//------------------------------------------------------------------------------
//SISTEMAAUTOS BY ALEX DONUTS
//------------------------------------------------------------------------------
stock CreatePlayerVehicle(playerid, playervehicleid, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, price)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvId] == INVALID_PLAYER_VEHICLE_ID)
	{
	    PlayerCars++;
        carsforplayer[playerid]++;
		PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = modelid;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = x;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = y;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = z;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = angle;
		PlayerVehicleInfo[playerid][playervehicleid][pvVW] = GetPlayerVirtualWorld(playerid);
		PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = color1;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = color2;
		PlayerVehicleInfo[playerid][playervehicleid][pvPark] = 1;
		PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = price;
		PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 200;
		PlayerVehicleInfo[playerid][playervehicleid][pvLock] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvHealth] = 1000.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
		for(new m = 0; m < MAX_MODS; m++)
	    {
	    	PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = 0;
		}
		new carcreated = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
		PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
		SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvVW]);
		//SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvNumberPlate]);
		return carcreated;
	}
	return INVALID_PLAYER_VEHICLE_ID;
}

stock DestroyPlayerVehicle(playerid, playervehicleid)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvModelId])
	{
	    PlayerCars--;
	    carsforplayer[playerid]--;
		DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvVW] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = -1;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = 126;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = 126;
		PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 200;
		PlayerVehicleInfo[playerid][playervehicleid][pvLock] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvHealth] = 1000.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 0;
		VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 200;
		VehicleFuel[playervehicleid] = 200;
		strcpy(PlayerVehicleInfo[playerid][playervehicleid][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
	    PlayerVehicleInfo[playerid][playervehicleid][pvId] = INVALID_PLAYER_VEHICLE_ID;
	    if(PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] != INVALID_PLAYER_ID)
	    {
	        Info[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
	        Info[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
	    	PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] = INVALID_PLAYER_ID;
		}
	}
}

stock LoadPlayerVehicles(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	//printf(" Loading %s's vehicles.", playername);
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvImpounded] >= 2) PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
        if(PlayerVehicleInfo[playerid][v][pvModelId] != 0 && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
        {
            PlayerCars++;
            carsforplayer[playerid]++;
			new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][v][pvModelId], PlayerVehicleInfo[playerid][v][pvPosX], PlayerVehicleInfo[playerid][v][pvPosY], PlayerVehicleInfo[playerid][v][pvPosZ], PlayerVehicleInfo[playerid][v][pvPosAngle],PlayerVehicleInfo[playerid][v][pvColor1], PlayerVehicleInfo[playerid][v][pvColor2], -1);
			PlayerVehicleInfo[playerid][v][pvId] = carcreated;
			VehicleFuel[carcreated] = PlayerVehicleInfo[playerid][v][pvFuel];
			SetVehicleHealth(carcreated, PlayerVehicleInfo[playerid][v][pvHealth]);
			SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][v][pvVW]);
			//SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][v][pvNumberPlate]);
			if(PlayerVehicleInfo[playerid][v][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][v][pvId], PlayerVehicleInfo[playerid][v][pvLock]);
        }
        else if(PlayerVehicleInfo[playerid][v][pvModelId] == 0 && PlayerVehicleInfo[playerid][v][pvImpounded] != 0)
            PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
    }
    LoadAllPlayerVehicleMods(playerid);
}

stock UnloadPlayerVehicles(playerid)
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	//printf(" Unloading %s's vehicles.", playername);
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvImpounded] >= 2) PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
        if(PlayerVehicleInfo[playerid][v][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
        {
            PlayerCars--;
            carsforplayer[playerid]--;
            if(LockStatus[PlayerVehicleInfo[playerid][v][pvId]] != 0) LockStatus[PlayerVehicleInfo[playerid][v][pvId]] = 0;
            UpdatePlayerVehicleMods(playerid, v);
			DestroyVehicle(PlayerVehicleInfo[playerid][v][pvId]);
			VehicleFuel[PlayerVehicleInfo[playerid][v][pvId]] = 200;
			PlayerVehicleInfo[playerid][v][pvId] = INVALID_PLAYER_VEHICLE_ID;
			if(PlayerVehicleInfo[playerid][v][pvAllowedPlayerId] != INVALID_PLAYER_ID)
	    	{
	    	    Info[PlayerVehicleInfo[playerid][v][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
	    	    Info[PlayerVehicleInfo[playerid][v][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
	    		PlayerVehicleInfo[playerid][v][pvAllowedPlayerId] = INVALID_PLAYER_ID;
			}
        }
    }
}

stock RegisterVehicleNumberPlate(vehicleid, sz_NumPlate[])
{
	new
	    Float: a_CarPos[4], fuel; // X, Y, Z, Z Angle, Fuel

	GetVehiclePos(vehicleid, a_CarPos[0], a_CarPos[1], a_CarPos[2]);
	GetVehicleZAngle(vehicleid, a_CarPos[3]);
	fuel = VehicleFuel[vehicleid];
	//SetVehicleNumberPlate(vehicleid, sz_NumPlate);
	SetVehicleToRespawn(vehicleid);
	//SetVehicleToRespawn(vehicleid);
	SetVehiclePos(vehicleid, a_CarPos[0], a_CarPos[1], a_CarPos[2]);
	SetVehicleZAngle(vehicleid, a_CarPos[3]);
	VehicleFuel[vehicleid] = fuel;
	return 1;
}

/*stock UpdatePlayerVehicleParkPosition(playerid, playervehicleid, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health)
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(PlayerVehicleInfo[playerid][playervehicleid][pvId] != INVALID_PLAYER_VEHICLE_ID)
	{
		 new Float:oldx, Float:oldy, Float:oldz, oldfuel;
		 oldx = PlayerVehicleInfo[playerid][playervehicleid][pvPosX];
		 oldy = PlayerVehicleInfo[playerid][playervehicleid][pvPosY];
		 oldz = PlayerVehicleInfo[playerid][playervehicleid][pvPosZ];
		 if(oldx == newx && oldy == newy && oldz == newz) return 0;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = newx;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = newy;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = newz;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = newangle;
		 PlayerVehicleInfo[playerid][playervehicleid][pvVW] = GetVehicleVirtualWorld(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		 oldfuel = VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]];
		 VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 200;
		 UpdatePlayerVehicleMods(playerid, playervehicleid);
		 DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		 new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvModelId], PlayerVehicleInfo[playerid][playervehicleid][pvPosX], PlayerVehicleInfo[playerid][playervehicleid][pvPosY], PlayerVehicleInfo[playerid][playervehicleid][pvPosZ],
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle],PlayerVehicleInfo[playerid][playervehicleid][pvColor1], PlayerVehicleInfo[playerid][playervehicleid][pvColor2], -1);
   		 SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvVW]);
		 PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
         VehicleFuel[carcreated] = oldfuel;
         SetVehicleHealth(carcreated, health);
         LoadPlayerVehicleMods(playerid, playervehicleid);
         return 1;
	}
	return 0;
}*/
stock UpdatePlayerVehicleParkPosition(playerid, playervehicleid, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health)
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(PlayerVehicleInfo[playerid][playervehicleid][pvId] != INVALID_PLAYER_VEHICLE_ID)
	{
		 new Float:oldx, Float:oldy, Float:oldz, oldfuel;
		 oldx = PlayerVehicleInfo[playerid][playervehicleid][pvPosX];
		 oldy = PlayerVehicleInfo[playerid][playervehicleid][pvPosY];
		 oldz = PlayerVehicleInfo[playerid][playervehicleid][pvPosZ];
		 if(oldx == newx && oldy == newy && oldz == newz) return 0;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = newx;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = newy;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = newz;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = newangle;
		 PlayerVehicleInfo[playerid][playervehicleid][pvVW] = GetVehicleVirtualWorld(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		 oldfuel = VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]];
		 VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 200;
		 UpdatePlayerVehicleMods(playerid, playervehicleid);
		 DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		 new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvModelId], PlayerVehicleInfo[playerid][playervehicleid][pvPosX], PlayerVehicleInfo[playerid][playervehicleid][pvPosY], PlayerVehicleInfo[playerid][playervehicleid][pvPosZ],
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle],PlayerVehicleInfo[playerid][playervehicleid][pvColor1], PlayerVehicleInfo[playerid][playervehicleid][pvColor2], -1);
   		 SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvVW]);
		 PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
         VehicleFuel[carcreated] = oldfuel;
         SetVehicleHealth(carcreated, health);
         LoadPlayerVehicleMods(playerid, playervehicleid);
         return 1;
	}
	return 0;
}

stock UpdatePlayerVehicleMods(playerid, playervehicleid)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0) {
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		new carid = PlayerVehicleInfo[playerid][playervehicleid][pvId];
		new exhaust, frontbumper, rearbumper, roof, spoilers, sideskirt1,
			sideskirt2, wheels, hydraulics, nitro, hood, lamps, stereo, ventright, ventleft;
		exhaust = GetVehicleComponentInSlot(carid, CARMODTYPE_EXHAUST);
		frontbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_FRONT_BUMPER);
		rearbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_REAR_BUMPER);
		roof = GetVehicleComponentInSlot(carid, CARMODTYPE_ROOF);
		spoilers = GetVehicleComponentInSlot(carid, CARMODTYPE_SPOILER);
		sideskirt1 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
		sideskirt2 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
		wheels = GetVehicleComponentInSlot(carid, CARMODTYPE_WHEELS);
		hydraulics = GetVehicleComponentInSlot(carid, CARMODTYPE_HYDRAULICS);
		nitro = GetVehicleComponentInSlot(carid, CARMODTYPE_NITRO);
		hood = GetVehicleComponentInSlot(carid, CARMODTYPE_HOOD);
		lamps = GetVehicleComponentInSlot(carid, CARMODTYPE_LAMPS);
		stereo = GetVehicleComponentInSlot(carid, CARMODTYPE_STEREO);
		ventright = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_RIGHT);
		ventleft = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_LEFT);
		if(spoilers >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][0] = spoilers;
		if(hood >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][1] = hood;
		if(roof >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][2] = roof;
		if(sideskirt1 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][3] = sideskirt1;
		if(lamps >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][4] = lamps;
		if(nitro >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][5] = nitro;
		if(exhaust >= 1000)     PlayerVehicleInfo[playerid][playervehicleid][pvMods][6] = exhaust;
		if(wheels >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][7] = wheels;
		if(stereo >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][8] = stereo;
		if(hydraulics >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][9] = hydraulics;
		if(frontbumper >= 1000) PlayerVehicleInfo[playerid][playervehicleid][pvMods][10] = frontbumper;
		if(rearbumper >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][11] = rearbumper;
		if(ventright >= 1000)   PlayerVehicleInfo[playerid][playervehicleid][pvMods][12] = ventright;
		if(ventleft >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][13] = ventleft;
		if(sideskirt2 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][14] = sideskirt2;
	}
}

stock LoadPlayerVehicleMods(playerid, playervehicleid)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0 && PlayerVehicleInfo[playerid][playervehicleid][pvSpawned]== 1)
	{
		//printf(" Cargando mods del jugador ID #%d.", playerid);
		new paintjob = PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob];
		new color1 = PlayerVehicleInfo[playerid][playervehicleid][pvColor1];
		new color2 = PlayerVehicleInfo[playerid][playervehicleid][pvColor2];
		if(PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] != -1)
		{
			 ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][playervehicleid][pvId], paintjob);
			 ChangeVehicleColor(PlayerVehicleInfo[playerid][playervehicleid][pvId], color1, color2);
		}
		for(new m = 0; m < MAX_MODS; m++)
		{
			AddVehicleComponent(PlayerVehicleInfo[playerid][playervehicleid][pvId], PlayerVehicleInfo[playerid][playervehicleid][pvMods][m]);
		}
	}
}

stock LoadAllPlayerVehicleMods(playerid)
{
	//print(" Modificaciones de todos los autos cargadas.");
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvModelId] != 0 && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
        {
            new paintjob = PlayerVehicleInfo[playerid][v][pvPaintJob];
        	new color1 = PlayerVehicleInfo[playerid][v][pvColor1];
	        new color2 = PlayerVehicleInfo[playerid][v][pvColor2];
            if(PlayerVehicleInfo[playerid][v][pvPaintJob] != -1)
	        {
                ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][v][pvId], paintjob);
	        }
	        ChangeVehicleColor(PlayerVehicleInfo[playerid][v][pvId], color1, color2);
	        for(new m = 0; m < MAX_MODS; m++)
	        {
  	        	AddVehicleComponent(PlayerVehicleInfo[playerid][v][pvId], PlayerVehicleInfo[playerid][v][pvMods][m]);
	        }
		}
	}
}

stock GetPlayerFreeVehicleId(playerid){
	for(new i; i < MAX_PLAYERVEHICLES; ++i){
		if(PlayerVehicleInfo[playerid][i][pvModelId] == 0) return i;
	}
	return -1;
}

function GetPlayerVehicleCount(playerid){
	new cars = 0;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
	    if(PlayerVehicleInfo[playerid][i][pvModelId]){
	        if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][i][pvImpounded] == 0 && PlayerVehicleInfo[playerid][i][pvSpawned] == 1){
				if(CheckPlayerVehicleForDesync(playerid, PlayerVehicleInfo[playerid][i][pvId])) return 0;
				cars++;
			}
	    }
	}
	return cars;
}

function VehicleCount(playerid){
    new cars = 0;
    for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
		if(PlayerVehicleInfo[playerid][i][pvModelId] != 0){
			cars++;
		}
    }
    return cars;
}
/*InvalidModCheck(model, partid) {
    switch(model) {
		case 430, 446, 452, 453, 454, 472, 473, 484, 493, 595, 573, 556, 557, 539, 471, 432, 406, 444,
		448, 461, 462, 463, 468, 481, 509, 510, 521, 522, 581, 586, 417, 425, 447, 460, 469, 476, 487,
		488, 477, 511, 512, 513, 519, 520, 548, 553, 563, 577, 592, 593: return 0;
		default: switch(GetVehicleComponentType(partid)) {
			case 5: switch(partid) {
				case 1008, 1009, 1010: return 1;
				default: return 0;
			}
			case 7: switch(partid) {
				case 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098: return 1;
				default: return 0;
			}
			case 8: switch(partid) {
				case 1086: return 1;
				default: return 0;
			}
			case 9: switch(partid) {
				case 1087: return 1;
				default: return 0;
			}
			default: for(new i; i < 4; i++) if(partid == vehicleMods[model - 400][GetVehicleComponentType(partid)][i]) {
				return 1;
			}
		}
	}
	return 0;
}*/

function CheckPlayerVehicleForDesync(playerid, vehicleid)
{
	if(GetVehicleModel(vehicleid) < 400 || GetVehicleModel(vehicleid) > 611)
	{
    	SendClientMessageEx(playerid, COLOR_WHITE, "Error: Desincronización de vehículos detectado, ejecutando sincronización de sus vehículos...");
    	UnloadPlayerVehicles(playerid);
    	//LoadPlayerVehicles(playerid);
    	SendClientMessageEx(playerid, COLOR_WHITE, "Sus vehículos han sido sincronizados con el servidor.");
    	return 1;
	}
	return 0;
}

stock GetPlayerVehicle(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return -1;
	if(!GetVehicleModel(vehicleid)) return -1;
    for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvId] == vehicleid)
        {
            return v;
        }
    }
    return -1;
}

stock GetDistancePlayerVeh(playerid, veh) {

	new
	    Float:Floats[7];

	GetPlayerPos(playerid, Floats[0], Floats[1], Floats[2]);
	GetVehiclePos(veh, Floats[3], Floats[4], Floats[5]);
	Floats[6] = floatsqroot((Floats[3]-Floats[0])*(Floats[3]-Floats[0])+(Floats[4]-Floats[1])*(Floats[4]-Floats[1])+(Floats[5]-Floats[2])*(Floats[5]-Floats[2]));

	return floatround(Floats[6]);
}

stock doesVehicleExist(vehicleid) {

    if(GetVehicleModel(vehicleid) >= 400) {
		return 1;
	}
	return 0;
}

stock IsValidSkin(skinid){
	if(skinid < 0 || skinid > 311) return false;
	return true;
}

stock IsPublicSkin(skinid) {
	if(!IsValidSkin(skinid)) return false;

	switch(skinid) {
		case 274 .. 288, 265 .. 267, 71: return false;
	}
	return true;
}
stock GetClosestCar(playerid, exception = INVALID_VEHICLE_ID) {
    new
		Float:Distance,
		target = -1;
    for(new v; v < MAX_VEHICLES; v++) if(doesVehicleExist(v)) {
        if(v != exception && (target < 0 || Distance > GetDistancePlayerVeh(playerid, v))) {
            target = v;
            Distance = GetDistancePlayerVeh(playerid, v);
        }
    }
    return target;
}

LockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 3)
	{
	    LockStatus[carid] = 1;
	    vehicle_lock_doors(carid);
	}
}

UnLockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 3)
	{
	    LockStatus[carid] = 0;
		vehicle_unlock_doors(carid);
	}
}

function SetVehicleEngine(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(engine == VEHICLE_PARAMS_ON)
	{
	new string1[128];
	format(string1, sizeof(string1), "* %s giró la llave en el contacto y apagó su vehículo.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string1, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

	SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	//SendClientMessageEx(playerid, COLOR_WHITE, "Motor a sido apagado con éxito.");
	arr_Engine{vehicleid} = 0;
	}
    else if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
	{
	new Float: f_vHealth;
	GetVehicleHealth(vehicleid, f_vHealth);
	if(f_vHealth < 350.0) return SendClientMessageEx(playerid, COLOR_RED, "El coche no prenderá, porque el motor se ha quemado! (/servicios).");
    if(VehicleFuel[vehicleid] <= 0) return SendClientMessageEx(playerid, COLOR_RED, "El coche no prenderá, no hay gasolina en el tanque (/servicios).");
	SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	arr_Engine{vehicleid} = 1;


	new string1[128];
	format(string1, sizeof(string1), "* %s giró la llave en el contacto y encendió su vehículo.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string1, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

SetVehicleLights(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(lights == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Luces del vehiculo fueron apagadas.");
	}
    else if(lights == VEHICLE_PARAMS_OFF || lights == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Luces del vehiculo encendidas con éxito.");
	}
	return 1;
}

SetVehicleHood(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(bonnet == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Capó del vehiculo fue cerrado.");
	}
    else if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Capó del vehiculo fue abierto.");
	}
	return 1;
}

SetVehicleTrunk(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(boot == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Maletero del vehiculo fue cerrado.");
	}
    else if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Maletero del vehiculo fue abierto.");
	}
	return 1;
}

stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: radius) {
	new
		Float:Floats[3];
	GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
	return IsPlayerInRangeOfPoint(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

stock GivePlayerCash(playerid, money)
{
	SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")+money);
	GivePlayerMoney(playerid, money);
	return 1;
}

stock ResetPlayerCash(playerid)
{
	SetPVarInt(playerid, "Cash", 0);
	ResetPlayerMoney(playerid);
	return 1;
}
//Delay:NOPCheck[1000, i](playerid)
// Timer Name: NOPCheck(playerid)
function NOPCheck(playerid)
{
	if(GetPlayerState(playerid) != 2) NOPTrigger[playerid] = 0;
	if(GetPlayerState(playerid) != 2) return 1;
	new newcar = GetPlayerVehicleID(playerid);
    if(LSPD_IsACopCar(newcar) && Info[playerid][pMember] != 1 && Info[playerid][pLeader] != 1) ExecuteNOPAction(playerid);
    else if(FBI_Vehicle(newcar) && Info[playerid][pMember] != 2 && Info[playerid][pLeader] != 2) ExecuteNOPAction(playerid);
    else if(IsAnSAEMCar(newcar) && Info[playerid][pMember] != 3 && Info[playerid][pLeader] !=3) ExecuteNOPAction(playerid);
    else if(Mecanico_Vehicle(newcar) && Info[playerid][pMember] != 6 && Info[playerid][pLeader] !=6) ExecuteNOPAction(playerid);
    else if(SAMD_Vehicle(newcar) && Info[playerid][pMember] != 4 && Info[playerid][pLeader] !=4) ExecuteNOPAction(playerid);
    else if(GobierAuto(newcar) && Info[playerid][pMember] != 7 && Info[playerid][pLeader] !=7) ExecuteNOPAction(playerid);
    else if(Taxi_Vehicle(newcar) && Info[playerid][pJob] != 8 && Info[playerid][pJob2] != 8) ExecuteNOPAction(playerid);
    else if(LCN_Vehicle(newcar) && Info[playerid][pMember] != 11 && Info[playerid][pLeader] !=11) ExecuteNOPAction(playerid);
    else if(Yakuza_Vehicle(newcar) && Info[playerid][pMember] != 12 && Info[playerid][pLeader] !=12) ExecuteNOPAction(playerid);
    else if(Rusa_Vehicle(newcar) && Info[playerid][pMember] != 13 && Info[playerid][pLeader] !=13) ExecuteNOPAction(playerid);
    else if(NDRA_Vehicle(newcar) && Info[playerid][pMember] != 14 && Info[playerid][pLeader] !=14) ExecuteNOPAction(playerid);
    else if(GRO_Vehicle(newcar) && Info[playerid][pMember] != 15 && Info[playerid][pLeader] !=15) ExecuteNOPAction(playerid);
    else if(BAL_Vehicle(newcar) && Info[playerid][pMember] != 16 && Info[playerid][pLeader] !=16) ExecuteNOPAction(playerid);
    else if(SUR_Vehicle(newcar) && Info[playerid][pMember] != 17 && Info[playerid][pLeader] !=17) ExecuteNOPAction(playerid);
	return 1;
}

// Función: Otros Timers.
timer severTimers[1000]()
{
	if(iAdverTimer >= 1)
		--iAdverTimer;
	foreach(Player, i)
	{
	    SyncPlayerTime(i);
	    if(IsPlayerConnected(i) && gPlayerLogged{i} == 1)
	    {
			if(Tied[i] > 0) TogglePlayerControllable(i, 0);
            if(GetPVarInt(i, "EMSAttempt") == -1) ApplyAnimation(i, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i]++;
				if (Mobile[Mobile[i]] == INVALID_PLAYER_ID && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME], string[96];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* El teléfono de %s esta sonando", called);
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
			    new string[24];
				format(string, sizeof(string), "~w~Costo de llamada~n~~r~%d",CallCost[i]);
				GivePlayerCash(i, -CallCost[i]);
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			for(new h = 0; h < sizeof(Points); h++)
			{
				if(IsPlayerInRangeOfPoint(i, 2.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz])){
					if(Points[h][Type] == 3 && Info[i][pPot] < 3){
						GameTextForPlayer(i, "~w~Usa /comprarhierba para comprar algo de ~n~~r~hierba", 5000, 5);
					}
					else if(Points[h][Type] == 1 && GetPVarInt(i, "Packages") == 0){
						GameTextForPlayer(i, "~w~Usa /materiales para comprar ~n~~r~paquetes de materiales.", 5000, 5);
					}
					else if(Points[h][Type] == 4){
						GameTextForPlayer(i, "~w~Usa /comprarcrack para comprar ~n~algo de ~r~crack", 5000, 5);
					}
					else if(Points[h][Type] == 5){
						GameTextForPlayer(i, "~w~Usa /paquete para comprar un ~n~~r~paquete de droga", 5000, 5);
					}
				}
			}
			if(TransportDriver[i] < 999)
			{
				if(GetPlayerVehicleID(i) != GetPlayerVehicleID(TransportDriver[i]) || !TransportDuty[TransportDriver[i]])
				{
					if(IsPlayerConnected(TransportDriver[i]))
					{
					    new string[24];
						TransportMoney[TransportDriver[i]] += TransportCost[i];
						TransportTime[TransportDriver[i]] = 0;
						TransportCost[TransportDriver[i]] = 0;
						format(string, sizeof(string), "~w~Pasajero se fue~n~~g~ganaste %d",TransportCost[i]);
						GameTextForPlayer(TransportDriver[i], string, 5000, 1);
						TransportDriver[i] = 999;
					}
				}
				else if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					GivePlayerCash(i, -TransportValue[TransportDriver[i]]);
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
		  					TransportCost[i] += TransportValue[TransportDriver[i]];
							TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
				TransportTime[i] += 1;
				new string[24];
				format(string, sizeof(string), "~r~%d ~w~: ~g~%d",TransportTime[i],TransportCost[i]);
				GameTextForPlayer(i, string, 15000, 6);
				GameTextForPlayer(TransportDriver[i], string, 15000, 6);
				if(TransportCost[i] > GetPlayerCash(i))
				{
				    RemovePlayerFromVehicle(i);
				    new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(i, slx, sly, slz);
					SetPlayerPos(i, slx, sly, slz + 2);
				    GameTextForPlayer(i, "~r~No tienes más dinero para pagar el taxi!", 4000, 4);
				}
			}
			if(IsPlayerInAnyVehicle(i))
			{
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetPlayerArmedWeapon(i, 0);
				else if(Info[i][pWeapons][4] == 0) SetPlayerArmedWeapon(i, 0);
				else SetPlayerArmedWeapon(i, 29);
			}
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && JetPack[i] == 0 && Info[i][pAdminZC] < 4)
			{
				new string[74 + MAX_PLAYER_NAME];
			    format( string, sizeof( string ), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) es posible que use Cheat de JetPack .", GetPlayerNameEx(i), i);
				ABroadCast( COLOR_YELLOW, string, 2 );
				format(string, sizeof(string), "%s (ID %d) es posible que use Cheat de JetPack.", GetPlayerNameEx(i), i);
				Log("logs/hack.log", string);
				format(string, sizeof(string), "AdmCmd: %s ha sido auto-expulsado, razón: jetpack hack.", GetPlayerNameEx(i), i);
				ABroadCast(COLOR_YELLOW, string, 0 );
				Kick(i);
			}
			if(IsPlayerInRangeOfPoint(i, 2, 1544.2, -1353.4, 329.4))
			{
				GivePlayerValidWeapon(i, 46);
			}
		}
	}
}

timer severTimers2[1000]()
{
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i) && gPlayerLogged{i} == 1)
		{
			if(GetPlayerPing(i) > MAX_PING)
			{
			    new string[128];
	           	format(string, sizeof(string), "[AdmWarning]: %s ha sido kickeado por tener %d de ping (maximo: 1500).", GetPlayerNameEx(i), GetPlayerPing(i) );
				ABroadCast(COLOR_GENERAL, string, 2);
	        	SendClientMessageEx(i, COLOR_GENERAL, ": {FFFFFF} {FFFFFF}Has sido expulsado del servidor, tu ping superó el máximo.");
	        	Kick(i);
		    }
			if(Info[i][pJudgeJailType] != 0 && Info[i][pJudgeJailTime] > 0 && !Info[i][pBeingSentenced]) Info[i][pJudgeJailTime]--;
			if(Info[i][pJudgeJailTime] <= 0 && Info[i][pJudgeJailType] != 0) Info[i][pJudgeJailType] = 0;
	        if(IsaRent[i] > 0)
			{
				if(RentTime[i] > 0)
				{
			       	RentTime[i]--;
			   	}
			   	if(RentTime[i] == 0)
				{
			       	RentTime[i] = 0;
			       	if(IsaRent[i] == 1)
					{
						IsaRent[i] = 0;
						new newcar = GetPlayerVehicleID(i);
						if(IsARentCar(newcar))
						{
							SetVehicleToRespawn(HireKey[i]);
							TogglePlayerControllable(i, 1);
						}
					}
				}
			}
   			if(CommandSpamUnmute[i] == 0){ CommandSpamTimes[i] = 0;}
			if(Info[i][pADTime] != 0){Info[i][pADTime]--;}
			if(Info[i][pServiceTime] != 0) { Info[i][pServiceTime]--; }
			if(Info[i][pSavedTime] != 0) { Info[i][pSavedTime]--; }
			if(NewbieTimer[i] > 0) { NewbieTimer[i]--; }
			if(VIPTimer[i] > 0){ VIPTimer[i]--; }
   			if(Info[i][pDPTime] != -1){
			   	Info[i][pDPTime]--;
			   	if(Info[i][pDPTime] == 0){
			       	Info[i][pDPHours] = 0;
			       	Info[i][pRHours] = 0;
			       	Info[i][pDPTime] = -1;
			       	Info[i][pPTR] +=1;
			       	SendClientMessageEx(i, COLOR_GREEN,"* Se terminó tu tiempo, no pudiste mantener el beneficio de Usuario Dedicado, intentalo de nuevo!");
			   	}
			}
			if(GetPlayerCash(i) != GetPlayerMoney(i))
			{
				ResetMoneyBar(i);
				UpdateMoneyBar(i,GetPVarInt(i, "Cash"));
			}
			if(Info[i][pTriageTime] != 0)
			{
				Info[i][pTriageTime]--;
    		}
 		    if(Info[i][pTempVIP] >= 1)
			 {
				Info[i][pTempVIP]--;
    		}
		    if(Info[i][pTempVIP] <= 0 && Info[i][pBuddyInvited] == 1)
			{
				Info[i][pTempVIP] = 0;
				Info[i][pBuddyInvited] = 0;
    			Info[i][pVIP] = 0;
				SendClientMessageEx(i, COLOR_VIP, "INFO: {FFFFFF}Tu VIP Temporal ha expirado.");
				SetPlayerToTeamColor(i);
     		}
			if(Info[i][pRMuted] > 1)
			{
			   	if(Info[i][pRMutedTime] > 0)
   				{
			   	    Info[i][pRMutedTime]--;
			   	}
			   	else
				{
			   	    Info[i][pRMuted] = 0;
			   	}
			}
		    if(Info[i][pJailed] > 0)
			{
				if(Info[i][pJailTime] > 0)
				{
					Info[i][pJailTime]--;
					new text[128];
		        	switch(Info[i][pJailed])
					{
		            	case 1, 4: format(text, sizeof(text), "~n~~n~~n~~n~~n~~n~~n~ ~r~Jail OOC!~n~~w~%d segundos (%i minutos) restantes", Info[i][pJailTime], Info[i][pJailTime]/60);
					}
					GameTextForPlayer(i, text, 2000, 3);
				}
    			if(Info[i][pJailTime] <= 0)
				{
				    Info[i][pJailTime] = 0;
				    switch(Info[i][pJailed])
				    {
				        case 2:{
						SetPosEx(i,1605.5861,-1646.6277,13.5469,0,0,0);
						Info[i][pWantedLevel] = 0;
						SetPlayerWantedLevel(i, Info[i][pWantedLevel]);
				        }
				        case 3:{
				 		SetPlayerInterior(i, 0);
				 		Info[i][pInt] = 0;
			 			SetPlayerVirtualWorld(i, 0);
			 			Info[i][pVW] = 0;
			 			SetPlayerPos(i,343.1081,-1521.4404,33.2985);
				        }
				        case 1,4:{
				    	SetPlayerInterior(i, 0);
				    	Info[i][pInt] = 0;
				    	SetPosEx(i,1552.8286,-1674.9845,16.1953,0,0,0);
				        }
				        case 5:{
			 			SetPlayerInterior(i, 0);
			 			Info[i][pInt] = 0;
			 			SetPlayerVirtualWorld(i, 0);
			 			Info[i][pVW] = 0;
			 			SetPlayerPos(i,130.0132,1945.5618,19.3507);
						}
				        case 6:{
			 			SetPlayerInterior(i, 0);
			 			Info[i][pInt] = 0;
			 			SetPlayerVirtualWorld(i, 0);
			 			Info[i][pVW] = 0;
			 			SetPlayerPos(i,634.5880,-572.4195,16.3359);
						}
						case 1000:{
				    	SetPlayerInterior(i, 0);
				    	Info[i][pInt] = 0;
				    	SetPosEx(i,1552.8286,-1674.9845,16.1953,0,0,0);
				    	}
					}
					Info[i][pJailed] = 0;
					PhoneOnline[i] = 0;
					SendClientMessageEx(i, COLOR_GREEN,"Has pagado tu condena.");
					//GameTextForPlayer(i, "~g~Eres Libre~n~~w~Se mejor persona.", 5000, 1);
					SetPlayerSkin(i, Info[i][pChar]);
					SetPlayerToTeamColor(i);
				}
			}
			if(Info[i][pWantedLevel] > 0)
			{
			   	SetPlayerWantedLevel(i, Info[i][pWantedLevel]);
			}
		    if(UsedFind[i] >= 1){
		    	UsedFind[i] -= 1;
		   	}
   			if(JustReported[i] > 0){
				JustReported[i]--;
			}
			if(JustDuda[i] > 0){
				JustDuda[i]--;
			}
			if(JustAfk[i] > 0){
				JustAfk[i]--;
			}
			if(tarmalimit[i] > 0){
				tarmalimit[i]--;
			}
		    if(Info[i][pGiftTime] != 0){
				Info[i][pGiftTime]--;
			}
			if(PlayerTazeTime[i] >= 1){
				PlayerTazeTime[i] += 1;
				if(PlayerTazeTime[i] == 15){PlayerTazeTime[i] = 0;}
			}
			if(MechanicCallTime[i] > 0)
			{
				if(MechanicCallTime[i] == 300) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Checkpoint eliminado!", 2500, 1); }
				else
				{
				    new string[5];
					format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(MedicCallTime[i] > 0)
			{
				if(MedicCallTime[i] == 45) { MedicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Checkpoint eliminado!", 2500, 1); }
				else
				{
				    new string[5];
					format(string, sizeof(string), "%d", 45 - MedicCallTime[i]);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MedicAccepted[i], X, Y, Z);
					SetPlayerCheckpoint(i, X, Y, Z, 5);
					GameTextForPlayer(i, string, 1500, 6);
					MedicCallTime[i] += 1;
				}
			}
			if(GetPlayerState(i) == PLAYER_STATE_ONFOOT) for(new h = 0; h < sizeof(fINFO); h++)
			{
				if(IsPlayerInRangeOfPoint(i, 2.0, fINFO[h][FamilySafe][0], fINFO[h][FamilySafe][1], fINFO[h][FamilySafe][2]))
				{
					if(fINFO[h][FamilyUSafe] == 1)
					{
						GameTextForPlayer(i, "~y~Caja Fuerte~w~~n~Escribe ~r~/ayudacajafam~w~ para mas informacion", 5000, 3);
					}
				}
			}
			if(EMSCallTime[i] > 0)
			{
		    	if(EMSAccepted[i] < 999)
				{
		        	if(IsPlayerConnected(EMSAccepted[i]))
					{
		            	new Float:X,Float:Y,Float:Z;
		            	GetPlayerPos(EMSAccepted[i], X, Y, Z);
		            	SetPlayerCheckpoint(i, X, Y, Z, 5);
					}
				}
			}
			if(Info[i][pEstado] == 1){
				if(PlayerCuffedTime[i] <= 0){
			    	//Frozen[i] = 0;
			    	SetPVarInt(i, "IsFrozen", 0);
					TogglePlayerControllable(i, 1);
					Info[i][pEstado] = 0;
					SetPVarInt(i, "PlayerCuffed", 0);
					PlayerCuffedTime[i] = 0;
					PlayerTazeTime[i] = 1;
					ClearAnimations(i);
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(i, X, Y, Z);
					SetPlayerPos(i, X, Y, Z);
				}
				else{
					PlayerCuffedTime[i] -= 1;
				}
			}
			if(Info[i][pEstado] == 2){
				if(PlayerCuffedTime[i] <= 0){
			    	new Float:X, Float:Y, Float:Z;
			    	GetPlayerPos(i, X, Y, Z);
			    	new copinrange;
					foreach(Player, j){
			    		if(IsPlayerInRangeOfPoint(j, 30, X, Y, Z) && IsACop(j)){copinrange = 1;}
					}
			    	if(copinrange == 0)
					{
						//Frozen[i] = 0;
						SetPVarInt(i, "IsFrozen", 0);
						GameTextForPlayer(i, "~r~Rompiste las esposas eres libre!", 2500, 3);
						TogglePlayerControllable(i, 1);
						Info[i][pEstado] = 0;
						DeletePVar(i, "PlayerCuffed");
						PlayerCuffedTime[i] = 0;
					}
					else{PlayerCuffedTime[i] = 60;}
				}
				else{PlayerCuffedTime[i] -= 1;}
			}
			if(PlayerDrunk[i] > 9)
			{
		    	if(PlayerDrunkTime[i] > 20)
				{
		    		ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
		    		SetPlayerDrunkLevel(i, PlayerDrunk[i]*1000);
		    		PlayerDrunk[i] -= 1;
		    		PlayerDrunkTime[i] = 0;
				}
				PlayerDrunkTime[i] += 1;
			}
			if(PlayerDrunk[i] < 10 && PlayerDrunk[i] > 0)
			{
		    	if(PlayerDrunkTime[i] > 30)
				{
		        	PlayerDrunk[i] -= 1;
                   	PlayerDrunkTime[i] = 0;
				}
				PlayerDrunkTime[i] += 1;
			}
		}
	}
}

//UPDATE ACCOUNTS TICKRATE 5 MIN
timer saveAccounts[180000]()
{
	//new string[128];
	saveFamilies();
	saveFamiliesHQ();
	new playerip[32];
	foreach(Player, i){
	    if(gPlayerLogged{i}){
  			/*format(string, sizeof(string), "Experiencia: %d/%d", Info[i][pExp], (Info[i][pLevel]+1)*(explevel)); // sistema experiencia (nota copiar todo desde update asta timer
    		TextDrawSetString(Experiencia[i], string);*/
			Info[i][pInt] = GetPlayerInterior(i);
			Info[i][pVW] = GetPlayerVirtualWorld(i);
			GetPlayerPos(i, Info[i][pPos_x], Info[i][pPos_y], Info[i][pPos_z]);
			GetPlayerFacingAngle(i, Info[i][pPos_r]);
			GetPlayerIp(i, playerip, sizeof(playerip));
			format(Info[i][pIP], 32, "%s", playerip);
        	OnPlayerSavedStats(i);
        }
    }
    print("EXE:saveAccounts;");
}

// Timer Name: VehicleUpdate()
// TickRate: 10 Sec.
timer VehicleUpdate[10000]()
{
    new engine,lights,alarm,doors,bonnet,boot,objective,modelid;
    for(new v = 0; v < MAX_VEHICLES; v++) if(GetVehicleModel(v)){
		modelid = GetVehicleModel(v);
	    GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
		switch(modelid){
			case 520, 476, 593, 553, 513, 512, 577, 592, 511, 539, 464, 519: VehicleFuel[v] = 200;
			case 509, 481, 510: VehicleFuel[v] = 200, arr_Engine{v} = 1, SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}
	    if(engine == VEHICLE_PARAMS_ON){
			if(VehicleFuel[v] > 0 && !IsAHarvest(v)){
				VehicleFuel[v]-=1;
				if(VehicleFuel[v] <= 0) SetVehicleParamsEx(v,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			}
			if(arr_Engine{v} == 0) SetVehicleParamsEx(v,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	    }
	}
}
timer ServerMicrobeat[250]()
{
    new
		Float: fExpHealth,
		Float: fCurrentSpeed,
		iVehicle,
		arrDamage[4],
		arrVehParams[7],
		szSpeed[80];
	foreach(Player, i){
	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER){
		    fCurrentSpeed = player_get_speed(i);
			fVehSpeed[i] = fCurrentSpeed;
			iVehicle = GetPlayerVehicleID(i);
  			for(new s=0;s<10;s++){
				if(SpikeStrips[s][sX] != 0){
					if(VehicleToPoint( 3.0, iVehicle, SpikeStrips[s][sX], SpikeStrips[s][sY], SpikeStrips[s][sZ])){
			  			GetVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
			 			arrDamage[3] = encode_tires(1, 1, 1, 1);
			   			UpdateVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
		  			}
				}
	   		}
			GetVehicleHealth(iVehicle,fExpHealth);
			if(fExpHealth < 350.0 && !IsABike(iVehicle)){
 				SetVehicleHealth(iVehicle, 251.0);
    			GetVehicleParamsEx(iVehicle, arrVehParams[0], arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
				if(arrVehParams[0] == VEHICLE_PARAMS_ON) SetVehicleParamsEx(iVehicle,VEHICLE_PARAMS_OFF, arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
				GameTextForPlayer(i, "~r~Motor averiado!", 2500, 3);
				arr_Engine{iVehicle} = 0;
			}
			else if(Info[i][pSpeedo] != 0 && arr_Engine{iVehicle} == 1)
			{
			    if(fCurrentSpeed > 140){
					format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~%.0f KPH ~w~- Gas: %d", fCurrentSpeed, VehicleFuel[iVehicle]);
				}
				else if(fCurrentSpeed > 40){
					format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~%.0f KPH ~w~- Gas: %d", fCurrentSpeed, VehicleFuel[iVehicle]);
				}
				else if(fCurrentSpeed >= 0){
					format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~%.0f KPH ~w~- Gas: %d", fCurrentSpeed, VehicleFuel[iVehicle]);
				}
			}
 			if(GetPVarInt(i,"PlayerHasBeenFlashed") == 1)
			{
				continue;
			}
			else if (GetPVarInt(i,"PlayerHasBeenFlashed") == 2)
			{
				DeletePVar(i,"PlayerHasBeenFlashed");
				continue;
			}
			new v = GetPlayerVehicle(i, iVehicle);
			if(v != -1)
			//if(!LSPD_IsACopCar(iVehicle) && !IsAnAmbulance(iVehicle) && !FBI_Vehicle(iVehicle) && !IsAnNGCar(iVehicle))
			{
				for(new b = 0; b < MAX_vCAMERAS;b++)
    			{
 					if(IsPlayerInRangeOfPoint(i,vCameraInfo[b][vCameraRange],vCameraInfo[b][vCameraPos][0], vCameraInfo[b][vCameraPos][1], vCameraInfo[b][vCameraPos][2]) && vCameraInfo[b][vCameraStatus] == 0)
    				{
        				new limit = vCameraInfo[b][vCameraLimit];
        				if(fCurrentSpeed > limit)
        				{
        					TextDrawShowForPlayer(i,flash);
            				new Float:x, Float:y, Float:z, szMessage[512];
            				GetPlayerPos(i,x,y,z);
            				PlayerPlaySound(i, 1132, x, y, z);
            				SetPVarInt(i,"PlayerHasBeenFlashed",1);
            				SetTimerEx("RemoveFlash",1000,false,"i",i);
							format(szMessage, sizeof(szMessage), "¡Detectado! Tu velocidad sobrepasó lo permitido en esta zona. {FFFFFF}Tu velocidad: %.0f MPH - Max: %d MPH - Multa: $%d",fCurrentSpeed,limit,vCameraInfo[b][vCameraTicket]);
							SendClientMessageEx(i,COLOR_LIGHTBLUE,szMessage);
							SendClientMessageEx(i,COLOR_LIGHTBLUE,"Debes pagar la multa en la central de SAPD de lo contrario puedes ser arrestado o tu coche puede ser embargado.");
                    		PlayerVehicleInfo[i][v][pvTicket] += vCameraInfo[b][vCameraTicket];
                    	}
					}
				}
			}
		}
	}
}
timer Mensajes[600000]()
{
	foreach(Player, i){
	    if(Advisors > 0 && Info[i][pLevel] < 999) SendClientMessageEx(i, COLOR_LIGHTBLUE, "¿Necesitas ayuda? Los ayudantes están aquí para ayudarte. (/ayudame o /n para obtener ayuda.)");
		if(GetPlayerCash(i) < 0){
			if(MoneyMessage[i]==0){
				new string[128];
				format(string, sizeof(string), "Actualmente estás debiendo dinero; necesitas pagar $%d. Si no lo haces, serás arrestado...", GetPlayerCash(i));
				SendClientMessageEx(i, COLOR_LIGHTRED, string);
				MoneyMessage[i] = 1;
			}
		}
		else MoneyMessage[i] = 0;
	}
	if(VIPGiftsTimeLeft > 0 && VIPGifts == 1){
	    VIPGiftsTimeLeft -= 10;
	    if(VIPGiftsTimeLeft > 0){
		    new string[128];
			format(string, sizeof(string), "%s quiere que vengas al Club VIP hay regalos para ti [%d minutos restantes]", VIPGiftsName, VIPGiftsTimeLeft);
   			BroadCast(COLOR_LIGHTGREEN, string);
		}
	}
	if(VIPGiftsTimeLeft <= 0 && VIPGifts == 1){
	    VIPGiftsTimeLeft = 0;
	    VIPGifts = 0;
	    new string[128];
		format(string, sizeof(string), "Club VIP ya no está regalando obsequios. Gracias por venir!", VIPGiftsName, VIPGiftsTimeLeft);
		BroadCast(COLOR_LIGHTGREEN, string);
	}
}

timer EMSUpdate[3000](){
	foreach(Player, i){
	    if(GetPVarType(i, "Injured")){
	        if(GetPVarInt(i, "EMSAttempt") != 0){
				new Float:health;
 				GetPlayerHealth(i,health);
				if(GetPVarInt(i, "EMSAttempt") == -1)
				{
    				if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
					    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
				  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
	    			}
	    			SetHP(i, health-2);
	    			ApplyAnimation(i,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
					GameTextForPlayer(i, "~r~¡Estas Herido!~n~~g~/servicios medicos", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 1)
				{
	    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
					    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
				  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
	    			}
	    			SetHP(i, health-5);
	    			ApplyAnimation(i,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
					GameTextForPlayer(i, "~r~Herido~n~~w~Espera que SAMD llege...", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 8)
				{
	    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
					    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
				  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
	    			}
	    			SetHP(i, health-5);
	    			ApplyAnimation(i,"SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
					GameTextForPlayer(i, "~r~Herido~n~~w~Espera que SAMD llege...", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 2)
				{
	    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
					    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
						SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
				  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
	    			}
	    			GameTextForPlayer(i, "~g~Rescatado~n~~w~En espera de atencion medica...", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 3){
	    			if(IsPlayerInAnyVehicle(i)){
	        			new ambmodel = GetPlayerVehicleID(i);
	        			if(GetVehicleModel(ambmodel) == 416){
	    					GameTextForPlayer(i, "~g~Rescatado~n~~w~Espera que SAMD te lleve al hospital...", 5000, 3);
						}
						else{
	        				SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
	        				KillEMSQueue(i);
	        				SetPVarInt(i, "Hospital", 1);
							SpawnPlayer(i);
						}
					}
					else{
		    			SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
	        			KillEMSQueue(i);
	        			SetPVarInt(i, "Hospital", 1);
						SpawnPlayer(i);
					}
				}
				if(health <= 10)
				{
	    			SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
	    			KillEMSQueue(i);
	    			SetPVarInt(i, "Hospital", 1);
        	    	SetHP(i, 50);
					SpawnPlayer(i);
				}
	        }
	    }
	}
}

// Timer Name: SpecUpdate() TickRate: 3 secs.
timer SpecUpdate[3000](){
	foreach(Player, i){
	    if(Info[i][pAdminZC] >= 2){
		    if(Spectating[i] >= 1){
				if(Spectate[i] < 553){
					new targetid = Spectate[ i ];
					if( !IsPlayerConnected( targetid ) ){
    					SendClientMessageEx( i, COLOR_WHITE, "El jugador que estabas specteando salio del servidor." );
			    		GettingSpectated[Spectate[i]] = 999;
			    		Spectating[i] = 0;
						Spectate[i] = 999;
						SetPVarInt(i, "SpecState", -1);
						SetPVarInt(i, "SpecOff", 1 );
						TogglePlayerSpectating( i, false );
						SetCameraBehindPlayer(i);
						SetPlayerColor(i, COLOR_POINTGEN);
					}
				}
				if(Spectate[i] == 553){
					TogglePlayerControllable(i, 1);
					TogglePlayerSpectating(i, 0);
					DeletePVar(i, "MedicBill");
					SpawnPlayer( i );
					Spectate[i] = 999;
					Spectating[i] = 0;
					SetPlayerColor(i, COLOR_POINTGEN);
				}
				if(Spectate[i] == 554){
					TogglePlayerControllable(i, 1);
					SetPlayerInterior(i,Unspec[i][sPint]);
					Info[i][pInt] = Unspec[i][sPint];
					SetPlayerPos(i, Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2]);
					Spectate[i] = 999;
					SetPlayerColor(i, COLOR_POINTGEN);
				}
					if(Spectate[i] == 556){
					Spectate[i] = 999;
					SetPlayerColor(i, COLOR_POINTGEN);
				}
					if(Spectate[i] == 557){
					Spectate[i] = 554;
					SetPlayerColor(i, COLOR_POINTGEN);
				}
			}
		}
	}
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == koson)
	{
		if(Koson1[playerid]== 1)
		{
		    if(acobrarcesped[playerid]<300) acobrarcesped[playerid]=300;
		    if(acobrarcesped[playerid]>400) acobrarcesped[playerid]=400;
			DisablePlayerCheckpoint(playerid);
   				armaRecibir[playerid]=random(10);
				if(armaRecibir[playerid] == 5)
				{
				new string[128];
				format(string, sizeof(string), "Ganaste %d$ por tu trabajo y un regalo de parte del jefe",acobrarcesped[playerid]);
	  			GameTextForPlayer(playerid,string,4000,3);
				GivePlayerCash(playerid, acobrarcesped[playerid]);
   				new randomarma = random(sizeof(idarma));
				GivePlayerValidWeapon(playerid, idarma[randomarma]);
                SetPlayerSkin(playerid,OldskinJ[playerid]);
                acobrarcesped[playerid]=0;
			}else{
			    new string[128];
				format(string, sizeof(string), "Ganaste %d$ por tu trabajo",acobrarcesped[playerid]);
	  			GameTextForPlayer(playerid,string,4000,3);
				GivePlayerCash(playerid, acobrarcesped[playerid]);
				SetPlayerSkin(playerid,OldskinJ[playerid]);
				acobrarcesped[playerid]=0;
   				}
				Koson1[playerid]= 0;
				recojercesped[playerid]=0;
		}
	}
	if(pickupid == cesped)
	{
		GameTextForPlayer(playerid,"~r~Usa /recogercesped para empezar el trabajo!",3000,3);
	}
            if(pickupid == Talararbol[0])
            {
                    if (talar[playerid] == 1)
                    {
                	if(GetPVarInt(playerid,"PlayerStartDrova") == 0) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Acepta primero el trabajo)");
                    ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,11000);
                    SetPlayerAttachedObject(playerid,1, 341, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
            		Tiempotalar[playerid] = SetTimerEx("espera",5000,false,"i", playerid);
                 	Azar1 = random(sizeof(Maderaazar));
                	gcorte[playerid] += Maderaazar[Azar1][0];
					CorteX+=Maderaazar[Azar1][0];
					CorteY+=Maderaazar[Azar1][0];
					CorteY ++;
                    TrabajoL[playerid] = true;
                    SetTimerEx("arbol1",4000,false,"i", playerid);
                    lena1[playerid] = 1;
                    talar[playerid]=0;
                    }
            }
            else if(pickupid == Talararbol[1])
            {
                    if (talar[playerid] == 1)
                    {
                    if(GetPVarInt(playerid,"PlayerStartDrova") == 0) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Acepta primero el trabajo)");
                    ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,11000);
					SetPlayerAttachedObject(playerid,1, 341, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
            		Tiempotalar[playerid] = SetTimerEx("espera",5000,false,"i", playerid);
                	Azar1 = random(sizeof(Maderaazar));
                	gcorte[playerid] += Maderaazar[Azar1][0];
					CorteX+=Maderaazar[Azar1][0];
					CorteY+=Maderaazar[Azar1][0];
					CorteY ++;
                    TrabajoL[playerid] = true;
                    SetTimerEx("arbol2",4000,false,"i", playerid);
                    lena1[playerid] = 1;
                    talar[playerid]=0;
                    }
            }
            else if(pickupid == Talararbol[2])
            {
                    if (talar[playerid] == 1)
                    {
                    if(GetPVarInt(playerid,"PlayerStartDrova") == 0) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Acepta primero el trabajo)");
                    ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,11000);
					SetPlayerAttachedObject(playerid,1, 341, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
            		Tiempotalar[playerid] = SetTimerEx("espera",5000,false,"i", playerid);
                	Azar1 = random(sizeof(Maderaazar));
                	gcorte[playerid] += Maderaazar[Azar1][0];
					CorteX+=Maderaazar[Azar1][0];
					CorteY+=Maderaazar[Azar1][0];
					CorteY ++;
                    TrabajoL[playerid] = true;
                    SetTimerEx("arbol3",4000,false,"i", playerid);
                    lena1[playerid] = 1;
                    talar[playerid]=0;
                    }
            }
            else if(pickupid == Talararbol[3])
            {
                    if (talar[playerid] == 1)
                    {
                	if(GetPVarInt(playerid,"PlayerStartDrova") == 0) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Acepta primero el trabajo");
                    ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,11000);
					SetPlayerAttachedObject(playerid,1, 341, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
            		Tiempotalar[playerid] = SetTimerEx("espera",5000,false,"i", playerid);
                	Azar1 = random(sizeof(Maderaazar));
                	gcorte[playerid] += Maderaazar[Azar1][0];
					CorteX+=Maderaazar[Azar1][0];
					CorteY+=Maderaazar[Azar1][0];
					CorteY ++;
                    TrabajoL[playerid] = true;
                    SetTimerEx("arbol4",4000,false,"i", playerid);
                    lena1[playerid] = 1;
                    talar[playerid]=0;
                    }
            }
        if(pickupid == lena)
	{
		if(lena1[playerid]== 1)
		{
			new string[128];
	 		ClearAnimations(playerid);
	 		DisablePlayerCheckpoint(playerid);
			GivePlayerCash(playerid, gcorte[playerid] * 3);
			lena1[playerid]= 0;
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,1,0,0,0,2500);
			format(string, sizeof(string), "Recibiste %d$ por tu trabajo",gcorte[playerid]* 3);
			GameTextForPlayer(playerid,string,4000,3);
			talar[playerid]=1;
			gcorte[playerid] = 0;
			for(new x2;x2<MAX_PLAYERTOYS;x2++)
	    	{
		    RemovePlayerAttachedObject(playerid, x2);
        	}
		}
	}
	if(pickupid == ganja)
	{
		GameTextForPlayer(playerid,"~r~Usa /vendercosecha para recibir tu paga!",3000,3);
	}
    if(pickupid == roboV)
    {
    	GameTextForPlayer(playerid,"~r~Usa /robarshop por toda la tienda!",3000,3);
	}
	if(pickupid == roboD)
    {
    	GameTextForPlayer(playerid,"~r~Usa /dejarrobo para vender el objeto robado!",3000,3);
	}
	if(pickupid == bombita)
	{
		GameTextForPlayer(playerid,"~r~Usa /Cbomba para comprar una bomba, precio:20.000$!",3500,3);
	}
    if(pickupid == ticketR)
    {
    GameTextForPlayer(playerid,"~p~/Cticket: Precio del Ticket:50$!",3000,3);
    }
    return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
		enum
	{
		CHECKPOINT_1,
		CHECKPOINT_2,
		CHECKPOINT_3,
		CHECKPOINT_4,
		CHECKPOINT_5,
		CHECKPOINT_6,
		CHECKPOINT_7,
		CHECKPOINT_8,
		CHECKPOINT_9,
		CHECKPOINT_10,
		CHECKPOINT_11,
		CHECKPOINT_12,
		CHECKPOINT_13,
		CHECKPOINT_14,
		CHECKPOINT_15,
	}
    	if(Kosonrob[playerid] == 1)
		{
			switch(pKosonrob[playerid])
			{
			case CHECKPOINT_1:
    			{
					pKosonrob[playerid] = CHECKPOINT_2;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,2040.2615,-1239.2533,22.5250,1.0972,-1164.6312,20.3167, 5.0);
					new cobro1=random(50);
                    acobrarcesped[playerid]+=cobro1;
				}
			case CHECKPOINT_2:
				{
					pKosonrob[playerid] = CHECKPOINT_3;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,2037.7347,-1153.3411,22.9239,94.2694,-1171.8638,22.3931, 5.0);
					new cobro2=random(50);
                    acobrarcesped[playerid]+=cobro2;
				}
			case CHECKPOINT_3:
				{
					pKosonrob[playerid] = CHECKPOINT_4;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1973.5685,-1157.2955,20.5330,90.5327,-1225.0547,16.6850, 5.0);
					new cobro3=random(50);
                    acobrarcesped[playerid]+=cobro3;
				}
			case CHECKPOINT_4:
				{
					pKosonrob[playerid] = CHECKPOINT_5;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1888.0820,-1156.6615,23.7287,198.9810,-1246.1703,22.7465, 5.0);
					new cobro4=random(50);
                    acobrarcesped[playerid]+=cobro4;
				}
			case CHECKPOINT_5:
				{
                    pKosonrob[playerid] = CHECKPOINT_6;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1918.8859,-1233.3040,17.0178,280.3542,0.0,0.0, 5.0);
					new cobro5=random(50);
                    acobrarcesped[playerid]+=cobro5;
				}
			case CHECKPOINT_6:
				{
                    pKosonrob[playerid] = CHECKPOINT_7;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1969.6433,-1223.3857,19.6034,282.1702,0.0,0.0, 5.0);
					new cobro6=random(50);
                    acobrarcesped[playerid]+=cobro6;
				}
			case CHECKPOINT_7:
				{
                    pKosonrob[playerid] = CHECKPOINT_8;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,2048.9810,-1204.7010,23.0090,62.0343,0.0,0.0, 5.0);
					new cobro7=random(50);
                    acobrarcesped[playerid]+=cobro7;
				}
			case CHECKPOINT_8:
				{
                    pKosonrob[playerid] = CHECKPOINT_9;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1974.1473,-1177.3590,19.6034,92.4975,0.0,0.0, 5.0);
					new cobro8=random(50);
                    acobrarcesped[playerid]+=cobro8;
				}
			case CHECKPOINT_9:
				{
                    pKosonrob[playerid] = CHECKPOINT_10;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1898.7450,-1181.7754,23.1214,143.4958,0.0,0.0, 5.0);
					new cobro9=random(50);
                    acobrarcesped[playerid]+=cobro9;
				}
				case CHECKPOINT_10:
				{
                    pKosonrob[playerid] = CHECKPOINT_11;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1867.7736,-1228.7124,16.5319,256.9824,0.0,0.0, 5.0);
					new cobro10=random(50);
                    acobrarcesped[playerid]+=cobro10;
				}
				case CHECKPOINT_11:
				{
                    pKosonrob[playerid] = CHECKPOINT_12;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,1946.0057,-1241.0990,18.7193,282.7324,0.0,0.0, 5.0);
					new cobro11=random(50);
                    acobrarcesped[playerid]+=cobro11;
				}
			case CHECKPOINT_12:
				{
                    pKosonrob[playerid] = CHECKPOINT_13;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,2044.1243,-1220.5642,22.6328,29.5925,0.0,0.0, 5.0);
					new cobro12=random(50);
                    acobrarcesped[playerid]+=cobro12;
				}
			case CHECKPOINT_13:
				{
                    pKosonrob[playerid] = CHECKPOINT_14;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 2,2001.8083,-1153.2592,21.6568,175.6700,-1164.6312,20.3167, 5.0);
					new cobro13=random(50);
                    acobrarcesped[playerid]+=cobro13;
				}
			case CHECKPOINT_14:
				{
                    pKosonrob[playerid] = CHECKPOINT_15;
					JobAmmounts2[playerid] ++;
					SetPlayerRaceCheckpoint(playerid, 1,2021.1426,-1284.9330,25.6477,1991.8071,-1164.6312,20.3167, 5.0);
					new cobro14=random(50);
                    acobrarcesped[playerid]+=cobro14;

				}
			case CHECKPOINT_15:
				{
				new cobro15=random(50);
				acobrarcesped[playerid]+=cobro15;
    			acobrarcesped[playerid]+=cobro15;
				DisablePlayerRaceCheckpoint(playerid);
				Koson1[playerid]=1;
				GameTextForPlayer(playerid,"~w~cobra tu paga en la casa",6000,3);
				recojercesped[playerid]=0;
				RemovePlayerFromVehicle(playerid);
				}
			}
		}
		return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(Info[playerid][pAdminZC] > 5999)
	{
    SetPlayerPosFindZ(playerid, fX, fY, fZ);
    }
    return 1;
}

public Tiempoarbol0(playerid)
{
DestroyObject(Arbolmuerto[0]);
Arbolvivo[0] = CreateObject(726, -528, -1453.8994140625, 9.8999996185303, 0, 0, 0);
return 1;
}
public Tiempoarbolx(playerid)
{
DestroyObject(Arbolmuerto[1]);
Arbolvivo[1] = CreateObject(763, -513.7998046875, -1470.7998046875, 10.800000190735, 0, 0, 0);
return 1;
}
public Tiempoarbolxx(playerid)
{
DestroyObject(Arbolmuerto[2]);
Arbolvivo[2] = CreateObject(766, -525.8994140625, -1473.5, 9.8999996185303, 0, 0, 0);
return 1;
}
public Tiempoarbolxxx(playerid)
{
DestroyObject(Arbolmuerto[3]);
Arbolvivo[3] = CreateObject(727, -514.69921875, -1457.099609375, 10.89999961853, 0, 0, 0);
return 1;
}

public espera(playerid)
{
    new string[128];
	if(TrabajoL[playerid]==true){
	SetPlayerAttachedObject(playerid, 1 , 1463, 1,0.20,0.36,0.0,0.0,90.0, 0.0, 0.4, 0.3, 0.6);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
	StopAudioStreamForPlayer(playerid);
	format(string, sizeof(string), "Recogiste  %d de madera",gcorte[playerid]);
 	GameTextForPlayer(playerid,string,4000,3);
 	SetPlayerCheckpoint(playerid, -407.2330,-1426.3041,26.3147, 3.0);
	}
	return 1;
}

public arbol1(playerid)
{
	DestroyObject(Arbolvivo[0]);
	Arbolmuerto[0] = CreateObject(843, -529.7998046875, -1453.8994140625, 10.5, 0, 0, 0);
 	SetTimerEx("Tiempoarbol0", 10000, false, "i", playerid);
 	RemovePlayerAttachedObject(playerid, 1);
  	return 1;
}

public arbol2(playerid)
{
	DestroyObject(Arbolvivo[1]);
 	Arbolmuerto[1] = CreateObject(843, -513.70001220703, -1472.3000488281, 11.300000190735, 0, 0, 87.989501953125);
 	SetTimerEx("Tiempoarbolx", 10000, false, "i", playerid);
 	RemovePlayerAttachedObject(playerid, 1);
  	return 1;
}

public arbol3(playerid)
{
	DestroyObject(Arbolvivo[2]);
 	Arbolmuerto[2] = CreateObject(843, -525.79998779297, -1475.1999511719, 10.300000190735, 0, 0, 87.989501953125);
 	SetTimerEx("Tiempoarbolxx", 10000, false, "i", playerid);
 	RemovePlayerAttachedObject(playerid, 1);
  	return 1;
}

public arbol4(playerid)
{
	DestroyObject(Arbolvivo[3]);
 	Arbolmuerto[3] = CreateObject(843, -516.19921875, -1457, 11.5, 0, 0, 0);
  	SetTimerEx("Tiempoarbolxxx", 10000, false, "i", playerid);
  	RemovePlayerAttachedObject(playerid, 1);
  	return 1;
}

////////////////robos tienda electroncia////////////////////
forward RobadoCosas(playerid);
public RobadoCosas(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7.0,1009.2381,48.5105,55.3221))
	{
    YaRobo[playerid] = 1;
	new randomrobo = random(8);
	switch(randomrobo)
	{
	    case 0:
		{
		    SendClientMessage(playerid,-1,"Logras robar una TV Vieja.");
			RobarTVVieja(playerid);
			SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
			SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 1:
		{
		    SendClientMessage(playerid,-1,"Logras robar una TV Moderna.");
			RobarTVBuena(playerid);
			SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
			SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 2:
		{
		    SendClientMessage(playerid,-1,"Logras robar una Caja de Madera.");
		    RobarCaja(playerid);
		    SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 3:
		{
            SendClientMessage(playerid,-1,"Logras robar una PC.");
            RobarPC(playerid);
            SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
            SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 4:
		{
		    SendClientMessage(playerid,-1,"Logras robar una PlayStation vieja.");
		    RobarPlayVieja(playerid);
		    SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 5:
		{
		    SendClientMessage(playerid,-1,"Logras robar una PlayStation nueva.");
		    RobarPlayBuena(playerid);
		    SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 6:
		{
		    SendClientMessage(playerid,-1,"Logras robar una Videograbadora vieja.");
		    RobarVideoVieja(playerid);
		    SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
		case 7:
		{
		    SendClientMessage(playerid,-1,"Logras robar una Videograbadora nueva.");
		    RobarVideoBuena(playerid);
		    SetPlayerCheckpoint(playerid, 2447.9905,-1975.9823,13.5469, 2);
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda usar /tirarrobo si te persige SAPD!");
		}
	}
	}
	return 1;
}


public TimerGCRP(playerid)
{
	if(Info[playerid][pEstado] == 1)
	{
	Info[playerid][pEstado] = 0;
	DeletePVar(playerid, "IsFrozen");
	TogglePlayerControllable(playerid, 1);
	}
	return 1;
}


public TimerKICK(playerid)
{
	Kick(playerid);
	return 1;
}
public TimerBAN(playerid)
{
Info[playerid][pBannedZC] = 2;
UnloadPlayerVehicles(playerid);
Kick(playerid);
return 1;
}

public TimerBANIP(playerid)
{
new playerip[32];
Info[playerid][pBannedZC] = 2;
GetPlayerIp(playerid, playerip, sizeof(playerip));
Kick(playerid);
AddBan(playerip);
return 1;
}



public TimerROB(playerid)
{
    Info[playerid][probita] = 0;
	return 1;
}

public Timermanubrio(playerid)
{
	manubrio[playerid] = 0;
	return 1;
}

public TimerESCAPE(playerid)
{
	if(Info[playerid][pEstado] == 0)
	{
	SetPlayerPos(playerid, 1500.1703,-1513.8224,36.9866);
	}
return 1;
}

public TimerBANK(playerid)
{
 	new Float:x, Float:y, Float:z;
	GetObjectPos(BOMBA[playerid], x, y, z);
	CreateExplosion(x, y, z, 7, 2.0);
	DestroyObject(BOMBA[playerid]);
	SendClientMessage(playerid,-1,"{FF0000}>>{FFFFFF}La puerta fué destrozada, roba la caja fuerte.");
	pbomba[playerid] = 0;
	bombap[playerid] = 0;
	MoveDynamicObject(Pbankazo,1000.86, -1170.12, 7.67, 10);
 	SetTimer("BankClose", 900000, 0);
	return 1;
}
public TimerTICKET(playerid)
{
 Vortex[playerid] = 0;
 RemovePlayerFromVehicle(playerid);
 SendClientMessageEx(playerid, COLOR_GREY, "Se acabó el tiempo de tu ticket,compra otro!");
 return 1;
}

public TimerBANCO(playerid)
{
robobanco[playerid] = 0;
return 1;
}

public Tiempo(playerid)
{
		if(IsPlayerInRangeOfPoint(playerid, 25.0, 1518.2928,-1564.0775,-22.1879))
		{
       	new string[256];
  		new Dinero = RandomEx(300000, 600000);
	   	format(string, sizeof(string), "Has logrado robar  {E26306}$%d{FFFFFF}, dile a un administrador que te de el dinero al escapar del banco.", Dinero);
	   	SendClientMessage(playerid, COLOR_WHITE, string);
	   	format(string, sizeof(string), "%s (ID: %d) ha robado {E26306}$%d{FFFFFF} del banco, spectealo y al culminar el robo, dale el dinero.", GetPlayerNameEx(playerid), playerid, Dinero);
	   	ABroadCast(COLOR_WHITE, string, 5000);
		//Earn(playerid, Dinero);
	   	SendClientMessage(playerid, COLOR_GREEN, "Escapa por la cuerda, usa /escapar");
	   	SetTimerEx("TimerBANCO",3600000,false,"d",playerid);
	   	//SetPlayerCheckpoint(playerid, 1500.1703,-1513.8224,36.9866, 5);
     	//SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.024558, -0.279748, -0.060589, 6.105677, 137.291320, 147.132202, 1.019888, 1.000000, 1.000000 );
	   	}
	   	return 1;
}
	stock RandomEx(min, max)
	{
    new randval = random(max - min) + min;
    return randval;
	}


forward sound_alarm();
public sound_alarm()
{
	PlaySoundForAll(6001);
	return 1;
}

forward alarm_off();
public alarm_off()
{
	PlaySoundForAll(13606);
	return 1;
}

stock OpenBlastDoor()
{
	MoveObject(blast_door_obj, 321.42, -1188.23, 81.57, 0.5);
	blast_door_open = 1;
	PlaySoundForAll(1153, 321.42, -1188.23, 81.57);
	SetTimer("close_blast_door", 10000, 0);
	return 1;
}

stock OpenLSPDdoor()
{
	MoveObject(LSPD_door_obj, 1545.61, -1627.85, 26.22, 0.5);
	LSPD_door_open = 1;
	PlaySoundForAll(1153, 1545.58, -1627.96, 17.59);
	SetTimer("close_LSPD_door", 10000, 0);
	return 1;
}

stock Openblackdoor()
{
	MoveObject(black_door_obj, 1643.27, -1714.88, 23.64, 0.5);
	black_door_open = 1;
	PlaySoundForAll(1153, 1643.27, -1714.88, 16.64);
	SetTimer("close_black_door", 10000, 0);
	return 1;
}

stock Opensubdoor()
{
	MoveObject(sub_door_obj, 2361.20, -1272.13, 26.64, 1);
	sub_door_open = 1;
	PlaySoundForAll(1153, 2361.20, -1272.13, 24.20);
	SetTimer("close_sub_door", 15000, 0);
	return 1;
}

stock PlaySoundForAll(soundid, Float:x=0.0, Float:y=0.0, Float:z=0.0)
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    PlayerPlaySound(i, soundid, x, y, z);
	}
	return 1;
}
stock PickUpBoombox(playerid)
{
    foreach(Player, i)
	{
 		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
   		{
     		StopStream(i);
		}
	}
	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
	DeletePVar(playerid, "PlacedBB"); DeletePVar(playerid, "BBLabel");
 	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    foreach(Player, i)
	{
	    if(GetPVarType(i, "BBArea"))
	    {
	        if(areaid == GetPVarInt(i, "BBArea"))
	        {
	            StopStream(playerid);
	            SendClientMessage(playerid, COLOR_GREY, "* Te alejas de la zona y la música deja de oirse poco a poco");
				return 1;
	        }
	    }
	}
	return 1;
}

stock StopStream(playerid)
{
	DeletePVar(playerid, "pAudioStream");
    StopAudioStreamForPlayer(playerid);
}

stock PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(GetPVarType(playerid, "pAudioStream")) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, "pAudioStream", 1);
    PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
    if(IsPlayerConnected(playerid))
 	{
 	    switch(weaponid)
 	    {
 	        case 0: BajarVida(playerid, 5);
 	        case 1: BajarVida(playerid, 10);
 	        case 15: BajarVida(playerid, 15);
 	        case 13: BajarVida(playerid, 15);
 	        case 12: BajarVida(playerid, 15);
 	        case 11: BajarVida(playerid, 15);
 	        case 10: BajarVida(playerid, 15);
 	        case 14: BajarVida(playerid, 15);
 	        case 3: BajarVida(playerid, 15);
 	        case 5: BajarVida(playerid, 15);
 	        case 6: BajarVida(playerid, 15);
 	        case 7: BajarVida(playerid, 15);
      		case 2: BajarVida(playerid, 15);
 	        case 8: BajarVida(playerid, 25);
 	        case 4: BajarVida(playerid, 30);
 	        case 22: BajarVida(playerid, 45);
 	        case 23: BajarVida(playerid, 45);
 			case 24: BajarVida(playerid, 60);
 			case 25: BajarVida(playerid, 50);
 			case 27: BajarVida(playerid, 70);
 			case 28: BajarVida(playerid, 10);
 			case 29: BajarVida(playerid, 18);
 			case 30: BajarVida(playerid, 25);
 			case 31: BajarVida(playerid, 35);
 			case 32: BajarVida(playerid, 10);
 			case 33: BajarVida(playerid, 35);
 			case 34: BajarVida(playerid, 100);
 		}
 	}
	new string[128];
 	if(Team_LSPD(issuerid) && BalasDeGoma[issuerid] == 1)
	{
 		if(Paralizado[playerid] == 0)
   		{
     	format(string, sizeof(string), "*Has alcanzado con la bala de goma a %s.", GetPlayerNameEx(playerid));
      	SendClientMessageEx(issuerid, 0xFFFFFFFF, string);
       	SendClientMessageEx(playerid, 0xFFFFFFFF, "¡Te ha alcanzado una bala de goma! ¡Como duele! El dolor se te pasará en breve.");
        GameTextForPlayer(playerid, "~r~Paralizado", 3000, 3);
        TogglePlayerControllable(playerid, 0);
        Info[playerid][pEstado] = 0;
        ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
        ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
        Paralizado[playerid] = 1;
       	SetTimerEx("LevantarseP", 15000, false, "i", playerid);
        }
  	}
    return 1;
}
stock BajarVida(playerid,Float:vida)
{
 	new Float:Arm, Float:temporal, Float:Hp;
 	GetPlayerArmour(playerid, Arm);
 	if(Arm > 0.0)
 	{
	 	temporal = floatsub(Arm,vida);
	 	if(temporal < 0.0)
	 	{
	 	    SetPlayerArmour(playerid,0.0);
	 	    GetPlayerHealth(playerid, Hp);
	 	    SetPlayerHealth(playerid,floatsub(Hp,temporal));
	 	}
	 	else SetPlayerArmour(playerid, temporal);
 	}
 	else
 	{
 		GetPlayerHealth(playerid, Hp);
        SetPlayerHealth(playerid,floatsub(Hp,vida));
 	}
	return 1;
}

IsAtBarr(playerid)
{
    if(IsPlayerConnected(playerid)){
        if(PlayerToPoint(10.0,playerid,221.7099,299.1493,955.9631))         return 1;
		else if(PlayerToPoint(10.0,playerid,681.2422,-453.6727,-25.6172))   return 1;
		else if(PlayerToPoint(10.0,playerid,377.0499,-67.4344,1001.5078)) return 1;
		else if(PlayerToPoint(10.0,playerid,369.6622,-6.0164,1001.8589))  return 1;
		else if(PlayerToPoint(10.0,playerid,375.8651,-118.9402,1001.4995)) return 1;
		else if(PlayerToPoint(10.0,playerid,379.2390,-190.1861,1000.6328))   return 1;
		else if(PlayerToPoint(10.0,playerid,681.4490,-459.2420,-25.6172))    return 1;
		else if(PlayerToPoint(25.0,playerid,1920.0979,-1865.1298,13.6559))  return 1;
		else if(PlayerToPoint(10.0,playerid,1392.5297,-1893.1754,17.4266))  return 1;
		else if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))  return 1;
		else if(PlayerToPoint(10.0,playerid,1139.2091,-4.0456,1000.6719))  return 1;

	}
	return 0;
}
function ShowDNIFalse(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[18], otext[36];
	    new sendername[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(Info[playerid][pSex] == 1) { sex = "Masculino"; }
   		if(Info[playerid][pSex] == 2) { sex = "Femenino"; }
   		if(Info[targetid][pOrigin] == 1) { otext = "Norteamericana"; }
		else if(Info[targetid][pOrigin] == 2) { otext = "Centroamericana"; }
		else if(Info[targetid][pOrigin] == 3) { otext = "Sudamericana"; }
		else if(Info[targetid][pOrigin] == 4) { otext = "Europea"; }
		else if(Info[targetid][pOrigin] == 5) { otext = "Asiática"; }
		else if(Info[targetid][pOrigin] == 6) { otext = "Africana"; }
		else if(Info[targetid][pOrigin] == 7) { otext = "Oceánica"; }

   		format(string, sizeof(string), "Nombre: %s  Sexo: %s   Edad: %d", Info[playerid][pDNIName], sex, Info[playerid][pAge]);
   		SendClientMessageEx(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "Fecha Nacimiento: %d   Nacionalidad: %s", 2016-Info[playerid][pAge], otext);
   		SendClientMessageEx(targetid, COLOR_WHITE, string);
	}
}
//**********************
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
    if(listid == MueblesObj)
	{
	    if(response)
		{
	        if(Info[playerid][pMuebles][0] == -1)
	        {
				Info[playerid][pMuebles][0] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 1.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][1] == -1)
	        {
				Info[playerid][pMuebles][1] = modelid;
    			Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 2.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][2] == -1)
	        {
				Info[playerid][pMuebles][2] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 3.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][3] == -1)
	        {
				Info[playerid][pMuebles][3] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 4.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][4] == -1)
	        {
				Info[playerid][pMuebles][4] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 5.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][5] == -1)
	        {
				Info[playerid][pMuebles][5] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 6.");
				return 1;
			}
	        else if(Info[playerid][pMuebles][6] == -1)
	        {
				Info[playerid][pMuebles][6] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 7.");
				return 1;
			}
   			else if(Info[playerid][pMuebles][7] == -1)
	        {
				Info[playerid][pMuebles][7] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 8.");
				return 1;
			}
   			else if(Info[playerid][pMuebles][8] == -1)
	        {
				Info[playerid][pMuebles][8] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 9.");
				return 1;
			}
   			else if(Info[playerid][pMuebles][9] == -1)
	        {
				Info[playerid][pMuebles][9] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 10.");
				return 1;
			}
   			else if(Info[playerid][pMuebles][10] == -1)
	        {
				Info[playerid][pMuebles][10] = modelid;
				Bought(playerid, 100);
				businessVariables[businessID][bVault] += 100;
				businessVariables[businessID][bStock]--;
				SendClientMessageEx(playerid, COLOR_GREY, "¡Has comprado un nuevo mueble! para ponerlo en tu casa utiliza /ajustarcasa.");
				SendClientMessageEx(playerid, COLOR_GREY, " - El mueble ha sido guardado en la ranura 11.");
				return 1;
			} else return SendClientMessageEx(playerid, -1, "No tienes más espacio");

   		}
	    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    	SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	}
	//*********************
	if(listid == skinlist)
	{
	    if(response)
	    {
      	if(modelid >= 274 && modelid <= 288 || modelid >= 265 && modelid <= 267 || modelid >= 300 && modelid <= 311 || modelid == 71)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Skin no permitida");
			return 1;
		}
		SendClientMessage(playerid, 0xFF0000FF, "Has comprado una nueva ropa y te ha costado $100");
  		SetPlayerSkin(playerid, modelid);
 		GivePlayerCash(playerid,-100);
  		businessVariables[businessID][bVault] += 100;
   		businessVariables[businessID][bStock]--;
		SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
		SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	  	}
	 	else SendClientMessage(playerid, 0xFF0000FF, "Cancelaste la selección de ropa");
    	return 1;
	//***sistema muebles***
	}
	return 1;
}
function TEST_ROL(playerid)
{
    SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 20);
    InterpolateCameraPos(playerid, 1696.1245, -2342.9641, 49.4030, 1534.3175, -2375.8557, 49.4030, 5000);
	InterpolateCameraLookAt(playerid, 1696.5533, -2342.0801, 48.9030, 1533.5315, -2375.2649, 49.0580, 5000);
	SetPlayerPos(playerid,1696.1245, -2342.9641, 49.4030);
    ClearChatbox(playerid);
    SafeDialogEx(playerid, TEST_1, DIALOG_STYLE_LIST, "{008EC1}¿Cúando es correcto el uso del /b?", "1) {FFFFFF}No lo puedo usar en medio de un rol, puedo quedar sancionado.\n2) {FFFFFF}Para arruinar el rol de los demás.\n3) {FFFFFF}El comando /b no existe en el servidor.\n4) {FFFFFF}En donde yo quiera, en total no le hace daño a nadie.", "Aceptar", "");
	return 1;
}
public Clock(playerid)
{
    new string[256];
    new string2[256];
    new year, month, day;
    new hour, minute;
    getdate(year, month, day);
    gettime(hour,minute);
    new mtext[20];
    getdate(year, month, day);
    if(month == 1) { mtext = "Enero"; }
    else if(month == 2) { mtext = "Febrero"; }
    else if(month == 3) { mtext = "Marzo"; }
    else if(month == 4) { mtext = "Abril"; }
    else if(month == 5) { mtext = "Mayo"; }
    else if(month == 6) { mtext = "Junio"; }
    else if(month == 7) { mtext = "Julio"; }
    else if(month == 8) { mtext = "Agosto"; }
    else if(month == 9) { mtext = "Septiembre"; }
    else if(month == 10) { mtext = "Octubre"; }
    else if(month == 11) { mtext = "Noviembre"; }
    else if(month == 12) { mtext = "Diciembre"; }
    format(string, sizeof(string), "%d de %s del %d", day, mtext, year);
    TextDrawSetString(Text:FechaD, string);
    format(string2, sizeof(string2), "%d:%d", hour, minute);
    TextDrawSetString(Text:TiempoD, string2);
}
stock GetWeaponNameEx(id, name[], len) return format(name,len, "%s", GunNames[id]);
//**security**
public OnPlayerCleoDetected(playerid, cleoid)
{
#if defined AntiCleo 1
switch(cleoid)
{
case CLEO_CARWARP:
{
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Menu[1024];
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Expulsado por posible intento de Car Warp.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado por FireSecurity. Razón: Posible Car Warp.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
}
case CLEO_CARSWING:
{
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Menu[1024];
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Expulsado por posible intento de Car Swing.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado por FireSecurity. Razón: Posible Car Swing.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
}
case CLEO_CAR_PARTICLE_SPAM:
{
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Menu[1024];
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Expulsado por posible intento de Cleo Spam.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido expulsado por FireSecurity. Razón: Posible Cleo Spam.", Nombre);
SendClientMessageToAll(Gris, Texto);
Kick(playerid);
}
}
#endif
return 1;
}
stock DetectarIP(IP[])
{
new Codigo = 0;
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !strcmp(ObtenerIP(i), IP)) Codigo++;
return Codigo;
}
//==============================================================================
// Stock - ObtenerIP.
//==============================================================================
stock ObtenerIP(playerid)
{
new IP[16];
GetPlayerIp(playerid, IP, sizeof(IP));
return IP;
}
//==============================================================================
// Stock - BanearBots.
//==============================================================================
stock BanearBots(playerid)
{
#if defined AntiBot 1
new IP[32];
new Texto[256];
new Nombre[MAX_PLAYER_NAME];
new Menu[1024];
GetPlayerIp(playerid, IP, sizeof(IP));
for(new i = 0, PingUp = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !BotServidor[i])
{
PingUp = GetPlayerPing(i);
if(i == playerid || !strcmp(IP, ObtenerIP(i)) || PingUp <= 0 || PingUp >= 50000)
{
Menu[0]='\0';
strcat(Menu, "{FFFFFF} Baneado por intento de Bot.  \n", 1024);
ShowPlayerDialog(playerid, 9046, DIALOG_STYLE_MSGBOX, " {FF0000}Advertencia - FireSecurity: ", Menu, "Aceptar", "Cerrar") ;
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(Texto, sizeof(Texto), "[<!>] %s ha sido baneado por FireSecurity. Razón: Posible Bot.", Nombre);
SendClientMessageToAll(Gris, Texto);
BanEx(playerid, "[<!>] Baneado por intento de Bot.");
if(Barra[i] != -1)
{
KillTimer(Barra[i]);
Barra[i] = -1;
}
}
}
format(IP, sizeof(IP), "banip %s", IP);
return SendRconCommand(IP);
#endif
}
//==============================================================================
// Stock - IDMayor.
//==============================================================================
stock IDMayor(exceptof = INVALID_PLAYER_ID)
{
new MaxID = 0;
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != exceptof && i > MaxID) MaxID = i;
return MaxID;
}
//==============================================================================
// Stock - AutoProhibido.
//==============================================================================
stock AutoProhibido(playerid)
{
new Auto = GetPlayerVehicleID(playerid);
#define MAX_INVALID_NOS_VEHICLES 52
new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
{
581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 417, 425, 469, 487, 512, 520, 563, 593,
509, 481, 510, 472, 473, 493, 520, 595, 484, 430, 453, 432, 476, 497, 513, 533, 577,
452, 446, 447, 454, 590, 569, 537, 538, 570, 449, 519, 460, 488, 511, 519, 548, 592
};
if(IsPlayerInAnyVehicle(playerid))
{
for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
{
if(GetVehicleModel(Auto) == InvalidNosVehicles[i]) return true;
}
}
return false;
}
//==============================================================================
// Stock - AutoCrash.
//==============================================================================
stock AutoCrash(modelid, componentid)
{
if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
return true;

switch (modelid)
{
case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
case 409: return (componentid == 1009);
case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
case 506: return (componentid == 1009);
case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
}
return false;
}
//==============================================================================
// Stock - ArmaProhibida.
//==============================================================================
stock ArmaProhibida(playerid)
{
new Arma = GetPlayerWeapon(playerid);
if( Arma == 44|| Arma == 45)
{
return true;
}
return false;
}
// © SkyStudios SA-MP: Todos los derechos reservados.
//************
/*public Camara()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	if(camaraon[i] > 0 && IsPlayerInAnyVehicle(i))
	{
		AttachObjectToVehicle(FPS[i], GetPlayerVehicleID(i), 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
    	AttachCameraToObject(i, FPS[i]);
	}
	else if(camaraon[i] > 0 && !IsPlayerInAnyVehicle(i))
	{
		AttachObjectToPlayer(FPS[i], i, 0.0, 0.15, 0.65, 0.0, 0.0, 0.0);
    	AttachCameraToObject(i, FPS[i]);
	}
	}
	return 1;
}*/
stock DetectarSpam(SPAM[])
{
    new SSPAM;
    new CUENTAP,CUENTAN,CUENTAW,CUENTADP,CUENTAGB;
	for(SSPAM = 0; SSPAM < strlen(SPAM); SSPAM ++)
	{
	    if(SPAM[SSPAM] == '.') CUENTAP ++; //Cuenta los Puntos
	    if(SPAM[SSPAM] == '0' || SPAM[SSPAM] == '1' || SPAM[SSPAM] == '2' || SPAM[SSPAM] == '3' || SPAM[SSPAM] == '4' || SPAM[SSPAM] == '5' || SPAM[SSPAM] == '6' || SPAM[SSPAM] == '7' || SPAM[SSPAM] == '8' || SPAM[SSPAM] == '9') CUENTAN ++; //Cuenta los Numeros
	    if(SPAM[SSPAM] == 'w' || SPAM[SSPAM] == 'W') CUENTAW ++; //Cuenta las "W"
	    if(SPAM[SSPAM] == ':') CUENTADP ++; //Cuenta los ":"
	    if(SPAM[SSPAM] == '_') CUENTAGB ++; //Cuenta los "_"
	}
 	if(CUENTAP >= 3 && CUENTAN >= 4) return 1;
 	if(CUENTAW >= 3) return 1;
 	if(CUENTAN >= 3) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 3) return 1;
 	if(strfind(SPAM, ".com", true) != -1 || strfind(SPAM, ".com.ar", true) != -1 || strfind(SPAM, ".org", true) != -1 || strfind(SPAM, ".net", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 4) return 1;
 	return 0;
}
//***sistema muebles***
stock ColocarMueblesCasas(){
   	for(new MueblesI = 1; MueblesI < sizeof(HouseInfo); MueblesI++){
	   	if(HouseInfo[MueblesI][hMuebles][0] > 0){
	    HouseInfo[MueblesI][hMuebleId][0] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][0], HouseInfo[MueblesI][hMueblesPOSX][0], HouseInfo[MueblesI][hMueblesPOSY][0], HouseInfo[MueblesI][hMueblesPOSZ][0], HouseInfo[MueblesI][hMueblesPOSRx][0], HouseInfo[MueblesI][hMueblesPOSRy][0], HouseInfo[MueblesI][hMueblesPOSRz][0], HouseInfo[MueblesI][hMuebleVW][0], HouseInfo[MueblesI][hMuebleINT][0], -1, 200.0);
		}
		if(HouseInfo[MueblesI][hMuebles][1] > 0){
		HouseInfo[MueblesI][hMuebleId][1] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][1], HouseInfo[MueblesI][hMueblesPOSX][1], HouseInfo[MueblesI][hMueblesPOSY][1], HouseInfo[MueblesI][hMueblesPOSZ][1], HouseInfo[MueblesI][hMueblesPOSRx][1], HouseInfo[MueblesI][hMueblesPOSRy][1], HouseInfo[MueblesI][hMueblesPOSRz][1], HouseInfo[MueblesI][hMuebleVW][1], HouseInfo[MueblesI][hMuebleINT][1], -1, 200.0);
		}
	 	if(HouseInfo[MueblesI][hMuebles][2] > 0){
		HouseInfo[MueblesI][hMuebleId][2] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][2], HouseInfo[MueblesI][hMueblesPOSX][2], HouseInfo[MueblesI][hMueblesPOSY][2], HouseInfo[MueblesI][hMueblesPOSZ][2], HouseInfo[MueblesI][hMueblesPOSRx][2], HouseInfo[MueblesI][hMueblesPOSRy][2], HouseInfo[MueblesI][hMueblesPOSRz][2], HouseInfo[MueblesI][hMuebleVW][2], HouseInfo[MueblesI][hMuebleINT][2], -1, 200.0);
		}
	 	if(HouseInfo[MueblesI][hMuebles][3] > 0){
		HouseInfo[MueblesI][hMuebleId][3] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][3], HouseInfo[MueblesI][hMueblesPOSX][3], HouseInfo[MueblesI][hMueblesPOSY][3], HouseInfo[MueblesI][hMueblesPOSZ][3], HouseInfo[MueblesI][hMueblesPOSRx][3], HouseInfo[MueblesI][hMueblesPOSRy][3], HouseInfo[MueblesI][hMueblesPOSRz][3], HouseInfo[MueblesI][hMuebleVW][3], HouseInfo[MueblesI][hMuebleINT][3], -1, 200.0);
		}
		if(HouseInfo[MueblesI][hMuebles][4] > 0){
		HouseInfo[MueblesI][hMuebleId][4] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][4], HouseInfo[MueblesI][hMueblesPOSX][4], HouseInfo[MueblesI][hMueblesPOSY][4], HouseInfo[MueblesI][hMueblesPOSZ][4], HouseInfo[MueblesI][hMueblesPOSRx][4], HouseInfo[MueblesI][hMueblesPOSRy][4], HouseInfo[MueblesI][hMueblesPOSRz][4], HouseInfo[MueblesI][hMuebleVW][4], HouseInfo[MueblesI][hMuebleINT][4], -1, 200.0);
		}
		if(HouseInfo[MueblesI][hMuebles][5] > 0){
	 	HouseInfo[MueblesI][hMuebleId][5] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][5], HouseInfo[MueblesI][hMueblesPOSX][5], HouseInfo[MueblesI][hMueblesPOSY][5], HouseInfo[MueblesI][hMueblesPOSZ][5], HouseInfo[MueblesI][hMueblesPOSRx][5], HouseInfo[MueblesI][hMueblesPOSRy][5], HouseInfo[MueblesI][hMueblesPOSRz][5], HouseInfo[MueblesI][hMuebleVW][5], HouseInfo[MueblesI][hMuebleINT][5], -1, 200.0);
		}
	 	if(HouseInfo[MueblesI][hMuebles][6] > 0){
		HouseInfo[MueblesI][hMuebleId][6] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][6], HouseInfo[MueblesI][hMueblesPOSX][6], HouseInfo[MueblesI][hMueblesPOSY][6], HouseInfo[MueblesI][hMueblesPOSZ][6], HouseInfo[MueblesI][hMueblesPOSRx][6], HouseInfo[MueblesI][hMueblesPOSRy][6], HouseInfo[MueblesI][hMueblesPOSRz][6], HouseInfo[MueblesI][hMuebleVW][6], HouseInfo[MueblesI][hMuebleINT][6], -1, 200.0);
		}
 		if(HouseInfo[MueblesI][hMuebles][7] > 0){
		HouseInfo[MueblesI][hMuebleId][7] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][7], HouseInfo[MueblesI][hMueblesPOSX][7], HouseInfo[MueblesI][hMueblesPOSY][7], HouseInfo[MueblesI][hMueblesPOSZ][7], HouseInfo[MueblesI][hMueblesPOSRx][7], HouseInfo[MueblesI][hMueblesPOSRy][7], HouseInfo[MueblesI][hMueblesPOSRz][7], HouseInfo[MueblesI][hMuebleVW][7], HouseInfo[MueblesI][hMuebleINT][7], -1, 200.0);
		}
 		if(HouseInfo[MueblesI][hMuebles][8] > 0){
		HouseInfo[MueblesI][hMuebleId][8] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][8], HouseInfo[MueblesI][hMueblesPOSX][8], HouseInfo[MueblesI][hMueblesPOSY][8], HouseInfo[MueblesI][hMueblesPOSZ][8], HouseInfo[MueblesI][hMueblesPOSRx][8], HouseInfo[MueblesI][hMueblesPOSRy][8], HouseInfo[MueblesI][hMueblesPOSRz][8], HouseInfo[MueblesI][hMuebleVW][8], HouseInfo[MueblesI][hMuebleINT][8], -1, 200.0);
		}
 		if(HouseInfo[MueblesI][hMuebles][9] > 0){
		HouseInfo[MueblesI][hMuebleId][9] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][9], HouseInfo[MueblesI][hMueblesPOSX][9], HouseInfo[MueblesI][hMueblesPOSY][9], HouseInfo[MueblesI][hMueblesPOSZ][9], HouseInfo[MueblesI][hMueblesPOSRx][9], HouseInfo[MueblesI][hMueblesPOSRy][9], HouseInfo[MueblesI][hMueblesPOSRz][9], HouseInfo[MueblesI][hMuebleVW][9], HouseInfo[MueblesI][hMuebleINT][9], -1, 200.0);
		}
 		if(HouseInfo[MueblesI][hMuebles][10] > 0){
		HouseInfo[MueblesI][hMuebleId][10] = CreateDynamicObject(HouseInfo[MueblesI][hMuebles][10], HouseInfo[MueblesI][hMueblesPOSX][10], HouseInfo[MueblesI][hMueblesPOSY][10], HouseInfo[MueblesI][hMueblesPOSZ][10], HouseInfo[MueblesI][hMueblesPOSRx][10], HouseInfo[MueblesI][hMueblesPOSRy][10], HouseInfo[MueblesI][hMueblesPOSRz][10], HouseInfo[MueblesI][hMuebleVW][10], HouseInfo[MueblesI][hMuebleINT][10], -1, 200.0);
		}
	}
}

function SituarObjetoCASAARCH(playerid, houseid, idobjetom, IDOBJETOUS, Float: X,Float: Y,Float: Z,Float: rX,Float: rY,Float: rZ, IDSLOT)
{
	Info[playerid][pMuebles][IDSLOT] = -1;
	HouseInfo[houseid][hMuebles][idobjetom] = IDOBJETOUS;
	HouseInfo[houseid][hMueblesPOSX][idobjetom] = X;
 	HouseInfo[houseid][hMueblesPOSY][idobjetom] = Y;
	HouseInfo[houseid][hMueblesPOSZ][idobjetom] = Z;
	HouseInfo[houseid][hMueblesPOSRx][idobjetom] = rX;
	HouseInfo[houseid][hMueblesPOSRy][idobjetom] = rY;
	HouseInfo[houseid][hMueblesPOSRz][idobjetom] = rZ;
	return 1;
}

function PonerNuevoMueble(playerid, houseid, IDSLOT)
{
	HouseInfo[houseid][hMuebleId][IDSLOT] = CreateDynamicObject(HouseInfo[houseid][hMuebles][IDSLOT], HouseInfo[houseid][hMueblesPOSX][IDSLOT], HouseInfo[houseid][hMueblesPOSY][IDSLOT], HouseInfo[houseid][hMueblesPOSZ][IDSLOT], HouseInfo[houseid][hMueblesPOSRx][IDSLOT], HouseInfo[houseid][hMueblesPOSRy][IDSLOT], HouseInfo[houseid][hMueblesPOSRz][IDSLOT], HouseInfo[houseid][hMuebleVW][IDSLOT], HouseInfo[houseid][hMuebleINT][IDSLOT], -1, 200.0);
	return 1;
}
function GuardarmuebleUserCASA(playerid, CASA){
    for(new SLOTS = 0; SLOTS< 7 ; SLOTS++){
		if(Info[playerid][pMuebles][SLOTS] < 1){
			if(HouseInfo[CASA][hMuebles][0] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][0];
	  			HouseInfo[CASA][hMuebles][0] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][0]);
	  		}
			else if(HouseInfo[CASA][hMuebles][1] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][1];
	  			HouseInfo[CASA][hMuebles][1] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][0]);
	  		}
			else if(HouseInfo[CASA][hMuebles][2] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][2];
	  			HouseInfo[CASA][hMuebles][2] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][2]);
	  		}
			else if(HouseInfo[CASA][hMuebles][3] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][3];
	  			HouseInfo[CASA][hMuebles][3] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][3]);
	  		}
			else if(HouseInfo[CASA][hMuebles][4] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][4];
	  			HouseInfo[CASA][hMuebles][4] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][4]);
	  		}
			else if(HouseInfo[CASA][hMuebles][5] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][5];
	  			HouseInfo[CASA][hMuebles][5] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][5]);
	  		}
			else if(HouseInfo[CASA][hMuebles][6] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][6];
	  			HouseInfo[CASA][hMuebles][6] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][6]);
	  		}
			else if(HouseInfo[CASA][hMuebles][7] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][7];
	  			HouseInfo[CASA][hMuebles][7] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][7]);
	  		}
			else if(HouseInfo[CASA][hMuebles][8] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][8];
	  			HouseInfo[CASA][hMuebles][8] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][8]);
	  		}
			else if(HouseInfo[CASA][hMuebles][9] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][9];
	  			HouseInfo[CASA][hMuebles][9] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][9]);
	  		}
			else if(HouseInfo[CASA][hMuebles][10] > 0){
				Info[playerid][pMuebles][SLOTS] = HouseInfo[CASA][hMuebles][10];
	  			HouseInfo[CASA][hMuebles][10] = -1;
	  	 		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][10]);
	  		}
 		}
	}
   	SendClientMessageEx(playerid, COLOR_GREY, "Los muebles de la casa han sido guardados en las ranuras disponibles.");
	return 1;
}

function GuardarmuebleUser(playerid, CASA, IDSLOT)
{
	if(Info[playerid][pMuebles][0] < 1)
	{
		Info[playerid][pMuebles][0] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 1 de tus muebles");
  		return 1;
	}
   	else if(Info[playerid][pMuebles][1] < 1)
 	{
		Info[playerid][pMuebles][1] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 2 de tus muebles");
  		return 1;
   	}
	else if(Info[playerid][pMuebles][2] < 1)
 	{
		Info[playerid][pMuebles][2] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 3 de tus muebles");
  		return 1;
   	}
	else if(Info[playerid][pMuebles][3] < 1)
 	{
		Info[playerid][pMuebles][3] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 4 de tus muebles");
  		return 1;
   	}
	else if(Info[playerid][pMuebles][4] < 1)
 	{
		Info[playerid][pMuebles][4] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 5 de tus muebles");
  		return 1;
   	}
	else if(Info[playerid][pMuebles][5] < 1)
 	{
		Info[playerid][pMuebles][5] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessage(playerid, COLOR_GREY, "Mueble guardado en la ranura 6 de tus muebles");
  		return 1;
   	}
	else if(Info[playerid][pMuebles][6] < 1)
 	{
		Info[playerid][pMuebles][6] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessageEx(playerid, COLOR_GREY, "Mueble guardado en la ranura 7 de tus muebles");
   	}
	else if(Info[playerid][pMuebles][7] < 1)
 	{
		Info[playerid][pMuebles][7] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessageEx(playerid, COLOR_GREY, "Mueble guardado en la ranura 8 de tus muebles");
   	}
	else if(Info[playerid][pMuebles][8] < 1)
 	{
		Info[playerid][pMuebles][8] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessageEx(playerid, COLOR_GREY, "Mueble guardado en la ranura 9 de tus muebles");
   	}
	else if(Info[playerid][pMuebles][9] < 1)
 	{
		Info[playerid][pMuebles][9] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessageEx(playerid, COLOR_GREY, "Mueble guardado en la ranura 10 de tus muebles");
   	}
	else if(Info[playerid][pMuebles][10] < 1)
 	{
		Info[playerid][pMuebles][10] = HouseInfo[CASA][hMuebles][IDSLOT];
  		HouseInfo[CASA][hMuebles][IDSLOT] = -1;
  		DestroyDynamicObject(HouseInfo[CASA][hMuebleId][IDSLOT]);
  		SendClientMessageEx(playerid, COLOR_GREY, "Mueble guardado en la ranura 11 de tus muebles");
   	}
   	else SendClientMessageEx(playerid, COLOR_GREY, "No tienes espacio para guardar más muebles.");
	return 1;
}

stock InfoCasaMuebles(playerid){
	SendClientMessageEx(playerid, -1, "{BFE44E}- INFORMACIÓN SOBRE MUEBLES.");
	SendClientMessageEx(playerid, -1, "{BFE44E}» {FFFFFF}HIT: Presiona {BFE44E}'ESPACIO' {FFFFFF}para cambiar la posición de la cámara para la edición.");
	SendClientMessageEx(playerid, -1, "{BFE44E}» {FFFFFF}HIT: Presiona {BFE44E}'ESQ' {FFFFFF}para cancelar y no poner el mueble.");
	SendClientMessageEx(playerid, -1, "{BFE44E}» {FFFFFF}HIT: Presiona el ícono de guardar para terminar la edición y ponerlo o las felchas para moverlo.");
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
			new Float:oldX, Float:oldY, Float:oldZ,
	        Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	    	GetObjectPos(objectid, oldX, oldY, oldZ);
	    	GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
			new OVW, OINT;

		    if(!playerobject)
		    {
		        if(!IsValidObject(objectid)) return;
		        MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
		    }


        if(response == EDIT_RESPONSE_FINAL)
        {
           	new house = Info[playerid][pPhousekey];
			if(ObjetoUsarEnCasa[playerid] == 1)
			{
				if(HouseInfo[house][hMuebles][0] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][0] = OINT;
				HouseInfo[house][hMuebleVW][0] = OVW;

 				SituarObjetoCASAARCH(playerid, house, 0, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 0);
				}
				else if(HouseInfo[house][hMuebles][1] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][1] = OINT;
				HouseInfo[house][hMuebleVW][1] = OVW;

	    		SituarObjetoCASAARCH(playerid, house, 1, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 1);
				}
				else if(HouseInfo[house][hMuebles][2] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][2] = OINT;
				HouseInfo[house][hMuebleVW][2] = OVW;

	    		SituarObjetoCASAARCH(playerid, house, 2, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 2);
				}
				else if(HouseInfo[house][hMuebles][3] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][3] = OINT;
				HouseInfo[house][hMuebleVW][3] = OVW;

    		 	SituarObjetoCASAARCH(playerid, house, 3, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 3);
				}
				else if(HouseInfo[house][hMuebles][4] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][4] = OINT;
				HouseInfo[house][hMuebleVW][4] = OVW;

	    		SituarObjetoCASAARCH(playerid, house, 4, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 4);
				}
				else if(HouseInfo[house][hMuebles][5] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][5] = OINT;
				HouseInfo[house][hMuebleVW][5] = OVW;

                SituarObjetoCASAARCH(playerid, house, 5, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 5);
				}
				else if(HouseInfo[house][hMuebles][6] <= 0)
	    		{
       			OVW = GetPlayerVirtualWorld(playerid);
                OINT = GetPlayerInterior(playerid);

               	HouseInfo[house][hMuebleINT][6] = OINT;
				HouseInfo[house][hMuebleVW][6] = OVW;

	    		SituarObjetoCASAARCH(playerid, house, 6, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);

                DestroyObject(Objeto_Por_Jugador[playerid]);
                PonerNuevoMueble(playerid, house, 6);
				}
				else if(HouseInfo[house][hMuebles][7] <= 0)
	    		{
       				OVW = GetPlayerVirtualWorld(playerid);
                	OINT = GetPlayerInterior(playerid);
               		HouseInfo[house][hMuebleINT][7] = OINT;
					HouseInfo[house][hMuebleVW][7] = OVW;
	    			SituarObjetoCASAARCH(playerid, house, 7, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);
                	DestroyObject(Objeto_Por_Jugador[playerid]);
                	PonerNuevoMueble(playerid, house, 7);
				}
				else if(HouseInfo[house][hMuebles][8] <= 0)
	    		{
       				OVW = GetPlayerVirtualWorld(playerid);
                	OINT = GetPlayerInterior(playerid);
               		HouseInfo[house][hMuebleINT][8] = OINT;
					HouseInfo[house][hMuebleVW][8] = OVW;
	    			SituarObjetoCASAARCH(playerid, house, 8, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);
                	DestroyObject(Objeto_Por_Jugador[playerid]);
                	PonerNuevoMueble(playerid, house, 8);
				}
				else if(HouseInfo[house][hMuebles][9] <= 0)
	    		{
       				OVW = GetPlayerVirtualWorld(playerid);
                	OINT = GetPlayerInterior(playerid);
               		HouseInfo[house][hMuebleINT][9] = OINT;
					HouseInfo[house][hMuebleVW][9] = OVW;
	    			SituarObjetoCASAARCH(playerid, house, 9, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);
                	DestroyObject(Objeto_Por_Jugador[playerid]);
                	PonerNuevoMueble(playerid, house, 9);
				}
				else if(HouseInfo[house][hMuebles][10] <= 0)
	    		{
       				OVW = GetPlayerVirtualWorld(playerid);
                	OINT = GetPlayerInterior(playerid);
               		HouseInfo[house][hMuebleINT][10] = OINT;
					HouseInfo[house][hMuebleVW][10] = OVW;
	    			SituarObjetoCASAARCH(playerid, house, 10, IDObjetoUsar[playerid], oldX,oldY,oldZ,fRotX,fRotY,fRotZ, ObjetoUsar[playerid]);
                	DestroyObject(Objeto_Por_Jugador[playerid]);
                	PonerNuevoMueble(playerid, house, 10);
				}
            }
            SaveHouses();
			OnPlayerSavedStats(playerid);
			CancelEdit(playerid);
        }

        if(response == EDIT_RESPONSE_CANCEL)
        {
             DestroyObject(Objeto_Por_Jugador[playerid]);
             CancelEdit(playerid);
        }
}

//***Armas en la espalda**
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return 0;
}

GetWeaponType(weaponid)
{
	switch(weaponid)
	{
	    case 22,23,24,26,28,32:
	        return WEAPON_TYPE_LIGHT;

		case 3,4,16,17,18,39,10,11,12,13,14,40,41:
		    return WEAPON_TYPE_MELEE;

		case 2,5,6,7,8,9,25,27,29,30,31,33,34,35,36,37,38:
		    return WEAPON_TYPE_HEAVY;
	}
	return WEAPON_TYPE_NONE;
}

//************************
//***dni por textdraw***

//**********************
public qhistorial(playerid)
	{
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerTextDrawHide(playerid, HISLSPD0[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD1[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD2[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD3[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD4[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD5[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD6[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD7[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD8[playerid]);
    	PlayerTextDrawHide(playerid, HISLSPD9[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD10[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD11[playerid]);
		PlayerTextDrawHide(playerid, HISLSPD12[playerid]);
		return 1;
	}
//***licencias por textdraw***
public qlicencia(playerid)
	{
		PlayerTextDrawHide(playerid, LICENCIA0[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA1[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA2[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA3[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA4[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA5[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA6[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA7[playerid]);
		PlayerTextDrawHide(playerid, LICENCIA8[playerid]);
		return 1;
	}
//***sistema de fire***
public Fuegoo()
{
    new fire = random(sizeof(Fuego));
    new Float:X, Float:Y, Float:Z;
    GetObjectPos(Fire[0], X, Y, Z);
    if(LugarFuego[0] != X) { LugarFuego[0] = X; }
    else if(LugarFuego[1] != Y) { LugarFuego[1] = Y; }
    else if(LugarFuego[2] != Z) { LugarFuego[2] = Z; }
    if(GetTickCount() - lugarfire > TIEMPOFIRE*1000)
    {
        if(F == false)
        {
            for(new f = 0; f < sizeof(Fire); f ++) { DestroyObject(Fire[f]); DestroyObject(Fire[f]); }
            F = true;
            Timerfire = SetTimer("Apagarfire", APAGARFIRE*1000, false);
            Fire[0] = CreateObject(18691, Fuego[fire][0], Fuego[fire][1], Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[1] = CreateObject(18691, Fuego[fire][0]+1, Fuego[fire][1], Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[2] = CreateObject(18691, Fuego[fire][0], Fuego[fire][1]+1, Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[3] = CreateObject(18691, Fuego[fire][0]+1, Fuego[fire][1]+1, Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[4] = CreateObject(18691, Fuego[fire][0]-1, Fuego[fire][1], Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[5] = CreateObject(18691, Fuego[fire][0], Fuego[fire][1]-1, Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            Fire[6] = CreateObject(18691, Fuego[fire][0]-1, Fuego[fire][1]-1, Fuego[fire][2]-2.5, 0.0, 0.0, 0.0);
            for(new i = 0; i < MAX_PLAYERS; i++)
            {
                if(Team_BomberosLS(i))
                {
                    new str[128];
                    format(str, sizeof(str), "* Central: Se ha advertido a los bomberos de un incendio, sigue el checkpoint.", Fuego[fire][0], Fuego[fire][1], Fuego[fire][2]);
                    SendClientMessage(i, 0x8D8DFFFF, str);
                    SetPlayerCheckpoint(i, Fuego[fire][0], Fuego[fire][1], Fuego[fire][2], 8.0);
                    new block = CreateObject(18694, X, Y, Z, -2.5, 0.0, 0.0, 0.0);
	   				CreatedBlocks[CreatedBlock] = block;
	   				CreatedBlock++;
                    LugarFuego[0] = Fuego[fire][0];
                    LugarFuego[1] = Fuego[fire][1];
                    LugarFuego[2] = Fuego[fire][2];
                }
            }
        }
    }
    return 1;
}

public Apagarfire()
{
    if(F == true)
    {
        for(new i = 0; i < MAX_PLAYERS; i ++)
        {
            if(Team_BomberosLS(i))
            {
                SendClientMessage(i, COLOR_RED, "El fuego ha cesado, o un bombero de Perfect City lo ha extinguido.");
                DisablePlayerCheckpoint(i);
                llegarf[i] = false;
            }
            F = false;
            for(new f = 0; f < sizeof(Fire); f ++)
            {
                DestroyObject(Fire[f]);
                DestroyObject(Fire[f]);
            }
            lugarfire = GetTickCount();
        }
    }
    return 1;
}

public Checkfire(playerid)
{
    if(F == true)
    {
        if(GetPlayerState(playerid) == 1)
        {
            if(GetPlayerWeapon(playerid) == 42)
            {
                if(IsPlayerInRangeOfPoint(playerid, 7.0, LugarFuego[0], LugarFuego[1], LugarFuego[2]))
                {
                    if(Apagandofire[playerid] > 0)
                    {
                        Apagandofire[playerid]++;
                        SetTimerEx("Checkfire", 750, false, "i", playerid);
                        if(Apagandofire[playerid] == 13)
                        {
                            for(new f = 0; f < sizeof(Fire); f ++) { DestroyObject(Fire[f]); DestroyObject(Fire[f]); }
                            F = false;
                            GivePlayerMoney(playerid, 500);
                            for(new i = 0; i < MAX_PLAYERS; i ++)
                            {
                                llegarf[i] = false;
                                Apagandofire[i] = 0;
                                lugarfire = GetTickCount();
                                DisablePlayerCheckpoint(i);
                                KillTimer(Timerfire);
                            }
                        }
                    }
                }
            }
        }
        if(GetPlayerState(playerid) == 2)
        {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
            {
                if(IsPlayerInRangeOfPoint(playerid, 12.0, LugarFuego[0], LugarFuego[1], LugarFuego[2]))
                {
                    if(Apagandofire[playerid] > 0)
                    {
                        Apagandofire[playerid]++;
                        SetTimerEx("Checkfire", 750, false, "i", playerid);
                        if(Apagandofire[playerid] == 10)
                        {
                            for(new f = 0; f < sizeof(Fire); f ++) { DestroyObject(Fire[f]); DestroyObject(Fire[f]); }
                            F = false;
                            GivePlayerMoney(playerid, 500);
                            for(new i = 0; i < MAX_PLAYERS; i ++)
                            {
                                llegarf[i] = false;
                                Apagandofire[i] = 0;
                                lugarfire = GetTickCount();
                                DisablePlayerCheckpoint(i);
                                KillTimer(Timerfire);
                            }
                        }
                    }
                }
            }
        }
    }
    return 1;
}
//***sistema afk***
forward SendMessage();
public SendMessage()
{
   new Nameafk[24], string[256];
   for(new i = 0; i <= MAX_PLAYERS; i++)
   {
     if(IsPlayerConnected(i))
     {
       GetPlayerName(i, Nameafk, 24);
       if(Afk[i]==1)
       {
       TextDrawHideForAll(Text:Messageafk);
       format(string, sizeof(string), "",Nameafk);
       TextDrawSetString(Messageafk,string);
       TextDrawShowForAll(Text:Messageafk);
       SetTimer("StopMessage",6000,0);
       }
       if(Afk[i]==0)
       {
       TextDrawHideForAll(Text:Messageafk);
       format(string, sizeof(string), "",Nameafk);
       TextDrawSetString(Messageafk,string);
       TextDrawShowForAll(Text:Messageafk);
       SetTimer("StopMessage",6000,0);
       }
     }
   }
}
forward descongelar(playerid);
public descongelar(playerid)
{
TogglePlayerControllable(playerid, 1);
}
forward SobeitCheck(playerid);
public SobeitCheck(playerid)
{
	new Float:x, Float:y, Float:z;
    GetPlayerCameraFrontVector(playerid, x, y, z);
    #pragma unused x
    #pragma unused y
    if(z < -0.68)
    {
    	new string[128];
     	format(string, sizeof(string), "[ANTICHEAT]: El jugador '%s' se ha conectado con sobeit y ha sido kickeado.", GetPlayerNameEx(playerid));
      	ABroadCast(COLOR_GENERAL, string, 2);
       	Message(playerid, COLOR_LIGHTRED, "* Has sido kickeado porque se ha detectado que usas Cleos prohibidos o Sobeit.");
        Message(playerid, COLOR_LIGHTRED, "* Por favor desinstala éstos programas indebidos e ingresa nuevamente.");
        SetTimerEx("KickxD",500,0,"d",playerid);
    }
    return 1;
}
forward StopMessage();
public StopMessage()
{
  TextDrawHideForAll(Text:Messageafk);
}
//***velocimetro***
public SpeedoUpdate()
{
        for(new i = 0; i<MAX_PLAYERS; i++)
        {
                new Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed,final_speed_int;
                new veh = GetPlayerVehicleID(i);
                GetVehicleVelocity(veh, speed_x, speed_y, speed_z);
                final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*120.0;
                final_speed_int = floatround(final_speed,floatround_round);
                new kmh_anzahl = final_speed_int;
                new kmh[10],tank[10];
                format(kmh, 10,"%d", kmh_anzahl);
                format(tank, 10,"%d", VehicleFuel[veh]);
                TextDrawSetString(Tacho_KMH[i], kmh);
                TextDrawSetString(Tacho_Tank[i], tank);
                // Anti speed-hack
                /*for(new carro = 1; carro < MAX_VEHICLES; carro++)
				{
					new Velo = floatround(GetVehicleSpeed(carro, 0) / 1.609); //el número que retorna es la velocidad en kilómetros.
					if(Velo >= 200)
					{
				    	new string[128];
				    	format(string, sizeof(string), "AdmWarning: %s (ID %d) tal vez tenga Speed Hack, velocidad: %d KMH", GetPlayerNameEx(i), i, Velo);
						ABroadCast(COLOR_ORANGE, string, 2);
				    	format(string, sizeof(string), "AdmCmd: %s fue expulsado por el servidor, razón: Speed Hack", GetPlayerNameEx(i));
						SendClientMessageToAllEx(COLOR_LIGHTRED, string);
						SetTimerEx("KickxD",500,0,"d",i);
					}
				}*/
        }
        return 1;
}
//*****************
public KickxD(playerid)
{
    TogglePlayerControllable(playerid,0);
	Kick(playerid);
}
stock LoadMapeos()
{
//**********************INICIO DE LOS MAPEOS GENERALES DEL SERVIDOR Perfect City***************
//casa samuel
CreateDynamicObject(3928,1014.2546400,-668.8611500,125.3864100,0.0000000,0.0000000,-58.4999900); //
CreateDynamicObject(3095,1014.0787400,-668.8241000,124.7953000,0.0000000,0.0000000,31.3279500); //
CreateDynamicObject(3361,1005.6673600,-672.3225700,121.6344500,0.0000000,0.0000000,121.9199800); //
CreateDynamicObject(1472,1011.0213000,-673.3427700,125.0225000,0.0000000,0.0000000,-58.6800000); //
CreateDynamicObject(1472,1010.1505700,-673.9802900,124.3714400,0.0000000,0.0000000,-57.8400100); //
CreateDynamicObject(2395,1010.6413600,-665.5678100,122.6935300,0.0000000,0.0000000,211.3799300); //
CreateDynamicObject(2395,1013.8223300,-663.6284800,122.6935300,0.0000000,0.0000000,211.3799300); //
CreateDynamicObject(2395,1015.1379400,-662.8270300,122.6935300,0.0000000,0.0000000,211.3799300); //
CreateDynamicObject(2395,1017.3566300,-665.3316700,122.6935000,0.0000000,0.0000000,121.3199900); //
CreateDynamicObject(2395,1019.2901600,-668.4809600,122.6935000,0.0000000,0.0000000,121.3199900); //
CreateDynamicObject(2395,1020.1463600,-669.9041700,122.6935000,0.0000000,0.0000000,121.3199900); //
CreateDynamicObject(2395,1017.6153600,-672.0900900,122.6935000,0.0000000,0.0000000,31.6199500); //
CreateDynamicObject(2395,1014.4240700,-674.0430300,122.6935000,0.0000000,0.0000000,31.6199500); //
CreateDynamicObject(2395,1013.0592000,-674.8628500,122.6935000,0.0000000,0.0000000,30.9599500); //
CreateDynamicObject(2395,1008.0751300,-667.7317500,122.6935300,0.0000000,0.0000000,301.4395800); //
CreateDynamicObject(2395,1009.2835700,-669.7753900,122.6935300,0.0000000,0.0000000,301.4395800); //
CreateDynamicObject(2395,1010.8509500,-672.2915000,122.6935300,0.0000000,0.0000000,301.4395800); //
CreateDynamicObject(1472,1009.5781300,-674.2742900,123.9664200,0.0000000,0.0000000,302.7660800); //
CreateDynamicObject(1364,310.2000100,-1343.3000500,59.3000000,0.0000000,0.0000000,215.9999400); //
CreateDynamicObject(1364,299.6000100,-1351.0999800,59.3000000,0.0000000,0.0000000,215.9967000); //
CreateDynamicObject(1364,310.2000100,-1343.3000500,59.3000000,0.0000000,0.0000000,215.9999400); //
CreateDynamicObject(1364,299.6000100,-1351.0999800,59.3000000,0.0000000,0.0000000,215.9967000); //
CreateDynamicObject(994,1016.2998000,-662.5000000,120.1000000,0.0000000,0.0000000,123.9971900); //
CreateDynamicObject(994,1011.8994100,-665.0996100,120.1000000,0.0000000,0.0000000,123.9917000); //
CreateDynamicObject(994,1011.3994100,-665.3994100,120.1000000,0.0000000,0.0000000,123.9917000); //
CreateDynamicObject(994,1007.0999800,-668.2000100,120.1000000,0.0000000,0.0000000,123.9971900); //
CreateDynamicObject(4100,992.7000100,-648.5000000,124.2000000,0.0000000,0.0000000,342.5000000); //
CreateDynamicObject(4100,992.6992200,-648.5000000,127.1000000,0.0000000,0.0000000,342.4932900); //
CreateDynamicObject(4100,986.4000200,-651.0999800,124.2000000,0.0000000,0.0000000,341.7486600); //
CreateDynamicObject(4100,986.4000200,-651.0999800,127.1000000,0.0000000,0.0000000,341.7462200); //
CreateDynamicObject(4100,974.0999800,-657.0999800,124.2000000,0.0000000,0.0000000,350.9962200); //
CreateDynamicObject(4100,974.0996100,-657.0996100,127.1000000,0.0000000,0.0000000,350.9857200); //
CreateDynamicObject(4100,975.2000100,-710.7999900,126.9000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,962.2999900,-664.0999800,124.2000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,953.5000000,-669.4000200,124.2000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,953.5000000,-669.4000200,127.0000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,950.7000100,-679.5000000,126.9000000,0.0000000,0.0000000,261.5000000); //
CreateDynamicObject(4100,950.7000100,-679.5000000,129.7000000,0.0000000,0.0000000,261.4965800); //
CreateDynamicObject(4100,957.7998000,-691.2998000,126.9000000,0.0000000,0.0000000,260.2496300); //
CreateDynamicObject(4100,957.7999900,-691.2999900,129.7000000,0.0000000,0.0000000,260.2496300); //
CreateDynamicObject(4100,964.0000000,-703.5000000,126.9000000,0.0000000,0.0000000,254.4996300); //
CreateDynamicObject(4100,964.0000000,-703.5000000,129.8000000,0.0000000,0.0000000,254.4982900); //
CreateDynamicObject(4100,966.2998000,-708.5000000,126.9000000,0.0000000,0.0000000,254.4928000); //
CreateDynamicObject(4100,966.2999900,-708.5000000,129.7000000,0.0000000,0.0000000,254.4982900); //
CreateDynamicObject(4100,962.2998000,-664.0996100,127.0000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,975.2000100,-710.7999900,129.8000000,0.0000000,0.0000000,350.9912100); //
CreateDynamicObject(4100,987.0996100,-703.7998000,126.8000000,0.0000000,1.9995100,350.2386500); //
CreateDynamicObject(4100,987.0999800,-703.7999900,129.6000100,0.0000000,1.9995100,350.2386500); //
CreateDynamicObject(4100,999.0000000,-696.8994100,126.5000000,0.0000000,1.9995100,350.2331500); //
CreateDynamicObject(4100,999.0999800,-696.9000200,129.2000000,0.0000000,1.9995100,350.2386500); //
CreateDynamicObject(4100,1023.5999800,-672.5000000,125.6000000,0.0000000,1.9995100,18.9886500); //
CreateDynamicObject(4100,1008.0000000,-691.7998000,129.0000000,0.0000000,1.9995100,350.2331500); //
CreateDynamicObject(4100,1008.0000000,-691.7998000,126.3000000,0.0000000,1.9995100,350.2386500); //
CreateDynamicObject(4100,1017.5000000,-682.4000200,128.7000000,0.0000000,1.9995100,18.9843800); //
CreateDynamicObject(4100,1017.3994100,-682.3994100,125.8000000,0.0000000,1.9995100,18.9843800); //
CreateDynamicObject(4100,1022.7000100,-661.0999800,125.3000000,0.0000000,1.9995100,87.4843800); //
CreateDynamicObject(4100,1023.6992200,-672.5000000,128.3999900,0.0000000,1.9995100,18.9843800); //
CreateDynamicObject(4100,1022.7000100,-661.0000000,128.1000100,0.0000000,1.9995100,87.4841300); //
CreateDynamicObject(4100,1014.4000200,-650.2000100,124.6000000,0.0000000,3.9995100,87.4843800); //
CreateDynamicObject(4100,1014.4000200,-650.0000000,127.4000000,0.0000000,3.9990200,87.4841300); //
CreateDynamicObject(4100,1012.2999900,-647.5000000,124.4000000,0.0000000,3.9990200,87.4841300); //
CreateDynamicObject(4100,1012.2999900,-647.2999900,127.2000000,0.0000000,3.9990200,87.4841300); //
CreateDynamicObject(618,1002.2539700,-675.9971900,120.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,971.3994100,-699.0000000,120.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,969.0996100,-707.5996100,121.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,971.3994100,-699.0000000,120.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(654,1020.1992200,-662.2998000,120.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(654,953.6992200,-674.2998000,120.6000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(649,969.8994100,-667.5000000,120.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(649,984.6992200,-659.8994100,120.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(649,956.0000000,-674.9000200,120.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(820,1016.0996100,-657.1992200,120.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(820,1016.0996100,-657.1992200,120.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(821,1015.0996100,-655.8994100,122.3000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(869,967.5999800,-703.0000000,122.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(869,964.2000100,-695.0000000,122.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(869,960.0999800,-690.5000000,122.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(869,968.5999800,-694.2000100,122.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(869,968.5996100,-694.1992200,122.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,968.2000100,-699.0000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,965.0999800,-697.4000200,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,965.7000100,-696.2999900,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,964.2000100,-694.9000200,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,962.5000000,-692.7999900,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,961.4000200,-691.7000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,961.2000100,-689.9000200,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,961.5999800,-691.2999900,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,962.2999900,-691.7000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,962.9000200,-693.7000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,964.0999800,-694.5999800,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,966.0999800,-694.0000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,967.2000100,-694.0000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,968.2000100,-694.2000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,969.4000200,-694.0000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.0000000,-695.5000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.2999900,-696.5000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.5999800,-697.5000000,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.7999900,-698.2000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,971.0999800,-699.2000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,971.4000200,-700.2000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,971.2999900,-702.4000200,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.5999800,-702.5999800,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(871,970.2999900,-702.7000100,120.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(876,965.2999900,-697.2999900,123.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(876,969.7999900,-704.7999900,123.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(876,966.7999900,-694.0000000,123.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(876,962.3994100,-687.5996100,123.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2572,965.4000200,-682.0999800,121.0000000,0.0000000,0.0000000,24.0000000); //
CreateDynamicObject(2572,967.2999900,-686.7000100,121.0000000,0.0000000,0.0000000,143.9999700); //
CreateDynamicObject(1255,992.9000200,-668.2999900,121.6000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1255,992.7000100,-666.2999900,121.6000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1827,967.2000100,-683.5000000,121.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1281,987.0000000,-671.9000200,121.8000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1775,985.5999800,-676.2999900,122.0000000,0.0000000,0.0000000,162.0000000); //
// plaza
CreateDynamicObject(19543,653.8928800,-1357.8408200,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,668.6007700,-1356.2030000,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,683.0054300,-1355.1484400,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,697.7289400,-1356.6973900,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,712.5831900,-1357.6362300,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,727.5509600,-1358.3350800,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,742.2335800,-1359.0629900,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,757.1725500,-1359.0601800,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,772.0178200,-1358.3798800,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,782.0426000,-1357.8465600,12.4954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19372,649.3051800,-1357.5031700,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,652.7497600,-1357.4838900,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,656.1942700,-1357.4632600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,659.5775100,-1357.4263900,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,663.0914900,-1357.3963600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,666.5882000,-1357.3875700,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,670.0426000,-1357.3636500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,673.5420500,-1357.3702400,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,677.0264300,-1357.3447300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,677.2310800,-1360.6915300,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.3018800,-1364.1546600,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.4098500,-1367.5922900,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.5302100,-1371.0451700,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.6173700,-1374.5449200,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.6955600,-1377.9854700,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.8133500,-1381.4256600,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.9518400,-1384.9260300,12.4149000,-0.0600000,-89.8798000,-88.4999400); //
CreateDynamicObject(19372,677.1022900,-1354.0966800,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,677.0621300,-1350.6176800,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,677.0226400,-1347.1367200,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,676.9672900,-1343.6220700,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,676.9062500,-1340.1623500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,676.8616300,-1336.7279100,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,676.8352700,-1333.2546400,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,676.7918100,-1329.7523200,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(1226,665.8125000,-1390.2421900,16.3125000,3.1415900,0.0000000,1.5708000); //
CreateDynamicObject(1280,653.6928100,-1355.4992700,12.8652000,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(1280,661.7778900,-1355.4862100,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,670.0202600,-1355.4899900,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,657.5203200,-1359.3886700,12.8652000,0.0000000,0.0000000,-88.6200400); //
CreateDynamicObject(1280,665.7836300,-1359.3356900,12.8652000,0.0000000,0.0000000,-88.6200400); //
CreateDynamicObject(1280,673.1228600,-1359.3866000,12.8652000,0.0000000,0.0000000,-88.6200400); //
CreateDynamicObject(714,653.6035200,-1335.8118900,11.8707600,0.0000000,0.0000000,9.6600000); //
CreateDynamicObject(737,657.7434700,-1355.4996300,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,666.6207300,-1355.3796400,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,661.6084600,-1359.5304000,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,669.7529300,-1359.3355700,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,674.3442400,-1355.2313200,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,650.7407800,-1360.2517100,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1281,656.3385600,-1344.2386500,13.3123800,0.0000000,0.0000000,14.3999900); //
CreateDynamicObject(1281,662.0916700,-1337.7807600,13.3123800,0.0000000,0.0000000,-31.9800100); //
CreateDynamicObject(1281,665.3024300,-1346.7489000,13.3123800,0.0000000,0.0000000,47.6999800); //
CreateDynamicObject(705,670.5913700,-1342.5366200,12.4833200,0.0000000,0.0000000,-110.3400100); //
CreateDynamicObject(1280,675.1471600,-1350.2392600,12.8652000,0.0000000,0.0000000,181.3199600); //
CreateDynamicObject(1280,674.8971600,-1336.8006600,12.8652000,0.0000000,0.0000000,180.6599900); //
CreateDynamicObject(19372,680.4916400,-1357.3117700,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,683.8798800,-1357.3094500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,687.3916000,-1357.2769800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,690.8284300,-1357.2973600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,694.3399000,-1357.3040800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,697.8294100,-1357.2752700,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,701.3419200,-1357.2852800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,704.8236100,-1357.2812500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,708.3226900,-1357.2489000,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,711.8118900,-1357.2015400,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(1280,681.8225700,-1359.3049300,12.8652000,0.0000000,0.0000000,-88.6200400); //
CreateDynamicObject(1280,689.0511500,-1359.3614500,12.8652000,0.0000000,0.0000000,-90.1200500); //
CreateDynamicObject(1280,696.4243800,-1359.5316200,12.8652000,0.0000000,0.0000000,-90.1200500); //
CreateDynamicObject(1280,685.1699200,-1355.2782000,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,692.8521700,-1355.2340100,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(737,681.1303700,-1355.0860600,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,689.1513700,-1355.2889400,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,685.6680300,-1359.2421900,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,693.1000400,-1359.4909700,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,697.1413600,-1355.2808800,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1280,700.4020400,-1355.2158200,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(737,700.7396200,-1359.7661100,12.4714000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(714,665.2144800,-1368.7540300,11.8707600,0.0000000,0.0000000,9.6600000); //
CreateDynamicObject(705,653.3681000,-1378.1892100,12.4833200,0.0000000,0.0000000,-110.3400100); //
CreateDynamicObject(714,695.3186000,-1367.2901600,9.6688700,0.0000000,0.0000000,-61.6200000); //
CreateDynamicObject(19372,711.8889800,-1353.9288300,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.8521100,-1350.4650900,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.8484500,-1346.9860800,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.8153100,-1343.5760500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.9032600,-1360.5135500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.9490400,-1363.9818100,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,711.9844400,-1367.4951200,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,712.0294800,-1370.9843800,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,715.2775900,-1371.1018100,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,718.7459700,-1371.1132800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,722.1741900,-1371.1306200,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,725.6136500,-1371.1716300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,729.0922900,-1371.1844500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,732.5679300,-1371.1964100,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,715.1542400,-1343.4144300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,718.5925900,-1343.4456800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,722.0882000,-1343.4012500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,725.5788000,-1343.4166300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,729.0624400,-1343.4097900,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,732.5139200,-1343.3461900,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,735.9284700,-1371.0229500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9431800,-1367.5437000,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9235200,-1364.0202600,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9257800,-1360.5365000,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9292000,-1357.0715300,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9304800,-1353.5662800,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9126000,-1350.0832500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.9158900,-1346.6189000,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,735.8904400,-1343.4688700,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(9833,723.3281900,-1356.9132100,14.9797700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,719.1310400,-1352.0607900,12.4876200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,723.0988800,-1353.3337400,12.4875700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,726.4417700,-1352.3568100,12.4880000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,721.9396400,-1348.1016800,12.4883700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,729.4157100,-1358.7533000,12.4873700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,729.3740800,-1364.0953400,12.4864000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,717.1248800,-1362.7310800,12.4857500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,723.0091600,-1367.5575000,12.4853000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,717.7995600,-1355.8923300,12.4868800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,729.4210200,-1349.2861300,12.4887800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,728.8853800,-1354.6101100,12.4878400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,715.7266800,-1348.3073700,12.4878400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,726.2645900,-1365.6081500,12.4860500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1280,730.2423700,-1345.4075900,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(1280,717.5917400,-1345.3649900,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(1280,723.4193100,-1345.4222400,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(1280,717.7441400,-1369.1157200,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,723.7694100,-1369.1586900,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,730.0127000,-1369.1849400,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(19372,739.2630000,-1357.2489000,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,742.7555500,-1357.2395000,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,724.1258500,-1340.0817900,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,724.0892900,-1336.6092500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,724.1032100,-1333.1053500,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,724.0730000,-1329.5918000,12.4149000,-0.0600000,-89.8798000,-89.4599400); //
CreateDynamicObject(19372,724.5962500,-1374.4515400,12.4149000,-0.0600000,-89.8798000,-89.4599000); //
CreateDynamicObject(19372,724.5938700,-1377.9027100,12.4149000,-0.0600000,-89.8798000,-90.1799300); //
CreateDynamicObject(19372,724.5748300,-1381.3432600,12.4149000,-0.0600000,-89.8798000,-90.1799300); //
CreateDynamicObject(19372,724.5731200,-1384.8239700,12.4149000,-0.0600000,-89.8798000,-90.1799300); //
CreateDynamicObject(705,701.8553500,-1342.7697800,12.4833200,0.0000000,0.0000000,-138.9600200); //
CreateDynamicObject(870,693.6796900,-1337.9592300,12.4823000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,715.8293500,-1335.7844200,12.4817700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,705.7809400,-1329.7723400,12.4839000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,705.3961800,-1333.9168700,12.4829000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1281,695.7561600,-1346.5255100,13.3123800,0.0000000,0.0000000,14.3999900); //
CreateDynamicObject(1281,685.0448000,-1341.9649700,13.3123800,0.0000000,0.0000000,81.1199800); //
CreateDynamicObject(1281,699.4658800,-1335.2172900,13.3123800,0.0000000,0.0000000,-45.1200200); //
CreateDynamicObject(6066,753.3314800,-1377.4582500,15.0053200,0.0000000,0.0000000,-52.2599800); //
CreateDynamicObject(2628,745.7697800,-1375.3852500,12.4855700,0.0000000,0.0000000,-182.5799700); //
CreateDynamicObject(2627,752.2903400,-1370.3790300,12.4858400,0.0000000,0.0000000,-103.6800000); //
CreateDynamicObject(2632,743.8241000,-1372.2915000,12.4862100,0.0000000,0.0000000,-96.7199900); //
CreateDynamicObject(2631,748.7660500,-1367.2819800,12.4864700,0.0000000,0.0000000,-31.5000000); //
CreateDynamicObject(2629,750.2095900,-1374.2154500,12.4853100,0.0000000,0.0000000,-126.0000500); //
CreateDynamicObject(19372,746.1889000,-1357.1911600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,749.5766600,-1357.1663800,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,753.0513300,-1357.1140100,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,756.5716600,-1357.0771500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,759.9885900,-1357.0583500,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,763.4179700,-1357.0459000,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,766.8793300,-1357.0322300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,770.2605600,-1357.0460200,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,773.6328700,-1357.0772700,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,777.0650600,-1357.0672600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,780.5622600,-1357.0538300,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,784.0454100,-1357.0340600,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(19372,787.5304000,-1357.0325900,12.4149000,-0.0600000,-89.8798000,0.3000000); //
CreateDynamicObject(1340,722.5482800,-1377.9224900,13.5230000,0.0000000,0.0000000,0.6600000); //
CreateDynamicObject(1340,675.2467000,-1362.9239500,13.5230000,0.0000000,0.0000000,0.6600000); //
CreateDynamicObject(1340,679.0174000,-1345.5109900,13.5230000,0.0000000,0.0000000,180.9598700); //
CreateDynamicObject(3517,733.2340100,-1346.5870400,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(714,773.9287700,-1338.6229200,11.2882700,0.0000000,0.0000000,-61.6200000); //
CreateDynamicObject(3517,733.0954000,-1368.8328900,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,713.7533600,-1345.6499000,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,714.1320200,-1368.5698200,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,749.6746800,-1354.7730700,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,776.1665000,-1354.8640100,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,776.3427700,-1359.7880900,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,749.5200200,-1359.9530000,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1280,756.0245400,-1354.8789100,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,762.4340200,-1354.9386000,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,769.9703400,-1354.9974400,12.8652000,0.0000000,0.0000000,90.5399700); //
CreateDynamicObject(1280,755.5987500,-1359.4256600,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(1280,762.4160800,-1359.3095700,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(1280,770.2473800,-1359.3024900,12.8652000,0.0000000,0.0000000,-89.2800500); //
CreateDynamicObject(705,770.5246000,-1378.3158000,12.4833200,0.0000000,0.0000000,-138.9600200); //
CreateDynamicObject(1281,764.0376600,-1342.5430900,13.3123800,0.0000000,0.0000000,4.3199800); //
CreateDynamicObject(1281,756.9464100,-1336.3743900,13.3123800,0.0000000,0.0000000,71.4599800); //
CreateDynamicObject(1281,751.3365500,-1345.9880400,13.3123800,0.0000000,0.0000000,-106.9200200); //
CreateDynamicObject(1281,743.9126000,-1336.6314700,13.3123800,0.0000000,0.0000000,-195.9600100); //
CreateDynamicObject(2631,772.3823900,-1366.2005600,12.4864700,0.0000000,0.0000000,-9.6000000); //
CreateDynamicObject(2632,767.8076800,-1369.7207000,12.4862100,0.0000000,0.0000000,-96.7199900); //
CreateDynamicObject(1340,738.2617200,-1344.6818800,13.5230000,0.0000000,0.0000000,-178.7401000); //
CreateDynamicObject(3517,674.5386400,-1383.7316900,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,681.1806000,-1383.7399900,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,721.1558800,-1383.6347700,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,727.4216900,-1383.4930400,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,758.6139500,-1352.4437300,12.4796000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,744.0528000,-1348.7314500,12.4808600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,759.5543800,-1346.0653100,12.4809500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,733.9331100,-1334.0782500,12.4842000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,771.3807400,-1349.6453900,12.4787600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,782.3443000,-1336.2617200,12.4804200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,768.3906300,-1336.6915300,12.4812300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,761.3355100,-1368.8111600,12.4751700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,741.6370800,-1364.1788300,12.4799200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,737.6531400,-1381.2362100,12.4744200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,737.5643300,-1372.7962600,12.4773600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,737.4957900,-1341.7249800,12.4945100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,710.0855100,-1341.7802700,12.4938400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,710.3094500,-1372.8582800,12.4898700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,710.1941500,-1358.8178700,12.4929200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,710.1779800,-1355.5024400,12.4888800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,737.5923500,-1358.9659400,12.4897100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,737.5917400,-1355.4335900,12.4892500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,758.7400500,-1355.2058100,12.4930100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,758.7860100,-1358.8885500,12.4932300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,774.3300800,-1354.6446500,12.4924200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,774.9593500,-1359.3898900,12.4934400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,787.2776500,-1355.2221700,12.4919700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,787.3656600,-1358.7710000,12.4924100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,726.4581900,-1384.6540500,12.4888600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,722.7831400,-1384.7200900,12.4881900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,722.3045000,-1329.6621100,12.4893200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,725.7784400,-1329.7725800,12.4899200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,697.5866700,-1355.2839400,12.4910200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,699.8050500,-1359.9388400,12.4898800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,692.1891500,-1359.6492900,12.4905900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,688.6728500,-1355.2817400,12.4919700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,685.0808100,-1359.4617900,12.4908200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,681.6511800,-1355.4312700,12.4919200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,675.0282000,-1329.6822500,12.4925000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,678.4281000,-1329.6752900,12.4931300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,647.8757900,-1355.7543900,12.4917300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,647.9481200,-1359.2270500,12.4915000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,655.1157800,-1359.4755900,12.4924500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,663.5401000,-1355.4838900,12.4923000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,667.7413900,-1359.2522000,12.4929700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,671.5866700,-1355.3563200,12.4935500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,675.3391700,-1359.3183600,12.4922600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(617,686.6327500,-1374.8083500,12.4846500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(617,694.6901900,-1380.4718000,11.7488000,0.0000000,0.0000000,149.2800100); //
CreateDynamicObject(617,703.1956200,-1369.3366700,9.5469000,0.0000000,0.0000000,295.4400000); //
CreateDynamicObject(617,708.7537200,-1382.1486800,10.9278300,0.0000000,0.0000000,314.8800000); //
CreateDynamicObject(1281,692.5203200,-1375.0755600,13.3123800,0.0000000,0.0000000,47.0399900); //
CreateDynamicObject(1281,701.5195300,-1378.6911600,13.3123800,0.0000000,0.0000000,-47.5200000); //
CreateDynamicObject(3517,727.1843300,-1330.4329800,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3517,720.5630500,-1330.4231000,23.0275000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(714,738.3230600,-1379.6789600,11.4966600,0.0000000,0.0000000,-61.6200000); //
//casa nico
CreateDynamicObject(3603,244.2800000,-1376.1544200,58.0543000,360.2182900,0.0600000,126.7691000); //
CreateDynamicObject(987,259.6290300,-1336.4852300,53.9621700,0.0000000,0.0000000,-143.3999600); //
CreateDynamicObject(987,250.1104700,-1343.5841100,53.9621700,0.0000000,0.0000000,-141.2999400); //
CreateDynamicObject(987,240.8566300,-1351.0231900,53.9621700,0.0000000,0.0000000,-141.2399300); //
CreateDynamicObject(987,231.6153400,-1358.4727800,53.9621700,0.0000000,0.0000000,-138.7800300); //
CreateDynamicObject(987,222.6111100,-1366.3431400,53.9621700,0.0000000,0.0000000,-138.7800300); //
CreateDynamicObject(987,213.6578200,-1374.1385500,53.9621700,0.0000000,0.0000000,-136.9800400); //
CreateDynamicObject(987,204.8403200,-1382.2450000,53.9621700,0.0000000,0.0000000,-20.8800400); //
CreateDynamicObject(987,215.9958500,-1386.3608400,53.9621700,0.0000000,0.0000000,-25.9800300); //
CreateDynamicObject(987,226.7868500,-1391.6087600,53.9621700,0.0000000,0.0000000,-45.4200300); //
CreateDynamicObject(987,234.4400200,-1399.0401600,53.9621700,0.0000000,0.0000000,-55.9200100); //
CreateDynamicObject(987,241.0532800,-1409.0076900,53.9621700,0.0000000,0.0000000,43.6199700); //
CreateDynamicObject(987,249.6619400,-1400.8132300,53.9621700,0.0000000,0.0000000,42.5399700); //
CreateDynamicObject(987,258.4609700,-1392.8377700,53.9621700,0.0000000,0.0000000,40.9199700); //
CreateDynamicObject(987,267.5389700,-1385.0164800,53.9621700,0.0000000,0.0000000,39.9599600); //
CreateDynamicObject(987,276.6888400,-1377.3254400,53.9621700,0.0000000,0.0000000,39.9599600); //
CreateDynamicObject(987,285.8815000,-1369.6767600,53.9621700,0.0000000,0.0000000,41.6399600); //
CreateDynamicObject(987,288.2525000,-1367.5845900,53.9621700,0.0000000,0.0000000,41.6399600); //
CreateDynamicObject(987,297.3275100,-1359.6403800,53.9621700,0.0000000,0.0000000,133.5600100); //
CreateDynamicObject(987,289.1080300,-1351.0225800,53.9621700,0.0000000,0.0000000,131.1600200); //
CreateDynamicObject(669,284.7187500,-1341.9687500,52.3593800,356.8584000,0.0000000,-2.0071300); //
CreateDynamicObject(987,281.2957800,-1342.0609100,53.9621700,0.0000000,0.0000000,138.9599600); //
CreateDynamicObject(987,277.2034600,-1338.0045200,53.9621700,0.0000000,0.0000000,140.2799400); //
CreateDynamicObject(983,265.2788100,-1332.8170200,58.4469000,0.0000000,0.0000000,-55.8000000); //
CreateDynamicObject(983,262.6414500,-1334.6401400,58.4469000,0.0000000,0.0000000,-55.8000000); //
CreateDynamicObject(620,267.1415100,-1353.7498800,43.8600300,3.1415900,0.0000000,1.6580600); //
CreateDynamicObject(620,257.6338500,-1350.6591800,43.8600300,3.1415900,0.0000000,1.6580600); //
CreateDynamicObject(620,274.6856100,-1368.1834700,43.8600300,3.1415900,0.0000000,-55.2219400); //
CreateDynamicObject(620,270.2312000,-1375.8061500,43.8600300,3.1415900,0.0000000,1.6580600); //
CreateDynamicObject(640,268.4632000,-1357.2578100,52.8981000,0.0000000,0.0000000,25.9200000); //
CreateDynamicObject(640,272.8286400,-1369.9078400,52.8181000,0.0000000,0.0000000,-18.9000000); //
CreateDynamicObject(640,271.3270000,-1373.9345700,52.8181000,0.0000000,0.0000000,-21.3000000); //
CreateDynamicObject(640,254.6765000,-1351.1159700,52.7781000,0.0000000,0.0000000,84.1200000); //
CreateDynamicObject(640,251.5410900,-1350.7531700,52.7781000,0.0000000,0.0000000,84.1200000); //
CreateDynamicObject(640,246.8447900,-1351.7502400,52.7781000,0.0000000,0.0000000,121.7400000); //
CreateDynamicObject(640,242.3068400,-1354.5512700,52.7781000,0.0000000,0.0000000,121.7400000); //
CreateDynamicObject(1215,266.9244100,-1354.3588900,52.3564800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,257.8147000,-1351.2500000,52.1044800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,269.6723900,-1359.7022700,52.5166700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,273.6558200,-1367.5618900,52.5168400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,271.9955400,-1372.2797900,52.6877900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,249.1513700,-1350.6724900,52.4771800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,241.0043000,-1355.6293900,52.4318400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(640,268.0595700,-1378.6964100,52.8181000,0.0000000,0.0000000,-49.6800200); //
CreateDynamicObject(640,264.1034900,-1381.2249800,52.8181000,0.0000000,0.0000000,-64.9200400); //
CreateDynamicObject(1215,266.3715200,-1380.0628700,52.6351000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(640,238.0032800,-1357.6192600,52.7781000,0.0000000,0.0000000,128.9399900); //
CreateDynamicObject(640,233.7457100,-1360.8094500,52.7781000,0.0000000,0.0000000,125.2799900); //
CreateDynamicObject(1215,235.9384600,-1359.2324200,52.4805200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,260.0426900,-1346.1678500,52.1039000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,260.9062500,-1341.1180400,52.1040500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,269.7385900,-1347.7301000,52.3461000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,270.6623800,-1338.9776600,52.3934100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,255.2285900,-1365.7253400,52.1016300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,257.5415300,-1369.0174600,52.1011000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,289.2053500,-1359.7303500,52.1852500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1280,249.4109000,-1363.2543900,52.4609000,0.0000000,0.0000000,-144.4800000); //
CreateDynamicObject(1280,246.9310900,-1359.8772000,52.4609000,0.0000000,0.0000000,-143.5800200); //
CreateDynamicObject(2395,268.9615200,-1350.5935100,52.3996000,-89.2200100,61.4999900,37.8600300); //
CreateDynamicObject(2395,272.3659100,-1352.0572500,52.3396000,-88.3800400,68.0399600,43.7400300); //
CreateDynamicObject(2395,274.9754900,-1353.2309600,52.2396000,-89.2200000,61.5000000,23.3400000); //
CreateDynamicObject(2395,277.8749100,-1355.5087900,52.1796000,-89.2200000,61.5000000,23.6400000); //
CreateDynamicObject(640,270.8937400,-1351.6339100,52.8981000,0.0000000,0.0000000,66.5399900); //
CreateDynamicObject(1215,268.5235600,-1350.2849100,52.5561000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,276.5111400,-1350.8048100,52.2121800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,275.2324800,-1353.3697500,52.1884800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(640,272.2095000,-1348.6253700,52.8981000,0.0000000,0.0000000,66.5399900); //
CreateDynamicObject(640,274.2601000,-1349.5329600,52.8981000,0.0000000,0.0000000,66.5399900); //
CreateDynamicObject(640,272.7664200,-1352.4483600,52.8981000,0.0000000,0.0000000,66.5399900); //
CreateDynamicObject(640,278.6293900,-1352.1865200,52.8981000,0.0000000,0.0000000,51.8999200); //
CreateDynamicObject(640,277.0307300,-1355.0887500,52.8981000,0.0000000,0.0000000,50.0398900); //
CreateDynamicObject(640,279.4581000,-1352.8199500,52.8981000,0.0000000,0.0000000,51.1799100); //
CreateDynamicObject(1215,277.9840100,-1366.9455600,52.1037300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,268.5372000,-1352.3018800,52.2217400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,267.8835400,-1353.9733900,52.2217400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,267.8835400,-1353.9733900,52.2217400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1281,225.1105500,-1386.0167200,52.8279000,0.0000000,0.0000000,-12.1800000); //
CreateDynamicObject(1281,221.6990400,-1377.6151100,52.8279000,0.0000000,0.0000000,73.0800000); //
CreateDynamicObject(870,270.9332900,-1346.2520800,52.2817000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,271.4184000,-1343.4686300,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,271.5994300,-1340.7296100,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,273.0625000,-1345.3452100,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,272.9287700,-1347.2364500,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,270.5608500,-1353.3483900,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,269.4167200,-1354.9209000,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,272.5054600,-1353.7821000,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,274.6854200,-1348.2010500,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3095,285.9396100,-1362.6511200,52.1011900,0.2400000,-90.4799000,128.5199400); //
CreateDynamicObject(3095,286.5908500,-1357.1060800,52.1011900,0.2400000,-90.4799000,218.6999800); //
CreateDynamicObject(3095,281.0438800,-1356.4595900,52.1011900,0.2400000,-90.4799000,-51.7200700); //
CreateDynamicObject(3095,283.4838900,-1359.5506600,56.6671000,180.0000000,0.0000000,38.4600000); //
CreateDynamicObject(3361,276.9708900,-1353.0930200,54.5463000,0.0000000,0.0000000,143.6398500); //
CreateDynamicObject(1215,277.4587400,-1358.8763400,56.6554200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,284.1978500,-1353.4344500,56.6551300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,289.5543500,-1360.3073700,56.6549600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,282.7375500,-1365.6479500,56.6561700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3934,283.5882900,-1359.5776400,56.6553000,0.0000000,0.0000000,-51.0000000); //
CreateDynamicObject(19355,278.4314000,-1357.8173800,53.8904000,0.0000000,0.0000000,-52.5000000); //
CreateDynamicObject(19355,278.4287100,-1357.8371600,54.8655000,0.0000000,0.0000000,-52.5000000); //
CreateDynamicObject(19355,280.9491000,-1355.8653600,53.8904000,0.0000000,0.0000000,-51.8999900); //
CreateDynamicObject(19355,280.9491000,-1355.8653600,54.8790000,0.0000000,0.0000000,-51.9000000); //
CreateDynamicObject(19355,283.0052500,-1354.2579300,53.8904000,0.0000000,0.0000000,-51.8999900); //
CreateDynamicObject(19355,283.0051900,-1354.2579300,54.8728000,0.0000000,0.0000000,-51.9000000); //
CreateDynamicObject(19355,283.9286500,-1365.0070800,53.8904000,0.0000000,0.0000000,127.2000500); //
CreateDynamicObject(19355,283.9285900,-1365.0070800,54.8665000,0.0000000,0.0000000,127.2001000); //
CreateDynamicObject(19355,286.4925800,-1363.0653100,53.8904000,0.0000000,0.0000000,127.7400600); //
CreateDynamicObject(19355,286.4736900,-1363.0585900,54.8600000,0.0000000,0.0000000,127.7401000); //
CreateDynamicObject(19355,288.6734000,-1361.3322800,54.8507000,0.0000000,0.0000000,127.7401000); //
CreateDynamicObject(19355,288.6922900,-1361.3389900,53.5263600,0.0000000,0.0000000,127.7401000); //
CreateDynamicObject(19355,288.9714400,-1359.1741900,53.7365900,0.0000000,0.0000000,217.9200900); //
CreateDynamicObject(19355,288.9869100,-1359.1615000,54.8812000,0.0000000,0.0000000,217.9201000); //
CreateDynamicObject(19355,287.0332600,-1356.6521000,53.7365900,0.0000000,0.0000000,217.9200900); //
CreateDynamicObject(19355,287.0332900,-1356.6521000,54.8618000,0.0000000,0.0000000,217.9201000); //
CreateDynamicObject(19355,285.2434700,-1354.4006300,53.7365900,0.0000000,0.0000000,218.2200800); //
CreateDynamicObject(19355,285.2435000,-1354.4006300,54.8633000,0.0000000,0.0000000,218.2200900); //
CreateDynamicObject(644,253.7009000,-1365.7758800,52.4113000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(644,256.7818600,-1370.3072500,52.4113000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(640,271.8406100,-1359.2011700,52.8021000,0.0000000,0.0000000,94.1400000); //
CreateDynamicObject(640,275.1461200,-1358.9049100,52.7721000,0.0000000,0.0000000,96.1800000); //
CreateDynamicObject(640,276.1228600,-1367.3241000,52.8181000,0.0000000,0.0000000,-80.6400000); //
CreateDynamicObject(640,280.2338600,-1366.4743700,52.8181000,0.0000000,0.0000000,-75.7800100); //
CreateDynamicObject(1215,277.0343900,-1359.0701900,52.3169300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,281.5923500,-1366.0542000,52.3561700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(937,283.9474500,-1355.5186800,52.5606000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19903,288.0672600,-1360.0047600,52.1028600,0.0000000,0.0000000,178.6200000); //
CreateDynamicObject(1075,282.6338800,-1355.7286400,52.5051400,0.0000000,0.0000000,-124.1999800); //
CreateDynamicObject(1075,285.2756700,-1355.9138200,52.5051400,0.0000000,0.0000000,-125.8199900); //
CreateDynamicObject(1075,285.9924000,-1356.5407700,52.5051400,0.0000000,0.0000000,-134.5199900); //
CreateDynamicObject(1075,286.6135900,-1357.3245800,52.5051400,0.0000000,0.0000000,-138.6598800); //
CreateDynamicObject(19900,281.7751500,-1356.4515400,52.1022300,0.0000000,0.0000000,37.2600000); //
CreateDynamicObject(19900,280.3898600,-1357.5390600,52.1022300,0.0000000,0.0000000,37.2600000); //
CreateDynamicObject(9833,264.6287200,-1373.1649200,54.1822400,0.0000000,0.0000000,-7.7400000); //
CreateDynamicObject(1280,264.5280500,-1371.8386200,52.4609000,0.0000000,0.0000000,-58.9199600); //
CreateDynamicObject(1280,266.5827000,-1373.2890600,52.4609000,0.0000000,0.0000000,-182.2200500); //
CreateDynamicObject(1280,264.4794600,-1374.1917700,52.4609000,0.0000000,0.0000000,-297.8401200); //
CreateDynamicObject(870,257.3214100,-1349.8328900,52.4417000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,258.1327500,-1347.7042200,52.4417000,0.0000000,0.0000000,12.2400000); //
CreateDynamicObject(870,259.1049500,-1345.5393100,52.4417000,0.0000000,0.0000000,12.2400000); //
CreateDynamicObject(870,259.5524000,-1343.0839800,52.4417000,0.0000000,0.0000000,18.8400000); //
CreateDynamicObject(870,259.7304700,-1341.0518800,52.4417000,0.0000000,0.0000000,26.9400000); //
CreateDynamicObject(870,259.5760800,-1338.8973400,52.4417000,0.0000000,0.0000000,26.9400000); //
CreateDynamicObject(644,265.2991000,-1373.2789300,52.3588000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(669,275.2004100,-1372.2659900,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(2811,236.9683400,-1379.6323200,52.9919000,0.0000000,0.0000000,-64.9800000); //
CreateDynamicObject(2811,238.8893300,-1382.1801800,52.9919000,0.0000000,0.0000000,-44.9400100); //
CreateDynamicObject(1645,229.2098800,-1372.5333300,53.2537000,0.0000000,0.0000000,-32.8200000); //
CreateDynamicObject(1645,230.3445100,-1374.0073200,53.2537000,0.0000000,0.0000000,-71.2200300); //
CreateDynamicObject(644,244.9838600,-1357.0424800,52.4113000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,255.3120000,-1349.6184100,52.4417000,0.0000000,0.0000000,27.6600000); //
CreateDynamicObject(870,253.1384000,-1349.0344200,52.4417000,0.0000000,0.0000000,27.6600000); //
CreateDynamicObject(870,250.8329200,-1348.9135700,52.4417000,0.0000000,0.0000000,27.6600000); //
CreateDynamicObject(870,248.9398800,-1348.9571500,52.4417000,0.0000000,0.0000000,27.6600000); //
CreateDynamicObject(870,247.3297100,-1349.3811000,52.4417000,0.0000000,0.0000000,51.1200000); //
CreateDynamicObject(870,245.4442300,-1350.5153800,52.4417000,0.0000000,0.0000000,51.1200000); //
CreateDynamicObject(870,243.6139400,-1351.3999000,52.4417000,0.0000000,0.0000000,51.1200000); //
CreateDynamicObject(870,241.9223200,-1352.5839800,52.4417000,0.0000000,0.0000000,51.1200000); //
CreateDynamicObject(870,240.1126600,-1353.9400600,52.4417000,0.0000000,0.0000000,51.1200000); //
CreateDynamicObject(669,272.0824600,-1356.5759300,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(669,275.1804200,-1342.0358900,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(669,278.2859200,-1349.0870400,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(669,255.3793500,-1347.2424300,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(673,263.3253800,-1386.2175300,51.6640600,356.8584000,0.0000000,-2.4434600); //
CreateDynamicObject(673,268.3955700,-1381.3204300,51.6640600,356.8584000,0.0000000,-2.4434600); //
CreateDynamicObject(673,252.5183000,-1396.2458500,51.6640600,356.8584000,0.0000000,-2.4434600); //
CreateDynamicObject(669,236.6014400,-1396.8658400,51.9218800,3.1415900,0.0000000,0.8726600); //
CreateDynamicObject(700,221.2405200,-1386.7620800,52.0546900,356.8584000,0.0000000,-2.0071300); //
CreateDynamicObject(700,233.2190400,-1395.3070100,52.0546900,356.8584000,0.0000000,-2.0071300); //
CreateDynamicObject(700,249.2663400,-1346.5893600,52.0546900,356.8584000,0.0000000,-2.0071300); //
CreateDynamicObject(700,258.0040300,-1340.8443600,52.0546900,356.8584000,0.0000000,-2.0071300); //
CreateDynamicObject(700,272.2696500,-1377.9928000,52.0546900,356.8584000,0.0000000,-2.0071300); //
//hq en el campo FBI
CreateDynamicObject(19863,-1411.2714800,-1470.8335000,100.8451000,77.6998000,0.5400000,-90.1800000); //
CreateDynamicObject(19863,-1411.2902800,-1476.1241500,100.8451000,77.6998000,0.5400000,-90.1800000); //
CreateDynamicObject(19863,-1411.2512200,-1481.4001500,100.8451000,77.6998000,0.5400000,-90.1800000); //
CreateDynamicObject(5721,-1419.6176800,-1477.4377400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.6662600,-1460.6638200,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.7006800,-1444.0174600,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.5958300,-1494.2119100,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.4834000,-1510.9696000,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.7070300,-1527.7275400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.4411600,-1544.5158700,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.4564200,-1561.1748000,95.4929000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.5750700,-1578.0385700,95.4329000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1419.7326700,-1594.6333000,95.4329000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1436.1646700,-1594.6213400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.7213100,-1594.5897200,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1467.2229000,-1594.5257600,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.7312000,-1578.0863000,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.1485600,-1578.2058100,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.6049800,-1578.2939500,95.4529000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1436.1281700,-1561.5517600,95.4699000,0.0000000,0.0000000,-0.4200000); //
CreateDynamicObject(5721,-1436.0208700,-1544.8503400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.8975800,-1528.1724900,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.8651100,-1511.5214800,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.6983600,-1495.2348600,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.5346700,-1479.9648400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.3964800,-1464.4301800,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1435.3038300,-1447.8083500,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.4652100,-1561.6235400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.2530500,-1545.1765100,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.3768300,-1528.9188200,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.2448700,-1512.9444600,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1452.0426000,-1497.0485800,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1451.8895300,-1480.8295900,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1451.7225300,-1464.8243400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1451.5190400,-1448.2554900,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.7194800,-1562.3381300,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.6937300,-1545.6436800,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.8580300,-1530.5543200,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.7908900,-1514.4527600,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.4986600,-1497.7286400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.4552000,-1481.4244400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.3166500,-1464.9401900,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1468.1812700,-1448.4238300,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3749,-1411.8745100,-1474.1068100,106.0871600,0.0000000,0.0000000,89.9999800); //
CreateDynamicObject(987,-1411.0925300,-1464.4958500,100.6436400,0.0000000,0.0000000,90.1200000); //
CreateDynamicObject(987,-1411.0806900,-1452.5827600,100.6436400,0.0000000,0.0000000,90.1200000); //
CreateDynamicObject(987,-1411.0684800,-1440.6387900,100.6436400,0.0000000,0.0000000,166.4398200); //
CreateDynamicObject(987,-1422.6831100,-1437.8216600,100.6436400,0.0000000,0.0000000,183.2998200); //
CreateDynamicObject(987,-1434.5778800,-1438.5086700,100.6436400,0.0000000,0.0000000,183.2998200); //
CreateDynamicObject(987,-1446.4866900,-1439.1717500,100.6436400,0.0000000,0.0000000,180.8398400); //
CreateDynamicObject(987,-1458.4310300,-1439.3474100,100.6436400,0.0000000,0.0000000,180.8398400); //
CreateDynamicObject(987,-1464.4931600,-1439.4171100,100.6436400,0.0000000,0.0000000,180.8398400); //
CreateDynamicObject(987,-1476.5308800,-1439.3751200,100.9558300,0.0000000,0.0000000,270.8398700); //
CreateDynamicObject(987,-1476.3979500,-1451.2376700,100.9558300,0.0000000,0.0000000,269.2199400); //
CreateDynamicObject(987,-1476.5793500,-1463.1425800,100.9558300,0.0000000,0.0000000,269.8799100); //
CreateDynamicObject(987,-1476.6157200,-1475.1210900,100.9558300,0.0000000,0.0000000,269.8799100); //
CreateDynamicObject(987,-1476.6722400,-1487.0231900,100.9558300,0.0000000,0.0000000,269.8799100); //
CreateDynamicObject(987,-1476.7711200,-1498.8868400,100.9558300,0.0000000,0.0000000,269.8799100); //
CreateDynamicObject(987,-1476.8626700,-1510.8595000,100.9558300,0.0000000,0.0000000,269.8799100); //
CreateDynamicObject(987,-1476.8933100,-1522.7772200,100.9558300,0.0000000,0.0000000,271.4998500); //
CreateDynamicObject(987,-1476.5941200,-1534.7324200,100.9558300,0.0000000,0.0000000,273.1197800); //
CreateDynamicObject(987,-1475.9567900,-1546.6491700,100.9558300,0.0000000,0.0000000,279.9597500); //
CreateDynamicObject(987,-1473.8624300,-1558.4287100,100.9558300,0.0000000,0.0000000,279.9597500); //
CreateDynamicObject(987,-1471.8624300,-1570.1817600,100.9558300,0.0000000,0.0000000,279.9597500); //
CreateDynamicObject(987,-1469.7843000,-1581.9283400,100.9558300,0.0000000,0.0000000,276.2998000); //
CreateDynamicObject(987,-1468.5871600,-1593.5872800,100.9558300,0.0000000,0.0000000,319.7996200); //
CreateDynamicObject(987,-1459.4820600,-1601.2706300,100.9558300,0.0000000,0.0000000,354.4198600); //
CreateDynamicObject(987,-1447.5891100,-1602.4786400,100.9558300,0.0000000,0.0000000,359.3398700); //
CreateDynamicObject(987,-1435.6732200,-1602.7025100,100.9558300,0.0000000,0.0000000,359.3398700); //
CreateDynamicObject(987,-1423.7955300,-1602.9034400,100.9558300,0.0000000,0.0000000,398.6398600); //
CreateDynamicObject(987,-1414.5007300,-1595.5059800,100.9558300,0.0000000,0.0000000,436.6199000); //
CreateDynamicObject(987,-1411.7111800,-1583.9036900,100.9558300,0.0000000,0.0000000,448.7996200); //
CreateDynamicObject(987,-1411.3148200,-1571.8678000,100.9558300,0.0000000,0.0000000,449.1599700); //
CreateDynamicObject(987,-1411.0946000,-1559.9605700,100.9558300,0.0000000,0.0000000,450.3599200); //
CreateDynamicObject(987,-1411.0743400,-1548.0153800,100.9558300,0.0000000,0.0000000,450.3599200); //
CreateDynamicObject(4574,-1429.9439700,-1602.7253400,116.8418800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(4574,-1458.4525100,-2057.3957500,-0.1892400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(4574,-1453.3929400,-1600.6574700,105.7505800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-1442.2104500,-1559.9456800,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1442.1174300,-1556.2442600,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1442.0264900,-1552.5052500,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1441.9383500,-1548.7661100,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1445.2198500,-1550.9425000,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1448.9221200,-1550.8570600,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1452.6152300,-1550.7879600,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1438.7711200,-1551.1033900,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1435.0396700,-1551.1953100,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1431.3321500,-1551.3004200,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(1215,-1441.9335900,-1548.3808600,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1439.2180200,-1548.4023400,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1435.4517800,-1548.5269800,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1431.7332800,-1548.6328100,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1428.1534400,-1548.6937300,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1445.6325700,-1548.2948000,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1449.3321500,-1548.2095900,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1452.9311500,-1548.1055900,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18850,-1459.8742700,-1456.5485800,88.8631000,0.0000000,0.0000000,-0.4200000); //
CreateDynamicObject(640,-1430.7189900,-1551.6741900,101.4951300,0.0000000,0.0000000,88.4999900); //
CreateDynamicObject(640,-1436.0865500,-1551.5266100,101.4951300,0.0000000,0.0000000,88.4999900); //
CreateDynamicObject(640,-1450.3630400,-1551.1876200,101.4951300,0.0000000,0.0000000,88.4999900); //
CreateDynamicObject(640,-1445.0040300,-1551.2995600,101.4951300,0.0000000,0.0000000,88.4999900); //
CreateDynamicObject(640,-1442.3581500,-1553.6661400,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1439.0067100,-1553.7972400,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1439.1261000,-1559.0330800,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(6874,-1441.9560500,-1582.4038100,100.7423300,0.0000000,0.0000000,268.7401700); //
CreateDynamicObject(640,-1439.2747800,-1564.3018800,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1442.5103800,-1559.0214800,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1442.6500200,-1564.3778100,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(11237,-1437.1203600,-1590.2767300,106.7245100,0.0000000,0.0000000,0.3000300); //
CreateDynamicObject(640,-1428.4906000,-1554.0418700,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1428.6560100,-1559.3470500,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1428.8264200,-1564.6320800,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1452.7919900,-1554.0369900,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1452.8851300,-1559.2710000,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1453.0293000,-1564.2440200,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(19540,-1451.4151600,-1573.9901100,100.8888000,0.0000000,0.0000000,-1.0800000); //
CreateDynamicObject(19540,-1452.9245600,-1573.9804700,100.8888000,0.0000000,0.0000000,-1.0800000); //
CreateDynamicObject(870,-1444.8485100,-1554.3682900,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1447.6466100,-1554.0892300,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1450.3949000,-1553.6176800,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1437.3676800,-1554.1676000,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1434.8923300,-1554.8183600,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1432.0781300,-1554.2574500,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1430.4315200,-1556.4270000,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1431.3481400,-1560.0316200,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1445.3746300,-1558.3004200,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-1450.9262700,-1560.0047600,101.0838500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1442.2106900,-1551.3122600,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1439.0594500,-1551.4587400,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1251,-1431.5405300,-1548.4798600,100.8429000,0.0000000,0.0000000,88.3200100); //
CreateDynamicObject(1251,-1449.5325900,-1548.0877700,100.8429000,0.0000000,0.0000000,88.3200100); //
CreateDynamicObject(1251,-1445.2528100,-1548.2025100,100.8429000,0.0000000,0.0000000,88.3200100); //
CreateDynamicObject(1251,-1435.9071000,-1548.3687700,100.8429000,0.0000000,0.0000000,88.7400100); //
CreateDynamicObject(3463,-1472.7052000,-1443.7592800,101.0402800,0.0000000,0.0000000,45.2399900); //
CreateDynamicObject(3463,-1406.3635300,-1502.4984100,101.0402800,0.0000000,0.0000000,92.1000300); //
CreateDynamicObject(3463,-1412.5238000,-1548.1822500,101.0402800,0.0000000,0.0000000,87.1200200); //
CreateDynamicObject(3463,-1472.0308800,-1545.1724900,101.0402800,0.0000000,0.0000000,87.1200200); //
CreateDynamicObject(3463,-1472.5979000,-1501.2132600,101.0402800,0.0000000,0.0000000,87.1200200); //
CreateDynamicObject(8841,-1462.8322800,-1522.7619600,103.9114000,0.0000000,0.0000000,-87.7799000); //
CreateDynamicObject(17037,-1416.0709200,-1567.3553500,103.2328000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(17037,-1422.2751500,-1567.4693600,103.2328000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1251,-1420.9940200,-1570.9187000,100.8739800,0.0000000,0.0000000,89.3400200); //
CreateDynamicObject(1251,-1417.3907500,-1570.9560500,100.8739800,0.0000000,0.0000000,89.3400200); //
CreateDynamicObject(2934,-1436.9377400,-1445.3281300,102.2666000,0.0000000,0.0000000,-51.5999900); //
CreateDynamicObject(2934,-1432.9056400,-1448.0708000,102.2666000,0.0000000,0.0000000,-51.5999900); //
CreateDynamicObject(2934,-1428.2181400,-1451.0761700,102.2666000,0.0000000,0.0000000,-51.5999900); //
CreateDynamicObject(3043,-1422.2950400,-1449.9899900,102.3362000,0.0000000,0.0000000,8.4600000); //
CreateDynamicObject(3043,-1434.2238800,-1446.5040300,105.2051000,0.0000000,0.0000000,44.5200100); //
CreateDynamicObject(3043,-1430.6763900,-1450.1127900,105.2051000,0.0000000,0.0000000,224.1000500); //
CreateDynamicObject(3633,-1423.4073500,-1447.3433800,101.3596000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3633,-1422.0839800,-1447.4158900,101.3596000,0.0000000,0.0000000,30.7799900); //
CreateDynamicObject(17037,-1416.0709200,-1567.3553500,103.2328000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(17037,-1459.3950200,-1566.5334500,103.2328000,0.0000000,0.0000000,88.0800300); //
CreateDynamicObject(1251,-1459.4582500,-1568.5889900,100.8739800,0.0000000,0.0000000,88.2600300); //
CreateDynamicObject(5837,-1418.4416500,-1481.7014200,102.8046700,0.0000000,0.0000000,182.5800300); //
CreateDynamicObject(8171,-1383.9763200,-1556.9231000,101.4496000,0.0200000,0.0000000,182.1600000); //
CreateDynamicObject(5721,-1403.0876500,-1528.1567400,95.4868100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(987,-1406.0936300,-1547.6722400,100.9558000,0.0000000,0.0000000,272.5201100); //
CreateDynamicObject(987,-1411.3115200,-1537.0185500,100.9558300,0.0000000,0.0000000,296.0401900); //
CreateDynamicObject(987,-1405.6102300,-1559.6792000,100.9558300,0.0000000,0.0000000,271.3801300); //
CreateDynamicObject(987,-1405.3145800,-1571.6278100,100.9558300,0.0000000,0.0000000,271.5600900); //
CreateDynamicObject(987,-1404.9940200,-1583.5285600,100.9558300,0.0000000,0.0000000,271.5600900); //
CreateDynamicObject(987,-1404.7424300,-1595.4829100,100.9558300,0.0000000,0.0000000,271.5600900); //
CreateDynamicObject(987,-1404.4200400,-1607.4488500,100.9558300,0.0000000,0.0000000,271.5600900); //
CreateDynamicObject(987,-1378.1175500,-1482.2393800,100.8507200,0.0000000,0.0000000,177.7797500); //
CreateDynamicObject(987,-1364.8284900,-1493.4003900,100.8507200,0.0000000,0.0000000,97.4398000); //
CreateDynamicObject(987,-1361.1329300,-1504.8403300,100.8507200,0.0000000,0.0000000,108.2397200); //
CreateDynamicObject(987,-1360.8519300,-1516.6892100,100.8507200,0.0000000,0.0000000,91.7397300); //
CreateDynamicObject(987,-1360.4946300,-1528.6704100,100.8507200,0.0000000,0.0000000,91.7397300); //
CreateDynamicObject(987,-1362.4738800,-1540.3222700,100.8507200,0.0000000,0.0000000,79.9197200); //
CreateDynamicObject(987,-1360.8377700,-1552.1513700,100.8507200,0.0000000,0.0000000,97.2597000); //
CreateDynamicObject(987,-1351.1534400,-1559.1752900,100.8507200,0.0000000,0.0000000,143.2796800); //
CreateDynamicObject(987,-1341.6629600,-1566.3028600,100.8507200,0.0000000,0.0000000,143.2796800); //
CreateDynamicObject(987,-1341.0947300,-1578.0711700,100.8507200,0.0000000,0.0000000,92.2196700); //
CreateDynamicObject(987,-1339.9246800,-1589.9561800,100.8507200,0.0000000,0.0000000,95.6996500); //
CreateDynamicObject(987,-1338.6606400,-1601.9772900,100.8507200,0.0000000,0.0000000,95.6996500); //
CreateDynamicObject(987,-1342.5123300,-1613.0753200,100.8507200,0.0000000,0.0000000,70.7396500); //
CreateDynamicObject(987,-1353.8364300,-1616.5990000,100.5477100,0.0000000,0.0000000,17.7596400); //
CreateDynamicObject(987,-1362.2203400,-1619.3339800,100.5477100,0.0000000,0.0000000,17.7596400); //
CreateDynamicObject(10766,-1384.6272000,-1514.4599600,98.2012000,0.0000000,0.0000000,181.9201000); //
CreateDynamicObject(987,-1366.2139900,-1481.6087600,100.8507200,0.0000000,0.0000000,183.1797800); //
CreateDynamicObject(987,-1389.8707300,-1481.7080100,100.8507200,0.0000000,0.0000000,177.7797500); //
CreateDynamicObject(987,-1398.6973900,-1481.3823200,100.8507200,0.0000000,0.0000000,177.7797500); //
CreateDynamicObject(5721,-1403.0310100,-1511.5078100,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1403.0324700,-1494.8094500,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1403.1441700,-1489.8171400,95.5129400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1402.8692600,-1494.7791700,96.0384000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1386.3494900,-1494.7716100,96.0384000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1373.4534900,-1494.7562300,96.0384000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5721,-1390.5107400,-1492.2470700,95.9189800,0.0000000,0.0000000,-22.5000000); //
CreateDynamicObject(10763,-1360.6004600,-1591.0699500,127.7669700,0.0000000,0.0000000,-222.5399900); //
CreateDynamicObject(1536,-1360.3066400,-1579.9517800,101.4074000,0.0000000,0.0000000,454.3963300); //
CreateDynamicObject(18850,-1460.0715300,-1482.3490000,88.8631000,0.0000000,0.0000000,-0.4200000); //
CreateDynamicObject(2395,-1362.7697800,-1580.6439200,101.5088000,-90.0000000,0.0000000,362.4599900); //
CreateDynamicObject(2395,-1441.8543700,-1545.1335400,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1440.3839100,-1541.7780800,100.9350000,-90.0000000,0.0000000,243.3002200); //
CreateDynamicObject(2395,-1438.7329100,-1538.4626500,100.9350000,-90.0000000,0.0000000,243.3002200); //
CreateDynamicObject(2395,-1437.0446800,-1535.1267100,100.9350000,-90.0000000,0.0000000,243.3002200); //
CreateDynamicObject(2395,-1434.4277300,-1532.6429400,100.9350000,-90.0000000,0.0000000,220.4404300); //
CreateDynamicObject(2395,-1431.6075400,-1530.2237500,100.9350000,-90.0000000,0.0000000,220.4404300); //
CreateDynamicObject(2395,-1428.7783200,-1527.8122600,100.9350000,-90.0000000,0.0000000,220.4404300); //
CreateDynamicObject(2395,-1425.9780300,-1525.4278600,100.9350000,-90.0000000,0.0000000,220.4404300); //
CreateDynamicObject(2395,-1422.6003400,-1523.9278600,100.9350000,-90.0000000,0.0000000,201.3606000); //
CreateDynamicObject(2395,-1419.1933600,-1522.6107200,100.9350000,-90.0000000,0.0000000,201.3606000); //
CreateDynamicObject(2395,-1415.7459700,-1521.2543900,100.9350000,-90.0000000,0.0000000,201.3606000); //
CreateDynamicObject(2395,-1412.2797900,-1519.8945300,100.9350000,-90.0000000,0.0000000,201.3606000); //
CreateDynamicObject(2395,-1408.4625200,-1521.2863800,100.7891100,-74.3603100,-93.6196200,-436.2395300); //
CreateDynamicObject(2395,-1408.8005400,-1518.5440700,100.9350000,-90.0000000,0.0000000,201.3606000); //
CreateDynamicObject(2395,-1403.1789600,-1516.8002900,101.3216200,-84.8399400,-83.9994700,112.6206100); //
CreateDynamicObject(5721,-1396.9780300,-1510.7720900,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(5721,-1396.2522000,-1527.3225100,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(5721,-1395.5174600,-1543.8603500,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(5721,-1394.8324000,-1560.3327600,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(5721,-1394.1523400,-1576.8944100,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(5721,-1393.4617900,-1593.2248500,96.0610000,0.0000000,0.0000000,92.4601000); //
CreateDynamicObject(1215,-1423.9954800,-1527.5261200,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1425.4642300,-1524.8604700,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1436.8156700,-1534.6547900,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1434.5667700,-1536.4249300,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1408.6525900,-1518.4719200,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1407.9011200,-1521.2015400,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-1428.0283200,-1549.1591800,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1428.1401400,-1552.8978300,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1428.2236300,-1556.6366000,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1428.3181200,-1560.3411900,100.9550000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1427.9211400,-1563.5867900,100.9350000,-90.0000000,0.0000000,278.2201800); //
CreateDynamicObject(1215,-1425.3123800,-1548.8032200,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1251,-1428.6413600,-1548.6141400,100.8429000,0.0000000,0.0000000,88.3200100); //
CreateDynamicObject(1251,-1425.3629200,-1552.1986100,100.8429000,0.0000000,0.0000000,-1.4399900); //
CreateDynamicObject(1251,-1425.4827900,-1556.4697300,100.8429000,0.0000000,0.0000000,-1.7999900); //
CreateDynamicObject(1251,-1425.1588100,-1563.1029100,100.8429000,0.0000000,0.0000000,6.7800100); //
CreateDynamicObject(2395,-1428.2851600,-1560.5959500,100.9350000,-90.0000000,0.0000000,278.2201800); //
CreateDynamicObject(2395,-1430.6102300,-1564.0620100,100.9350000,-90.0000000,0.0000000,278.2201800); //
CreateDynamicObject(2395,-1456.3044400,-1550.7094700,100.9350000,-90.0000000,0.0000000,358.6801800); //
CreateDynamicObject(2395,-1459.7043500,-1549.4469000,100.9350000,-90.0000000,0.0000000,336.9603300); //
CreateDynamicObject(2395,-1462.2761200,-1546.8596200,100.9350000,-90.0000000,0.0000000,311.8805200); //
CreateDynamicObject(2395,-1463.6901900,-1543.4288300,100.9350000,-90.0000000,0.0000000,289.4407000); //
CreateDynamicObject(1215,-1460.2854000,-1544.9968300,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1462.6461200,-1546.3852500,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1460.1588100,-1549.1678500,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1458.1170700,-1547.0929000,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1455.8640100,-1547.9757100,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1456.7867400,-1550.7448700,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1452.9566700,-1550.9898700,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1425.4838900,-1552.5756800,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1425.5146500,-1556.3319100,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1425.5615200,-1560.0271000,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-1424.8491200,-1566.1873800,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-1455.9062500,-1551.1355000,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1456.0056200,-1554.8399700,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1456.1025400,-1558.5244100,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1456.2015400,-1562.2287600,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(2395,-1456.2930900,-1565.9168700,100.9350000,-90.0000000,0.0000000,268.5600900); //
CreateDynamicObject(640,-1456.3903800,-1553.3947800,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1456.4788800,-1557.0239300,101.4951300,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(640,-1456.3046900,-1561.9549600,101.4951300,0.0000000,0.0000000,184.7999000); //
CreateDynamicObject(1215,-1456.4960900,-1558.4497100,101.2912000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3279,-1414.2100800,-1443.8450900,100.5826900,0.0000000,0.0000000,-90.4199900); //
CreateDynamicObject(3279,-1414.7830800,-1540.0507800,100.5077400,0.0000000,0.0000000,-90.4199900); //
CreateDynamicObject(3279,-1465.7430400,-1580.8347200,100.5077400,0.0000000,0.0000000,-271.5602100); //
CreateDynamicObject(3279,-1471.8570600,-1443.7956500,100.5077400,0.0000000,0.0000000,-359.5802000); //
CreateDynamicObject(5721,-1467.7579300,-1448.9509300,95.5129400,0.0000000,0.0000000,89.5200200); //
CreateDynamicObject(5721,-1467.8977100,-1467.1578400,95.5129400,0.0000000,0.0000000,89.5200200); //
CreateDynamicObject(5721,-1467.9975600,-1483.6853000,95.5129400,0.0000000,0.0000000,89.5200200); //
CreateDynamicObject(3463,-1435.2780800,-1502.8244600,101.0402800,0.0000000,0.0000000,153.5400200); //
CreateDynamicObject(7922,-1400.3761000,-1625.6071800,100.0618000,0.0000000,0.0000000,92.1600000); //
CreateDynamicObject(7922,-1400.4632600,-1623.3295900,100.0618000,0.0000000,0.0000000,92.1600000); //
CreateDynamicObject(7922,-1400.4959700,-1621.0715300,100.0618000,0.0000000,0.0000000,92.1600000); //
CreateDynamicObject(7922,-1398.2016600,-1625.6876200,100.0618000,0.0000000,0.0000000,181.4998900); //
CreateDynamicObject(7922,-1395.9063700,-1625.5784900,100.0618000,0.0000000,0.0000000,183.5398700); //
CreateDynamicObject(7922,-1393.5932600,-1625.4392100,100.0618000,0.0000000,0.0000000,183.0598400); //
CreateDynamicObject(7922,-1391.2270500,-1625.3333700,100.0618000,0.0000000,0.0000000,181.4998900); //
CreateDynamicObject(7922,-1388.9389600,-1625.2819800,100.0618000,0.0000000,0.0000000,181.4998900); //
CreateDynamicObject(7922,-1386.6491700,-1625.2144800,100.0618000,0.0000000,0.0000000,181.4998900); //
CreateDynamicObject(7922,-1384.3057900,-1625.1485600,100.0618000,0.0000000,0.0000000,182.2198600); //
CreateDynamicObject(7922,-1382.0022000,-1625.0555400,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1379.6785900,-1624.9588600,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1377.3592500,-1624.8621800,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1375.0185500,-1624.7697800,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1372.6973900,-1624.6583300,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1370.3765900,-1624.5661600,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1368.0528600,-1624.4880400,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1365.8863500,-1624.3930700,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1363.5686000,-1624.2817400,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1362.6407500,-1624.2166700,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1362.7451200,-1622.1948200,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(7922,-1362.8067600,-1620.5441900,100.0618000,0.0000000,0.0000000,182.3998900); //
CreateDynamicObject(790,-1418.4292000,-1434.5694600,105.7031300,356.8584000,0.0000000,77.1139900); //
CreateDynamicObject(791,-1347.6848100,-1452.4526400,101.9375000,356.8584000,0.0000000,3.1415900); //
CreateDynamicObject(790,-1460.4976800,-1604.4904800,104.0363500,356.8584000,0.0000000,262.2739900); //
CreateDynamicObject(703,-1410.6138900,-1605.8331300,101.3726600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(703,-1356.1903100,-1609.6263400,101.3726600,0.0000000,0.0000000,-38.6400000); //
CreateDynamicObject(737,-1426.2520800,-1524.0131800,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1423.2891800,-1528.3773200,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1410.9509300,-1523.7193600,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1413.1317100,-1518.9460400,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1433.7294900,-1537.0404100,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1437.5396700,-1534.0559100,101.1818200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-1432.5512700,-1556.6038800,100.4604700,0.0000000,0.0000000,6.4200000); //
CreateDynamicObject(737,-1449.1800500,-1556.2552500,100.4604700,0.0000000,0.0000000,6.4200000); //
CreateDynamicObject(791,-1454.1477100,-1419.8877000,101.9375000,356.8584000,0.0000000,-19.7184100); //
CreateDynamicObject(5721,-1402.8692600,-1494.7791700,96.0384000,0.0000000,0.0000000,87.8399800); //
CreateDynamicObject(5721,-1390.5107400,-1492.2470700,95.9189800,0.0000000,0.0000000,64.6800200); //
CreateDynamicObject(11461,-1423.8917200,-1598.7180200,98.3059400,0.0000000,0.0000000,6.6000000); //
CreateDynamicObject(16335,-1375.5816700,-1458.0999800,100.3715300,0.0000000,0.0000000,60.1199900); //
CreateDynamicObject(16093,-1415.6113300,-1495.9373800,100.7364000,0.0000000,0.0000000,-91.7399200); //
CreateDynamicObject(1806,-1414.0094000,-1496.7983400,100.8686000,0.0000000,0.0000000,-82.5600000); //
CreateDynamicObject(1806,-1413.8509500,-1495.0502900,100.8686000,0.0000000,0.0000000,-121.6200000); //
CreateDynamicObject(1703,-1417.0564000,-1496.7211900,100.8733100,0.0000000,0.0000000,88.6800400); //
CreateDynamicObject(731,-1453.2885700,-1610.7489000,86.0174900,356.8584000,0.0000000,5.9015900); //
CreateDynamicObject(731,-1435.6691900,-1611.8863500,98.1053000,356.8584000,0.0000000,51.6215900); //
CreateDynamicObject(731,-1422.5476100,-1613.0896000,82.1125600,356.8584000,0.0000000,21.2615900); //
CreateDynamicObject(1649,-1434.2557400,-1434.6893300,22.6439900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1430.9552000,-1437.5931400,25.8893900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1430.9552000,-1437.5931400,22.6439900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1434.2568400,-1434.6889600,25.8817000,0.0000000,0.0000000,-41.2800000); //
CreateDynamicObject(1649,-1427.8450900,-1440.3520500,22.6439900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1427.7703900,-1440.4091800,25.8995000,0.0000000,0.0000000,-41.2800000); //
CreateDynamicObject(1649,-1423.8377700,-1443.8947800,22.6439900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1423.8083500,-1443.9008800,25.9145200,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1419.8593800,-1447.3630400,22.6439900,0.0000000,0.0000000,-41.2800100); //
CreateDynamicObject(1649,-1419.8593800,-1447.3630400,25.9304000,0.0000000,0.0000000,-41.2800000); //
CreateDynamicObject(2184,-1423.4804700,-1438.8526600,20.9987000,0.0000000,0.0000000,159.7196700); //
CreateDynamicObject(2184,-1421.9018600,-1441.2863800,20.9987000,0.0000000,0.0000000,116.8800000); //
CreateDynamicObject(2190,-1422.5588400,-1440.0227100,21.7728500,0.0000000,0.0000000,-84.3600000); //
CreateDynamicObject(18868,-1424.1862800,-1439.6063200,21.7732300,0.0000000,0.0000000,3.7200000); //
CreateDynamicObject(19807,-1422.4498300,-1441.2457300,21.8102100,0.0000000,0.0000000,-81.2999700); //
CreateDynamicObject(19422,-1423.3079800,-1439.7581800,21.8121300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1714,-1424.5943600,-1440.7751500,21.0014000,0.0000000,0.0000000,136.0800000); //
CreateDynamicObject(1703,-1432.6176800,-1435.0151400,21.0143000,0.0000000,0.0000000,84.9000000); //
CreateDynamicObject(1703,-1428.6248800,-1433.3616900,21.0143000,0.0000000,0.0000000,265.3200100); //
CreateDynamicObject(2209,-1430.2762500,-1434.8559600,20.6723000,0.0000000,0.0000000,83.7000000); //
CreateDynamicObject(2209,-1431.0380900,-1433.5124500,20.6723000,0.0000000,0.0000000,264.6599100); //
CreateDynamicObject(644,-1428.2242400,-1427.6861600,21.4001400,0.0000000,0.0000000,359.5939300); //
CreateDynamicObject(2811,-1432.1203600,-1432.4698500,21.0822500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2249,-1430.6114500,-1434.7160600,22.1977000,0.0000000,0.0000000,52.0510100); //
CreateDynamicObject(1808,-1423.0700700,-1431.1844500,20.9599100,0.0000000,0.0000000,-40.6799800); //
CreateDynamicObject(19174,-1416.5418700,-1436.7784400,22.9847900,0.0000000,0.0000000,-40.5000100); //
CreateDynamicObject(2167,-1418.9603300,-1434.3571800,21.1053300,0.0000000,0.0000000,-40.8599600); //
CreateDynamicObject(2167,-1418.9765600,-1434.3454600,21.1053300,0.0000000,0.0000000,-40.8599600); //
CreateDynamicObject(2167,-1418.2779500,-1434.9492200,21.1053300,0.0000000,0.0000000,-40.8599600); //
CreateDynamicObject(2167,-1419.6396500,-1433.7636700,21.1053300,0.0000000,0.0000000,-40.8599600); //
CreateDynamicObject(2894,-1424.7293700,-1439.0279500,21.8106300,0.0000000,0.0000000,-12.1800000); //
CreateDynamicObject(14455,-1417.3991700,-1447.5020800,22.6919000,0.0000000,0.0000000,48.4800000); //
CreateDynamicObject(1704,-1418.1835900,-1442.7973600,20.9264500,0.0000000,0.0000000,11.2200000); //
CreateDynamicObject(1704,-1419.3131100,-1444.8619400,20.9264500,0.0000000,0.0000000,80.6399900); //
CreateDynamicObject(19825,-1425.5374800,-1441.7087400,22.9052900,0.0000000,0.0000000,142.2599900); //
CreateDynamicObject(14887,-1456.3826900,-1436.4942600,17.4317300,0.0000000,0.0000000,-41.2799700); //
CreateDynamicObject(14855,-1456.2944300,-1440.9453100,20.2110300,0.0000000,0.0000000,-42.5399700); //
CreateDynamicObject(2186,-1454.6422100,-1435.3949000,15.8426000,0.0000000,0.0000000,-41.9400000); //
CreateDynamicObject(1806,-1458.9290800,-1443.1499000,15.8719800,0.0000000,0.0000000,-188.8800000); //
CreateDynamicObject(1806,-1456.8988000,-1442.6474600,15.8719800,0.0000000,0.0000000,-145.6200100); //
CreateDynamicObject(1806,-1454.6430700,-1440.2869900,15.8719800,0.0000000,0.0000000,-135.4800300); //
CreateDynamicObject(1533,-1466.6352500,-1466.1606400,15.8690000,0.0000000,0.0000000,139.9800000); //
CreateDynamicObject(1533,-1467.7750200,-1465.1601600,15.8690000,0.0000000,0.0000000,139.9800000); //
CreateDynamicObject(14854,-1393.6773700,-1468.7473100,22.4789100,0.0000000,0.0000000,-41.0999900); //
CreateDynamicObject(1703,-1454.0946000,-1464.5035400,15.7504800,0.0000000,0.0000000,-131.6999800); //
CreateDynamicObject(1703,-1456.7271700,-1467.4240700,15.7504800,0.0000000,0.0000000,-132.1799900); //
CreateDynamicObject(1703,-1451.5920400,-1461.5880100,15.7504800,0.0000000,0.0000000,-131.1000100); //
CreateDynamicObject(2315,-1454.1436800,-1461.6140100,15.8704000,0.0000000,0.0000000,48.3000100); //
CreateDynamicObject(2315,-1456.7891800,-1464.5188000,15.8704000,0.0000000,0.0000000,47.6400000); //
CreateDynamicObject(2315,-1459.4229700,-1467.3313000,15.8704000,0.0000000,0.0000000,47.6400000); //
CreateDynamicObject(644,-1459.0944800,-1470.0333300,16.1607800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(644,-1473.9935300,-1457.0902100,16.1607800,0.0000000,0.0000000,-31.3200000); //
CreateDynamicObject(2008,-1412.9002700,-1446.4803500,20.9944000,0.0000000,0.0000000,-40.9200200); //
CreateDynamicObject(1806,-1413.0498000,-1448.0665300,21.0264000,0.0000000,0.0000000,-42.8999800); //
CreateDynamicObject(2161,-1414.1716300,-1451.3204300,21.8051500,0.0000000,0.0000000,-40.9200200); //
CreateDynamicObject(2161,-1415.1618700,-1450.4552000,21.8051500,0.0000000,0.0000000,-40.9200200); //
CreateDynamicObject(2161,-1416.1680900,-1449.5772700,21.8051500,0.0000000,0.0000000,-40.9200200); //
CreateDynamicObject(2161,-1417.1041300,-1448.7669700,21.8051500,0.0000000,0.0000000,-40.9200200); //
CreateDynamicObject(2167,-1416.4057600,-1446.7686800,21.0197000,0.0000000,0.0000000,47.7600000); //
CreateDynamicObject(2309,-1408.7965100,-1443.1662600,21.0051700,0.0000000,0.0000000,50.1000200); //
CreateDynamicObject(2309,-1406.9338400,-1440.8831800,21.0051700,0.0000000,0.0000000,50.1000200); //
CreateDynamicObject(2309,-1407.8114000,-1441.9783900,21.0051700,0.0000000,0.0000000,50.1000200); //
CreateDynamicObject(19175,-1414.8994100,-1445.1754200,22.9999100,0.0000000,0.0000000,48.4800100); //
CreateDynamicObject(1533,-1467.5097700,-1449.1709000,15.8690000,0.0000000,0.0000000,49.5600000); //
CreateDynamicObject(1533,-1466.2858900,-1447.6650400,15.8690000,0.0000000,0.0000000,228.1200000); //
CreateDynamicObject(1533,-1467.2199700,-1448.7104500,15.8690000,0.0000000,0.0000000,229.2598900); //
CreateDynamicObject(1533,-1460.7192400,-1441.4178500,15.8690000,0.0000000,0.0000000,49.5600000); //
CreateDynamicObject(1533,-1460.6906700,-1441.3640100,15.8690000,0.0000000,0.0000000,228.1200000); //
CreateDynamicObject(1533,-1453.1168200,-1435.9979200,15.8690000,0.0000000,0.0000000,-41.7600100); //
CreateDynamicObject(1533,-1450.9003900,-1437.9816900,15.8690000,0.0000000,0.0000000,139.3799400); //
CreateDynamicObject(5721,-1412.5376000,-1478.9244400,20.0158800,-3.4799900,89.4600900,48.7200100); //
CreateDynamicObject(1806,-1389.4652100,-1469.2607400,20.0172100,0.0000000,0.0000000,-145.6200000); //
CreateDynamicObject(19787,-1419.0568800,-1434.4245600,23.2201800,0.0000000,0.0000000,-41.1600000); //
CreateDynamicObject(14853,-1428.1079100,-1460.2205800,21.0182800,0.0000000,0.0000000,-41.2199000); //
CreateDynamicObject(2700,-1387.4498300,-1469.7352300,21.5323000,0.0000000,0.0000000,144.1198600); //
CreateDynamicObject(2700,-1387.4498300,-1469.7352300,21.0263000,0.0000000,0.0000000,144.1199000); //
CreateDynamicObject(2700,-1387.8391100,-1470.2442600,21.0293000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.2327900,-1470.7083700,21.0282800,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.5990000,-1471.1657700,21.0212000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.9824200,-1471.6129200,21.0282800,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1389.4343300,-1472.0588400,21.5323000,0.0000000,0.0000000,132.9599600); //
CreateDynamicObject(2700,-1387.8391100,-1470.2442600,21.5323000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.2327900,-1470.7083700,21.5323000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.5990000,-1471.1657700,21.5323000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1388.9824200,-1471.6129200,21.5323000,0.0000000,0.0000000,140.0999000); //
CreateDynamicObject(2700,-1389.4434800,-1472.0440700,21.0493000,0.0000000,0.0000000,132.8398900); //
CreateDynamicObject(1806,-1390.2054400,-1470.3673100,20.0172100,0.0000000,0.0000000,-119.4601100); //
CreateDynamicObject(1806,-1391.1677200,-1471.6237800,20.0172100,0.0000000,0.0000000,-127.6801500); //
CreateDynamicObject(1806,-1388.2938200,-1468.2637900,20.0172100,0.0000000,0.0000000,-145.6200000); //
CreateDynamicObject(2180,-1387.6823700,-1469.6342800,19.8081200,0.0000000,0.0000000,49.3200100); //
CreateDynamicObject(2180,-1388.9655800,-1471.1156000,19.8081200,0.0000000,0.0000000,49.3200100); //
CreateDynamicObject(2180,-1390.2358400,-1472.5819100,19.8081200,0.0000000,0.0000000,49.3200100); //
CreateDynamicObject(14604,-1391.1203600,-1473.3065200,20.8485000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2894,-1388.6198700,-1470.7241200,20.6074600,0.0000000,0.0000000,38.3400000); //
CreateDynamicObject(2894,-1390.1456300,-1472.4570300,20.6074600,0.0000000,0.0000000,61.6799900); //
CreateDynamicObject(19422,-1388.2691700,-1470.3024900,20.6271300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19422,-1389.2004400,-1471.1673600,20.6271300,0.0000000,0.0000000,179.3400000); //
CreateDynamicObject(19422,-1389.8652300,-1471.9244400,20.6271300,0.0000000,0.0000000,256.9800700); //
CreateDynamicObject(19807,-1387.1991000,-1468.8761000,20.6478000,0.0000000,0.0000000,-130.0200500); //
CreateDynamicObject(19807,-1387.4632600,-1469.1555200,20.6478000,0.0000000,0.0000000,-131.2800000); //
CreateDynamicObject(19807,-1386.9626500,-1468.6016800,20.6478000,0.0000000,0.0000000,-131.2800000); //
CreateDynamicObject(1703,-1397.0991200,-1468.9606900,19.9635000,0.0000000,0.0000000,86.0399400); //
CreateDynamicObject(1703,-1396.6800500,-1466.2910200,19.9635000,0.0000000,0.0000000,49.2599700); //
CreateDynamicObject(1703,-1395.4227300,-1471.1280500,19.9635000,0.0000000,0.0000000,133.9798900); //
CreateDynamicObject(2315,-1394.7774700,-1468.8215300,20.0180900,0.0000000,0.0000000,85.0200100); //
CreateDynamicObject(2249,-1394.7578100,-1467.8112800,21.0220800,0.0000000,0.0000000,-71.8800100); //
CreateDynamicObject(2894,-1394.8087200,-1468.5230700,20.5116800,0.0000000,0.0000000,-52.2599800); //
CreateDynamicObject(1808,-1389.3551000,-1466.3708500,19.9177800,0.0000000,0.0000000,-41.7600000); //
CreateDynamicObject(14902,-1411.1544200,-1461.9263900,19.5404300,0.0000000,0.0000000,-41.2800700); //
CreateDynamicObject(644,-1394.1181600,-1457.5756800,20.2864500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(644,-1390.2988300,-1461.0184300,20.2864500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(644,-1398.0417500,-1454.1422100,20.2864500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(644,-1403.7044700,-1449.1745600,20.2864500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19174,-1409.7860100,-1436.4150400,23.4143200,0.0000000,0.0000000,-40.8600000); //
CreateDynamicObject(1704,-1411.3336200,-1435.7209500,20.9996500,0.0000000,0.0000000,-41.0999800); //
CreateDynamicObject(1704,-1409.7724600,-1437.0588400,20.9996500,0.0000000,0.0000000,-41.3999700); //
CreateDynamicObject(1742,-1413.3027300,-1433.9431200,21.6775200,0.0000000,0.0000000,-40.6200000); //
CreateDynamicObject(1704,-1415.8286100,-1431.7463400,20.9996500,0.0000000,0.0000000,-41.0999800); //
CreateDynamicObject(1704,-1417.3403300,-1430.4683800,20.9996500,0.0000000,0.0000000,-41.0999800); //
CreateDynamicObject(1742,-1419.4829100,-1428.7991900,21.6775200,0.0000000,0.0000000,-40.6200000); //
CreateDynamicObject(19175,-1415.8824500,-1431.0734900,23.1324100,0.0000000,0.0000000,-40.9200000); //
CreateDynamicObject(1704,-1423.3811000,-1425.0993700,20.9996500,0.0000000,0.0000000,-41.0999800); //
CreateDynamicObject(1704,-1421.7047100,-1426.5872800,20.9996500,0.0000000,0.0000000,-41.0999800); //
CreateDynamicObject(19173,-1421.8168900,-1425.8297100,22.9292400,0.0000000,0.0000000,-41.3399900); //
CreateDynamicObject(19175,-1421.5136700,-1432.3548600,23.0293800,0.0000000,0.0000000,-40.9200000); //
CreateDynamicObject(2183,-1401.9660600,-1478.4422600,20.0159500,0.0000000,0.0000000,-42.8399800); //
CreateDynamicObject(2183,-1398.8099400,-1474.8526600,20.0159500,0.0000000,0.0000000,-42.8399800); //
CreateDynamicObject(1742,-1393.6322000,-1477.3100600,20.5117100,0.0000000,0.0000000,228.6900900); //
CreateDynamicObject(1742,-1395.8471700,-1479.8659700,20.5117100,0.0000000,0.0000000,228.6900900); //
CreateDynamicObject(1742,-1398.0615200,-1482.3884300,20.5117100,0.0000000,0.0000000,228.6900900); //
CreateDynamicObject(19787,-1401.4711900,-1481.5540800,22.1546900,0.0000000,0.0000000,139.2000900); //
CreateDynamicObject(19787,-1402.6378200,-1480.4598400,22.1546900,0.0000000,0.0000000,139.2000900); //
CreateDynamicObject(19787,-1403.8238500,-1479.4054000,22.1546900,0.0000000,0.0000000,139.2000900); //
CreateDynamicObject(2190,-1400.8289800,-1478.5299100,20.8226600,0.0000000,0.0000000,137.2801400); //
CreateDynamicObject(2190,-1397.7871100,-1474.8327600,20.8226600,0.0000000,0.0000000,138.2401900); //
CreateDynamicObject(2190,-1400.9442100,-1478.4925500,20.8226600,0.0000000,0.0000000,321.0601200); //
CreateDynamicObject(2190,-1400.0350300,-1479.3370400,20.8226600,0.0000000,0.0000000,318.7800000); //
CreateDynamicObject(2190,-1399.9207800,-1479.4637500,20.8226600,0.0000000,0.0000000,137.2801400); //
CreateDynamicObject(2190,-1396.7608600,-1475.7777100,20.8226600,0.0000000,0.0000000,137.2801400); //
CreateDynamicObject(2190,-1396.8946500,-1475.8044400,20.8226600,0.0000000,0.0000000,318.7800000); //
CreateDynamicObject(2190,-1397.7786900,-1474.9481200,20.8226600,0.0000000,0.0000000,318.7800000); //
CreateDynamicObject(1806,-1396.5660400,-1473.4711900,20.0107600,0.0000000,0.0000000,133.0200200); //
CreateDynamicObject(1806,-1395.4102800,-1474.4794900,20.0107600,0.0000000,0.0000000,133.0200200); //
CreateDynamicObject(1806,-1398.6040000,-1478.1702900,20.0107600,0.0000000,0.0000000,133.0200200); //
CreateDynamicObject(1806,-1399.8396000,-1476.9351800,20.0107600,0.0000000,0.0000000,133.0200200); //
CreateDynamicObject(1806,-1398.9229700,-1476.3023700,20.0107600,0.0000000,0.0000000,326.8800700); //
CreateDynamicObject(1806,-1397.8060300,-1477.4288300,20.0107600,0.0000000,0.0000000,316.3802800); //
CreateDynamicObject(1806,-1400.7877200,-1480.9371300,20.0107600,0.0000000,0.0000000,333.3603200); //
CreateDynamicObject(1806,-1401.8787800,-1479.9805900,20.0107600,0.0000000,0.0000000,343.6202100); //
CreateDynamicObject(18868,-1399.9864500,-1480.2763700,20.8243800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19807,-1401.9334700,-1478.3756100,20.8674000,0.0000000,0.0000000,-58.7400000); //
CreateDynamicObject(2894,-1401.1220700,-1477.7240000,20.8238800,0.0000000,0.0000000,-26.5799900); //
CreateDynamicObject(2811,-1398.9073500,-1473.8724400,20.0183900,0.0000000,0.0000000,51.2400000); //
CreateDynamicObject(2811,-1402.0282000,-1477.4282200,20.0183900,0.0000000,0.0000000,27.7799900); //
CreateDynamicObject(9131,-1411.6189000,-1472.6384300,19.9136000,0.0000000,0.0000000,-40.5600000); //
CreateDynamicObject(3850,-1410.2661100,-1471.1195100,20.4950000,0.0000000,0.0000000,-40.8599700); //
CreateDynamicObject(3850,-1408.0159900,-1468.5102500,20.4950000,0.0000000,0.0000000,-40.8599700); //
CreateDynamicObject(9131,-1406.8747600,-1467.1301300,19.9136000,0.0000000,0.0000000,-40.8600000); //
CreateDynamicObject(3850,-1408.1727300,-1466.0495600,20.4950000,0.0000000,0.0000000,-132.1799200); //
CreateDynamicObject(3850,-1412.1160900,-1462.4652100,20.4950000,0.0000000,0.0000000,-132.1799200); //
CreateDynamicObject(9131,-1413.4285900,-1461.3846400,19.9136000,0.0000000,0.0000000,-40.8600000); //
CreateDynamicObject(3850,-1414.5064700,-1462.5992400,20.4950000,0.0000000,0.0000000,-40.8599700); //
CreateDynamicObject(16151,-1414.2272900,-1468.9260300,20.2965000,0.0000000,0.0000000,-130.5000200); //
CreateDynamicObject(629,-1415.8746300,-1461.6945800,19.4247400,0.0000000,0.0000000,17.9400000); //
CreateDynamicObject(629,-1418.1197500,-1459.9207800,19.4247400,0.0000000,0.0000000,17.9400000); //
CreateDynamicObject(629,-1422.6939700,-1459.6615000,19.4247400,0.0000000,0.0000000,17.9400000); //
CreateDynamicObject(747,-1417.4974400,-1466.0494400,20.9202500,0.0000000,0.0000000,-49.1999900); //
CreateDynamicObject(1825,-1409.3272700,-1467.4834000,19.9993000,0.0000000,0.0000000,-21.6600100); //
CreateDynamicObject(1825,-1412.8859900,-1464.5024400,19.9993000,0.0000000,0.0000000,3.5400000); //
CreateDynamicObject(1670,-1409.4896200,-1467.4166300,20.8972000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1670,-1413.0354000,-1464.4497100,20.8967000,0.0000000,0.0000000,-64.9200100); //
CreateDynamicObject(16782,-1388.3481400,-1470.9171100,23.4171200,0.0000000,0.0000000,138.2999100); //
CreateDynamicObject(16662,-1424.1702900,-1445.3332500,16.9106000,0.0000000,0.0000000,292.5088200); //
CreateDynamicObject(2180,-1421.9605700,-1447.7335200,15.8291400,0.0000000,0.0000000,-246.8399000); //
CreateDynamicObject(2180,-1421.2366900,-1449.5017100,15.8291400,0.0000000,0.0000000,-249.0598600); //
CreateDynamicObject(2180,-1420.6842000,-1449.2976100,15.8291400,0.0000000,0.0000000,-249.0598600); //
CreateDynamicObject(2180,-1421.3769500,-1447.5037800,15.8291400,0.0000000,0.0000000,-246.8399000); //
CreateDynamicObject(2180,-1423.8045700,-1444.9548300,15.8291400,0.0000000,0.0000000,-220.3197900); //
CreateDynamicObject(2180,-1423.4122300,-1444.5208700,15.8291400,0.0000000,0.0000000,-220.3197900); //
CreateDynamicObject(2180,-1428.3497300,-1442.7321800,15.8291400,0.0000000,0.0000000,-190.0799300); //
CreateDynamicObject(2180,-1426.4849900,-1443.0533400,15.8291400,0.0000000,0.0000000,-190.0799300); //
CreateDynamicObject(2180,-1426.3674300,-1442.3223900,15.8291400,0.0000000,0.0000000,-190.0799300); //
CreateDynamicObject(2180,-1428.2225300,-1441.9838900,15.8291400,0.0000000,0.0000000,-190.0799300); //
CreateDynamicObject(2395,-1425.6710200,-1441.2966300,16.5113300,0.0000000,0.0000000,-192.1797800); //
CreateDynamicObject(2395,-1425.6709000,-1441.2966300,14.5986300,0.0000000,0.0000000,-192.1797800); //
CreateDynamicObject(2395,-1428.3730500,-1440.9173600,13.9224800,0.0000000,0.0000000,-13.0798000); //
CreateDynamicObject(2395,-1428.3757300,-1440.9261500,16.4926000,0.0000000,0.0000000,-13.0798000); //
CreateDynamicObject(2395,-1421.0195300,-1445.6496600,14.1368400,0.0000000,0.0000000,-66.6598700); //
CreateDynamicObject(2395,-1421.0267300,-1445.6938500,16.5376600,0.0000000,0.0000000,-66.6598700); //
CreateDynamicObject(2395,-1419.7657500,-1448.1118200,16.5484300,0.0000000,0.0000000,114.7482800); //
CreateDynamicObject(2395,-1419.7480500,-1448.1025400,14.2424600,0.0000000,0.0000000,114.6332700); //
CreateDynamicObject(1806,-1428.8664600,-1444.2938200,15.9118100,0.0000000,0.0000000,-3.2400000); //
CreateDynamicObject(1806,-1427.2960200,-1444.4185800,15.9118100,0.0000000,0.0000000,-12.9600000); //
CreateDynamicObject(1806,-1425.2379200,-1445.6901900,15.9118100,0.0000000,0.0000000,-46.2000000); //
CreateDynamicObject(1806,-1423.7967500,-1447.9071000,15.9118100,0.0000000,0.0000000,-67.3800000); //
CreateDynamicObject(1806,-1422.9815700,-1449.5605500,15.9118100,0.0000000,0.0000000,-67.3800000); //
CreateDynamicObject(1703,-1404.9600800,-1453.1825000,20.0654400,0.0000000,0.0000000,-41.2200000); //
CreateDynamicObject(1703,-1402.5992400,-1455.2387700,20.0654400,0.0000000,0.0000000,-42.0000100); //
CreateDynamicObject(1703,-1400.2139900,-1457.3785400,20.0654400,0.0000000,0.0000000,-42.3000100); //
CreateDynamicObject(2251,-1400.5566400,-1456.9449500,20.8597600,0.0000000,0.0000000,-12.0000000); //
CreateDynamicObject(2251,-1403.0033000,-1454.7916300,20.8597600,0.0000000,0.0000000,-12.0000000); //
CreateDynamicObject(1703,-1469.0244100,-1451.7036100,15.7504800,0.0000000,0.0000000,-311.8798500); //
CreateDynamicObject(1703,-1472.2186300,-1455.3164100,15.7504800,0.0000000,0.0000000,-311.8798500); //
CreateDynamicObject(2315,-1470.7674600,-1456.4502000,15.8704000,0.0000000,0.0000000,47.2199900); //
CreateDynamicObject(2315,-1467.4329800,-1452.7474400,15.8704000,0.0000000,0.0000000,47.6400000); //
CreateDynamicObject(644,-1464.4569100,-1461.5133100,16.1607800,0.0000000,0.0000000,-31.3200000); //
CreateDynamicObject(644,-1462.0882600,-1458.8284900,16.1607800,0.0000000,0.0000000,-31.3200000); //
CreateDynamicObject(644,-1459.4506800,-1455.8809800,16.1607800,0.0000000,0.0000000,-31.3200000); //
CreateDynamicObject(1722,-1452.7708700,-1451.2518300,15.8691700,0.0000000,0.0000000,49.1399900); //
CreateDynamicObject(1722,-1456.2450000,-1455.2233900,15.8691700,0.0000000,0.0000000,49.1399900); //
CreateDynamicObject(1722,-1449.2097200,-1447.2619600,15.8691700,0.0000000,0.0000000,49.1399900); //
CreateDynamicObject(1722,-1445.7906500,-1443.3543700,15.8691700,0.0000000,0.0000000,49.1399900); //
CreateDynamicObject(1722,-1447.4951200,-1448.8585200,15.8691700,0.0000000,0.0000000,229.5599800); //
CreateDynamicObject(1722,-1443.9423800,-1444.9503200,15.8691700,0.0000000,0.0000000,229.5599800); //
CreateDynamicObject(1722,-1450.9985400,-1452.8236100,15.8691700,0.0000000,0.0000000,229.5599800); //
CreateDynamicObject(1722,-1454.3679200,-1456.7358400,15.8691700,0.0000000,0.0000000,229.5599800); //
CreateDynamicObject(2315,-1450.5245400,-1450.7027600,15.8704000,0.0000000,0.0000000,49.1400100); //
CreateDynamicObject(2315,-1447.0451700,-1446.7747800,15.8704000,0.0000000,0.0000000,49.1400100); //
CreateDynamicObject(2315,-1454.0479700,-1454.7181400,15.8704000,0.0000000,0.0000000,49.1400100); //
CreateDynamicObject(2195,-1452.4731400,-1452.9552000,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-1454.5750700,-1455.3972200,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-1451.1325700,-1451.3825700,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-1448.9257800,-1448.9617900,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-1447.5987500,-1447.4189500,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-1445.5174600,-1444.9674100,16.3625100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1704,-1465.4187000,-1452.8980700,15.8716900,0.0000000,0.0000000,-132.0600100); //
CreateDynamicObject(1704,-1468.8530300,-1456.6062000,15.8716900,0.0000000,0.0000000,-132.8999800); //
CreateDynamicObject(1704,-1458.0631100,-1462.9176000,15.8716900,0.0000000,0.0000000,48.1200100); //
CreateDynamicObject(1704,-1460.6639400,-1465.7457300,15.8716900,0.0000000,0.0000000,48.1200100); //
CreateDynamicObject(1704,-1455.4121100,-1460.1787100,15.8716900,0.0000000,0.0000000,48.1200100); //
CreateDynamicObject(2894,-1458.5470000,-1466.3616900,16.3636400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2894,-1466.9368900,-1452.1474600,16.3636400,0.0000000,0.0000000,75.9600100); //
CreateDynamicObject(14455,-1410.0856900,-1473.8386200,21.7503100,0.0000000,0.0000000,-41.1000200); //
CreateDynamicObject(2197,-1395.6696800,-1478.0648200,19.9615000,0.0000000,0.0000000,228.3000300); //
CreateDynamicObject(2197,-1397.8627900,-1480.5990000,19.9615000,0.0000000,0.0000000,228.3600500); //
CreateDynamicObject(1808,-1400.2597700,-1482.2775900,19.9212000,0.0000000,0.0000000,139.6199200); //
CreateDynamicObject(1892,-1424.9803500,-1428.5544400,21.0185900,0.0000000,0.0000000,-40.9800000); //
CreateDynamicObject(1892,-1413.0578600,-1443.3905000,21.0194200,0.0000000,0.0000000,46.9800200); //
CreateDynamicObject(1682,-1441.8563200,-1594.0074500,123.6197400,0.0000000,0.0000000,22.0800100); //
CreateDynamicObject(3763,-1468.3975800,-1600.2056900,131.8513300,0.0000000,0.0000000,-41.6399900); //
// hq la cosa nostra
CreateDynamicObject(987, 1300.19995, -2047.50000, 57.80000,   0.00000, 0.00000, 175.98950);
CreateDynamicObject(987, 1288.59998, -2046.59998, 57.80000,   0.00000, 0.00000, 111.98950);
CreateDynamicObject(987, 1284.40002, -2035.50000, 57.80000,   0.00000, 0.00000, 91.98914);
CreateDynamicObject(987, 1284.09998, -2024.30005, 57.80000,   0.00000, 0.00000, 91.98853);
CreateDynamicObject(987, 1283.59998, -2012.50000, 57.80000,   0.00000, 0.00000, 91.98853);
CreateDynamicObject(987, 1283.59998, -2003.40002, 57.80000,   0.00000, 0.00000, 175.98853);
CreateDynamicObject(987, 1271.40002, -2002.69995, 58.20000,   0.00000, 0.00000, 179.98450);
CreateDynamicObject(987, 1259.40002, -2002.59998, 58.20000,   0.00000, 0.00000, 179.98352);
CreateDynamicObject(987, 1247.59961, -2002.39941, 58.20000,   0.00000, 0.00000, 171.98352);
CreateDynamicObject(987, 1226.30005, -2073.60010, 62.70000,   0.00000, 0.00000, 1.99475);
CreateDynamicObject(987, 1226.09998, -2073.39990, 58.40000,   0.00000, 0.00000, 1.99475);
CreateDynamicObject(987, 1214.40002, -2074.00000, 62.70000,   0.00000, 0.00000, 1.99402);
CreateDynamicObject(987, 1216.19995, -2073.89990, 67.40000,   0.00000, 0.00000, 1.99402);
CreateDynamicObject(987, 1204.80005, -2073.69995, 67.40000,   0.00000, 0.00000, 359.99402);
CreateDynamicObject(987, 1193.00000, -2073.60010, 67.40000,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(3749, 1301.90002, -2057.19995, 63.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(987, 1103.80005, -2069.69995, 67.40000,   0.00000, 0.00000, 277.97852);
CreateDynamicObject(987, 1103.59998, -2057.30005, 67.40000,   0.00000, 0.00000, 271.97607);
CreateDynamicObject(987, 1094.39941, -2050.00000, 67.40000,   0.00000, 0.00000, 321.96533);
CreateDynamicObject(987, 1094.40002, -2049.60010, 61.80000,   0.00000, 0.00000, 321.96533);
CreateDynamicObject(987, 1236.19995, -2000.80005, 58.80000,   1.99878, 357.99872, 180.05321);
CreateDynamicObject(987, 1238.09998, -2000.69995, 62.60000,   1.99402, 357.99500, 180.04944);
CreateDynamicObject(987, 1226.09998, -2000.69995, 62.60000,   1.99878, 357.99872, 180.05328);
CreateDynamicObject(987, 1220.30005, -2001.09998, 66.20000,   1.99878, 357.99872, 180.05321);
CreateDynamicObject(987, 1208.40002, -2000.90002, 68.00000,   1.99524, 359.99622, 179.97986);
CreateDynamicObject(987, 1197.00000, -2000.80005, 68.00000,   1.99524, 359.99622, 179.97986);
CreateDynamicObject(987, 1185.09998, -2000.69995, 68.00000,   1.99402, 359.99451, 179.97803);
CreateDynamicObject(987, 1170.69995, -2000.69995, 68.00000,   1.98853, 359.98901, 180.22729);
CreateDynamicObject(987, 1159.19995, -2000.80005, 68.00000,   1.98303, 359.98352, 180.22520);
CreateDynamicObject(987, 1148.69995, -2000.90002, 68.00000,   1.98303, 359.98352, 180.22520);
CreateDynamicObject(987, 1136.69995, -2000.69995, 68.00000,   1.98303, 359.98352, 150.22522);
CreateDynamicObject(987, 1126.30005, -1994.50000, 68.00000,   1.97754, 359.97803, 178.22150);
CreateDynamicObject(987, 1115.09998, -1994.00000, 68.00000,   1.97205, 359.97803, 194.22121);
CreateDynamicObject(987, 1103.80005, -1996.90002, 68.00000,   1.96655, 359.97803, 272.21631);
CreateDynamicObject(987, 1104.40002, -2008.40002, 68.00000,   1.96106, 359.97803, 232.21376);
CreateDynamicObject(987, 1097.90002, -2016.90002, 68.00000,   1.95557, 359.97803, 226.21251);
CreateDynamicObject(987, 1098.00000, -2017.00000, 63.70000,   1.95007, 359.97803, 226.20850);
CreateDynamicObject(3031, 1120.59998, -2042.50000, 77.90000,   0.00000, 0.00000, 334.00000);
CreateDynamicObject(1337, 1116.86719, -2176.63477, 79.06437,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2886, 1122.40002, -2034.59998, 71.90000,   0.00000, 0.00000, 80.00000);
CreateDynamicObject(3361, 999.29999, -2189.00000, 32.00000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 999.29980, -2189.00000, 32.00000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 994.40002, -2188.39990, 28.90000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 988.29999, -2187.80005, 24.90000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 982.40002, -2187.10010, 21.10000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 976.00000, -2186.39990, 16.90000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 970.20001, -2185.80005, 13.10000,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(3361, 963.50000, -2187.80005, 10.40000,   0.00000, 0.00000, 221.99597);
CreateDynamicObject(3361, 958.90002, -2191.89990, 6.40000,   0.00000, 0.00000, 221.99524);
CreateDynamicObject(3361, 955.00000, -2195.50000, 2.70000,   0.00000, 0.00000, 221.99524);
CreateDynamicObject(987, 1174.30005, -2000.59998, 68.00000,   1.98303, 359.98352, 180.22520);
CreateDynamicObject(3406, 990.59998, -2188.30005, 18.20000,   0.00000, 0.00000, 354.00000);
CreateDynamicObject(3406, 997.50000, -2188.89990, 18.20000,   0.00000, 0.00000, 356.00000);
CreateDynamicObject(3406, 997.50000, -2188.89990, 23.20000,   0.00000, 0.00000, 352.00000);
CreateDynamicObject(3406, 962.90002, -2189.10010, 1.00000,   0.00000, 0.00000, 41.99548);
CreateDynamicObject(3406, 967.50000, -2185.19995, 2.00000,   0.00000, 0.00000, 41.99524);
CreateDynamicObject(3406, 950.20001, -2199.80005, -0.80000,   0.00000, 0.00000, 41.99524);
CreateDynamicObject(3406, 943.79999, -2205.69995, -0.80000,   0.00000, 0.00000, 41.99524);
CreateDynamicObject(3406, 940.90002, -2201.89990, -0.80000,   0.00000, 0.00000, 313.99524);
CreateDynamicObject(3406, 947.40002, -2208.89990, -0.80000,   0.00000, 0.00000, 131.99524);
CreateDynamicObject(3406, 937.40002, -2211.50000, -0.80000,   0.00000, 0.00000, 41.99524);
CreateDynamicObject(3406, 933.50000, -2215.69995, -0.80000,   0.00000, 0.00000, 313.99524);
CreateDynamicObject(987, 999.59998, -2239.39990, 11.70000,   0.00000, 0.00000, 15.96533);
CreateDynamicObject(987, 1011.90002, -2100.89990, 12.10000,   0.00000, 0.00000, 155.96313);
CreateDynamicObject(987, 1001.09998, -2096.19995, 12.10000,   0.00000, 0.00000, 155.96191);
CreateDynamicObject(987, 1001.09998, -2096.19995, 6.60000,   0.00000, 0.00000, 155.96191);
CreateDynamicObject(1215, 1287.50000, -2056.60010, 58.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1283.00000, -2056.50000, 58.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1253.00000, -2055.60010, 59.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1246.19995, -2055.30005, 59.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16326, 1206.00000, -2021.00000, 68.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1205.30005, -2028.19995, 68.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1201.80005, -2028.19995, 68.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3093, 1204.19995, -2024.69995, 68.70000,   0.00000, 0.00000, 86.00000);
CreateDynamicObject(2606, 1205.19995, -2014.80005, 72.60000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(2604, 1204.59998, -2015.40002, 71.40000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(2606, 1205.19995, -2016.80005, 72.60000,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(2609, 1205.00000, -2017.50000, 71.30000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(2609, 1205.00000, -2017.90002, 71.30000,   0.00000, 0.00000, 271.99951);
CreateDynamicObject(1671, 1203.09998, -2014.80005, 71.10000,   0.00000, 0.00000, 56.00000);
CreateDynamicObject(2009, 1199.00000, -2017.69995, 70.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1671, 1199.09998, -2016.59998, 71.10000,   0.00000, 0.00000, 307.99731);
CreateDynamicObject(349, 1200.40002, -2018.40002, 72.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 1201.00000, -2017.09998, 70.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2313, 1202.30005, -2017.00000, 70.60000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(3785, 1202.30005, -2013.50000, 72.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1201.69995, -2016.90002, 71.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1200.90002, -2016.80005, 71.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8209, 1262.89880, -2070.45825, 60.78330,   0.00000, 5.00000, 0.00000);
CreateDynamicObject(8209, 1177.01270, -2074.67090, 71.10884,   0.00000, 359.74731, 5.94910);
CreateDynamicObject(8209, 1474.76758, -2033.46484, 36.17393,   0.00000, 19.98962, 13.89221);
CreateDynamicObject(1337, 1293.91699, -2079.88867, 56.13315,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8209, 1356.09192, -2061.29810, 54.81213,   0.00000, 2.00000, 11.90991);
CreateDynamicObject(8210, 1414.74756, -2048.23901, 52.76736,   0.00000, 5.00000, 13.89343);
CreateDynamicObject(8210, 1130.94824, -2078.70996, 71.00505,   0.00000, 0.00000, 3.96606);
CreateDynamicObject(8209, 1104.17188, -2037.60254, 71.10884,   0.00000, 0.00000, 268.69067);
CreateDynamicObject(8209, 1518.44739, -1988.21655, 26.52689,   0.00000, 357.00000, 272.66064);
CreateDynamicObject(8210, 1517.17029, -1918.27368, 24.31003,   0.00000, 0.00000, 266.70569);
CreateDynamicObject(8210, 1493.31848, -2029.02771, 33.34037,   0.00000, 5.00000, 13.89490);
CreateDynamicObject(987, 1069.50696, -2037.03870, 52.51230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8150, 1073.84375, -1953.77808, 20.76080,   0.00000, 357.00000, 270.67566);
CreateDynamicObject(8149, 1145.11304, -1891.59106, 20.17579,   0.00000, 0.00000, 270.67566);
CreateDynamicObject(987, 1223.95239, -1890.82178, 17.53811,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1228.51392, -1880.90686, 16.65833,   0.00000, 0.00000, 272.25000);
CreateDynamicObject(8210, 1255.93945, -1880.84033, 19.65852,   0.00000, 0.00000, 0.21606);
CreateDynamicObject(8210, 1283.89526, -1880.71704, 19.93733,   0.00000, 0.00000, 0.21423);
CreateDynamicObject(8210, 1382.28125, -1902.53760, 19.59590,   0.00000, 0.00000, 359.46423);
CreateDynamicObject(2921, 1416.62207, -1882.12891, 17.56566,   0.00000, 0.00000, 257.74475);
CreateDynamicObject(2921, 1248.03418, -2060.98950, 63.75835,   0.00000, 0.00000, 234.25000);
CreateDynamicObject(2921, 1247.39282, -2012.00244, 63.49231,   0.00000, 0.00000, 170.00000);
CreateDynamicObject(2921, 1125.39661, -2041.32080, 73.85696,   0.00000, 0.00000, 241.25000);
CreateDynamicObject(5170, 1249.36621, -2037.37598, 61.95067,   0.00000, 0.00000, 270.74707);
CreateDynamicObject(5170, 1275.13013, -2037.98450, 61.85405,   0.00000, 0.00000, 270.74707);
CreateDynamicObject(1360, 1264.05933, -2044.82813, 59.06311,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.98877, -2042.41064, 59.06509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.93591, -2040.27148, 59.06657,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.88501, -2038.21240, 59.06800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.79858, -2035.87854, 59.08339,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.79199, -2033.25073, 59.08358,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.74561, -2031.16772, 59.08490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.73364, -2029.01001, 59.08525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.72925, -2027.04370, 59.08537,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.69922, -2024.60254, 59.08621,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.66943, -2022.05090, 59.08708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.63794, -2019.41907, 59.08798,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.61523, -2017.58984, 59.08860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.58521, -2015.00916, 59.08949,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.57910, -2012.54688, 59.08965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1263.68091, -2009.77112, 59.08675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1264.77490, -2013.91504, 58.91701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1264.79187, -2026.25891, 58.91845,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1264.78687, -2039.03113, 58.90733,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1262.78210, -2015.64917, 58.97710,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1262.79675, -2027.41138, 58.97668,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1262.76160, -2039.45276, 58.95023,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1282, 1263.95605, -2046.55005, 59.00090,   0.00000, 0.00000, 270.67566);
CreateDynamicObject(870, 1263.85217, -2045.02942, 59.87363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.84460, -2040.97095, 59.87709,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.64063, -2009.73926, 59.89727,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.65076, -2014.28223, 59.90001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.61768, -2020.04309, 59.89850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.55896, -2024.33594, 59.89673,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.74963, -2037.17346, 59.89391,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.37354, -2032.91638, 59.89410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1263.53235, -2029.03162, 59.89577,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3512, 1263.59741, -2027.08472, 59.65377,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3512, 1263.58789, -2011.44922, 59.65805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(792, 1263.56519, -2019.70911, 59.65638,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3512, 1263.88269, -2042.39648, 59.63348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(792, 1263.74133, -2035.02527, 59.62863,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1174.98499, -2037.17566, 76.13105,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 1577.20215, -1633.09387, 16.43271,   0.00000, 0.00000, 24.78381);
CreateDynamicObject(2921, 1593.09802, -1641.70886, 15.89612,   0.00000, 0.00000, 108.14948);
CreateDynamicObject(2921, 1555.04871, -1678.87842, 19.58478,   0.00000, 0.00000, 337.13989);
CreateDynamicObject(8879, 1909.54980, -1882.15833, 18.58608,   0.00000, 0.00000, 19.30670);
CreateDynamicObject(3749, 1426.71387, -1884.20996, 18.29710,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1292.47034, -2073.85693, 57.80000,   0.00000, 0.00000, 33.00000);
CreateDynamicObject(3279, 1200.00806, -2055.22852, 67.98409,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3676, 1152.70081, -2058.02100, 73.55520,   0.00000, 0.00000, 90.00000);
// --------------grotti
CreateDynamicObject(3851,539.00000000,-1268.50000000,19.20000076,0.00000000,0.00000000,307.99719238); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,530.20001221,-1275.40002441,19.20000076,0.00000000,0.00000000,307.99621582); //object(carshowwin_sfsx) (6)
CreateDynamicObject(3851,498.19921875,-1306.29980469,19.20000076,0.00000000,0.00000000,219.99023438); //object(carshowwin_sfsx) (7)
CreateDynamicObject(3851,520.70001221,-1283.09997559,19.20000076,0.00000000,0.00000000,307.97973633); //object(carshowwin_sfsx) (8)
CreateDynamicObject(3851,503.29998779,-1297.19995117,19.20000076,0.00000000,0.00000000,307.98522949); //object(carshowwin_sfsx) (10)
CreateDynamicObject(3851,548.09997559,-1261.90002441,19.20000076,0.00000000,0.00000000,303.98620605); //object(carshowwin_sfsx) (11)
CreateDynamicObject(8397,497.09960938,-1301.89941406,-24.50000000,0.00000000,0.00000000,309.99572754); //object(luxorpillar01_lvs) (1)
CreateDynamicObject(8397,525.59960938,-1278.89941406,-24.50000000,0.00000000,0.00000000,307.99072266); //object(luxorpillar01_lvs) (3)
CreateDynamicObject(3851,548.09997559,-1261.90002441,23.20000076,0.00000000,0.00000000,303.98620605); //object(carshowwin_sfsx) (12)
CreateDynamicObject(3851,539.00000000,-1268.50000000,23.20000076,0.00000000,0.00000000,307.99072266); //object(carshowwin_sfsx) (16)
CreateDynamicObject(3851,530.20001221,-1275.40002441,23.20000076,0.00000000,0.00000000,307.99072266); //object(carshowwin_sfsx) (17)
CreateDynamicObject(3851,512.00000000,-1290.09997559,19.20000076,0.00000000,0.00000000,309.98474121); //object(carshowwin_sfsx) (22)
CreateDynamicObject(3851,504.20001221,-1314.09997559,19.20000076,0.00000000,0.00000000,215.98022461); //object(carshowwin_sfsx) (23)
CreateDynamicObject(3851,572.90002441,-1315.50000000,19.20000076,0.00000000,0.00000000,103.98010254); //object(carshowwin_sfsx) (24)
CreateDynamicObject(8397,514.29998779,-1331.59997559,-24.50000000,0.00000000,358.00000000,285.99572754); //object(luxorpillar01_lvs) (5)
CreateDynamicObject(3851,498.19921875,-1306.29980469,23.20000076,0.00000000,0.00000000,219.99023438); //object(carshowwin_sfsx) (26)
CreateDynamicObject(3851,504.20001221,-1314.09997559,23.20000076,0.00000000,0.00000000,215.98571777); //object(carshowwin_sfsx) (27)
CreateDynamicObject(3851,509.89999390,-1323.59997559,23.20000076,0.00000000,0.00000000,205.98571777); //object(carshowwin_sfsx) (28)
CreateDynamicObject(3851,509.89941406,-1323.59960938,19.20000076,0.00000000,0.00000000,205.97717285); //object(carshowwin_sfsx) (29)
CreateDynamicObject(3851,521.50000000,-1328.39941406,23.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (30)
CreateDynamicObject(3851,532.40002441,-1325.69995117,19.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (31)
CreateDynamicObject(3851,543.29998779,-1323.00000000,19.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (32)
CreateDynamicObject(8397,577.19921875,-1315.69921875,-24.50000000,0.00000000,357.98950195,283.98010254); //object(luxorpillar01_lvs) (6)
CreateDynamicObject(3851,521.50000000,-1328.40002441,19.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (36)
CreateDynamicObject(3851,532.39941406,-1325.69921875,23.20000076,0.00000000,0.00000000,103.98010254); //object(carshowwin_sfsx) (37)
CreateDynamicObject(3851,543.29998779,-1323.00000000,23.20000076,0.00000000,0.00000000,103.98010254); //object(carshowwin_sfsx) (38)
CreateDynamicObject(8397,548.29980469,-1324.19921875,-24.50000000,0.00000000,357.98950195,283.98010254); //object(luxorpillar01_lvs) (7)
CreateDynamicObject(3851,564.79998779,-1317.59997559,19.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (48)
CreateDynamicObject(3851,572.70001221,-1298.00000000,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (49)
CreateDynamicObject(3851,568.09997559,-1276.09997559,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (50)
CreateDynamicObject(3851,570.40002441,-1287.00000000,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (51)
CreateDynamicObject(8397,551.29980469,-1260.39941406,-24.50000000,0.00000000,0.00000000,299.98168945); //object(luxorpillar01_lvs) (8)
CreateDynamicObject(3851,575.00000000,-1309.00000000,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (52)
CreateDynamicObject(3851,575.00000000,-1309.00000000,23.10000038,0.00000000,0.00000000,11.97509766); //object(carshowwin_sfsx) (53)
CreateDynamicObject(3851,572.70001221,-1298.00000000,23.10000038,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (54)
CreateDynamicObject(3851,570.40002441,-1287.00000000,23.10000038,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (55)
CreateDynamicObject(3851,568.09997559,-1276.09997559,23.10000038,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (56)
CreateDynamicObject(3851,565.79998779,-1265.19995117,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (57)
CreateDynamicObject(3851,564.29998779,-1258.30004883,19.20000076,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (58)
CreateDynamicObject(3851,565.79998779,-1265.19995117,23.10000038,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (59)
CreateDynamicObject(4641,561.90002441,-1254.90002441,17.89999962,0.00000000,358.00000000,294.00000000); //object(paypark_lan04) (1)
CreateDynamicObject(3666,562.40002441,-1253.09997559,16.79999924,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
CreateDynamicObject(966,553.70001221,-1259.00000000,16.20000076,0.00000000,0.00000000,211.99768066); //object(bar_gatebar01) (1)
CreateDynamicObject(968,553.70001221,-1259.00000000,17.20000076,0.00000000,351.99645996,211.99218750); //object(barrierturn) (3)
CreateDynamicObject(4641,616.40002441,-1299.80004883,15.69999981,0.00000000,357.99499512,1.99963379); //object(paypark_lan04) (2)
CreateDynamicObject(983,619.40002441,-1298.80004883,14.89999962,0.00000000,0.00000000,274.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,583.40002441,-1253.59997559,17.70000076,0.00000000,2.00000000,189.99902344); //object(fenceshit3) (5)
CreateDynamicObject(983,616.59997559,-1288.50000000,15.50000000,0.00000000,0.00000000,177.99401855); //object(fenceshit3) (6)
CreateDynamicObject(968,617.70001221,-1299.50000000,14.19999981,0.00000000,274.00000000,268.00000000); //object(barrierturn) (4)
CreateDynamicObject(3666,622.59997559,-1298.59997559,14.60000038,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
CreateDynamicObject(3666,622.79980469,-1291.39941406,15.19999981,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
CreateDynamicObject(968,618.20001221,-1285.40002441,14.50000000,0.00000000,271.99996948,87.99499512); //object(barrierturn) (7)
CreateDynamicObject(966,616.90002441,-1298.69995117,14.19999981,0.00000000,2.00000000,268.00000000); //object(bar_gatebar01) (2)
CreateDynamicObject(968,616.90002441,-1298.69995117,14.89999962,0.00000000,354.00000000,270.00000000); //object(barrierturn) (6)
CreateDynamicObject(729,614.00000000,-1275.50000000,15.69999981,0.00000000,0.00000000,0.00000000); //object(tree_hipoly07) (1)
CreateDynamicObject(729,614.20001221,-1255.40002441,17.00000000,0.00000000,0.00000000,0.00000000); //object(tree_hipoly07) (2)
CreateDynamicObject(1251,613.29998779,-1306.40002441,13.60000038,0.00000000,0.00000000,6.00000000); //object(smashbar) (9)
CreateDynamicObject(1251,608.90002441,-1306.80004883,13.39999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (10)
CreateDynamicObject(1251,604.20001221,-1307.40002441,13.10000038,0.00000000,0.00000000,5.99853516); //object(smashbar) (11)
CreateDynamicObject(1251,599.59997559,-1308.09997559,12.89999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (12)
CreateDynamicObject(1251,595.29998779,-1308.50000000,12.89999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (13)
CreateDynamicObject(1251,590.59997559,-1309.09997559,12.89999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (14)
CreateDynamicObject(1251,586.09997559,-1309.90002441,12.89999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (15)
CreateDynamicObject(1251,581.50000000,-1310.40002441,12.89999962,0.00000000,0.00000000,5.99853516); //object(smashbar) (16)
CreateDynamicObject(983,619.69921875,-1291.50000000,15.39999962,0.00000000,0.00000000,271.99401855); //object(fenceshit3) (9)
CreateDynamicObject(983,582.29980469,-1247.29980469,17.50000000,0.00000000,1.99951172,189.99755859); //object(fenceshit3) (10)
CreateDynamicObject(983,607.09997559,-1244.09997559,18.10000038,0.00000000,1.99951172,199.99755859); //object(fenceshit3) (11)
CreateDynamicObject(983,604.90002441,-1238.09997559,17.89999962,0.00000000,1.99951172,199.99511719); //object(fenceshit3) (12)
CreateDynamicObject(983,600.79998779,-1236.30004883,17.79999924,0.00000000,1.99951172,111.99502563); //object(fenceshit3) (13)
CreateDynamicObject(983,596.40002441,-1238.09997559,17.70000076,0.00000000,1.99951172,111.99502563); //object(fenceshit3) (14)
CreateDynamicObject(983,584.70001221,-1243.00000000,17.39999962,0.00000000,357.99951172,111.99456787); //object(fenceshit3) (16)
CreateDynamicObject(983,589.09997559,-1241.19995117,17.50000000,0.00000000,357.99951172,111.99462891); //object(fenceshit3) (17)
CreateDynamicObject(983,594.70001221,-1242.30004883,17.70000076,0.00000000,1.99951172,201.98913574); //object(fenceshit3) (18)
CreateDynamicObject(983,593.20001221,-1243.00000000,17.70000076,0.00000000,1.99951172,199.99462891); //object(fenceshit3) (19)
CreateDynamicObject(1251,590.79998779,-1285.00000000,15.10000038,0.00000000,0.00000000,13.99853516); //object(smashbar) (18)
CreateDynamicObject(1251,594.29998779,-1284.50000000,15.10000038,0.00000000,0.00000000,13.99658203); //object(smashbar) (19)
CreateDynamicObject(1251,597.50000000,-1283.69995117,15.10000038,0.00000000,0.00000000,13.99658203); //object(smashbar) (20)
CreateDynamicObject(1251,604.40002441,-1282.30004883,15.10000038,0.00000000,0.00000000,13.99658203); //object(smashbar) (21)
CreateDynamicObject(1251,601.09997559,-1283.00000000,15.10000038,0.00000000,0.00000000,13.99658203); //object(smashbar) (22)
CreateDynamicObject(1251,608.20001221,-1281.40002441,15.10000038,0.00000000,0.00000000,13.99658203); //object(smashbar) (23)
CreateDynamicObject(1251,588.00000000,-1278.30004883,15.60000038,0.00000000,0.00000000,283.99658203); //object(smashbar) (24)
CreateDynamicObject(1251,587.29980469,-1275.19921875,15.89999962,0.00000000,0.00000000,283.99658203); //object(smashbar) (25)
CreateDynamicObject(1251,589.00000000,-1281.69995117,15.39999962,0.00000000,0.00000000,283.99658203); //object(smashbar) (26)
CreateDynamicObject(1251,586.00000000,-1271.30004883,16.10000038,0.00000000,0.00000000,283.99658203); //object(smashbar) (27)
CreateDynamicObject(1251,585.29998779,-1268.19995117,16.39999962,0.00000000,0.00000000,283.99658203); //object(smashbar) (28)
CreateDynamicObject(1251,584.59997559,-1264.69995117,16.60000038,0.00000000,0.00000000,283.99658203); //object(smashbar) (29)
CreateDynamicObject(1251,583.70001221,-1261.80004883,16.79999924,0.00000000,0.00000000,283.99658203); //object(smashbar) (30)
CreateDynamicObject(1251,556.79998779,-1257.09997559,16.29999924,0.00000000,0.00000000,301.99218750); //object(smashbar) (31)
CreateDynamicObject(1597,601.50000000,-1243.50000000,19.89999962,0.00000000,0.00000000,291.99462891); //object(cntrlrsac1) (1)
CreateDynamicObject(1597,588.79998779,-1248.50000000,19.70000076,0.00000000,0.00000000,291.99462891); //object(cntrlrsac1) (2)
CreateDynamicObject(9833,608.50000000,-1237.09960938,20.60000038,0.00000000,0.00000000,0.00000000); //object(fountain_sfw) (1)
CreateDynamicObject(1364,598.79998779,-1238.00000000,17.89999962,0.00000000,0.00000000,21.99462891); //object(cj_bush_prop) (2)
CreateDynamicObject(1361,594.29998779,-1239.69995117,17.70000076,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(1361,603.29998779,-1235.90002441,17.89999962,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (3)
CreateDynamicObject(1364,587.09960938,-1242.79980469,17.60000038,0.00000000,0.00000000,21.99462891); //object(cj_bush_prop) (3)
CreateDynamicObject(1361,591.70001221,-1240.90002441,17.70000076,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (4)
CreateDynamicObject(1361,582.39941406,-1244.50000000,17.50000000,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (5)
CreateDynamicObject(3851,520.70001221,-1283.09997559,23.10000038,0.00000000,0.00000000,307.97973633); //object(carshowwin_sfsx) (8)
CreateDynamicObject(3851,512.00000000,-1290.09997559,23.10000038,0.00000000,0.00000000,309.98474121); //object(carshowwin_sfsx) (8)
CreateDynamicObject(3851,503.29998779,-1297.19995117,23.10000038,0.00000000,0.00000000,307.97973633); //object(carshowwin_sfsx) (8)
CreateDynamicObject(3851,553.90002441,-1320.30004883,23.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (33)
CreateDynamicObject(3851,553.90002441,-1320.30004883,19.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (33)
CreateDynamicObject(1251,583.09960938,-1258.69921875,17.10000038,0.00000000,0.00000000,283.99658203); //object(smashbar) (31)
CreateDynamicObject(3851,564.79998779,-1317.59997559,23.20000076,0.00000000,0.00000000,103.97460938); //object(carshowwin_sfsx) (33)
CreateDynamicObject(3851,572.89941406,-1315.50000000,23.20000076,0.00000000,0.00000000,103.96911621); //object(carshowwin_sfsx) (33)
CreateDynamicObject(1231,607.59997559,-1246.69995117,20.20000076,0.00000000,0.00000000,4.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,599.40002441,-1250.30004883,20.10000038,0.00000000,0.00000000,3.99902344); //object(streetlamp2) (2)
CreateDynamicObject(1231,592.40002441,-1252.90002441,20.00000000,0.00000000,0.00000000,3.99902344); //object(streetlamp2) (3)
CreateDynamicObject(1231,584.00000000,-1255.69995117,19.89999962,0.00000000,0.00000000,3.99902344); //object(streetlamp2) (4)
CreateDynamicObject(1231,582.40002441,-1244.50000000,19.39999962,0.00000000,0.00000000,21.99902344); //object(streetlamp2) (5)
CreateDynamicObject(1231,603.40002441,-1236.00000000,19.89999962,0.00000000,0.00000000,19.99462891); //object(streetlamp2) (8)
CreateDynamicObject(1215,593.40002441,-1239.40002441,17.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,592.09997559,-1240.00000000,17.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,594.20001221,-1246.00000000,17.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,595.90002441,-1245.30004883,17.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(3851,564.29998779,-1258.30004883,23.10000038,0.00000000,0.00000000,11.96960449); //object(carshowwin_sfsx) (59)
// casa premium 1
CreateDynamicObject(4553,2913.7453600,-1816.8951400,9.4007000,0.0000000,0.0000000,171.4151200); //
CreateDynamicObject(19371,2867.7307100,-1815.9561800,9.9783000,1.2600000,-66.8401000,-192.0001100); //
CreateDynamicObject(19371,2868.5053700,-1812.8648700,9.9783000,1.2600000,-66.8401000,-192.6600800); //
CreateDynamicObject(19371,2869.0544400,-1809.6702900,9.9783000,1.2600000,-66.8401000,-192.3001100); //
CreateDynamicObject(19371,2869.6972700,-1806.5645800,9.9783000,1.2600000,-66.8401000,-192.3001100); //
CreateDynamicObject(19371,2870.1926300,-1804.3304400,9.9783000,1.2600000,-66.8401000,-192.3001100); //
CreateDynamicObject(19371,2871.6572300,-1816.6937300,9.9783000,1.2600000,-66.8401000,-11.8201100); //
CreateDynamicObject(19371,2872.3911100,-1813.4720500,9.9783000,1.2600000,-66.8401000,-10.8001000); //
CreateDynamicObject(19371,2872.9941400,-1810.3286100,9.9783000,1.2600000,-66.8401000,-10.8001000); //
CreateDynamicObject(19371,2873.5874000,-1807.2037400,9.9783000,1.2600000,-66.8401000,-10.8001000); //
CreateDynamicObject(19371,2874.1062000,-1804.7567100,9.9783000,1.2600000,-66.8401000,-10.8001000); //
CreateDynamicObject(19550,3034.2026400,-1821.2679400,6.2815000,0.0000000,0.0000000,-3.7200000); //
CreateDynamicObject(3749,2972.9707000,-1825.7728300,11.7529800,0.0000000,0.0000000,-93.7200000); //
CreateDynamicObject(987,2971.0302700,-1834.9598400,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2972.9411600,-1804.7033700,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2970.2136200,-1846.8963600,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2969.4331100,-1858.7773400,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2968.8486300,-1867.6651600,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2968.0947300,-1879.3978300,6.1667500,0.0000000,0.0000000,356.7137500); //
CreateDynamicObject(987,2980.0124500,-1880.1254900,6.1667500,0.0000000,0.0000000,356.7137500); //
CreateDynamicObject(987,2991.8752400,-1880.8308100,6.1667500,0.0000000,0.0000000,356.3537900); //
CreateDynamicObject(987,3003.8071300,-1881.6815200,6.1667500,0.0000000,0.0000000,356.5937500); //
CreateDynamicObject(987,3015.7675800,-1882.4386000,6.1667500,0.0000000,0.0000000,356.2937600); //
CreateDynamicObject(987,3027.7834500,-1883.3155500,6.1667500,0.0000000,0.0000000,356.2937600); //
CreateDynamicObject(987,3039.7214400,-1884.0959500,6.1667500,0.0000000,0.0000000,356.4737500); //
CreateDynamicObject(987,3051.6674800,-1884.8002900,6.1667500,0.0000000,0.0000000,356.4737500); //
CreateDynamicObject(987,3063.5727500,-1885.5306400,6.1667500,0.0000000,0.0000000,356.4737500); //
CreateDynamicObject(987,3075.4619100,-1886.2685500,6.1667500,0.0000000,0.0000000,356.4737500); //
CreateDynamicObject(987,3080.7365700,-1886.7021500,6.1667500,0.0000000,0.0000000,356.4737500); //
CreateDynamicObject(987,3092.4331100,-1887.4350600,6.1667500,0.0000000,0.0000000,447.0737000); //
CreateDynamicObject(987,3093.0747100,-1875.4685100,6.1667500,0.0000000,0.0000000,446.9538900); //
CreateDynamicObject(987,3093.5722700,-1866.5076900,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3095.3261700,-1839.5737300,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3096.1296400,-1827.6362300,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3096.9233400,-1815.6431900,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3097.7226600,-1803.7320600,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3098.6035200,-1791.7974900,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3099.3244600,-1779.8490000,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3099.6308600,-1774.8795200,6.1667500,0.0000000,0.0000000,446.4139100); //
CreateDynamicObject(987,3100.3674300,-1763.1236600,6.1667500,0.0000000,0.0000000,537.4935300); //
CreateDynamicObject(987,3088.4829100,-1762.5543200,6.1667500,0.0000000,0.0000000,536.2335800); //
CreateDynamicObject(987,3076.5893600,-1761.7518300,6.1667500,0.0000000,0.0000000,536.2335800); //
CreateDynamicObject(987,3064.6279300,-1760.9398200,6.1667500,0.0000000,0.0000000,536.4735700); //
CreateDynamicObject(987,3052.6298800,-1760.1618700,6.1667500,0.0000000,0.0000000,536.5935700); //
CreateDynamicObject(987,3040.6552700,-1759.3669400,6.1667500,0.0000000,0.0000000,536.5935700); //
CreateDynamicObject(987,3028.7514600,-1758.6967800,6.1667500,0.0000000,0.0000000,536.1735800); //
CreateDynamicObject(987,3016.8432600,-1757.8454600,6.1667500,0.0000000,0.0000000,536.1735800); //
CreateDynamicObject(987,3004.9338400,-1756.9730200,6.1667500,0.0000000,0.0000000,536.4135700); //
CreateDynamicObject(987,2993.0144000,-1756.0837400,6.1667500,0.0000000,0.0000000,537.0735500); //
CreateDynamicObject(987,2987.7602500,-1755.7529300,6.1667500,0.0000000,0.0000000,537.0735500); //
CreateDynamicObject(987,2973.6994600,-1792.7246100,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2974.4104000,-1780.8145800,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2975.1435500,-1768.8182400,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2975.9868200,-1756.8858600,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(987,2976.1174300,-1754.8674300,6.1667500,0.0000000,0.0000000,266.3538200); //
CreateDynamicObject(660,2974.9235800,-1811.0230700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2975.1804200,-1806.0817900,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2975.5927700,-1801.1158400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2976.0219700,-1795.5322300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2975.9326200,-1790.1541700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2976.4416500,-1784.6054700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2976.9179700,-1779.1905500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2977.3418000,-1772.7181400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2977.8991700,-1767.1574700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2978.2702600,-1759.9074700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2972.9594700,-1839.5384500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2972.5244100,-1845.7269300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2972.1355000,-1852.2348600,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2971.6186500,-1858.6577100,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2971.2922400,-1864.9823000,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2970.9458000,-1870.6005900,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2970.5424800,-1876.9034400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19854,3079.9287100,-1841.1617400,6.2573100,0.0000000,0.0000000,-94.4399600); //
CreateDynamicObject(19855,3079.9001500,-1841.1905500,6.2830000,0.0000000,0.0000000,-94.3800100); //
CreateDynamicObject(660,2977.0527300,-1877.6573500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2984.0419900,-1878.3308100,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2990.9235800,-1878.5758100,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2997.7412100,-1879.1374500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3004.2443800,-1879.2192400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3011.1977500,-1879.5759300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3019.6377000,-1880.3992900,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2985.4885300,-1758.0971700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,2994.5141600,-1758.4854700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3002.5637200,-1758.9824200,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3010.3776900,-1759.6906700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3018.2600100,-1760.6938500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3027.3129900,-1760.8923300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3038.6286600,-1761.6793200,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3048.0185500,-1762.2088600,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3028.3659700,-1880.6295200,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3039.0256300,-1881.7004400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3048.8015100,-1882.2850300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3059.3747600,-1883.1497800,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3069.1413600,-1883.2873500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3078.6677200,-1884.0467500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3088.2995600,-1884.3535200,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3057.3850100,-1762.9880400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3066.2587900,-1763.4021000,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3075.9807100,-1763.9167500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3085.6274400,-1764.8947800,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3096.7324200,-1765.8125000,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19856,3079.9692400,-1841.0637200,6.2806000,0.0000000,0.0000000,-94.6199400); //
CreateDynamicObject(1703,3069.1525900,-1830.6479500,7.0031300,0.0000000,0.0000000,-96.0600400); //
CreateDynamicObject(1703,3065.8200700,-1828.9689900,7.0031300,0.0000000,0.0000000,-5.9400400); //
CreateDynamicObject(19787,3066.0322300,-1835.6003400,9.0302200,0.0000000,0.0000000,-184.1400900); //
CreateDynamicObject(1817,3065.9321300,-1831.9941400,7.0033800,0.0000000,0.0000000,-5.7600000); //
CreateDynamicObject(2251,3063.0595700,-1835.0686000,7.8496000,0.0000000,0.0000000,150.4799800); //
CreateDynamicObject(2269,3064.2199700,-1834.9147900,8.5862000,0.0000000,0.0000000,-184.7998000); //
CreateDynamicObject(1742,3069.2451200,-1835.9082000,6.9827200,0.0000000,0.0000000,-183.8398300); //
CreateDynamicObject(1703,3063.9069800,-1832.2940700,7.0031300,0.0000000,0.0000000,85.4399600); //
CreateDynamicObject(644,3075.7954100,-1828.5797100,7.3327000,0.0000000,0.0000000,32.0399900); //
CreateDynamicObject(19175,3069.5761700,-1827.4510500,9.0606500,0.0000000,0.0000000,-4.3200000); //
CreateDynamicObject(2315,3074.5869100,-1839.9346900,7.0010800,0.0000000,0.0000000,84.8399400); //
CreateDynamicObject(2894,3074.6689500,-1838.8651100,7.4954700,0.0000000,0.0000000,42.1200000); //
CreateDynamicObject(2195,3074.3828100,-1840.8923300,7.6181100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,3074.8017600,-1837.5395500,7.6181100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19173,3075.0874000,-1839.0946000,9.0508200,0.0000000,0.0000000,86.4000200); //
CreateDynamicObject(15036,3077.7370600,-1830.3104200,8.0908000,0.0000000,0.0000000,265.8001400); //
CreateDynamicObject(1739,3081.6782200,-1831.6362300,7.8039000,0.0000000,0.0000000,169.2000400); //
CreateDynamicObject(1737,3083.1333000,-1832.0626200,7.0027200,0.0000000,0.0000000,-92.7600400); //
CreateDynamicObject(1739,3081.7326700,-1832.9953600,7.8039000,0.0000000,0.0000000,190.4999500); //
CreateDynamicObject(1739,3082.5813000,-1834.3275100,7.8039000,0.0000000,0.0000000,234.9598200); //
CreateDynamicObject(1739,3082.8896500,-1830.6917700,7.8039000,0.0000000,0.0000000,99.9601100); //
CreateDynamicObject(19370,3080.3173800,-1829.8855000,10.1616200,0.0000000,0.0000000,-3.8400000); //
CreateDynamicObject(19370,3080.1181600,-1833.0793500,8.5906000,0.0000000,0.0000000,-3.8400000); //
CreateDynamicObject(19370,3080.1181600,-1833.0793500,11.5622300,0.0000000,0.0000000,-3.8400000); //
CreateDynamicObject(19370,3080.3173800,-1829.8855000,8.5906000,0.0000000,0.0000000,-3.8400000); //
CreateDynamicObject(644,3084.6245100,-1829.1502700,7.2115100,0.0000000,0.0000000,-47.8199800); //
CreateDynamicObject(2267,3080.3320300,-1831.7658700,9.4508500,0.0000000,0.0000000,87.0600000); //
CreateDynamicObject(2266,3082.8298300,-1828.9980500,9.1798500,0.0000000,0.0000000,-1.5600000); //
CreateDynamicObject(2195,3076.2326700,-1832.9575200,7.6188600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1491,3075.0512700,-1842.7627000,7.0150000,0.0000000,0.0000000,-95.2800000); //
CreateDynamicObject(1491,3074.8230000,-1845.3125000,7.0150000,0.0000000,0.0000000,-93.8400300); //
CreateDynamicObject(1491,3069.1325700,-1844.4918200,6.9850000,0.0000000,0.0000000,-95.2800000); //
CreateDynamicObject(1491,3069.4509300,-1838.9978000,6.9850000,0.0000000,0.0000000,-95.2800000); //
CreateDynamicObject(2568,3083.7180200,-1844.9473900,6.9902000,0.0000000,0.0000000,-184.6200000); //
CreateDynamicObject(19893,3082.1054700,-1844.7351100,7.8405100,0.0000000,0.0000000,-170.2200200); //
CreateDynamicObject(2566,3077.9733900,-1839.0479700,7.5759000,0.0000000,0.0000000,-4.8000000); //
CreateDynamicObject(2817,3078.8652300,-1840.2823500,7.0039500,0.0000000,0.0000000,-6.0000000); //
CreateDynamicObject(19787,3079.2656300,-1845.1449000,9.0888500,0.0000000,0.0000000,175.5601000); //
CreateDynamicObject(19174,3079.7590300,-1836.6886000,9.4230700,0.0000000,0.0000000,-4.4400000); //
CreateDynamicObject(1714,3082.1096200,-1843.2882100,7.0029500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1704,3083.7631800,-1837.3978300,7.0016600,0.0000000,0.0000000,-50.2199900); //
CreateDynamicObject(14455,3075.6281700,-1837.3649900,8.5460000,0.0000000,0.0000000,-94.4999600); //
CreateDynamicObject(2526,3082.2028800,-1848.8913600,7.0021600,0.0000000,0.0000000,-4.8000000); //
CreateDynamicObject(2521,3079.0854500,-1848.6189000,7.0039200,0.0000000,0.0000000,174.6000200); //
CreateDynamicObject(11707,3080.5075700,-1849.1381800,7.8879600,0.0000000,0.0000000,-4.0200000); //
CreateDynamicObject(2517,3083.4375000,-1847.0855700,7.0017600,0.0000000,0.0000000,-3.8999900); //
CreateDynamicObject(1491,3083.7832000,-1851.3568100,6.9850000,0.0000000,0.0000000,-95.1600000); //
CreateDynamicObject(2269,3077.4548300,-1849.6143800,8.8190300,0.0000000,0.0000000,-2.9400000); //
CreateDynamicObject(2811,3074.1904300,-1848.4346900,6.8045800,0.0000000,0.0000000,40.2599900); //
CreateDynamicObject(2811,3083.3444800,-1854.1063200,6.9126000,0.0000000,0.0000000,40.2600000); //
CreateDynamicObject(1704,3069.1169400,-1852.4802200,7.0018800,0.0000000,0.0000000,85.4400000); //
CreateDynamicObject(1704,3069.1169400,-1852.4802200,7.0018800,0.0000000,0.0000000,85.4400000); //
CreateDynamicObject(1704,3069.3386200,-1850.2105700,7.0018800,0.0000000,0.0000000,85.4400000); //
CreateDynamicObject(2251,3069.3278800,-1850.9531300,7.8301000,0.0000000,0.0000000,109.1400000); //
CreateDynamicObject(4571,3002.7241200,-1823.2241200,-57.7137000,0.0000000,0.0000000,-3.7800000); //
CreateDynamicObject(4571,3000.2866200,-1861.9902300,-57.7137000,0.0000000,0.0000000,-3.6600000); //
CreateDynamicObject(4571,3005.2404800,-1784.5083000,-57.7477000,0.0000000,0.0000000,-3.7200000); //
CreateDynamicObject(4571,3005.7619600,-1776.3299600,-57.7477000,0.0000000,0.0000000,-3.7200000); //
CreateDynamicObject(4571,3066.2185100,-1780.1224400,-57.7477000,0.0000000,0.0000000,-3.7200000); //
CreateDynamicObject(4571,3079.2583000,-1791.4511700,-57.7477000,0.0000000,0.0000000,86.4600000); //
CreateDynamicObject(4571,3075.6999500,-1851.8664600,-57.7477000,0.0000000,0.0000000,86.0400000); //
CreateDynamicObject(4571,3058.5070800,-1865.7197300,-57.7477000,0.0000000,0.0000000,-3.6600000); //
CreateDynamicObject(4571,3064.1296400,-1866.7141100,-57.7477000,0.0000000,0.0000000,-3.6600000); //
CreateDynamicObject(718,2988.8237300,-1827.7324200,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,3000.9323700,-1828.2863800,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,3013.9812000,-1828.8541300,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,3027.3701200,-1828.8595000,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(640,3029.3349600,-1880.9174800,6.9467000,0.0000000,0.0000000,358.2030600); //
CreateDynamicObject(640,3029.5124500,-1875.5697000,6.9467000,0.0000000,0.0000000,357.8430800); //
CreateDynamicObject(640,3029.7790500,-1870.2647700,6.9467000,0.0000000,0.0000000,357.3031000); //
CreateDynamicObject(640,3029.5124500,-1875.5697000,6.9467000,0.0000000,0.0000000,357.8430800); //
CreateDynamicObject(640,3030.0610400,-1864.8692600,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3030.3784200,-1859.4925500,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3030.6731000,-1854.1773700,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3030.9680200,-1848.8737800,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3031.2793000,-1843.5305200,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3031.4167500,-1841.1856700,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(2395,3066.2143600,-1840.7462200,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3062.4875500,-1840.5191700,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3058.7592800,-1840.2825900,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3055.0385700,-1840.0399200,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3051.3503400,-1839.8096900,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3047.6460000,-1839.5925300,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3043.9245600,-1839.3621800,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3040.2155800,-1839.1147500,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3036.4995100,-1838.9000200,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3032.8820800,-1838.6803000,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3029.2124000,-1838.4295700,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(18850,2994.4003900,-1782.6080300,-1.1340200,0.0000000,0.0000000,-94.3800100); //
CreateDynamicObject(3361,2994.3996600,-1800.0109900,8.8946000,0.0000000,0.0000000,-6.6000000); //
CreateDynamicObject(2395,2991.9948700,-1798.2274200,11.0316000,-90.1800000,324.6610100,408.3140000); //
CreateDynamicObject(3361,3000.4709500,-1800.6690700,4.5503600,0.0000000,0.0000000,-6.6000000); //
CreateDynamicObject(2395,2991.7656300,-1800.2633100,11.0296000,-90.1800000,324.6610100,408.3140000); //
CreateDynamicObject(640,3032.0063500,-1833.2060500,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3032.3584000,-1827.8212900,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3032.6787100,-1822.4826700,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3032.9987800,-1817.1182900,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3033.3471700,-1811.7407200,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3033.5737300,-1808.3907500,6.9467000,0.0000000,0.0000000,356.7631200); //
CreateDynamicObject(640,3026.0600600,-1805.0709200,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,3031.4331100,-1805.4390900,6.9467000,0.0000000,0.0000000,446.5831300); //
CreateDynamicObject(640,3020.7268100,-1804.7053200,6.9467000,0.0000000,0.0000000,446.4631300); //
CreateDynamicObject(2395,2998.0549300,-1801.7874800,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3001.7854000,-1802.0216100,6.3402000,-90.1800000,324.6610100,321.0739400); //
CreateDynamicObject(2395,3005.1755400,-1799.9978000,6.3402000,-90.1800000,324.6610100,229.8739600); //
CreateDynamicObject(2395,3004.8989300,-1803.7220500,6.3402000,-90.1800000,324.6610100,229.8739600); //
CreateDynamicObject(640,3015.4043000,-1804.4032000,6.9467000,0.0000000,0.0000000,446.7631200); //
CreateDynamicObject(640,3010.3867200,-1804.1206100,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,3002.2448700,-1803.6230500,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,2996.9069800,-1803.2751500,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,2991.5788600,-1802.9328600,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,2986.1894500,-1802.5853300,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,2980.8122600,-1802.2369400,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(640,2975.7150900,-1801.9212600,6.9467000,0.0000000,0.0000000,446.3431400); //
CreateDynamicObject(718,3032.6318400,-1806.8671900,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,3017.0097700,-1805.6807900,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,3000.7236300,-1804.7085000,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(718,2986.2553700,-1803.4191900,6.2885000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(2395,3048.4826700,-1836.4251700,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3048.6984900,-1832.7497600,6.3402000,-90.1800000,324.6610100,411.4941700); //
CreateDynamicObject(2395,3048.8979500,-1829.0230700,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3049.1062000,-1825.3436300,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3049.2963900,-1821.6264600,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3049.4970700,-1817.9311500,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3049.7539100,-1814.2398700,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3049.9838900,-1810.5166000,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3050.2133800,-1806.8126200,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3050.3906300,-1803.0944800,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3050.5861800,-1799.3936800,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3050.8244600,-1795.6890900,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3051.0427200,-1792.0161100,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3051.2385300,-1788.3172600,6.3402000,-90.1800000,324.6610100,411.3141800); //
CreateDynamicObject(2395,3048.2736800,-1784.8945300,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(2395,3054.6669900,-1785.3288600,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(2395,3058.3659700,-1785.5481000,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(2395,3062.1157200,-1785.8179900,6.3402000,-90.1800000,324.6610100,500.1139800); //
CreateDynamicObject(2395,3065.8112800,-1786.0468800,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(705,3072.2343800,-1869.3020000,6.2577000,0.0000000,0.0000000,46.0800000); //
CreateDynamicObject(705,3045.0847200,-1845.6878700,6.2577000,0.0000000,0.0000000,93.8999900); //
CreateDynamicObject(714,3039.2692900,-1872.1712600,6.2497800,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(1281,3057.0866700,-1870.9013700,7.0603000,0.0000000,0.0000000,40.3800200); //
CreateDynamicObject(1281,3049.0022000,-1862.6647900,7.0603000,0.0000000,0.0000000,109.5000200); //
CreateDynamicObject(6066,3027.7006800,-1780.0278300,8.7524000,0.0000000,0.0000000,152.8199000); //
CreateDynamicObject(19866,3034.9165000,-1777.4495800,6.2745100,0.0000000,0.0000000,62.4599600); //
CreateDynamicObject(19866,3039.3366700,-1779.7508500,6.2745100,0.0000000,0.0000000,62.4599600); //
CreateDynamicObject(19866,3029.7299800,-1787.3297100,6.2745100,0.0000000,0.0000000,62.4599600); //
CreateDynamicObject(19866,3034.9165000,-1777.4495800,6.2745100,0.0000000,0.0000000,62.4599600); //
CreateDynamicObject(19866,3034.1425800,-1789.6358600,6.2745100,0.0000000,0.0000000,62.4599600); //
CreateDynamicObject(19866,3037.4668000,-1788.6652800,6.2745100,0.0000000,0.0000000,152.2800100); //
CreateDynamicObject(2395,3045.3945300,-1784.6839600,6.3402000,-90.1800000,324.6610100,485.2340100); //
CreateDynamicObject(2395,3043.1689500,-1783.9198000,6.3402000,-90.1800000,324.6610100,478.2141400); //
CreateDynamicObject(2627,3031.8654800,-1785.5350300,6.2787600,0.0000000,0.0000000,111.4200100); //
CreateDynamicObject(2628,3035.5197800,-1787.4119900,6.2786000,0.0000000,0.0000000,171.0000200); //
CreateDynamicObject(2629,3034.4794900,-1779.9110100,6.2781600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2630,3037.0483400,-1780.5329600,6.2784700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2631,3038.7802700,-1782.1923800,6.2793100,0.0000000,0.0000000,54.6600000); //
CreateDynamicObject(737,3049.4780300,-1825.7976100,6.2714300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3045.5268600,-1820.0205100,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3051.0478500,-1813.8193400,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3045.9028300,-1808.3732900,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3051.7919900,-1804.0319800,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3046.2851600,-1800.2407200,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3051.8845200,-1795.6109600,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3047.3344700,-1791.9537400,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,3051.7961400,-1788.6237800,6.2677300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3458,2998.1364700,-1874.7816200,7.7866000,0.0000000,0.0000000,-3.6599900); //
CreateDynamicObject(3458,2999.4838900,-1856.4893800,7.7866000,0.0000000,0.0000000,176.2200500); //
CreateDynamicObject(19129,3076.2651400,-1785.9310300,6.2280000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(2395,3063.4252900,-1789.1468500,6.3402000,-90.1800000,324.6610100,591.4935300); //
CreateDynamicObject(2395,3063.2229000,-1792.8365500,6.3402000,-90.1800000,324.6610100,591.4935300); //
CreateDynamicObject(2395,3063.0236800,-1796.4307900,6.3402000,-90.1800000,324.6610100,591.4935300); //
CreateDynamicObject(2395,3062.8366700,-1800.1357400,6.3402000,-90.1800000,324.6610100,591.4935300); //
CreateDynamicObject(2395,3068.7136200,-1801.0059800,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(19608,3088.4223600,-1786.2398700,8.3304000,0.0000000,0.0000000,-92.3400000); //
CreateDynamicObject(705,3039.7522000,-1772.0258800,6.2577000,0.0000000,0.0000000,46.0800000); //
CreateDynamicObject(705,3025.9470200,-1794.8333700,6.2577000,0.0000000,0.0000000,-28.9799900); //
CreateDynamicObject(660,3052.2375500,-1765.8287400,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3062.0427200,-1766.6148700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3070.4885300,-1767.4055200,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3080.5932600,-1768.0767800,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3091.3427700,-1769.1832300,6.9997700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19370,3086.4489700,-1783.4981700,6.6135700,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(19370,3086.3195800,-1786.6574700,6.6135700,0.0000000,0.0000000,-2.2200000); //
CreateDynamicObject(19370,3086.1945800,-1788.7908900,6.6135700,0.0000000,0.0000000,-2.2200000); //
CreateDynamicObject(19370,3087.6918900,-1790.3687700,6.6135700,0.0000000,0.0000000,87.7799600); //
CreateDynamicObject(19370,3088.9719200,-1790.4227300,6.6135700,0.0000000,0.0000000,87.7799600); //
CreateDynamicObject(19370,3090.5832500,-1788.9610600,6.6135700,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(19370,3090.6889600,-1785.7783200,6.6135700,0.0000000,0.0000000,178.4400000); //
CreateDynamicObject(19370,3090.7814900,-1783.7148400,6.6135700,0.0000000,0.0000000,177.2999900); //
CreateDynamicObject(19370,3089.3122600,-1782.0922900,6.6135700,0.0000000,0.0000000,266.9399100); //
CreateDynamicObject(19370,3088.0151400,-1782.0521200,6.6135700,0.0000000,0.0000000,266.9399100); //
CreateDynamicObject(3361,3083.6469700,-1782.9495800,6.3260900,0.0000000,0.0000000,-182.2199900); //
CreateDynamicObject(714,3088.1713900,-1815.5450400,6.2497800,0.0000000,0.0000000,30.3600100); //
CreateDynamicObject(1215,3031.4384800,-1838.7359600,6.6419400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3031.8320300,-1835.5522500,6.7631600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3030.9387200,-1851.6532000,6.6468800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3029.8679200,-1867.3281300,6.6532800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3029.0681200,-1879.8823200,6.8760100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3032.7917500,-1820.0360100,6.7447200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3033.7373000,-1805.8560800,6.6202800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3023.0905800,-1804.9842500,6.6463200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3007.8488800,-1803.9714400,6.6461100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3004.6106000,-1803.8184800,6.7245200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2988.0903300,-1802.7613500,6.6452800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2976.1389200,-1802.0637200,6.7124800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2975.5439500,-1820.1392800,6.2963300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2974.6823700,-1831.9525100,6.2953900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2872.6816400,-1802.1523400,10.6387500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2869.2063000,-1818.6455100,10.7591900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2852.0578600,-1799.9587400,10.0406200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2849.8396000,-1814.9400600,10.0406200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2989.6557600,-1827.8050500,6.2967700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3001.7666000,-1828.2666000,6.2967700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3014.7981000,-1828.8894000,6.2967700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3028.1596700,-1828.8978300,6.2967700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3010.2241200,-1854.8789100,6.2967400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2989.2902800,-1853.4791300,6.2905000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3008.4309100,-1877.1691900,6.2925400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2987.4821800,-1875.5570100,6.2930100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3045.6799300,-1836.7287600,6.2836700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3048.4877900,-1836.9023400,6.2849300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3046.8269000,-1839.5987500,6.2789900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3052.8940400,-1839.9888900,6.2775100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3058.3745100,-1840.3299600,6.2781500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3058.5781300,-1837.3552200,6.2777300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3052.8335000,-1837.1192600,6.2772600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3067.3586400,-1838.0892300,6.2828700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3067.1291500,-1840.8220200,6.2897800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3061.1984900,-1845.3853800,6.2792200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3060.8161600,-1850.9939000,6.2791900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3051.0034200,-1795.7233900,6.2802200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3048.0393100,-1795.1867700,6.2801500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3049.7226600,-1814.8206800,6.2797200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3046.9768100,-1814.5845900,6.2820700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3046.0173300,-1829.3994100,6.2792200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3048.9116200,-1829.5141600,6.2795200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3048.7722200,-1784.9067400,6.2790700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3051.4160200,-1785.0577400,6.2795100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3038.7717300,-1786.5809300,6.2790000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3041.6186500,-1781.0704300,6.2794300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3059.4460400,-1788.4772900,6.2760800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3059.6398900,-1785.4793700,6.2764500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2980.9284700,-1794.2459700,11.1136000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,2982.7846700,-1769.0725100,11.1133000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3007.8903800,-1771.1440400,11.1143500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3005.8879400,-1796.0295400,11.1157600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1418,3066.0708000,-1790.4856000,7.0516000,0.0000000,0.0000000,-92.8799900); //
CreateDynamicObject(1418,3065.9099100,-1793.6390400,7.0516000,0.0000000,0.0000000,-92.8799900); //
CreateDynamicObject(1418,3066.3530300,-1784.2916300,7.0516000,0.0000000,0.0000000,-92.8799900); //
CreateDynamicObject(1418,3066.5087900,-1780.8940400,7.0516000,0.0000000,0.0000000,-92.8799900); //
CreateDynamicObject(1418,3066.6543000,-1777.3513200,7.0516000,0.0000000,0.0000000,-92.8799900); //
CreateDynamicObject(1418,3068.4802200,-1775.6123000,7.0516000,0.0000000,0.0000000,-2.2200100); //
CreateDynamicObject(1418,3071.8796400,-1775.7356000,7.0516000,0.0000000,0.0000000,-2.2200100); //
CreateDynamicObject(1418,3075.3073700,-1775.8629200,7.0516000,0.0000000,0.0000000,-2.2200100); //
CreateDynamicObject(1418,3078.7529300,-1776.0007300,7.0516000,0.0000000,0.0000000,-2.2200100); //
CreateDynamicObject(1418,3082.2182600,-1776.1370800,7.0516000,0.0000000,0.0000000,-2.2200100); //
CreateDynamicObject(1418,3084.9785200,-1776.3012700,7.0516000,0.0000000,0.0000000,-3.3000000); //
CreateDynamicObject(1418,3086.6198700,-1778.0472400,7.0516000,0.0000000,0.0000000,-92.2800300); //
CreateDynamicObject(1418,3086.4672900,-1781.5452900,7.0516000,0.0000000,0.0000000,-91.6800200); //
CreateDynamicObject(1418,3067.5388200,-1795.5345500,7.0516000,0.0000000,0.0000000,-2.6999900); //
CreateDynamicObject(1418,3071.0168500,-1795.6765100,7.0516000,0.0000000,0.0000000,-2.6999900); //
CreateDynamicObject(2395,3073.2348600,-1795.7756300,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3073.0813000,-1798.4993900,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3072.9426300,-1801.2530500,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3069.5385700,-1801.0715300,6.3402000,-90.1800000,324.6610100,501.1339400); //
CreateDynamicObject(2395,3072.7763700,-1803.9962200,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3076.4294400,-1804.1547900,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3076.5622600,-1801.4398200,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3076.9455600,-1795.9879200,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3076.7731900,-1798.6925000,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3080.1291500,-1804.3604700,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3080.2766100,-1801.6195100,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3080.4055200,-1798.9017300,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3080.5756800,-1796.1660200,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(1418,3080.6733400,-1796.2005600,7.0516000,0.0000000,0.0000000,-2.6999900); //
CreateDynamicObject(1418,3084.0520000,-1796.3532700,7.0516000,0.0000000,0.0000000,-2.6999900); //
CreateDynamicObject(1418,3085.9675300,-1792.0734900,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3085.8527800,-1794.6624800,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3080.8972200,-1797.8923300,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3080.7607400,-1801.3599900,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3080.5959500,-1804.8673100,7.0516000,0.0000000,0.0000000,-93.1800200); //
CreateDynamicObject(1418,3069.7998000,-1797.3897700,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3069.7128900,-1799.3479000,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(1418,3069.4755900,-1805.5537100,7.0516000,0.0000000,0.0000000,-92.6400200); //
CreateDynamicObject(2395,3072.7795400,-1804.7329100,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3076.4746100,-1804.9314000,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(2395,3080.0441900,-1805.1687000,6.3402000,-90.1800000,324.6610100,501.7339200); //
CreateDynamicObject(1418,3080.5336900,-1806.1881100,7.0516000,0.0000000,0.0000000,-93.1800200); //
CreateDynamicObject(19355,3070.9672900,-1807.3933100,7.7884700,0.0000000,0.0000000,-92.4600400); //
CreateDynamicObject(19355,3074.1355000,-1807.5197800,7.7884700,0.0000000,0.0000000,-92.4600400); //
CreateDynamicObject(19355,3077.2783200,-1807.6684600,7.7884700,0.0000000,0.0000000,-92.4600400); //
CreateDynamicObject(19355,3078.9318800,-1807.7465800,7.7884700,0.0000000,0.0000000,-92.4600400); //
CreateDynamicObject(18653,3085.7983400,-1796.3783000,7.6787400,0.0000000,0.0000000,-44.5800000); //
CreateDynamicObject(18654,3086.6882300,-1776.3548600,7.7701000,0.0000000,0.0000000,36.7199900); //
CreateDynamicObject(18655,3066.7827100,-1775.5639600,7.4804400,0.0000000,0.0000000,134.9999800); //
CreateDynamicObject(18654,3065.8779300,-1795.3942900,7.7701000,0.0000000,0.0000000,218.3398700); //
CreateDynamicObject(2207,3087.0034200,-1785.5929000,8.3728800,0.0000000,0.0000000,-93.4800000); //
CreateDynamicObject(14820,3087.1958000,-1786.5244100,9.1451400,0.0000000,0.0000000,-92.4600800); //
CreateDynamicObject(16151,3075.7224100,-1806.4952400,6.6358000,0.0000000,0.0000000,-91.2600000); //
CreateDynamicObject(1215,3069.6552700,-1803.8253200,6.2758800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3069.7751500,-1801.1044900,6.2286400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3078.8793900,-1796.1506300,6.2875600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3072.9084500,-1795.8419200,6.2902400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3062.6425800,-1803.4007600,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3063.0078100,-1795.2985800,6.2767100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2799,3072.4633800,-1799.2595200,7.1596400,0.0000000,0.0000000,82.3200000); //
CreateDynamicObject(2799,3075.0913100,-1801.1004600,7.1596400,0.0000000,0.0000000,12.9600000); //
CreateDynamicObject(2799,3078.0627400,-1801.2703900,7.1596400,0.0000000,0.0000000,-37.2000200); //
CreateDynamicObject(2799,3075.0913100,-1801.1004600,7.1596400,0.0000000,0.0000000,12.9600000); //
CreateDynamicObject(2799,3076.1096200,-1797.8549800,7.1596400,0.0000000,0.0000000,83.6399800); //
CreateDynamicObject(1703,3080.3488800,-1797.5358900,6.2856300,0.0000000,0.0000000,-94.0199900); //
CreateDynamicObject(705,3039.7522000,-1772.0258800,6.2577000,0.0000000,0.0000000,46.0800000); //
CreateDynamicObject(705,3062.1721200,-1773.3349600,6.2577000,0.0000000,0.0000000,-28.9799900); //
CreateDynamicObject(870,3033.8613300,-1834.5465100,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3036.5947300,-1834.5183100,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3039.4760700,-1834.6783400,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3042.2116700,-1834.9466600,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3044.1496600,-1834.9736300,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3044.5752000,-1832.5825200,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3049.8291000,-1831.3160400,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3049.6835900,-1833.8941700,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3049.4853500,-1835.7882100,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3051.9919400,-1836.2111800,6.2748400,0.0000000,0.0000000,92.3400000); //
CreateDynamicObject(870,3054.1630900,-1836.0766600,6.2748400,0.0000000,0.0000000,92.3400000); //
CreateDynamicObject(870,3056.1098600,-1836.3501000,6.2748400,0.0000000,0.0000000,92.3400000); //
CreateDynamicObject(870,3058.6425800,-1836.5456500,6.2748400,0.0000000,0.0000000,92.3400000); //
CreateDynamicObject(870,3060.6464800,-1836.7280300,6.2748400,0.0000000,0.0000000,92.3400000); //
CreateDynamicObject(870,3033.3425300,-1840.3685300,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3036.6135300,-1840.5224600,6.2748400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3040.0681200,-1840.4311500,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3043.4299300,-1840.7357200,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3046.9213900,-1841.0407700,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3049.7490200,-1841.0018300,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3052.2497600,-1841.3437500,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3054.6374500,-1841.3181200,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3057.0798300,-1841.5489500,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3059.8432600,-1841.7403600,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3062.6875000,-1841.9285900,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3065.5034200,-1842.3377700,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3068.1928700,-1842.5406500,6.2748400,0.0000000,0.0000000,63.4200000); //
CreateDynamicObject(870,3060.3430200,-1816.2504900,6.2671100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3057.6467300,-1814.4388400,6.2679000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3072.6413600,-1819.0432100,6.2657600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3076.2468300,-1816.4434800,6.2676500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3069.4150400,-1815.0338100,6.2685600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3065.7270500,-1813.6606400,6.2691600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3064.4489700,-1816.9849900,6.2683500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3076.0034200,-1822.4409200,6.2674700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3068.8054200,-1820.2970000,6.2673700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3060.6745600,-1821.0129400,6.2668400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3060.7788100,-1812.6302500,6.2731500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,3058.0595700,-1818.1044900,6.2719600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2873.3203100,-1822.8980700,4.6956600,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2882.8557100,-1824.5594500,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2892.3444800,-1826.1436800,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2901.7353500,-1827.6746800,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2911.2700200,-1829.2281500,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2920.7382800,-1830.7860100,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2930.2099600,-1832.3436300,-5.7235900,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2939.6870100,-1833.8409400,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2949.1208500,-1835.4061300,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2958.5786100,-1836.9210200,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2965.9052700,-1838.1400100,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2965.8137200,-1838.1198700,-5.8061300,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2958.5786100,-1836.9210200,-5.4350700,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2949.0900900,-1835.3752400,-5.7462200,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2939.6870100,-1833.8409400,-5.5573700,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2930.2099600,-1832.3436300,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2920.7231400,-1830.7990700,-5.7367100,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2911.2700200,-1829.2281500,-5.6496600,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2902.0671400,-1827.7264400,-5.6496600,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2892.6032700,-1826.2131300,-5.9588500,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2883.6630900,-1824.8739000,-5.9588500,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2967.5512700,-1812.4923100,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2958.0681200,-1810.9725300,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2948.6445300,-1809.3938000,4.4717000,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2939.3361800,-1807.9189500,-5.7493600,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2929.8571800,-1806.5002400,-5.9452500,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2920.3317900,-1805.0666500,-5.6209500,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2910.8002900,-1803.6578400,-5.1542700,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2901.3498500,-1802.2323000,-3.9066600,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2891.8720700,-1800.8579100,-4.5982900,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2882.4013700,-1799.5916700,-5.9992900,0.0000000,0.0000000,82.1847700); //
CreateDynamicObject(19377,2872.8906300,-1798.3671900,4.4717000,0.0000000,0.0000000,82.7999600); //
CreateDynamicObject(19377,2967.5512700,-1812.4923100,-5.4541600,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2958.0881300,-1810.9742400,-5.2598500,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2948.6445300,-1809.3938000,-5.2024200,0.0000000,0.0000000,80.7600000); //
CreateDynamicObject(19377,2939.3361800,-1807.9189500,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2929.8571800,-1806.5002400,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2920.3317900,-1805.0666500,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2910.8002900,-1803.6578400,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2901.3498500,-1802.2323000,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2891.8720700,-1800.8579100,4.4717000,0.0000000,0.0000000,81.3599800); //
CreateDynamicObject(19377,2882.4013700,-1799.5916700,4.4717000,0.0000000,0.0000000,82.7999600); //
CreateDynamicObject(19370,3086.6225600,-1852.4970700,6.2086000,-0.4800000,-89.9398900,-3.0600000); //
CreateDynamicObject(19370,3090.0585900,-1852.6842000,6.2086000,-0.4800000,-89.9398900,-3.0600000); //
CreateDynamicObject(19370,3090.3947800,-1849.5024400,6.2086000,-0.4800000,-89.9398900,86.3400000); //
CreateDynamicObject(19370,3093.5017100,-1849.5289300,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3097.0024400,-1849.7453600,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(660,3094.5334500,-1846.6488000,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3094.8867200,-1843.4085700,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(660,3095.0856900,-1841.0549300,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19370,3104.0175800,-1850.0494400,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(660,3093.9045400,-1852.6352500,6.2599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19370,3103.7773400,-1853.2774700,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3107.4592300,-1850.2554900,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3107.2880900,-1853.4648400,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3104.1687000,-1846.8641400,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3107.6120600,-1847.0426000,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3110.7370600,-1853.6049800,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3110.8491200,-1850.4246800,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(19370,3110.9726600,-1847.2034900,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(3499,3095.1159700,-1853.5540800,-1.0835000,-1.9800000,66.9000000,-1.9800000); //
CreateDynamicObject(3499,3103.9394500,-1853.7655000,3.1446000,-6.7800000,61.3800000,-4.6200000); //
CreateDynamicObject(3499,3095.6022900,-1845.6673600,-1.0835000,-1.9800000,66.9000000,-1.9800000); //
CreateDynamicObject(3499,3104.3627900,-1846.2343800,3.1446000,-6.7800000,61.3800000,-9.7200000); //
CreateDynamicObject(19370,3100.5097700,-1849.8974600,6.2086000,-0.4800000,-89.9398900,-2.2800000); //
CreateDynamicObject(3850,3097.2341300,-1848.1867700,6.7995000,0.0000000,0.0000000,-92.5200000); //
CreateDynamicObject(3850,3100.6833500,-1848.3745100,6.7995000,0.0000000,0.0000000,-92.5200000); //
CreateDynamicObject(3850,3097.0007300,-1851.2624500,6.7995000,0.0000000,0.0000000,-92.5200000); //
CreateDynamicObject(3850,3100.4746100,-1851.4408000,6.7995000,0.0000000,0.0000000,-92.5200000); //
CreateDynamicObject(3850,3102.0961900,-1853.1722400,6.7995000,0.0000000,0.0000000,-2.7000100); //
CreateDynamicObject(3850,3103.7644000,-1854.8941700,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3107.1853000,-1855.0491900,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3110.5849600,-1855.1572300,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3112.4694800,-1853.5147700,6.7995000,0.0000000,0.0000000,-2.2799700); //
CreateDynamicObject(3850,3112.6081500,-1850.0567600,6.7995000,0.0000000,0.0000000,-2.2799700); //
CreateDynamicObject(3850,3112.7048300,-1847.4383500,6.7995000,0.0000000,0.0000000,-2.2799700); //
CreateDynamicObject(3850,3110.9865700,-1845.6966600,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3107.5441900,-1845.5507800,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3104.2890600,-1845.3906300,6.7995000,0.0000000,0.0000000,-92.5199800); //
CreateDynamicObject(3850,3102.4877900,-1846.7609900,6.7995000,0.0000000,0.0000000,-2.7000100); //
CreateDynamicObject(3850,3095.1384300,-1852.9273700,6.7995000,0.0000000,0.0000000,-4.1400100); //
CreateDynamicObject(3850,3095.5710400,-1846.3773200,6.7995000,0.0000000,0.0000000,-4.1400100); //
CreateDynamicObject(3850,3095.8095700,-1842.8923300,6.7995000,0.0000000,0.0000000,-4.1400100); //
CreateDynamicObject(3850,3095.8454600,-1839.4664300,6.7995000,0.0000000,0.0000000,3.1199900); //
CreateDynamicObject(1215,3095.3842800,-1848.0629900,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3095.1696800,-1851.2266800,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3088.8772000,-1847.7141100,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3091.8920900,-1851.0954600,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3091.6643100,-1854.3813500,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3088.6079100,-1850.9934100,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3084.8857400,-1854.0987500,6.2764200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3112.2473100,-1855.1243900,6.8236000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3112.5490700,-1846.0015900,6.8096000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3102.8212900,-1845.5401600,6.8236000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,3102.2512200,-1854.7263200,6.8236000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1703,3109.0859400,-1853.1323200,6.2963300,0.0000000,0.0000000,98.1000100); //
CreateDynamicObject(1703,3108.8867200,-1849.8335000,6.2963300,0.0000000,0.0000000,80.0400000); //
CreateDynamicObject(1817,3110.0454100,-1849.9094200,6.2902200,0.0000000,0.0000000,-92.2800400); //
CreateDynamicObject(644,3107.7031300,-1850.2879600,6.3007100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2866.3037100,-1806.4917000,9.9288000,-0.3600000,80.5801000,-10.6800000); //
CreateDynamicObject(19377,2865.1445300,-1812.5576200,9.9608000,-0.3600000,80.5801000,-10.6800000); //
CreateDynamicObject(19377,2875.2468300,-1814.4320100,9.5356000,-0.3000000,104.5202000,-10.6800000); //
CreateDynamicObject(19377,2876.3627900,-1808.3909900,9.5196000,-0.3000000,104.5202000,-10.6800000); //
//casa premium 2
CreateDynamicObject(19543,-2354.6377000,-1630.3139600,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2339.7688000,-1630.5035400,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2324.9875500,-1630.5357700,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2310.0376000,-1630.5866700,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2295.1159700,-1630.6870100,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2286.9563000,-1630.7364500,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2321.2978500,-1591.9356700,483.0638700,0.0000000,0.0000000,89.8800100); //
CreateDynamicObject(19543,-2286.8898900,-1600.9862100,483.0638700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19543,-2323.4997600,-1674.1276900,483.0638700,0.0000000,0.0000000,45.7200000); //
CreateDynamicObject(19543,-2313.9951200,-1664.2667200,483.0638700,0.0000000,0.0000000,45.7200000); //
CreateDynamicObject(19543,-2311.3308100,-1657.6921400,483.0638700,0.0000000,0.0000000,69.1200100); //
CreateDynamicObject(19543,-2314.3689000,-1664.0336900,483.0638700,0.0000000,0.0000000,61.5600100); //
CreateDynamicObject(1660,-2297.7558600,-1706.3966100,478.6635100,-0.4600000,0.0000000,42.9600000); //
CreateDynamicObject(1660,-2293.9987800,-1702.7310800,478.6635100,-0.4600000,0.0000000,44.9400000); //
CreateDynamicObject(1660,-2290.2141100,-1698.8969700,478.6635100,-0.4600000,0.0000000,45.9000100); //
CreateDynamicObject(1660,-2286.5512700,-1695.0926500,478.6635100,-0.4600000,0.0000000,46.3200000); //
CreateDynamicObject(1660,-2282.9094200,-1691.2771000,478.6635100,-0.4600000,0.0000000,46.3200000); //
CreateDynamicObject(3749,-2298.8288600,-1690.7430400,488.6417200,0.0000000,0.0000000,44.9999900); //
CreateDynamicObject(987,-2314.1284200,-1693.4024700,483.0064100,0.0000000,0.0000000,-22.0200000); //
CreateDynamicObject(987,-2322.7710000,-1685.1970200,483.0064100,0.0000000,0.0000000,-43.4400000); //
CreateDynamicObject(987,-2331.3396000,-1676.9143100,483.0064100,0.0000000,0.0000000,-44.0400000); //
CreateDynamicObject(987,-2339.9675300,-1668.6274400,483.0064100,0.0000000,0.0000000,-44.0400000); //
CreateDynamicObject(987,-2345.0725100,-1663.6599100,483.0064100,0.0000000,0.0000000,-44.0400000); //
CreateDynamicObject(987,-2350.7929700,-1653.1680900,483.0064100,0.0000000,0.0000000,-61.9200200); //
CreateDynamicObject(987,-2356.3942900,-1642.6547900,483.0064100,0.0000000,0.0000000,-61.9200200); //
CreateDynamicObject(987,-2360.9460400,-1634.2777100,483.0064100,0.0000000,0.0000000,-61.9200200); //
CreateDynamicObject(987,-2358.0214800,-1622.7804000,483.0064100,0.0000000,0.0000000,-103.3200800); //
CreateDynamicObject(987,-2355.1914100,-1611.1589400,483.0064100,0.0000000,0.0000000,-103.3200800); //
CreateDynamicObject(987,-2352.4533700,-1599.5105000,483.0064100,0.0000000,0.0000000,-103.3200800); //
CreateDynamicObject(987,-2347.8049300,-1588.4725300,483.0064100,0.0000000,0.0000000,-112.6801000); //
CreateDynamicObject(987,-2343.2348600,-1577.3992900,483.0064100,0.0000000,0.0000000,-112.6801000); //
CreateDynamicObject(987,-2339.9755900,-1569.7059300,483.0064100,0.0000000,0.0000000,-112.6801000); //
CreateDynamicObject(987,-2328.0590800,-1569.8405800,483.0064100,0.0000000,0.0000000,-180.7800900); //
CreateDynamicObject(987,-2316.1430700,-1569.8275100,483.0064100,0.0000000,0.0000000,-180.0601200); //
CreateDynamicObject(987,-2304.2648900,-1569.7937000,483.0064100,0.0000000,0.0000000,-180.0601200); //
CreateDynamicObject(987,-2292.2946800,-1569.8614500,483.0064100,0.0000000,0.0000000,-180.0601200); //
CreateDynamicObject(987,-2280.2988300,-1569.8999000,483.0064100,0.0000000,0.0000000,-180.0601200); //
CreateDynamicObject(987,-2279.3786600,-1581.7575700,483.0064100,0.0000000,0.0000000,-264.9598400); //
CreateDynamicObject(987,-2279.5336900,-1593.6879900,483.0064100,0.0000000,0.0000000,-269.9997600); //
CreateDynamicObject(987,-2280.2976100,-1659.5057400,483.0064100,0.0000000,0.0000000,-359.2198200); //
CreateDynamicObject(987,-2281.1523400,-1665.0476100,483.0064100,0.0000000,0.0000000,-278.5197800); //
CreateDynamicObject(987,-2285.7849100,-1676.1193800,483.0064100,0.0000000,0.0000000,-293.1597600); //
CreateDynamicObject(987,-2292.2243700,-1686.1657700,483.0064100,0.0000000,0.0000000,-302.3996900); //
CreateDynamicObject(4682,-2299.2851600,-1590.4212600,465.8866900,89.8797000,87.9598000,2.8200000); //
CreateDynamicObject(4682,-2301.0031700,-1589.1646700,465.6976300,89.8797000,87.9598000,90.8400000); //
CreateDynamicObject(4682,-2341.6386700,-1588.0764200,467.1168500,89.8797000,87.9598000,90.3000200); //
CreateDynamicObject(4682,-2298.9443400,-1630.8579100,466.6528000,89.8797000,87.9598000,2.2200000); //
CreateDynamicObject(4682,-2298.8054200,-1640.8723100,466.6528000,89.8797000,87.9598000,1.8000000); //
CreateDynamicObject(4682,-2305.5795900,-1671.4293200,464.6516700,89.8797000,87.9598000,-23.4600000); //
CreateDynamicObject(19364,-2280.0432100,-1663.2636700,481.2834200,0.0000000,0.0000000,-21.6599900); //
CreateDynamicObject(19364,-2281.2514600,-1666.0767800,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2282.6149900,-1668.9160200,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2283.9794900,-1671.8002900,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2285.1479500,-1674.2658700,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2286.4777800,-1677.1147500,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2287.6831100,-1679.7497600,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2287.6831100,-1679.7497600,481.3034100,0.0000000,0.0000000,49.0800000); //
CreateDynamicObject(19364,-2287.6831100,-1679.7497600,481.2834200,0.0000000,0.0000000,-25.4399900); //
CreateDynamicObject(19364,-2287.5227100,-1681.8693800,481.3104900,0.0000000,0.0000000,-41.7000000); //
CreateDynamicObject(4682,-2307.6945800,-1672.8693800,466.7327900,89.8797000,87.9598000,-132.4199500); //
CreateDynamicObject(4682,-2335.3022500,-1645.0952100,466.7327900,89.8797000,87.9598000,-132.4199500); //
CreateDynamicObject(640,-2305.7751500,-1691.4737500,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2308.9025900,-1690.6628400,483.7399900,0.0000000,0.0000000,122.3999900); //
CreateDynamicObject(640,-2297.0380900,-1682.7419400,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2299.6467300,-1678.0252700,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2302.2924800,-1673.3062700,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(1251,-2302.1052200,-1686.0983900,483.0546900,0.0000000,0.0000000,27.4800000); //
CreateDynamicObject(1251,-2305.2099600,-1680.1669900,483.0546900,0.0000000,0.0000000,27.4800000); //
CreateDynamicObject(1251,-2308.2480500,-1674.3397200,483.0546900,0.0000000,0.0000000,27.4800000); //
CreateDynamicObject(640,-2301.3740200,-1670.1163300,483.7399900,0.0000000,0.0000000,-60.9600000); //
CreateDynamicObject(1251,-2309.3127400,-1672.2990700,483.0546900,0.0000000,0.0000000,27.4800000); //
CreateDynamicObject(5721,-2303.5759300,-1686.9598400,477.7448100,0.0000000,0.0000000,44.9399700); //
CreateDynamicObject(5721,-2309.8103000,-1677.4166300,477.7448100,0.0000000,0.0000000,28.6199700); //
CreateDynamicObject(5721,-2317.8125000,-1662.8139600,477.7448100,0.0000000,0.0000000,28.6199700); //
CreateDynamicObject(5721,-2317.4311500,-1678.8569300,477.7448100,0.0000000,0.0000000,45.1199800); //
CreateDynamicObject(5721,-2326.4848600,-1669.7182600,477.7448100,0.0000000,0.0000000,45.1199800); //
CreateDynamicObject(5721,-2308.9853500,-1687.4400600,477.7448100,0.0000000,0.0000000,45.1199800); //
CreateDynamicObject(3458,-2323.7817400,-1680.2441400,484.6105000,0.0000000,0.0000000,-43.8600000); //
CreateDynamicObject(1251,-2314.9072300,-1691.3090800,483.0546900,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(1251,-2320.0561500,-1686.2707500,483.0546900,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(1251,-2325.1152300,-1681.4292000,483.0546900,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(1251,-2330.1691900,-1676.5336900,483.0546900,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(1251,-2335.2204600,-1671.6948200,483.0546900,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(640,-2311.3637700,-1692.1953100,483.7399900,0.0000000,0.0000000,122.1600600); //
CreateDynamicObject(640,-2307.5105000,-1663.9785200,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2310.1506300,-1659.2686800,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2312.7661100,-1654.5900900,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2312.7661100,-1654.5900900,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2313.3972200,-1653.4530000,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(640,-2337.1076700,-1667.4327400,483.7399900,0.0000000,0.0000000,-45.6000200); //
CreateDynamicObject(640,-2333.2663600,-1663.6894500,483.7399900,0.0000000,0.0000000,-45.6000200); //
CreateDynamicObject(640,-2330.3210400,-1660.7485400,483.7399900,0.0000000,0.0000000,-43.4400100); //
CreateDynamicObject(718,-2303.2656300,-1684.1845700,482.9276100,0.0000000,0.0000000,29.4000000); //
CreateDynamicObject(718,-2306.8222700,-1677.2622100,482.9276100,0.0000000,0.0000000,28.5000000); //
CreateDynamicObject(718,-2310.7627000,-1669.8464400,482.9276100,0.0000000,0.0000000,30.9600000); //
CreateDynamicObject(718,-2315.1892100,-1662.9173600,482.9276100,0.0000000,0.0000000,33.6600100); //
CreateDynamicObject(718,-2319.7033700,-1656.5483400,482.9276100,0.0000000,0.0000000,36.7200100); //
CreateDynamicObject(1251,-2304.8430200,-1668.9475100,483.0147100,0.0000000,0.0000000,28.3200000); //
CreateDynamicObject(2395,-2303.3403300,-1670.8178700,483.1346100,-90.1800000,5.2800000,34.2210000); //
CreateDynamicObject(2395,-2300.0881300,-1669.0074500,483.1346100,-90.1800000,5.2800000,34.2210000); //
CreateDynamicObject(640,-2302.9309100,-1667.0484600,483.7399900,0.0000000,0.0000000,-60.9000100); //
CreateDynamicObject(640,-2306.3476600,-1666.0677500,483.7399900,0.0000000,0.0000000,29.3400000); //
CreateDynamicObject(2395,-2296.8237300,-1667.2097200,483.1346100,-90.1800000,5.2800000,34.2210000); //
CreateDynamicObject(640,-2298.2094700,-1664.4386000,483.7399900,0.0000000,0.0000000,-60.9000100); //
CreateDynamicObject(640,-2296.6689500,-1667.5271000,483.7399900,0.0000000,0.0000000,-61.3800100); //
CreateDynamicObject(870,-2298.3833000,-1662.1207300,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2300.8398400,-1663.5726300,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2303.1347700,-1664.8214100,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2305.4799800,-1663.2995600,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2303.2038600,-1661.5501700,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2305.8183600,-1660.6546600,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2308.1442900,-1659.3547400,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2307.3305700,-1661.9780300,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2304.8718300,-1666.1400100,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2301.5617700,-1672.0806900,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3095,-2287.3129900,-1664.3674300,482.6364100,0.0000000,0.0000000,-7.6200000); //
CreateDynamicObject(3928,-2287.1589400,-1664.3851300,483.2012900,0.0000000,0.0000000,-7.4400000); //
CreateDynamicObject(2395,-2294.3657200,-1665.8270300,483.1346100,-90.1800000,5.2800000,22.3410000); //
CreateDynamicObject(2395,-2291.4111300,-1664.9538600,483.1346100,-90.1800000,5.2800000,9.6210000); //
CreateDynamicObject(640,-2293.9526400,-1662.4776600,483.7399900,0.0000000,0.0000000,-70.5600200); //
CreateDynamicObject(640,-2294.4816900,-1666.4787600,483.7399900,0.0000000,0.0000000,-64.6200500); //
CreateDynamicObject(1215,-2300.9567900,-1675.6323200,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2298.3713400,-1680.4368900,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2303.2836900,-1671.2624500,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2303.2836900,-1671.2624500,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2305.0307600,-1668.0339400,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2299.1030300,-1669.0128200,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2292.1980000,-1665.3525400,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2291.5705600,-1661.6688200,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2296.4853500,-1663.3804900,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2300.7751500,-1665.8881800,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2292.2863800,-1668.1821300,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2291.1091300,-1659.3997800,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2282.3029800,-1660.5865500,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2283.4599600,-1669.3660900,483.5411400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19849,-2304.3322800,-1599.4405500,483.0168200,-0.0600000,-0.0600000,0.1800000); //
CreateDynamicObject(19543,-2348.6828600,-1577.0264900,483.0638700,0.0000000,0.0000000,89.8800100); //
CreateDynamicObject(19854,-2305.0527300,-1596.5936300,483.0816000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19855,-2305.0507800,-1596.5808100,483.0685100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19371,-2316.6062000,-1607.0347900,485.4041100,0.0000000,0.0000000,90.2400100); //
CreateDynamicObject(19371,-2311.1972700,-1607.0852100,487.0955800,0.0000000,0.0000000,90.2400100); //
CreateDynamicObject(19398,-2313.8110400,-1607.0636000,485.3994100,0.0000000,0.0000000,88.8000400); //
CreateDynamicObject(19371,-2311.1779800,-1607.0904500,485.4041100,0.0000000,0.0000000,90.2400100); //
CreateDynamicObject(19371,-2314.0544400,-1607.0843500,487.9097600,0.0000000,0.0000000,89.2200400); //
CreateDynamicObject(19371,-2316.6062000,-1607.0347900,486.9509300,0.0000000,0.0000000,90.2400100); //
CreateDynamicObject(19384,-2313.8076200,-1607.1146200,485.3922100,0.0000000,0.0000000,89.7000000); //
CreateDynamicObject(19354,-2311.0568800,-1607.1344000,487.0809900,0.0000000,0.0000000,89.8800100); //
CreateDynamicObject(19354,-2316.4858400,-1607.0567600,486.9949000,0.0000000,0.0000000,89.3399900); //
CreateDynamicObject(19354,-2316.4711900,-1607.0708000,485.4082900,0.0000000,0.0000000,88.9200100); //
CreateDynamicObject(19354,-2314.0815400,-1607.0842300,487.8947100,0.0000000,0.0000000,89.2200000); //
CreateDynamicObject(19354,-2311.0637200,-1607.1532000,485.3883100,0.0000000,0.0000000,89.2200100); //
CreateDynamicObject(2566,-2312.1474600,-1609.2827100,484.3678000,0.0000000,0.0000000,-89.7000000); //
CreateDynamicObject(2817,-2313.3691400,-1610.2741700,483.7885100,0.0000000,0.0000000,-89.9399900); //
CreateDynamicObject(19174,-2309.6049800,-1610.7751500,485.8049300,0.0000000,0.0000000,-90.0600300); //
CreateDynamicObject(14521,-2315.2736800,-1611.3538800,483.9504100,0.0000000,0.0000000,-151.5000000); //
CreateDynamicObject(14556,-2316.6008300,-1608.0512700,485.1926900,0.0000000,0.0000000,-181.0800000); //
CreateDynamicObject(19354,-2315.3603500,-1608.6522200,485.3883100,0.0000000,0.0000000,179.2199400); //
CreateDynamicObject(19787,-2315.3242200,-1609.1868900,485.9697000,0.0000000,0.0000000,89.1630700); //
CreateDynamicObject(2568,-2312.8723100,-1607.7106900,483.7655900,0.0000000,0.0000000,-0.6600000); //
CreateDynamicObject(1714,-2311.6176800,-1609.2677000,483.8027300,0.0000000,0.0000000,169.3201600); //
CreateDynamicObject(19893,-2311.2292500,-1607.7918700,484.6166100,0.0000000,0.0000000,-16.7400000); //
CreateDynamicObject(2394,-2316.4328600,-1607.2668500,485.4049400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2394,-2316.4328600,-1607.2668500,484.5968300,0.0000000,0.0000000,179.3400100); //
CreateDynamicObject(1491,-2314.5966800,-1607.0190400,483.6431900,0.0000000,0.0000000,-1.7400000); //
CreateDynamicObject(1491,-2306.3613300,-1607.0822800,483.8031900,0.0000000,0.0000000,0.6600000); //
CreateDynamicObject(1491,-2300.8960000,-1607.0371100,483.8031900,0.0000000,0.0000000,0.6600000); //
CreateDynamicObject(2141,-2317.3383800,-1596.9968300,483.7825900,0.0000000,0.0000000,90.6600000); //
CreateDynamicObject(2637,-2309.7651400,-1598.0136700,484.2020000,0.0000000,0.0000000,88.5599800); //
CreateDynamicObject(19356,-2312.2522000,-1599.6114500,485.5267900,0.0000000,0.0000000,360.8625800); //
CreateDynamicObject(19356,-2316.5666500,-1601.4676500,485.5267900,0.0000000,0.0000000,269.5427900); //
CreateDynamicObject(19356,-2312.2971200,-1596.4010000,485.5267900,0.0000000,0.0000000,360.8625800); //
CreateDynamicObject(19356,-2310.6450200,-1594.8913600,485.5267900,0.0000000,0.0000000,269.9625900); //
CreateDynamicObject(19175,-2312.0979000,-1597.8758500,485.4580100,0.0000000,0.0000000,91.0200000); //
CreateDynamicObject(1739,-2308.2404800,-1597.3278800,484.6246900,0.0000000,0.0000000,3.6000000); //
CreateDynamicObject(1739,-2308.2990700,-1598.5119600,484.6246900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1739,-2309.7656300,-1596.0240500,484.6246900,0.0000000,0.0000000,94.9800000); //
CreateDynamicObject(1739,-2311.5180700,-1597.3606000,484.6246900,0.0000000,0.0000000,171.1200000); //
CreateDynamicObject(1739,-2311.5112300,-1598.8012700,484.6246900,0.0000000,0.0000000,195.6599900); //
CreateDynamicObject(1739,-2310.0385700,-1599.9216300,484.6246900,0.0000000,0.0000000,254.1000100); //
CreateDynamicObject(1491,-2295.2133800,-1591.9941400,483.8031900,0.0000000,0.0000000,0.6600000); //
CreateDynamicObject(2842,-2314.1906700,-1600.1263400,483.7889100,0.0000000,0.0000000,-89.0399900); //
CreateDynamicObject(2842,-2314.2150900,-1598.3154300,483.7889100,0.0000000,0.0000000,-89.0399900); //
CreateDynamicObject(2842,-2314.2487800,-1596.5073200,483.7889100,0.0000000,0.0000000,-89.0399900); //
CreateDynamicObject(2842,-2314.2753900,-1594.6870100,483.7889100,0.0000000,0.0000000,-89.0399900); //
CreateDynamicObject(19368,-2301.0263700,-1593.5532200,486.8613600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2299.4021000,-1601.3513200,485.5247500,0.0000000,0.0000000,-88.3200100); //
CreateDynamicObject(19368,-2301.0073200,-1599.8828100,485.5247500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2298.4526400,-1601.3255600,485.5247500,0.0000000,0.0000000,-88.3200100); //
CreateDynamicObject(19368,-2296.9299300,-1599.7557400,485.5247500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2296.9272500,-1593.4188200,486.6789200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2296.9272500,-1593.4188200,485.5247500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2296.9169900,-1596.5946000,488.1113000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2296.9299300,-1599.7557400,487.0747100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2298.4526400,-1601.3255600,487.0679000,0.0000000,0.0000000,-88.3200100); //
CreateDynamicObject(19368,-2299.4021000,-1601.3513200,486.9510800,0.0000000,0.0000000,-88.3200100); //
CreateDynamicObject(19368,-2301.0041500,-1599.8630400,486.8824800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2301.0263700,-1593.5532200,485.5247500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19396,-2296.9184600,-1596.5856900,485.5271000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2300.9626500,-1596.6884800,488.2317500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1491,-2296.9196800,-1595.8048100,483.7632100,0.0000000,0.0000000,-89.9399300); //
CreateDynamicObject(2526,-2298.7243700,-1592.5334500,483.7879300,0.0000000,0.0000000,0.5400000); //
CreateDynamicObject(2521,-2297.4577600,-1594.6572300,483.7895200,0.0000000,0.0000000,-91.9199900); //
CreateDynamicObject(2180,-2299.2558600,-1600.8023700,483.7883300,0.0000000,0.0000000,1.3800000); //
CreateDynamicObject(1671,-2298.8710900,-1599.4449500,484.2068800,0.0000000,0.0000000,0.5400000); //
CreateDynamicObject(19034,-2298.0341800,-1600.7441400,484.6412000,0.0000000,0.0000000,116.8200000); //
CreateDynamicObject(2709,-2299.6186500,-1600.9903600,484.7952900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(15036,-2316.5041500,-1594.2465800,484.9111900,0.0000000,0.0000000,-89.8200100); //
CreateDynamicObject(1825,-2315.9848600,-1599.4600800,483.7888800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1670,-2316.1572300,-1599.3783000,484.6677600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19806,-2309.8205600,-1598.0065900,487.1128800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2846,-2300.3293500,-1592.9434800,483.7881800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19368,-2301.0114700,-1596.7334000,485.5247500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1704,-2304.9924300,-1593.8497300,483.7877800,0.0000000,0.0000000,57.4200100); //
CreateDynamicObject(14455,-2301.1699200,-1597.0467500,485.4474200,0.0000000,0.0000000,-270.2997700); //
CreateDynamicObject(1817,-2302.5876500,-1600.1645500,483.7875700,0.0000000,0.0000000,90.4800100); //
CreateDynamicObject(1703,-2305.0012200,-1600.7364500,483.7479900,0.0000000,0.0000000,90.2400000); //
CreateDynamicObject(1704,-2305.0136700,-1596.7165500,483.7877800,0.0000000,0.0000000,110.9399900); //
CreateDynamicObject(19787,-2301.1193800,-1599.6416000,485.5068400,0.0000000,0.0000000,-91.0199900); //
CreateDynamicObject(2249,-2302.9448200,-1599.0949700,484.7124000,0.0000000,0.0000000,-41.4000100); //
CreateDynamicObject(2811,-2301.3889200,-1601.1977500,483.7878400,0.0000000,0.0000000,70.7400100); //
CreateDynamicObject(2251,-2311.9179700,-1595.4079600,484.6152000,0.0000000,0.0000000,0.7213500); //
CreateDynamicObject(19356,-2305.6355000,-1599.7045900,483.4677400,0.0000000,0.0000000,360.3826900); //
CreateDynamicObject(2195,-2292.5266100,-1598.8519300,484.3927000,0.0000000,0.0000000,0.5101000); //
CreateDynamicObject(19173,-2292.2387700,-1600.3680400,485.8851300,0.0000000,0.0000000,-89.7600300); //
CreateDynamicObject(644,-2292.6872600,-1606.6356200,484.0165100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2195,-2292.6591800,-1601.9019800,484.3927000,0.0000000,0.0000000,0.5101000); //
CreateDynamicObject(2315,-2292.7050800,-1601.1085200,483.7877500,0.0000000,0.0000000,89.2200200); //
CreateDynamicObject(1281,-2314.5334500,-1585.4095500,483.8089900,0.0000000,0.0000000,-53.4600000); //
CreateDynamicObject(718,-2315.5998500,-1576.1967800,482.7898900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(718,-2293.4880400,-1575.9367700,482.7898900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1642,-2311.0349100,-1576.2945600,482.9830900,0.0000000,0.0000000,47.3400000); //
CreateDynamicObject(1642,-2301.0275900,-1576.2340100,483.0061000,0.0000000,0.0000000,-5.5200000); //
CreateDynamicObject(1598,-2307.3103000,-1580.9627700,482.9387200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(6066,-2353.6655300,-1622.0623800,485.3059700,0.0000000,0.0000000,164.0999800); //
CreateDynamicObject(1645,-2308.2131300,-1576.2661100,483.2662000,0.0000000,0.0000000,44.5800000); //
CreateDynamicObject(1645,-2304.7680700,-1576.2662400,483.2662000,0.0000000,0.0000000,-42.8399900); //
CreateDynamicObject(1645,-2296.1296400,-1576.9796100,483.2662000,0.0000000,0.0000000,-36.8999700); //
CreateDynamicObject(2270,-2301.6059600,-1598.2508500,485.2216800,0.0000000,0.0000000,-87.5400000); //
CreateDynamicObject(2269,-2309.6604000,-1592.5483400,485.5674400,0.0000000,0.0000000,359.7989800); //
CreateDynamicObject(19865,-2351.5546900,-1628.5681200,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(19865,-2346.7551300,-1629.9228500,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(19865,-2341.9585000,-1631.2699000,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(19865,-2348.6435500,-1617.5810500,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(19865,-2343.7990700,-1618.9052700,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(19865,-2338.9751000,-1620.2525600,482.3445100,0.0000000,0.0000000,-105.5399900); //
CreateDynamicObject(718,-2339.0910600,-1632.9073500,482.9276100,0.0000000,0.0000000,36.7200100); //
CreateDynamicObject(718,-2335.5170900,-1620.6236600,482.9276100,0.0000000,0.0000000,107.9400000); //
CreateDynamicObject(19865,-2338.8818400,-1629.5726300,482.3445100,0.0000000,0.0000000,-16.0199800); //
CreateDynamicObject(2627,-2348.1940900,-1626.8564500,483.0597200,0.0000000,0.0000000,104.3400000); //
CreateDynamicObject(2628,-2344.3134800,-1628.1439200,483.0605800,0.0000000,0.0000000,165.2997400); //
CreateDynamicObject(2629,-2346.4133300,-1620.8508300,483.0603900,0.0000000,0.0000000,4.3800000); //
CreateDynamicObject(2630,-2343.7778300,-1621.3413100,483.0600300,0.0000000,0.0000000,166.2600400); //
CreateDynamicObject(2630,-2341.2883300,-1629.0471200,483.0600300,0.0000000,0.0000000,342.7200600); //
CreateDynamicObject(2632,-2341.2316900,-1622.0119600,483.0602400,0.0000000,0.0000000,87.5399900); //
CreateDynamicObject(2631,-2348.9775400,-1621.5634800,483.0606100,0.0000000,0.0000000,129.7199700); //
CreateDynamicObject(19608,-2345.8073700,-1591.9086900,484.3854700,0.0000000,0.0000000,66.8400300); //
CreateDynamicObject(19356,-2342.8513200,-1590.3220200,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(19356,-2344.1503900,-1593.2467000,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(19356,-2344.9431200,-1595.1494100,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(19356,-2346.9697300,-1595.9476300,482.6731900,0.0000000,0.0000000,67.0800700); //
CreateDynamicObject(19356,-2348.1084000,-1595.4493400,482.6731900,0.0000000,0.0000000,67.0800700); //
CreateDynamicObject(19356,-2343.6835900,-1588.3436300,482.6731900,0.0000000,0.0000000,67.0800700); //
CreateDynamicObject(19356,-2344.7722200,-1587.8576700,482.6731900,0.0000000,0.0000000,67.0800700); //
CreateDynamicObject(19356,-2346.7783200,-1588.7170400,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(19356,-2348.0253900,-1591.6485600,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(19356,-2348.7431600,-1593.4085700,482.6731900,0.0000000,0.0000000,-23.1600000); //
CreateDynamicObject(1215,-2345.4716800,-1596.7699000,483.0598100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2342.0620100,-1588.8877000,483.0598100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2338.1586900,-1627.2006800,483.3095700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2336.5947300,-1620.9885300,483.3095700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2308.3818400,-1615.7410900,483.4681100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2301.6787100,-1615.0023200,483.4681100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2306.5874000,-1609.4204100,483.4681100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2304.8188500,-1609.4696000,483.4681100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2312.7849100,-1577.7257100,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2312.7424300,-1584.6948200,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2298.4931600,-1584.6203600,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2298.5217300,-1577.6536900,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2295.5556600,-1579.5921600,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2295.5268600,-1582.7692900,482.8931900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2317.4794900,-1688.5288100,483.1073900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2322.5271000,-1683.7711200,483.1041600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2327.5991200,-1678.8629200,483.1140700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2332.4665500,-1673.8115200,483.1064100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2337.4514200,-1669.1112100,483.1158100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2312.1645500,-1693.5831300,483.1025400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2303.7146000,-1683.0314900,483.1064100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2300.5996100,-1689.0385700,483.1264600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2307.3276400,-1676.2050800,483.1441700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2311.3161600,-1668.8396000,483.1033300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2315.8996600,-1661.9671600,483.1017500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2320.3852500,-1655.6016800,483.1040000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-2314.8676800,-1652.3407000,483.1346100,-90.1800000,5.2800000,101.0010200); //
CreateDynamicObject(2395,-2315.2075200,-1648.6629600,483.1346100,-90.1800000,5.2800000,101.0010200); //
CreateDynamicObject(2395,-2315.5744600,-1645.0194100,483.1346100,-90.1800000,5.2800000,101.0010200); //
CreateDynamicObject(2395,-2315.8554700,-1642.5224600,483.1346100,-90.1800000,5.2800000,78.9810300); //
CreateDynamicObject(2395,-2314.8159200,-1638.9797400,483.1346100,-90.1800000,5.2800000,78.9810300); //
CreateDynamicObject(2395,-2313.9401900,-1636.1616200,483.1346100,-90.1800000,5.2800000,63.6210300); //
CreateDynamicObject(2395,-2312.0014600,-1632.9881600,483.1346100,-90.1800000,5.2800000,63.6210300); //
CreateDynamicObject(2395,-2310.0466300,-1629.8176300,483.1346100,-90.1800000,5.2800000,63.6210300); //
CreateDynamicObject(2395,-2308.1191400,-1626.6947000,483.1346100,-90.1800000,5.2800000,63.6210300); //
CreateDynamicObject(2395,-2306.3740200,-1623.5998500,483.1346100,-90.1800000,5.2800000,81.5010300); //
CreateDynamicObject(2395,-2305.4851100,-1620.0023200,483.1346100,-90.1800000,5.2800000,81.5010300); //
CreateDynamicObject(2395,-2298.1613800,-1600.9649700,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2395,-2304.5004900,-1612.7713600,483.1346100,-90.1800000,5.2800000,94.9410600); //
CreateDynamicObject(2395,-2304.4506800,-1609.1048600,483.1346100,-90.1800000,5.2800000,94.9410600); //
CreateDynamicObject(1215,-2315.8059100,-1642.4329800,483.0585000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2318.7695300,-1642.1101100,483.0581100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2313.8398400,-1636.1597900,483.0585000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2316.7316900,-1635.0495600,483.0581100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2312.7710000,-1628.6223100,483.0580700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2310.1403800,-1630.3725600,483.0585600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2306.3276400,-1623.6955600,483.0587500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2309.2807600,-1622.6705300,483.0583500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2317.7497600,-1652.6749300,483.0614900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2314.8466800,-1651.1275600,483.0618900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-2315.1210900,-1631.9405500,483.1346100,-90.1800000,5.2800000,153.7409800); //
CreateDynamicObject(2395,-2318.2441400,-1630.0120800,483.1346100,-90.1800000,5.2800000,153.7409800); //
CreateDynamicObject(2395,-2321.3957500,-1628.1883500,483.1346100,-90.1800000,5.2800000,164.5409500); //
CreateDynamicObject(2395,-2324.9106400,-1626.8737800,483.1346100,-90.1800000,5.2800000,164.5409500); //
CreateDynamicObject(2395,-2328.3601100,-1625.6175500,483.1346100,-90.1800000,5.2800000,167.7209000); //
CreateDynamicObject(2395,-2331.9038100,-1624.5140400,483.1346100,-90.1800000,5.2800000,167.7209000); //
CreateDynamicObject(2395,-2334.8405800,-1623.5842300,483.1346100,-90.1800000,5.2800000,167.7209000); //
CreateDynamicObject(1215,-2322.1447800,-1631.1156000,483.0556600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2320.9531300,-1628.1549100,483.0554500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2331.5703100,-1627.5904500,483.0561500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2330.7065400,-1624.6353800,483.0556000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-2309.0056200,-1629.0893600,483.1346100,-90.1800000,5.2800000,-26.6189600); //
CreateDynamicObject(2395,-2305.8391100,-1631.0681200,483.1346100,-90.1800000,5.2800000,-26.6189600); //
CreateDynamicObject(2395,-2302.6789600,-1633.0372300,483.1346100,-90.1800000,5.2800000,-26.6189600); //
CreateDynamicObject(2395,-2298.4116200,-1632.3466800,483.1346100,-90.1800000,5.2800000,54.7410500); //
CreateDynamicObject(2395,-2296.7272900,-1630.3064000,483.1346100,-90.1800000,5.2800000,34.1610300); //
CreateDynamicObject(2395,-2294.6154800,-1629.0904500,483.1346100,-90.1800000,5.2800000,11.2410300); //
CreateDynamicObject(2395,-2292.2439000,-1628.8460700,483.1346100,-90.1800000,5.2800000,-17.4989700); //
CreateDynamicObject(2395,-2290.2863800,-1629.4721700,483.1346100,-90.1800000,5.2800000,-51.6389700); //
CreateDynamicObject(2395,-2288.9367700,-1631.6064500,483.1346100,-90.1800000,5.2800000,-66.3389400); //
CreateDynamicObject(2395,-2288.2045900,-1633.8421600,483.1346100,-90.1800000,5.2800000,-84.6989400); //
CreateDynamicObject(2395,-2287.9375000,-1635.6103500,483.1346100,-90.1800000,5.2800000,-113.3789100); //
CreateDynamicObject(2395,-2289.5378400,-1638.3371600,483.1346100,-90.1800000,5.2800000,-122.9788700); //
CreateDynamicObject(2395,-2291.0524900,-1640.3007800,483.1346100,-90.1800000,5.2800000,-140.7989300); //
CreateDynamicObject(2395,-2293.0847200,-1641.7265600,483.1346100,-90.1800000,5.2800000,-167.5589100); //
CreateDynamicObject(2395,-2302.5507800,-1633.6796900,483.1346100,-90.1800000,5.2800000,-103.3589100); //
CreateDynamicObject(2395,-2303.5400400,-1636.9177200,483.1346100,-90.1800000,5.2800000,-88.4188900); //
CreateDynamicObject(2395,-2303.3977100,-1640.5313700,483.1346100,-90.1800000,5.2800000,-53.4988700); //
CreateDynamicObject(2395,-2295.7924800,-1642.0316200,483.1346100,-90.1800000,5.2800000,-186.3988800); //
CreateDynamicObject(2395,-2301.6540500,-1643.1840800,483.1346100,-90.1800000,5.2800000,-16.8388600); //
CreateDynamicObject(1472,-2344.7761200,-1595.9680200,483.9335000,0.0000000,0.0000000,67.6200200); //
CreateDynamicObject(1472,-2343.7465800,-1596.4064900,483.0243800,0.0000000,0.0000000,427.5581700); //
CreateDynamicObject(9833,-2294.9738800,-1635.7520800,485.3067000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2299.0883800,-1636.2834500,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2297.8400900,-1634.1253700,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2296.4799800,-1632.1124300,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2294.5688500,-1630.8630400,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2292.1618700,-1630.7616000,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2290.4838900,-1632.5700700,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2289.5297900,-1634.4985400,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2290.0253900,-1636.7533000,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2291.7573200,-1638.7591600,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2294.0864300,-1640.0123300,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2296.6384300,-1640.3081100,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2298.8479000,-1639.8209200,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,-2299.7883300,-1638.1464800,483.0496800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2303.8481400,-1640.1611300,483.0578900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2295.3425300,-1626.2033700,483.0590200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2300.8166500,-1630.9329800,483.0590500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2302.4079600,-1633.2554900,483.0590500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2295.9992700,-1644.9936500,483.0586500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2289.1784700,-1642.5902100,483.0779400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2285.0957000,-1633.6809100,483.0594800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2288.2646500,-1627.3378900,483.0583500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1364,-2304.1474600,-1636.7421900,483.6733700,0.0000000,0.0000000,78.8400200); //
CreateDynamicObject(1364,-2298.7612300,-1627.8096900,483.6733700,0.0000000,0.0000000,44.1000200); //
CreateDynamicObject(1364,-2291.6809100,-1644.4201700,483.6733700,0.0000000,0.0000000,-157.2598900); //
CreateDynamicObject(1364,-2285.8754900,-1630.3291000,483.6733700,0.0000000,0.0000000,-66.9599500); //
CreateDynamicObject(1361,-2287.9301800,-1641.5203900,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1361,-2284.9436000,-1635.9155300,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1361,-2289.9118700,-1625.9747300,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1361,-2293.4892600,-1625.5136700,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1361,-2299.0107400,-1644.9399400,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1361,-2302.4716800,-1642.7149700,483.8869900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(14826,-2294.3547400,-1611.1081500,483.7352900,0.0000000,0.0000000,-246.8398000); //
CreateDynamicObject(19129,-2339.0925300,-1594.3880600,483.0017100,0.0000000,0.0000000,-24.0000000); //
CreateDynamicObject(19865,-2349.6274400,-1600.6142600,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2345.0666500,-1602.6333000,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2340.5026900,-1604.6770000,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2336.2651400,-1606.5760500,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2332.9982900,-1605.2968800,482.3445100,0.0000000,0.0000000,-23.7599500); //
CreateDynamicObject(19865,-2326.9411600,-1591.6248800,482.3445100,0.0000000,0.0000000,-23.7599500); //
CreateDynamicObject(19865,-2328.2353500,-1588.3475300,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2337.3759800,-1584.2852800,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(19865,-2341.9362800,-1582.1906700,482.3445100,0.0000000,0.0000000,-113.9999700); //
CreateDynamicObject(1215,-2328.0097700,-1594.0034200,483.0563700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2331.9184600,-1602.9267600,483.0566400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18653,-2326.0161100,-1589.3793900,484.1142000,0.0000000,0.0000000,19.4399900); //
CreateDynamicObject(18654,-2334.0434600,-1607.5545700,484.2854000,0.0000000,0.0000000,-54.5400100); //
CreateDynamicObject(2395,-2324.6237800,-1626.6276900,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.5078100,-1622.9271200,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.3645000,-1619.1917700,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.2365700,-1615.4688700,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.1455100,-1611.8216600,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.0117200,-1608.0883800,483.1346100,-90.1800000,5.2800000,93.6210200); //
CreateDynamicObject(2395,-2324.1171900,-1604.4511700,483.1346100,-90.1800000,5.2800000,121.2810400); //
CreateDynamicObject(2395,-2325.8386200,-1601.2551300,483.1145900,-89.8200200,12.9000100,143.4809000); //
CreateDynamicObject(2395,-2326.7377900,-1597.8548600,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2328.2644000,-1601.2495100,483.1346100,-90.1800000,5.2800000,71.4207100); //
CreateDynamicObject(2395,-2329.3544900,-1603.7213100,483.1346100,-90.1800000,5.2800000,71.4207100); //
CreateDynamicObject(1215,-2326.6713900,-1605.4392100,483.0794400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2323.8154300,-1604.8717000,483.0605500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2327.0175800,-1615.7979700,483.0608500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2324.0290500,-1615.8740200,483.0607300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2324.2788100,-1623.4349400,483.0600900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2327.3261700,-1623.3621800,483.0601800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-2330.0783700,-1586.9823000,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2332.5881300,-1585.8806200,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2335.0883800,-1584.8038300,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2337.5927700,-1583.7314500,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2327.5734900,-1588.0942400,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2326.0749500,-1584.6673600,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2328.5952100,-1583.5942400,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2331.1062000,-1582.4670400,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2333.5974100,-1581.4215100,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2336.0966800,-1580.3234900,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2324.5983900,-1581.2401100,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2327.1254900,-1580.1555200,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2329.6184100,-1579.0440700,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2332.1398900,-1577.9765600,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(2395,-2334.6384300,-1576.9300500,483.1346100,-90.1800000,5.2800000,71.7807000); //
CreateDynamicObject(19865,-2326.7526900,-1586.3072500,482.3445100,0.0000000,0.0000000,-203.5800300); //
CreateDynamicObject(19865,-2324.7463400,-1581.7274200,482.3445100,0.0000000,0.0000000,-203.5200300); //
CreateDynamicObject(19865,-2324.1672400,-1580.4107700,482.3445100,0.0000000,0.0000000,-203.5200300); //
CreateDynamicObject(19356,-2324.7055700,-1577.5557900,484.8207100,0.0000000,0.0000000,246.9825400); //
CreateDynamicObject(19356,-2327.6416000,-1576.2860100,484.8207100,0.0000000,0.0000000,246.9825400); //
CreateDynamicObject(19356,-2330.5817900,-1575.0140400,484.8207100,0.0000000,0.0000000,246.9825400); //
CreateDynamicObject(19356,-2333.5239300,-1573.7591600,484.8207100,0.0000000,0.0000000,246.9825400); //
CreateDynamicObject(19356,-2334.3295900,-1573.4012500,484.8207100,0.0000000,0.0000000,246.9825400); //
CreateDynamicObject(19865,-2336.8676800,-1575.1062000,482.3445100,0.0000000,0.0000000,-203.3400700); //
CreateDynamicObject(19865,-2338.8354500,-1579.6727300,482.3445100,0.0000000,0.0000000,-203.3400700); //
CreateDynamicObject(19865,-2339.2199700,-1580.5918000,482.3445100,0.0000000,0.0000000,-203.3400700); //
CreateDynamicObject(2773,-2328.3378900,-1595.1709000,483.5799900,0.0000000,0.0000000,-23.8799900); //
CreateDynamicObject(2773,-2331.3088400,-1601.8231200,483.5799900,0.0000000,0.0000000,-23.8799900); //
CreateDynamicObject(16151,-2331.8447300,-1575.5994900,483.4328000,0.0000000,0.0000000,67.0799900); //
CreateDynamicObject(1825,-2336.3122600,-1579.9768100,483.0810200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,-2327.1289100,-1579.8388700,483.0810200,0.0000000,0.0000000,34.0800100); //
CreateDynamicObject(1825,-2332.1635700,-1579.8868400,483.0810200,0.0000000,0.0000000,34.0800100); //
CreateDynamicObject(1825,-2334.3029800,-1583.1292700,483.0810200,0.0000000,0.0000000,65.2800100); //
CreateDynamicObject(1670,-2334.4043000,-1583.2495100,483.9786100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1670,-2332.3286100,-1579.9508100,483.9786100,0.0000000,0.0000000,112.3800000); //
CreateDynamicObject(1670,-2327.2387700,-1579.9433600,483.9786100,0.0000000,0.0000000,202.3800000); //
CreateDynamicObject(737,-2314.7480500,-1642.0799600,483.2546700,0.0000000,0.0000000,-4.1400000); //
CreateDynamicObject(737,-2319.5544400,-1642.0374800,483.2546700,0.0000000,0.0000000,-4.1400000); //
CreateDynamicObject(737,-2317.5332000,-1634.8419200,483.2546700,0.0000000,0.0000000,-4.1400000); //
CreateDynamicObject(737,-2313.0598100,-1636.4433600,483.2546700,0.0000000,0.0000000,-19.9200000); //
CreateDynamicObject(737,-2309.2334000,-1629.6275600,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2312.5947300,-1627.5355200,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2303.4555700,-1633.3515600,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2301.0773900,-1629.9245600,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2284.4904800,-1633.5730000,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2288.7714800,-1643.1322000,483.2546700,0.0000000,0.0000000,-100.8000200); //
CreateDynamicObject(703,-2337.4770500,-1657.7402300,483.0580400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1703,-2325.6794400,-1582.5229500,483.0858200,0.0000000,0.0000000,245.8799900); //
CreateDynamicObject(1703,-2327.0605500,-1585.4863300,483.0858200,0.0000000,0.0000000,245.8799900); //
CreateDynamicObject(705,-2351.9294400,-1636.1881100,483.0476400,0.0000000,0.0000000,14.2800000); //
CreateDynamicObject(618,-2345.2253400,-1648.7482900,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2343.7636700,-1641.8525400,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2337.2287600,-1647.0516400,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2331.8996600,-1636.9660600,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19632,-2337.5368700,-1640.5257600,483.0610700,0.0000000,0.0000000,-6.7800000); //
CreateDynamicObject(19632,-2337.4665500,-1640.1685800,483.0610700,0.0000000,0.0000000,180.7200000); //
CreateDynamicObject(1463,-2336.3935500,-1644.8096900,483.0608800,0.0000000,0.0000000,15.6600000); //
CreateDynamicObject(837,-2340.1184100,-1639.9783900,483.0612500,0.0000000,0.0000000,68.1000100); //
CreateDynamicObject(837,-2337.0034200,-1637.9067400,483.0612500,0.0000000,0.0000000,-9.7199800); //
CreateDynamicObject(19632,-2337.8662100,-1640.3303200,483.0610700,0.0000000,0.0000000,70.3800000); //
CreateDynamicObject(19632,-2337.1899400,-1640.4317600,483.0610700,0.0000000,0.0000000,70.3800000); //
CreateDynamicObject(19632,-2337.4956100,-1640.3414300,483.1810900,0.0000000,0.0000000,-6.7800000); //
CreateDynamicObject(618,-2330.3027300,-1645.4082000,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2329.4689900,-1651.5103800,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(832,-2342.2585400,-1649.3990500,484.4802600,0.0000000,0.0000000,70.4400000); //
CreateDynamicObject(831,-2344.0734900,-1634.5462600,483.9791600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2348.4758300,-1611.8807400,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2337.9704600,-1616.6567400,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(618,-2341.9738800,-1608.4337200,482.7246400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1660,-2292.2243700,-1704.3704800,477.0804400,-0.4600000,0.0000000,46.2000000); //
CreateDynamicObject(1660,-2288.5488300,-1700.5667700,477.0804400,-0.4600000,0.0000000,46.2000000); //
CreateDynamicObject(1660,-2295.9953600,-1708.1103500,477.0804400,-0.4600000,0.0000000,43.2600000); //
CreateDynamicObject(2180,-2345.6767600,-1593.1336700,484.3299300,0.0000000,0.0000000,66.6000600); //
CreateDynamicObject(14820,-2345.4289600,-1592.7115500,485.2092900,0.0000000,0.0000000,66.4200000); //
CreateDynamicObject(19144,-2342.8266600,-1590.2352300,487.5779400,0.0000000,0.0000000,-111.6600000); //
CreateDynamicObject(19144,-2344.9406700,-1595.2336400,487.5779400,0.0000000,0.0000000,-111.6600000); //
CreateDynamicObject(19144,-2343.8598600,-1592.7031300,487.5779400,0.0000000,0.0000000,-111.6600000); //
CreateDynamicObject(18655,-2340.2431600,-1582.9237100,484.1641500,0.0000000,0.0000000,116.2200000); //
CreateDynamicObject(1215,-2330.5988800,-1587.3880600,483.0656700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2335.1713900,-1585.4077100,483.0659800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2309.5278300,-1597.5970500,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2310.0295400,-1598.4567900,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2310.0014600,-1597.4527600,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2309.6911600,-1597.2304700,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2309.4162600,-1598.3621800,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1667,-2309.8088400,-1598.7235100,484.7269000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19820,-2309.7883300,-1598.0515100,484.6268600,0.0000000,0.0000000,68.5800000); //
CreateDynamicObject(19814,-2297.3874500,-1601.2087400,484.1738600,0.0000000,0.0000000,183.1200000); //
CreateDynamicObject(2395,-2304.6647900,-1616.3980700,483.1346100,-90.1800000,5.2800000,92.2410500); //
CreateDynamicObject(2395,-2297.0134300,-1600.7867400,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2395,-2297.0065900,-1597.0595700,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2395,-2298.1833500,-1597.2348600,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2395,-2298.1894500,-1595.2042200,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2395,-2297.0056200,-1595.2729500,483.8576000,-90.1800000,5.2800000,95.3010600); //
CreateDynamicObject(2267,-2300.8684100,-1596.8411900,486.0484300,0.0000000,0.0000000,89.9999400); //
CreateDynamicObject(11707,-2300.8657200,-1594.9500700,485.0389400,0.0000000,0.0000000,91.2000100); //
CreateDynamicObject(11707,-2300.8676800,-1593.1411100,485.0389400,0.0000000,0.0000000,90.6600300); //
CreateDynamicObject(2266,-2302.8737800,-1606.4494600,485.3888500,0.0000000,0.0000000,179.7000100); //
CreateDynamicObject(2818,-2298.5048800,-1596.7954100,483.8098100,0.0000000,0.0000000,90.0599900); //
CreateDynamicObject(640,-2326.2705100,-1657.5455300,483.7399900,0.0000000,0.0000000,-59.5200100); //
CreateDynamicObject(640,-2321.6198700,-1654.8220200,483.7399900,0.0000000,0.0000000,-59.5200100); //
CreateDynamicObject(640,-2320.2705100,-1654.0285600,483.7399900,0.0000000,0.0000000,-59.5200100); //
CreateDynamicObject(19865,-2282.8986800,-1675.1694300,480.4816600,0.0000000,0.0000000,46.0800200); //
CreateDynamicObject(19865,-2279.4897500,-1678.5764200,480.4816600,0.0000000,0.0000000,45.5400000); //
CreateDynamicObject(19865,-2275.9057600,-1682.0490700,479.8664200,0.0000000,0.0000000,45.5400000); //
CreateDynamicObject(19865,-2273.4047900,-1684.5255100,479.8664200,0.0000000,0.0000000,45.5400000); //
CreateDynamicObject(19865,-2269.2768600,-1685.5175800,479.8664200,0.0000000,0.0000000,108.8399900); //
CreateDynamicObject(19865,-2265.7717300,-1684.5046400,479.8664200,0.0000000,0.0000000,104.8199800); //
CreateDynamicObject(19865,-2261.7202100,-1685.6711400,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2258.3046900,-1689.2169200,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2254.8742700,-1692.7961400,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2251.4223600,-1696.4102800,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2247.9521500,-1699.9865700,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2244.4890100,-1703.5581100,479.8664200,0.0000000,0.0000000,43.8599900); //
CreateDynamicObject(19865,-2241.6186500,-1707.6350100,479.8664200,0.0000000,0.0000000,25.0199900); //
CreateDynamicObject(19865,-2244.5832500,-1748.1492900,479.1563100,0.0000000,0.0000000,55.7698900); //
CreateDynamicObject(1215,-2271.8667000,-1686.5079300,479.6954300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2263.6284200,-1684.1666300,480.2350200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2254.9834000,-1692.7735600,480.0414100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2246.4267600,-1701.8820800,479.8058800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2240.4514200,-1710.1778600,479.6366900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2236.9226100,-1735.1488000,479.4576100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2292.9951200,-1688.2851600,483.0284100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2301.4421400,-1696.5993700,483.0365600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2281.5617700,-1689.5378400,479.9401200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2298.7927200,-1710.0749500,476.1280800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1550,-2316.9321300,-1607.3249500,483.9383900,14.1000000,-95.4601000,152.3999000); //
CreateDynamicObject(1212,-2316.4924300,-1607.4503200,483.7931800,0.0000000,0.0000000,20.5200000); //
CreateDynamicObject(1212,-2316.3366700,-1607.5778800,483.7932100,0.0000000,0.0000000,7.8000000); //
CreateDynamicObject(1212,-2316.2053200,-1607.2786900,483.7931200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19364,-2279.3945300,-1609.3294700,481.2834200,0.0000000,0.0000000,0.0600100); //
CreateDynamicObject(19364,-2279.4211400,-1606.1146200,481.2834200,0.0000000,0.0000000,0.6600100); //
CreateDynamicObject(19364,-2279.4853500,-1602.9945100,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.5012200,-1599.7575700,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.5708000,-1596.5839800,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.6401400,-1593.4725300,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.6984900,-1590.2714800,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.7514600,-1587.0773900,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.7849100,-1583.8815900,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.8674300,-1580.6965300,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.9091800,-1577.5086700,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.9462900,-1574.3404500,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2279.9897500,-1571.5417500,481.2834200,0.0000000,0.0000000,1.1400100); //
CreateDynamicObject(19364,-2281.5263700,-1569.9495800,481.2834200,0.0000000,0.0000000,87.9600000); //
CreateDynamicObject(19364,-2284.7255900,-1569.8526600,481.2834200,0.0000000,0.0000000,88.7399900); //
CreateDynamicObject(19364,-2287.9377400,-1569.8338600,481.2834200,0.0000000,0.0000000,88.7399900); //
CreateDynamicObject(19364,-2291.1098600,-1569.7988300,481.2834200,0.0000000,0.0000000,88.7399900); //
CreateDynamicObject(19364,-2294.3203100,-1569.7168000,481.2834200,0.0000000,0.0000000,88.7399900); //
CreateDynamicObject(19364,-2297.5766600,-1569.5947300,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2300.7377900,-1569.5661600,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2303.9304200,-1569.5036600,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2307.1162100,-1569.4423800,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2310.3205600,-1569.4002700,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2313.5512700,-1569.3469200,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2316.7919900,-1569.2547600,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(19364,-2320.0073200,-1569.1770000,481.2834200,0.0000000,0.0000000,89.2199900); //
CreateDynamicObject(2395,-2287.1381800,-1640.1788300,483.1346100,-90.1800000,5.2800000,5.9610900); //
CreateDynamicObject(2395,-2283.3955100,-1640.0462600,483.1346100,-90.1800000,5.2800000,14.3610800); //
CreateDynamicObject(19543,-2272.0090300,-1627.5535900,483.0638700,0.0000000,0.0000000,-0.1200000); //
CreateDynamicObject(19543,-2257.0554200,-1627.6402600,483.0638700,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(4682,-2269.8344700,-1638.2414600,466.6528000,89.8797000,87.9598000,2.2200000); //
CreateDynamicObject(4682,-2269.2085000,-1616.6955600,466.6528000,89.8797000,87.9598000,1.2600000); //
CreateDynamicObject(4682,-2269.9211400,-1616.8121300,466.6528000,89.8797000,87.9598000,92.6999900); //
CreateDynamicObject(4682,-2270.4951200,-1639.8310500,466.6528000,89.8797000,87.9598000,-87.1800200); //
CreateDynamicObject(987,-2268.3398400,-1659.3761000,483.0064100,0.0000000,0.0000000,-359.0398300); //
CreateDynamicObject(987,-2261.8496100,-1659.3050500,483.0064100,0.0000000,0.0000000,-359.0398300); //
CreateDynamicObject(987,-2250.0195300,-1659.1981200,483.0064100,0.0000000,0.0000000,-269.9997600); //
CreateDynamicObject(987,-2249.9907200,-1647.3004200,483.0064100,0.0000000,0.0000000,-270.2997400); //
CreateDynamicObject(987,-2249.8203100,-1635.3288600,483.0064100,0.0000000,0.0000000,-270.2997400); //
CreateDynamicObject(987,-2249.7353500,-1623.4285900,483.0064100,0.0000000,0.0000000,-270.2997400); //
CreateDynamicObject(987,-2249.6333000,-1611.4697300,483.0064100,0.0000000,0.0000000,-270.2997400); //
CreateDynamicObject(987,-2249.5927700,-1608.5134300,483.0064100,0.0000000,0.0000000,-270.2997400); //
CreateDynamicObject(987,-2249.4470200,-1596.5672600,483.0064100,0.0000000,0.0000000,-180.3597700); //
CreateDynamicObject(987,-2261.3613300,-1596.4730200,483.0064100,0.0000000,0.0000000,-180.3597700); //
CreateDynamicObject(987,-2267.1113300,-1596.6095000,483.0064100,0.0000000,0.0000000,-180.7198600); //
CreateDynamicObject(987,-2279.2500000,-1596.7320600,483.0064100,0.0000000,0.0000000,-269.9997600); //
CreateDynamicObject(19491,-2261.3776900,-1609.9147900,487.8895900,0.0000000,0.0000000,41.5800000); //
CreateDynamicObject(19492,-2261.3657200,-1609.9498300,487.8895900,0.0000000,0.0000000,401.4002100); //
CreateDynamicObject(1649,-2265.2895500,-1614.6300000,484.2191800,0.0000000,0.0000000,-48.5400000); //
CreateDynamicObject(1649,-2265.5397900,-1614.4154100,487.3358500,0.0000000,0.0000000,-48.5400000); //
CreateDynamicObject(1649,-2267.7006800,-1611.8988000,487.0215800,0.0000000,0.0000000,-48.5400000); //
CreateDynamicObject(1649,-2257.4367700,-1604.7010500,484.1067500,0.0000000,0.0000000,-48.3000000); //
CreateDynamicObject(1649,-2256.0891100,-1606.2550000,487.4307300,0.0000000,0.0000000,131.0399200); //
CreateDynamicObject(1649,-2258.3627900,1603.6081500,487.4306900,0.0000000,0.0000000,-48.3000000); //
CreateDynamicObject(1649,-2258.2678200,-1603.6178000,487.4307300,0.0000000,0.0000000,-48.3000000); //
CreateDynamicObject(1649,-2255.9619100,-1606.2399900,487.4307300,0.0000000,0.0000000,-48.3000000); //
CreateDynamicObject(1649,-2257.4367700,-1604.7010500,484.1067500,0.0000000,0.0000000,130.9799300); //
CreateDynamicObject(1649,-2265.2775900,-1614.5430900,484.2191800,0.0000000,0.0000000,131.3399700); //
CreateDynamicObject(1649,-2265.3090800,-1614.5022000,487.3358500,0.0000000,0.0000000,131.4001300); //
CreateDynamicObject(1649,-2267.7011700,-1611.8266600,487.0215800,0.0000000,0.0000000,130.9199700); //
CreateDynamicObject(2395,-2279.7890600,-1639.2668500,483.1346100,-90.1800000,5.2800000,33.9810900); //
CreateDynamicObject(2395,-2276.6921400,-1637.3754900,483.1346100,-90.1800000,5.2800000,48.2611200); //
CreateDynamicObject(2395,-2273.9902300,-1634.8181200,483.1346100,-90.1800000,5.2800000,48.2611200); //
CreateDynamicObject(2395,-2271.4890100,-1632.2796600,483.1346100,-90.1800000,5.2800000,61.5211200); //
CreateDynamicObject(2395,-2269.4265100,-1629.2293700,483.1346100,-90.1800000,5.2800000,61.5211200); //
CreateDynamicObject(2395,-2267.3327600,-1626.1138900,483.1346100,-90.1800000,5.2800000,61.5211200); //
CreateDynamicObject(2395,-2265.2805200,-1623.0047600,483.1346100,-90.1800000,5.2800000,61.5211200); //
CreateDynamicObject(2395,-2263.1984900,-1619.9511700,483.1346100,-90.1800000,5.2800000,61.5211200); //
CreateDynamicObject(2395,-2261.6586900,-1617.6862800,483.1145900,-90.1800000,5.2800000,61.5211000); //
CreateDynamicObject(2395,-2266.9719200,-1612.5920400,483.1346100,-90.1800000,5.2800000,136.1010600); //
CreateDynamicObject(2395,-2264.5546900,-1615.4425000,483.1346100,-90.1800000,5.2800000,136.1010600); //
CreateDynamicObject(2395,-2262.7055700,-1617.6595500,483.1346100,-90.1800000,5.2800000,136.1010600); //
CreateDynamicObject(1491,-2266.1110800,-1609.4191900,483.1122100,0.0000000,0.0000000,-48.4200300); //
CreateDynamicObject(1491,-2256.0896000,-1606.6812700,483.1181600,0.0000000,0.0000000,-48.3599900); //
CreateDynamicObject(1491,-2258.8056600,-1612.2810100,485.9579800,0.0000000,0.0000000,-48.5399700); //
CreateDynamicObject(640,-2269.1933600,-1610.1811500,483.7399900,0.0000000,0.0000000,-49.0200100); //
CreateDynamicObject(640,-2270.0275900,-1613.9553200,483.7399900,0.0000000,0.0000000,40.3200100); //
CreateDynamicObject(640,-2267.5661600,-1616.8430200,483.7399900,0.0000000,0.0000000,40.3200100); //
CreateDynamicObject(1215,-2265.4870600,-1618.6197500,483.0760800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2261.4411600,-1616.6483200,483.0663500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2271.4599600,-1612.3192100,483.3989600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2263.3503400,-1620.2536600,483.0583800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2269.8730500,-1625.0007300,483.0603600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2267.6110800,-1626.5902100,483.0601800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2271.5737300,-1632.5250200,483.0600300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2273.8591300,-1630.5178200,483.0602100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2280.1679700,-1639.5076900,483.0586900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2280.6132800,-1636.5598100,483.0589300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2526,-2256.8249500,-1611.9772900,483.0791300,0.0000000,0.0000000,40.7999800); //
CreateDynamicObject(2521,-2257.7104500,-1612.5872800,483.0799900,0.0000000,0.0000000,-139.4999700); //
CreateDynamicObject(19396,-2257.8129900,-1610.7823500,484.3562900,0.0000000,0.0000000,-50.2800000); //
CreateDynamicObject(1491,-2258.3576700,-1611.2929700,482.6134900,0.0000000,0.0000000,40.2000000); //
CreateDynamicObject(2269,-2256.5676300,-1611.5703100,484.6605200,0.0000000,0.0000000,-135.9598500); //
CreateDynamicObject(11707,-2256.2185100,-1610.2470700,484.0896900,0.0000000,0.0000000,-49.6200200); //
CreateDynamicObject(15036,-2260.4770500,-1604.8222700,484.2060900,0.0000000,0.0000000,220.1400000); //
CreateDynamicObject(19355,-2258.5698200,-1603.4155300,483.8943800,0.0000000,0.0000000,41.4600100); //
CreateDynamicObject(19787,-2262.7819800,-1615.0660400,484.7678500,0.0000000,0.0000000,-138.9000100); //
CreateDynamicObject(1703,-2266.2592800,-1612.7913800,483.0790700,0.0000000,0.0000000,41.6999900); //
CreateDynamicObject(1817,-2264.4130900,-1614.0312500,483.0798300,0.0000000,0.0000000,41.5200000); //
CreateDynamicObject(2269,-2265.5183100,-1612.1409900,484.7264700,0.0000000,0.0000000,42.0599900); //
CreateDynamicObject(2195,-2263.9399400,-1615.5897200,483.6561900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1742,-2260.6814000,-1613.3383800,483.5115400,0.0000000,0.0000000,-137.8200400); //
CreateDynamicObject(1704,-2262.0629900,-1610.9696000,483.0797700,0.0000000,0.0000000,-3.9000000); //
CreateDynamicObject(2123,-2259.5161100,-1607.8960000,483.6888100,0.0000000,0.0000000,-20.8800000); //
CreateDynamicObject(1737,-2260.9167500,-1608.0509000,483.0689100,0.0000000,0.0000000,39.7800200); //
CreateDynamicObject(2123,-2260.0202600,-1608.8344700,483.6888100,0.0000000,0.0000000,-50.1600100); //
CreateDynamicObject(2123,-2261.7612300,-1608.9532500,483.6888100,0.0000000,0.0000000,-134.7601000); //
CreateDynamicObject(2123,-2259.0053700,-1606.6676000,483.6888100,0.0000000,0.0000000,25.0200100); //
CreateDynamicObject(19174,-2265.1081500,-1606.8751200,484.4930400,0.0000000,0.0000000,41.4600000); //
CreateDynamicObject(19787,-2266.5134300,-1613.1027800,487.4899600,0.0000000,0.0000000,132.1200900); //
CreateDynamicObject(2315,-2266.6721200,-1612.1552700,485.9554700,0.0000000,0.0000000,-48.9000100); //
CreateDynamicObject(19370,-2262.2109400,-1609.2821000,487.7257100,0.0000000,0.0000000,42.7800000); //
CreateDynamicObject(1798,-2265.1333000,-1611.2377900,485.9627400,0.0000000,0.0000000,-49.5599900); //
CreateDynamicObject(2267,-2262.2851600,-1609.3735400,487.6545400,0.0000000,0.0000000,-47.3399800); //
CreateDynamicObject(2251,-2268.6215800,-1610.3277600,486.7756000,0.0000000,0.0000000,90.6600000); //
CreateDynamicObject(14455,-2260.8464400,-1603.1861600,487.5161100,0.0000000,0.0000000,220.6199000); //
CreateDynamicObject(1703,-2261.0222200,-1609.6756600,485.9426000,0.0000000,0.0000000,131.0999300); //
CreateDynamicObject(2180,-2256.1601600,-1608.7032500,485.9454000,0.0000000,0.0000000,40.8600000); //
CreateDynamicObject(19893,-2255.8896500,-1608.3472900,486.7455100,0.0000000,0.0000000,-142.6799300); //
CreateDynamicObject(1714,-2256.9814500,-1607.4317600,485.9630100,0.0000000,0.0000000,49.7399700); //
CreateDynamicObject(19807,-2255.3061500,-1607.8767100,486.8051100,0.0000000,0.0000000,-116.7000000); //
CreateDynamicObject(2372,-2262.1079100,-1614.2712400,485.9632300,0.0000000,0.0000000,-48.0000000); //
CreateDynamicObject(2394,-2261.8020000,-1613.6966600,486.6733100,0.0000000,0.0000000,41.6370000); //
CreateDynamicObject(3095,-2262.8879400,-1646.3005400,482.6364100,0.0000000,0.0000000,-2.7600000); //
CreateDynamicObject(1215,-2266.8855000,-1641.4256600,483.0541700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2267.6223100,-1650.6868900,483.0544100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2258.5449200,-1650.9682600,483.0567000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2258.2773400,-1642.0736100,483.1830400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,-2279.7890600,-1639.2668500,483.1346100,-90.1800000,5.2800000,-32.6189000); //
CreateDynamicObject(2395,-2279.7890600,-1639.2668500,483.1346100,-90.1800000,5.2800000,33.9810900); //
CreateDynamicObject(2395,-2276.8544900,-1641.5869100,483.1346100,-90.1800000,5.2800000,-32.6189000); //
CreateDynamicObject(2395,-2273.9218800,-1643.8431400,483.1346100,-90.1800000,5.2800000,-32.6189000); //
CreateDynamicObject(2395,-2271.0200200,-1645.8035900,483.1346100,-90.1800000,5.2800000,-2.8588900); //
CreateDynamicObject(2395,-2267.3420400,-1646.3595000,483.1346100,-90.1800000,5.2800000,-2.8588900); //
CreateDynamicObject(1215,-2270.0336900,-1643.1312300,483.0599100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,-2271.2268100,-1645.8273900,483.0600900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19336,-2263.2531700,-1646.6311000,483.0675000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(737,-2274.5502900,-1629.9763200,483.2546700,0.0000000,0.0000000,-30.0600000); //
CreateDynamicObject(737,-2266.8471700,-1627.1605200,483.2546700,0.0000000,0.0000000,-35.3400000); //
CreateDynamicObject(737,-2270.5703100,-1624.4801000,483.2546700,0.0000000,0.0000000,-35.3400000); //
CreateDynamicObject(737,-2270.8039600,-1632.8979500,483.2546700,0.0000000,0.0000000,-35.3400000); //
CreateDynamicObject(705,-2277.7536600,-1606.6801800,483.0476400,0.0000000,0.0000000,14.2800000); //
CreateDynamicObject(980,-2297.6709000,-1691.7939500,485.9131800,0.0000000,0.0000000,-134.9999700); //
//ammunation unity
CreateDynamicObject(10631,2000.1041300,-1991.6406300,16.8707000,0.0000000,0.0000000,90.1199000); //
CreateDynamicObject(9302,1982.9953600,-2006.7386500,19.8582000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(19355,1989.7011700,-1981.7313200,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1986.4387200,-1981.6964100,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1983.1931200,-1981.6492900,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1980.0096400,-1981.6115700,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1976.7849100,-1981.5598100,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1973.5805700,-1981.5261200,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1971.7033700,-1983.0777600,14.1516200,0.0000000,0.0000000,179.9399100); //
CreateDynamicObject(19355,1973.2249800,-1981.5318600,14.1516200,0.0000000,0.0000000,89.1599700); //
CreateDynamicObject(19355,1971.7421900,-1985.4187000,14.1516200,0.0000000,0.0000000,179.9399100); //
CreateDynamicObject(1536,1991.0911900,-1990.3663300,12.8849000,0.0000000,0.0000000,-88.3199600); //
CreateDynamicObject(1215,1979.4797400,-1986.9536100,12.5852400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1982.6424600,-1986.9975600,12.5852800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1988.9711900,-1993.4429900,12.5854700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1985.7583000,-1993.4215100,12.5861100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1982.5441900,-1993.4227300,12.5861800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1979.3023700,-1993.4528800,12.5861700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1976.1720000,-1993.4241900,12.5860000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(640,1989.0888700,-1999.1439200,13.1819800,0.0000000,0.0000000,89.5800300); //
CreateDynamicObject(640,1980.6538100,-1999.2274200,13.1819800,0.0000000,0.0000000,89.5800300); //
CreateDynamicObject(640,1982.1423300,-1999.2189900,13.1819800,0.0000000,0.0000000,89.5800300); //
CreateDynamicObject(1280,1990.4096700,-1984.3031000,12.8871200,0.0000000,0.0000000,0.9000000); //
CreateDynamicObject(1280,1990.3551000,-1988.0636000,12.8871200,0.0000000,0.0000000,0.9000000); //
CreateDynamicObject(1280,1971.3226300,-1984.0183100,12.8871200,0.0000000,0.0000000,-0.7200000); //
CreateDynamicObject(1215,1971.5682400,-1987.0935100,12.5860000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,1971.5549300,-1998.8519300,12.5860000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3864,1991.8167700,-1983.7805200,21.1767700,0.0000000,0.0000000,19.8600000); //
CreateDynamicObject(3864,1991.7417000,-1997.9936500,21.1767700,0.0000000,0.0000000,-30.5400000); //
CreateDynamicObject(966,1971.8171400,-1987.1641800,12.5459400,0.0000000,0.0000000,88.8000200); //
CreateDynamicObject(19355,1971.7318100,-1995.6800500,14.1516200,0.0000000,0.0000000,179.9399100); //
CreateDynamicObject(19355,1971.7386500,-1998.8615700,14.1516200,0.0000000,0.0000000,179.9399100); //
CreateDynamicObject(968,1971.7387700,-1987.2048300,13.3912800,0.0000000,0.0000000,82.0200300); //
CreateDynamicObject(19149,1989.7880900,-1998.5217300,15.2344400,0.0000000,0.0000000,-36.0600000); //
CreateDynamicObject(19149,1989.9698500,-1982.8748800,15.2344400,0.0000000,0.0000000,-130.6200400); //
CreateDynamicObject(3472,1972.1272000,-1985.4886500,12.5411300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3472,1972.5716600,-1996.8442400,12.5411300,0.0000000,0.0000000,0.0000000); //
// hq rusa
CreateDynamicObject(3749,836.44726562,-1963.07910156,17.72560120,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
CreateDynamicObject(986,823.58306885,-1961.05859375,13.59218311,0.00000000,0.00000000,0.00000000); //object(gate_autol) (2)
CreateDynamicObject(985,849.40643311,-1961.04858398,13.61596966,0.00000000,0.00000000,0.00000000); //object(gate_autor) (1)
CreateDynamicObject(9241,836.54980469,-2054.47363281,11.05108738,0.00000000,0.00000000,179.52239990); //object(copbits_sfn) (1)
CreateDynamicObject(2922,830.46844482,-1960.97961426,14.15920925,0.00000000,0.00000000,0.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2921,842.01940918,-1960.57958984,17.57436562,0.00000000,0.00000000,350.07769775); //object(kmb_cam) (1)
CreateDynamicObject(7091,844.03515625,-1960.35449219,18.57466507,0.00000000,346.00000000,87.00000000); //object(vegasflag02) (1)
CreateDynamicObject(7091,828.35736084,-1960.35449219,18.57466507,0.00000000,345.99792480,86.99523926); //object(vegasflag02) (2)
CreateDynamicObject(11489,820.83886719,-2002.43054199,11.86718750,0.00000000,0.00000000,90.18362427); //object(dam_statues) (1)
CreateDynamicObject(615,828.86425781,-2017.11816406,11.86718750,0.00000000,0.00000000,0.00000000); //object(veg_tree3) (1)
CreateDynamicObject(18284,848.64660645,-2002.88623047,14.58702755,0.00000000,0.00000000,0.00000000); //object(cw_tscanopy) (1)
CreateDynamicObject(18284,824.52435303,-1985.90576172,14.58702755,0.00000000,0.00000000,0.00000000); //object(cw_tscanopy) (2)
CreateDynamicObject(3881,827.93585205,-1956.98754883,13.71875000,0.00000000,0.00000000,180.47351074); //object(airsecbooth_sfse) (1)
CreateDynamicObject(3475,829.57189941,-1961.53430176,14.24336243,0.00000000,0.00000000,269.93457031); //object(vgsn_fncelec_pst) (1)
CreateDynamicObject(3475,843.29296875,-1961.55664062,14.24336243,0.00000000,0.00000000,89.58801270); //object(vgsn_fncelec_pst) (2)
CreateDynamicObject(994,845.72973633,-1994.33630371,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,845.72949219,-1994.93554688,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
CreateDynamicObject(994,845.72949219,-1999.88232422,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (3)
CreateDynamicObject(994,845.72949219,-2000.40649414,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (4)
CreateDynamicObject(994,845.72949219,-2005.35302734,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (5)
CreateDynamicObject(994,845.72949219,-2005.87719727,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (6)
CreateDynamicObject(994,845.72949219,-2010.89868164,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (7)
CreateDynamicObject(994,845.72949219,-2011.34814453,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (8)
CreateDynamicObject(994,821.18804932,-1994.41809082,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (11)
CreateDynamicObject(994,821.18750000,-1993.89257812,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (12)
CreateDynamicObject(994,821.18750000,-1988.94580078,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (13)
CreateDynamicObject(994,821.18750000,-1988.42065430,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (14)
CreateDynamicObject(994,821.13909912,-1983.45141602,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (15)
CreateDynamicObject(994,821.18750000,-1982.87304688,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (16)
CreateDynamicObject(994,821.13867188,-1977.90478516,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (17)
CreateDynamicObject(994,821.13867188,-1977.37963867,11.86718750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (18)
CreateDynamicObject(1215,827.47821045,-1977.66589355,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(1215,827.47753906,-1983.13647461,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(1215,827.47753906,-1988.68212891,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,827.47753906,-1994.15307617,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(1215,845.79541016,-1994.67700195,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1215,845.79492188,-2000.18957520,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(1215,845.79492188,-2005.62731934,12.43151093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(1215,845.79492188,-2011.17333984,12.43151093,0.00000000,0.00000000,0.76327515); //object(bollardlight) (12)
CreateDynamicObject(615,845.98095703,-1992.48425293,11.86718750,0.00000000,0.00000000,0.00000000); //object(veg_tree3) (1)
CreateDynamicObject(615,827.34002686,-1973.53161621,11.86718750,0.00000000,0.00000000,0.00000000); //object(veg_tree3) (1)
CreateDynamicObject(11490,835.00878906,-2023.73925781,11.86718750,0.00000000,0.00000000,0.70861816); //object(des_ranch) (1)
CreateDynamicObject(11491,835.13378906,-2034.74511719,13.27621937,0.00000000,0.00000000,0.00000000); //object(des_ranchbits1) (1)
CreateDynamicObject(1736,835.11865234,-2030.59655762,16.85567665,0.00000000,0.00000000,185.00000000); //object(cj_stags_head) (1)
CreateDynamicObject(1792,835.23150635,-2031.30456543,14.94999599,0.00000000,0.00000000,181.94702148); //object(swank_tv_1) (1)
CreateDynamicObject(1808,830.59429932,-2025.34411621,13.37500000,0.00000000,0.00000000,92.47344971); //object(cj_watercooler2) (1)
CreateDynamicObject(1828,835.07684326,-2029.16003418,13.37500000,0.00000000,0.00000000,0.00000000); //object(man_sdr_rug) (1)
CreateDynamicObject(2718,833.02343750,-2019.52185059,15.80534744,0.00000000,0.00000000,0.00000000); //object(cj_fly_killer) (1)
CreateDynamicObject(1704,838.38043213,-2019.86022949,13.37500000,0.00000000,0.00000000,321.68603516); //object(kb_chair03) (1)
CreateDynamicObject(1723,831.17755127,-2021.29150391,13.37500000,0.00000000,0.00000000,34.34698486); //object(mrk_seating1) (1)
CreateDynamicObject(2637,834.61578369,-2025.49438477,13.77974033,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2) (1)
CreateDynamicObject(2800,834.66101074,-2025.46691895,14.18906784,0.00000000,0.00000000,0.00000000); //object(castable2top) (1)
CreateDynamicObject(1720,834.45214844,-2024.13574219,13.37500000,0.00000000,0.00000000,0.00000000); //object(rest_chair) (1)
CreateDynamicObject(1720,836.40142822,-2025.55957031,13.37500000,0.00000000,0.00000000,270.26367188); //object(rest_chair) (2)
CreateDynamicObject(1720,832.87670898,-2025.63476562,13.37500000,0.00000000,0.00000000,89.20843506); //object(rest_chair) (3)
CreateDynamicObject(1720,834.52636719,-2027.13330078,13.37500000,0.00000000,0.00000000,177.99499512); //object(rest_chair) (4)
CreateDynamicObject(646,830.94543457,-2030.48852539,14.79152393,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14) (1)
CreateDynamicObject(646,838.90386963,-2030.63818359,14.79152393,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14) (2)
CreateDynamicObject(2229,833.73065186,-2031.13110352,13.37500000,0.00000000,0.00000000,178.00000000); //object(swank_speaker) (1)
CreateDynamicObject(2229,835.83099365,-2031.05541992,13.37500000,0.00000000,0.00000000,177.99499512); //object(swank_speaker) (2)
CreateDynamicObject(1829,831.13098145,-2027.41455078,13.83952904,0.00000000,0.00000000,91.00000000); //object(man_safenew) (1)
CreateDynamicObject(2571,838.30786133,-2025.82226562,13.37500000,0.00000000,0.00000000,270.65713501); //object(hotel_single_1) (1)
CreateDynamicObject(2284,839.06854248,-2027.39343262,15.27250576,0.00000000,0.00000000,273.20812988); //object(frame_6) (1)
CreateDynamicObject(2280,831.02801514,-2028.95825195,15.39687443,0.00000000,0.00000000,91.13058472); //object(frame_thick_1) (1)
CreateDynamicObject(2262,831.01074219,-2026.87438965,14.91764450,0.00000000,0.00000000,90.05303955); //object(frame_slim_3) (1)
CreateDynamicObject(2069,839.22467041,-2025.19567871,13.37500000,0.00000000,0.00000000,0.00000000); //object(cj_mlight7) (1)
CreateDynamicObject(2102,839.08483887,-2027.33166504,13.86440849,0.00000000,0.00000000,271.28979492); //object(low_hi_fi_2) (1)
CreateDynamicObject(2266,837.03656006,-2020.00354004,15.04582882,0.00000000,0.00000000,0.76327515); //object(frame_wood_5) (1)
CreateDynamicObject(3666,842.37109375,-1960.91882324,12.38087273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
CreateDynamicObject(3666,840.28265381,-1960.92395020,12.38087273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
CreateDynamicObject(3666,832.63269043,-1960.90417480,12.38087273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
CreateDynamicObject(3666,830.39556885,-1960.90966797,12.38087273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
CreateDynamicObject(1215,849.02148438,-2066.90136719,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,848.71289062,-2042.21289062,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,823.84118652,-2066.66821289,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,824.02264404,-2041.92504883,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(983,827.33209229,-2041.81835938,12.56276703,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (1)
CreateDynamicObject(984,839.12042236,-2041.90979004,12.51589203,0.00000000,0.00000000,269.49462891); //object(fenceshit2) (2)
CreateDynamicObject(984,842.31738281,-2041.94140625,12.51589203,0.00000000,0.00000000,269.49462891); //object(fenceshit2) (3)
CreateDynamicObject(982,836.50878906,-2066.89843750,12.56276703,0.00000000,0.00000000,269.50000000); //object(fenceshit) (1)
CreateDynamicObject(984,848.87078857,-2048.43530273,12.51589203,0.00000000,0.00000000,359.50000000); //object(fenceshit2) (5)
CreateDynamicObject(984,823.87097168,-2048.29858398,12.51589203,0.00000000,0.00000000,359.49462891); //object(fenceshit2) (7)
CreateDynamicObject(984,823.75811768,-2060.35839844,12.51589203,0.00000000,0.00000000,359.48913574); //object(fenceshit2) (8)
CreateDynamicObject(983,848.75720215,-2058.04321289,12.56276703,0.00000000,0.00000000,359.25000000); //object(fenceshit3) (2)
CreateDynamicObject(1215,848.90289307,-2064.92309570,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
CreateDynamicObject(1215,848.82293701,-2063.14624023,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
CreateDynamicObject(1215,848.69293213,-2061.36645508,12.44353580,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(8210,853.68634033,-1988.79943848,14.96821404,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (1)
CreateDynamicObject(8210,853.66644287,-1994.87170410,14.96821404,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (4)
CreateDynamicObject(8210,819.18261719,-1989.03076172,14.96821404,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (5)
CreateDynamicObject(8210,819.15332031,-1995.03613281,14.96821404,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (6)
CreateDynamicObject(3361,823.57678223,-2072.84521484,10.00000000,0.00000000,0.00000000,272.00000000); //object(cxref_woodstair) (1)
CreateDynamicObject(3361,823.79614258,-2079.02319336,5.87500048,0.00000000,0.00000000,271.99951172); //object(cxref_woodstair) (2)
CreateDynamicObject(3361,823.93695068,-2083.09375000,3.14999008,0.00000000,0.00000000,271.99951172); //object(cxref_woodstair) (3)
CreateDynamicObject(3886,824.19476318,-2091.55200195,0.11249805,0.00000000,0.00000000,1.00000000); //object(ws_jettynol_sfx) (1)
//rejas rusa
CreateDynamicObject(987,674.6249400,-1309.1787100,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,686.6123000,-1309.1396500,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,698.5994900,-1309.1422100,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,710.5682400,-1309.1313500,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,722.5108600,-1309.1613800,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,734.4536700,-1309.1477100,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,746.3832400,-1309.1572300,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,758.3246500,-1309.1834700,13.1340400,0.0000000,0.0000000,-0.6000000); //
CreateDynamicObject(987,770.2600700,-1309.3148200,13.1340400,0.0000000,0.0000000,-1.3800000); //
CreateDynamicObject(987,775.3537600,-1309.4431200,13.1340400,0.0000000,0.0000000,-1.3800000); //
CreateDynamicObject(987,787.1523400,-1309.7784400,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,787.0559700,-1297.8354500,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,787.0416900,-1285.8757300,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.9732100,-1273.9030800,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.9078400,-1261.9229700,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.8521100,-1249.9781500,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.8010300,-1237.9992700,13.1340400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.7426800,-1226.0582300,13.9400300,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.6603400,-1214.0711700,15.5638400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.6603400,-1214.0711700,15.5638400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.6037000,-1202.0802000,17.3243400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.5963100,-1190.1114500,18.9494800,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.6215200,-1178.1221900,20.7472400,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,786.6024200,-1170.4408000,22.3621100,0.0000000,0.0000000,90.4199800); //
CreateDynamicObject(987,648.1460000,-1309.2269300,13.1340400,0.0000000,0.0000000,0.1200000); //
CreateDynamicObject(987,648.6475800,-1297.3188500,13.1340400,0.0000000,0.0000000,-92.1600300); //
CreateDynamicObject(987,649.1041900,-1285.3662100,13.1340400,0.0000000,0.0000000,-92.1600300); //
CreateDynamicObject(987,649.5370500,-1273.4008800,14.4705900,0.0000000,0.0000000,-92.1600300); //
CreateDynamicObject(987,647.2066000,-1261.6617400,14.4705900,0.0000000,0.0000000,-78.7800200); //
CreateDynamicObject(987,645.8811600,-1249.8150600,15.0858000,0.0000000,0.0000000,-83.8200400); //
CreateDynamicObject(987,644.8237900,-1237.9622800,15.9143600,0.0000000,0.0000000,-84.7200300); //
CreateDynamicObject(987,644.3582200,-1233.5388200,15.9143600,0.0000000,0.0000000,-84.7200300); //
CreateDynamicObject(987,655.6730300,-1237.0260000,15.5927100,0.0000000,0.0000000,-196.9800300); //
CreateDynamicObject(3279,652.4145500,-1303.9013700,12.5743200,0.0000000,0.0000000,89.9399900); //
CreateDynamicObject(3279,781.3386800,-1304.6667500,12.4743200,0.0000000,0.0000000,88.7400000); //
CreateDynamicObject(3279,650.2248500,-1239.7227800,14.8564500,0.0000000,0.0000000,-17.6400200); //
CreateDynamicObject(987,702.0681800,-1206.9420200,16.7976800,0.0000000,0.0000000,135.0599100); //
CreateDynamicObject(987,708.4437300,-1196.7550000,19.0225800,0.0000000,0.0000000,238.6199300); //
CreateDynamicObject(987,714.5520000,-1186.4914600,19.0225800,0.0000000,0.0000000,239.0399200); //
CreateDynamicObject(987,720.7538500,-1176.1928700,19.0225800,0.0000000,0.0000000,238.7999300); //
CreateDynamicObject(987,726.6691300,-1165.8559600,19.0225800,0.0000000,0.0000000,240.5399300); //
CreateDynamicObject(987,732.0888700,-1155.2569600,19.0225800,0.0000000,0.0000000,242.8198700); //
CreateDynamicObject(987,737.7489000,-1144.7775900,19.0225800,0.0000000,0.0000000,241.5599200); //
CreateDynamicObject(987,749.7517100,-1142.7128900,20.4035100,0.0000000,0.0000000,188.6398800); //
CreateDynamicObject(987,783.4758300,-1142.5148900,21.9576100,0.0000000,0.0000000,180.1797900); //
CreateDynamicObject(987,771.4897500,-1142.5411400,21.9576100,0.0000000,0.0000000,179.0397000); //
CreateDynamicObject(987,759.6091300,-1142.4549600,21.9576100,0.0000000,0.0000000,179.6996800); //
CreateDynamicObject(3279,781.9207200,-1168.6560100,20.4035500,0.0000000,0.0000000,179.9939000); //
// hq yakuza
CreateDynamicObject(9482,321.39999390,-1188.30004883,82.00000000,0.00000000,0.00000000,308.00000000); //object(chinagate) (1)
CreateDynamicObject(3471,316.00000000,-1194.00000000,76.50000000,0.00000000,0.00000000,310.00000000); //object(vgschinalion1) (1)
CreateDynamicObject(3471,328.29998779,-1184.19995117,76.50000000,0.00000000,0.00000000,311.99572754); //object(vgschinalion1) (2)
CreateDynamicObject(2098,327.79998779,-1183.59997559,77.40000153,0.00000000,0.00000000,38.00000000); //object(cj_slotcover1) (1)
CreateDynamicObject(2098,315.50000000,-1193.40002441,77.30000305,0.00000000,0.00000000,37.99572754); //object(cj_slotcover1) (2)
CreateDynamicObject(987,303.79998779,-1201.19995117,78.80000305,0.00000000,0.00000000,36.00000000); //object(elecfence_bar) (1)
CreateDynamicObject(987,294.10000610,-1208.19995117,78.80000305,0.00000000,0.00000000,35.99670410); //object(elecfence_bar) (2)
CreateDynamicObject(987,284.39999390,-1215.19995117,78.80000305,0.00000000,0.00000000,35.99670410); //object(elecfence_bar) (3)
CreateDynamicObject(987,282.89999390,-1216.30004883,78.80000305,0.00000000,0.00000000,36.00000000); //object(elecfence_bar) (4)
CreateDynamicObject(987,329.00000000,-1181.80004883,78.80000305,0.00000000,0.00000000,41.99670410); //object(elecfence_bar) (5)
CreateDynamicObject(1649,315.20001221,-1193.00000000,81.40000153,0.00000000,0.00000000,38.00000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,327.39999390,-1183.40002441,81.40000153,0.00000000,0.00000000,37.99621582); //object(wglasssmash) (11)
CreateDynamicObject(1649,327.50000000,-1183.40002441,81.40000153,0.00000000,0.00000000,217.99072266); //object(wglasssmash) (12)
CreateDynamicObject(1649,315.29980469,-1193.09960938,81.40000153,0.00000000,0.00000000,217.99620056); //object(wglasssmash) (13)
CreateDynamicObject(987,337.89999390,-1173.90002441,78.80000305,0.00000000,0.00000000,41.99572754); //object(elecfence_bar) (9)
CreateDynamicObject(987,341.50000000,-1170.59997559,78.80000305,0.00000000,0.00000000,41.99572754); //object(elecfence_bar) (10)
CreateDynamicObject(987,275.60000610,-1206.80004883,78.80000305,0.00000000,0.00000000,307.99670410); //object(elecfence_bar) (12)
CreateDynamicObject(987,267.89999390,-1197.59997559,78.80000305,0.00000000,0.00000000,309.99621582); //object(elecfence_bar) (13)
CreateDynamicObject(987,260.20001221,-1188.40002441,78.80000305,0.00000000,0.00000000,309.99572754); //object(elecfence_bar) (14)
CreateDynamicObject(987,252.50000000,-1179.19995117,78.80000305,0.00000000,0.00000000,309.99572754); //object(elecfence_bar) (15)
CreateDynamicObject(987,245.10000610,-1169.80004883,78.80000305,0.00000000,0.00000000,307.99572754); //object(elecfence_bar) (16)
CreateDynamicObject(987,237.39999390,-1160.59997559,78.80000305,0.00000000,0.00000000,309.99572754); //object(elecfence_bar) (17)
CreateDynamicObject(987,233.80000305,-1155.80004883,78.80000305,0.00000000,0.00000000,307.99572754); //object(elecfence_bar) (18)
CreateDynamicObject(987,350.29998779,-1162.69995117,78.80000305,0.00000000,0.00000000,127.99526978); //object(elecfence_bar) (22)
CreateDynamicObject(987,343.00000000,-1153.30004883,78.80000305,0.00000000,0.00000000,127.99072266); //object(elecfence_bar) (20)
CreateDynamicObject(987,335.60000610,-1143.90002441,78.80000305,0.00000000,0.00000000,125.99072266); //object(elecfence_bar) (21)
CreateDynamicObject(987,328.60000610,-1134.19995117,78.80000305,0.00000000,0.00000000,127.98568726); //object(elecfence_bar) (23)
CreateDynamicObject(987,321.29998779,-1124.80004883,78.80000305,0.00000000,0.00000000,125.98526001); //object(elecfence_bar) (24)
CreateDynamicObject(987,318.60000610,-1121.19995117,78.80000305,0.00000000,0.00000000,125.98022461); //object(elecfence_bar) (28)
CreateDynamicObject(987,302.29998779,-1107.80004883,79.50000000,0.00000000,356.00000000,157.98022461); //object(elecfence_bar) (29)
CreateDynamicObject(987,311.29980469,-1111.50000000,78.80000305,0.00000000,355.99548340,157.97790527); //object(elecfence_bar) (33)
CreateDynamicObject(987,245.39999390,-1153.00000000,78.80000305,0.00000000,0.00000000,193.99066162); //object(elecfence_bar) (34)
CreateDynamicObject(987,256.89999390,-1149.69995117,78.80000305,0.00000000,0.00000000,195.98559570); //object(elecfence_bar) (35)
CreateDynamicObject(987,268.50000000,-1146.80004883,78.80000305,0.00000000,0.00000000,193.98559570); //object(elecfence_bar) (36)
CreateDynamicObject(987,277.39999390,-1138.90002441,78.80000305,0.00000000,0.00000000,221.98510742); //object(elecfence_bar) (37)
CreateDynamicObject(987,285.10000610,-1129.69995117,78.80000305,0.00000000,0.00000000,229.98425293); //object(elecfence_bar) (38)
CreateDynamicObject(987,290.39999390,-1119.00000000,78.80000305,0.00000000,0.00000000,243.98229980); //object(elecfence_bar) (41)
CreateDynamicObject(987,292.00000000,-1107.00000000,79.19999695,0.00000000,2.00000000,261.97888184); //object(elecfence_bar) (42)
CreateDynamicObject(987,292.10000610,-1103.09997559,79.59999847,0.00000000,3.99951172,263.97448730); //object(elecfence_bar) (48)
CreateDynamicObject(968,303.89999390,-1184.50000000,80.90000153,0.00000000,344.00000000,42.00000000); //object(barrierturn) (1)
CreateDynamicObject(966,304.00000000,-1184.40002441,79.90000153,0.00000000,0.00000000,41.99523926); //object(bar_gatebar01) (1)
CreateDynamicObject(970,305.29998779,-1183.09997559,80.50000000,0.00000000,0.00000000,41.99523926); //object(fencesmallb) (1)
CreateDynamicObject(984,321.39941406,-1167.89941406,80.59999847,0.00000000,0.00000000,133.99475098); //object(fenceshit2) (2)
CreateDynamicObject(984,285.50000000,-1175.09997559,80.59999847,0.00000000,0.00000000,41.99475098); //object(fenceshit2) (4)
CreateDynamicObject(984,276.79998779,-1165.69995117,80.59999847,0.00000000,0.00000000,43.98974609); //object(fenceshit2) (5)
CreateDynamicObject(983,270.20001221,-1158.80004883,80.59999847,0.00000000,0.00000000,44.00000000); //object(fenceshit3) (5)
CreateDynamicObject(983,270.29998779,-1154.30004883,80.59999847,0.00000000,0.00000000,133.99475098); //object(fenceshit3) (6)
CreateDynamicObject(984,294.19921875,-1184.39941406,80.59999847,0.00000000,0.00000000,43.99475098); //object(fenceshit2) (6)
CreateDynamicObject(984,330.59960938,-1159.00000000,80.59999847,0.00000000,0.00000000,133.98925781); //object(fenceshit2) (7)
CreateDynamicObject(983,336.19921875,-1153.59960938,80.59999847,0.00000000,0.00000000,313.99475098); //object(fenceshit3) (7)
CreateDynamicObject(984,334.10000610,-1146.80004883,80.59999847,0.00000000,0.00000000,43.99472046); //object(fenceshit2) (8)
CreateDynamicObject(984,325.20001221,-1137.59997559,80.59999847,0.00000000,0.00000000,43.98925781); //object(fenceshit2) (9)
CreateDynamicObject(984,316.29998779,-1128.40002441,80.59999847,0.00000000,0.00000000,43.98425293); //object(fenceshit2) (10)
CreateDynamicObject(983,309.60000610,-1121.50000000,80.59999847,0.00000000,0.00000000,223.99475098); //object(fenceshit3) (9)
CreateDynamicObject(984,302.79998779,-1123.59997559,80.59999847,0.00000000,0.00000000,133.98382568); //object(fenceshit2) (11)
CreateDynamicObject(984,293.60000610,-1132.50000000,80.59999847,0.00000000,0.00000000,133.98376465); //object(fenceshit2) (12)
CreateDynamicObject(983,286.79980469,-1139.19921875,80.59999847,0.00000000,0.00000000,133.98925781); //object(fenceshit3) (10)
CreateDynamicObject(983,286.79998779,-1143.59997559,80.59999847,0.00000000,0.00000000,225.98925781); //object(fenceshit3) (11)
CreateDynamicObject(983,289.10000610,-1145.80004883,80.59999847,0.00000000,0.00000000,225.98875427); //object(fenceshit3) (12)
CreateDynamicObject(983,293.79998779,-1145.90002441,80.59999847,0.00000000,0.00000000,311.98876953); //object(fenceshit3) (13)
CreateDynamicObject(997,278.70001221,-1159.59997559,80.00000000,0.00000000,0.00000000,318.00000000); //object(lhouse_barrier3) (1)
CreateDynamicObject(997,282.50000000,-1155.80004883,80.00000000,0.00000000,0.00000000,315.99926758); //object(lhouse_barrier3) (2)
CreateDynamicObject(997,282.70001221,-1155.59997559,80.00000000,0.00000000,0.00000000,315.99429321); //object(lhouse_barrier3) (3)
CreateDynamicObject(997,286.50000000,-1151.89941406,80.00000000,0.00000000,0.00000000,313.98925781); //object(lhouse_barrier3) (5)
CreateDynamicObject(997,335.50000000,-1153.59997559,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (6)
CreateDynamicObject(997,288.60000610,-1178.09997559,79.90000153,0.00000000,0.00000000,43.99475098); //object(lhouse_barrier3) (7)
CreateDynamicObject(997,285.20001221,-1174.69995117,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (9)
CreateDynamicObject(996,282.20001221,-1144.59997559,80.69999695,0.00000000,0.00000000,313.99475098); //object(lhouse_barrier1) (5)
CreateDynamicObject(996,284.89999390,-1142.00000000,80.69999695,0.00000000,0.00000000,315.98925781); //object(lhouse_barrier1) (6)
CreateDynamicObject(1251,270.60000610,-1158.69995117,80.00000000,0.00000000,0.00000000,224.00000000); //object(smashbar) (1)
CreateDynamicObject(1251,271.79998779,-1157.59997559,80.00000000,0.00000000,0.00000000,223.99475098); //object(smashbar) (2)
CreateDynamicObject(1251,273.00000000,-1156.50000000,80.00000000,0.00000000,0.00000000,223.99475098); //object(smashbar) (3)
CreateDynamicObject(997,280.50000000,-1169.50000000,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (9)
CreateDynamicObject(1231,306.60000610,-1181.80004883,82.59999847,0.00000000,0.00000000,38.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,316.60000610,-1172.50000000,82.59999847,0.00000000,0.00000000,47.99621582); //object(streetlamp2) (3)
CreateDynamicObject(1231,284.39999390,-1174.00000000,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (5)
CreateDynamicObject(1231,298.59960938,-1189.29980469,82.59999847,0.00000000,0.00000000,47.99377441); //object(streetlamp2) (6)
CreateDynamicObject(1231,284.79998779,-1141.40002441,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (7)
CreateDynamicObject(1231,268.00000000,-1156.89941406,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (8)
CreateDynamicObject(1231,291.39999390,-1147.80004883,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (9)
CreateDynamicObject(1231,299.20001221,-1152.59997559,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (10)
CreateDynamicObject(1231,316.70001221,-1160.40002441,82.59999847,0.00000000,0.00000000,221.99023438); //object(streetlamp2) (11)
CreateDynamicObject(1231,302.00000000,-1155.79980469,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (12)
CreateDynamicObject(1231,306.70001221,-1163.19995117,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (13)
CreateDynamicObject(1231,338.50000000,-1151.40002441,82.59999847,0.00000000,0.00000000,221.98974609); //object(streetlamp2) (14)
CreateDynamicObject(1231,322.59960938,-1154.29980469,82.59999847,0.00000000,0.00000000,221.98974609); //object(streetlamp2) (15)
CreateDynamicObject(1231,326.89999390,-1139.19995117,82.59999847,0.00000000,0.00000000,315.98974609); //object(streetlamp2) (16)
CreateDynamicObject(1231,315.70001221,-1127.69995117,82.59999847,0.00000000,0.00000000,315.98876953); //object(streetlamp2) (17)
CreateDynamicObject(1231,307.39999390,-1119.19995117,82.59999847,0.00000000,0.00000000,315.98876953); //object(streetlamp2) (18)
CreateDynamicObject(1231,294.50000000,-1137.90002441,82.59999847,0.00000000,0.00000000,45.98876953); //object(streetlamp2) (20)
CreateDynamicObject(1231,300.39999390,-1132.09997559,82.69999695,0.00000000,0.00000000,45.98876953); //object(streetlamp2) (21)
CreateDynamicObject(1215,284.89999390,-1157.90002441,80.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,287.50000000,-1150.09997559,80.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,281.20001221,-1161.90002441,80.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,282.89999390,-1167.09997559,80.50000000,0.00000000,0.00000000,12.00000000); //object(bollardlight) (4)
CreateDynamicObject(1215,332.39999390,-1150.69995117,80.50000000,0.00000000,356.00000000,19.99707031); //object(bollardlight) (6)
CreateDynamicObject(1215,286.10000610,-1170.59997559,80.50000000,0.00000000,0.00000000,11.99707031); //object(bollardlight) (7)
CreateDynamicObject(1215,291.00000000,-1175.69995117,80.50000000,0.00000000,0.00000000,11.99707031); //object(bollardlight) (8)
CreateDynamicObject(638,287.70001221,-1143.90002441,80.59999847,0.00000000,0.00000000,43.99475098); //object(kb_planter_bush) (3)
CreateDynamicObject(638,289.60000610,-1145.80004883,80.59999847,0.00000000,0.00000000,43.99475098); //object(kb_planter_bush) (4)
CreateDynamicObject(638,290.70001221,-1146.90002441,80.59999847,0.00000000,0.00000000,43.99475098); //object(kb_planter_bush) (5)
CreateDynamicObject(983,282.20001221,-1143.59997559,80.59999847,0.00000000,0.00000000,133.98925781); //object(fenceshit3) (10)
CreateDynamicObject(1215,288.79980469,-1154.29980469,80.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1215,290.39999390,-1147.30004883,80.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(638,292.60000610,-1146.50000000,80.59999847,0.00000000,0.00000000,131.99475098); //object(kb_planter_bush) (6)
CreateDynamicObject(638,294.50000000,-1144.80004883,80.59999847,0.00000000,0.00000000,131.98977661); //object(kb_planter_bush) (7)
CreateDynamicObject(638,285.89999390,-1142.09997559,80.59999847,0.00000000,0.00000000,43.99475098); //object(kb_planter_bush) (8)
CreateDynamicObject(983,309.70001221,-1166.59997559,80.59999847,0.00000000,0.00000000,223.99475098); //object(fenceshit3) (7)
CreateDynamicObject(983,314.10000610,-1166.59997559,80.59999847,0.00000000,0.00000000,315.99475098); //object(fenceshit3) (7)
CreateDynamicObject(983,318.70001221,-1161.90002441,80.59999847,0.00000000,0.00000000,315.99426270); //object(fenceshit3) (7)
CreateDynamicObject(983,318.60000610,-1157.40002441,80.59999847,0.00000000,0.00000000,45.99429321); //object(fenceshit3) (7)
CreateDynamicObject(983,308.60000610,-1165.40002441,80.59999847,0.00000000,0.00000000,223.99475098); //object(fenceshit3) (7)
CreateDynamicObject(983,308.79998779,-1161.09997559,80.59999847,0.00000000,0.00000000,129.99475098); //object(fenceshit3) (7)
CreateDynamicObject(1231,311.89999390,-1168.59997559,82.59999847,0.00000000,0.00000000,129.99023438); //object(streetlamp2) (22)
CreateDynamicObject(638,309.10000610,-1161.40002441,80.59999847,0.00000000,0.00000000,131.98977661); //object(kb_planter_bush) (9)
CreateDynamicObject(638,307.79998779,-1162.59997559,80.59999847,0.00000000,0.00000000,131.98977661); //object(kb_planter_bush) (10)
CreateDynamicObject(638,308.20001221,-1164.40002441,80.59999847,0.00000000,0.00000000,223.98974609); //object(kb_planter_bush) (11)
CreateDynamicObject(638,310.00000000,-1166.30004883,80.59999847,0.00000000,0.00000000,223.98925781); //object(kb_planter_bush) (12)
CreateDynamicObject(638,311.20001221,-1167.59997559,80.59999847,0.00000000,0.00000000,223.98925781); //object(kb_planter_bush) (13)
CreateDynamicObject(638,313.00000000,-1167.09997559,80.59999847,0.00000000,0.00000000,315.98925781); //object(kb_planter_bush) (14)
CreateDynamicObject(638,314.79998779,-1165.19995117,80.59999847,0.00000000,0.00000000,315.98876953); //object(kb_planter_bush) (15)
CreateDynamicObject(638,316.70001221,-1163.30004883,80.59999847,0.00000000,0.00000000,315.98876953); //object(kb_planter_bush) (16)
CreateDynamicObject(638,318.39999390,-1161.50000000,80.59999847,0.00000000,0.00000000,315.98876953); //object(kb_planter_bush) (17)
CreateDynamicObject(638,319.60000610,-1160.30004883,80.59999847,0.00000000,0.00000000,315.98876953); //object(kb_planter_bush) (18)
CreateDynamicObject(638,319.39999390,-1158.69995117,80.59999847,0.00000000,0.00000000,45.98876953); //object(kb_planter_bush) (19)
CreateDynamicObject(1597,296.20001221,-1148.00000000,81.40000153,0.00000000,358.00000000,44.00000000); //object(cntrlrsac1) (1)
CreateDynamicObject(1597,306.29998779,-1158.80004883,81.40000153,0.00000000,357.99499512,43.99475098); //object(cntrlrsac1) (2)
CreateDynamicObject(1251,292.10000610,-1205.59997559,79.90000153,0.00000000,0.00000000,217.99475098); //object(smashbar) (4)
CreateDynamicObject(1251,295.29998779,-1202.90002441,79.90000153,0.00000000,0.00000000,217.99072266); //object(smashbar) (5)
CreateDynamicObject(1251,298.60000610,-1200.40002441,79.90000153,0.00000000,0.00000000,217.99072266); //object(smashbar) (6)
CreateDynamicObject(1251,302.20001221,-1197.59997559,79.90000153,0.00000000,0.00000000,217.99072266); //object(smashbar) (7)
CreateDynamicObject(1251,274.39999390,-1200.00000000,79.69999695,0.00000000,358.00000000,131.99069214); //object(smashbar) (8)
CreateDynamicObject(1251,271.70001221,-1197.09997559,79.69999695,0.00000000,357.99499512,131.98977661); //object(smashbar) (9)
CreateDynamicObject(1251,268.79998779,-1194.00000000,79.69999695,0.00000000,357.99499512,131.98977661); //object(smashbar) (10)
CreateDynamicObject(3439,277.79998779,-1160.59997559,84.00000000,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,287.60000610,-1151.09997559,84.00000000,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(3934,259.20001221,-1167.80004883,78.69999695,0.00000000,0.00000000,38.00000000); //object(helipad01) (1)
CreateDynamicObject(3934,269.39999390,-1179.50000000,79.00000000,0.00000000,0.00000000,40.00000000); //object(helipad01) (3)
CreateDynamicObject(1251,276.20001221,-1202.00000000,79.69999695,0.00000000,357.99499512,131.98977661); //object(smashbar) (11)
CreateDynamicObject(1251,281.89999390,-1208.50000000,79.80000305,0.00000000,357.99499512,131.98977661); //object(smashbar) (14)
CreateDynamicObject(1251,279.29980469,-1205.29980469,79.69999695,0.00000000,357.99499512,131.98974609); //object(smashbar) (12)
CreateDynamicObject(970,305.29998779,-1186.09997559,80.50000000,0.00000000,0.00000000,129.99523926); //object(fencesmallb) (1)
CreateDynamicObject(970,307.89999390,-1189.19995117,80.50000000,0.00000000,0.00000000,129.99023438); //object(fencesmallb) (1)
CreateDynamicObject(970,310.50000000,-1192.30004883,80.50000000,0.00000000,0.00000000,129.99023438); //object(fencesmallb) (1)
CreateDynamicObject(3666,254.10000610,-1167.69995117,78.80000305,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
CreateDynamicObject(3666,260.10000610,-1162.80004883,79.09999847,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
CreateDynamicObject(3666,264.29998779,-1168.30004883,79.19999695,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
CreateDynamicObject(3666,258.29998779,-1173.00000000,78.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
CreateDynamicObject(3666,268.60000610,-1184.69995117,79.40000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
CreateDynamicObject(3666,264.20001221,-1179.50000000,79.19999695,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
CreateDynamicObject(3666,270.10000610,-1174.50000000,79.40000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
CreateDynamicObject(3666,274.39999390,-1179.90002441,79.50000000,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
CreateDynamicObject(1223,348.70001221,-1168.80004883,76.30000305,0.00000000,0.00000000,302.00000000); //object(lampost_coast) (1)
CreateDynamicObject(1223,287.19921875,-1217.39941406,74.50000000,0.00000000,0.00000000,301.99768066); //object(lampost_coast) (3)
CreateDynamicObject(1223,300.10000610,-1207.90002441,74.90000153,0.00000000,0.00000000,301.99768066); //object(lampost_coast) (4)
CreateDynamicObject(1223,313.79980469,-1197.59960938,75.19999695,0.00000000,0.00000000,301.99768066); //object(lampost_coast) (5)
CreateDynamicObject(1223,334.09960938,-1181.00000000,75.69999695,0.00000000,0.00000000,301.99768066); //object(lampost_coast) (6)
CreateDynamicObject(1232,283.29998779,-1214.50000000,82.59999847,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (1)
CreateDynamicObject(1232,278.00000000,-1208.80004883,82.50000000,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (2)
CreateDynamicObject(1232,272.79998779,-1202.50000000,82.50000000,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (3)
CreateDynamicObject(1232,268.00000000,-1196.90002441,82.40000153,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,262.89999390,-1190.90002441,82.40000153,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (5)
CreateDynamicObject(1232,258.10000610,-1183.90002441,82.19999695,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (6)
CreateDynamicObject(1232,251.69999695,-1176.90002441,81.69999695,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (7)
CreateDynamicObject(1232,245.60000610,-1167.80004883,81.09999847,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (8)
CreateDynamicObject(1232,290.79998779,-1210.00000000,82.59999847,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (9)
CreateDynamicObject(1232,301.39999390,-1202.40002441,82.59999847,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (10)
CreateDynamicObject(1232,312.10000610,-1194.30004883,82.59999847,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (11)
CreateDynamicObject(3660,324.60000610,-1165.59997559,81.19999695,0.00000000,0.00000000,46.00000000); //object(lasairfbed_las) (1)
CreateDynamicObject(3660,333.60000610,-1156.80004883,81.19999695,0.00000000,0.00000000,45.99975586); //object(lasairfbed_las) (3)
CreateDynamicObject(3660,252.19999695,-1177.50000000,80.00000000,0.00000000,0.00000000,309.99975586); //object(lasairfbed_las) (4)
CreateDynamicObject(3660,262.50000000,-1190.00000000,80.00000000,0.00000000,0.00000000,309.99572754); //object(lasairfbed_las) (5)
CreateDynamicObject(3660,275.70001221,-1206.00000000,80.00000000,0.00000000,0.00000000,309.99572754); //object(lasairfbed_las) (6)
CreateDynamicObject(3409,295.29998779,-1107.90002441,81.40000153,0.00000000,0.00000000,346.00000000); //object(grassplant) (1)
CreateDynamicObject(3409,295.20001221,-1108.80004883,81.40000153,0.00000000,0.00000000,345.99792480); //object(grassplant) (2)
CreateDynamicObject(3409,297.70001221,-1109.00000000,81.40000153,0.00000000,0.00000000,345.99792480); //object(grassplant) (3)
CreateDynamicObject(3409,297.70001221,-1108.30004883,81.40000153,0.00000000,0.00000000,345.99792480); //object(grassplant) (4)
CreateDynamicObject(3050,296.00000000,-1114.09997559,83.00000000,0.00000000,0.00000000,338.00000000); //object(des_quarrygate2) (1)
CreateDynamicObject(3050,300.29998779,-1115.90002441,83.00000000,0.00000000,0.00000000,338.00000000); //object(des_quarrygate2) (2)
CreateDynamicObject(3050,303.50000000,-1110.09997559,83.00000000,0.00000000,0.00000000,69.99987793); //object(des_quarrygate2) (3)
CreateDynamicObject(14638,303.39999390,-1110.09997559,80.59999847,0.00000000,0.00000000,342.00000000); //object(ab_mafsuitedoor) (1)
CreateDynamicObject(3409,294.70001221,-1110.50000000,81.09999847,0.00000000,0.00000000,0.00000000); //object(grassplant) (5)
CreateDynamicObject(3409,298.50000000,-1111.50000000,80.90000153,0.00000000,0.00000000,0.00000000); //object(grassplant) (6)
CreateDynamicObject(3409,300.39999390,-1111.30004883,80.90000153,0.00000000,6.00000000,340.00000000); //object(grassplant) (7)
CreateDynamicObject(997,283.70001221,-1173.00000000,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (9)
CreateDynamicObject(1215,287.60000610,-1172.30004883,80.50000000,0.00000000,0.00000000,11.99707031); //object(bollardlight) (11)
CreateDynamicObject(997,291.69921875,-1181.29980469,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (6)
CreateDynamicObject(997,332.60000610,-1150.50000000,79.90000153,0.00000000,0.00000000,43.98925781); //object(lhouse_barrier3) (6)
CreateDynamicObject(1215,294.09960938,-1179.00000000,80.50000000,0.00000000,0.00000000,11.99707031); //object(bollardlight) (12)
CreateDynamicObject(1215,335.29998779,-1153.80004883,80.50000000,0.00000000,355.99548340,19.99511719); //object(bollardlight) (13)
CreateDynamicObject(870,306.10000610,-1184.69995117,80.19999695,0.00000000,0.00000000,0.00000000); //object(veg_pflowers2wee) (1)
CreateDynamicObject(870,307.60000610,-1186.90002441,80.19999695,0.00000000,2.00000000,74.00000000); //object(veg_pflowers2wee) (2)
CreateDynamicObject(870,308.60000610,-1188.69995117,80.19999695,0.00000000,0.00000000,68.00000000); //object(veg_pflowers2wee) (3)
CreateDynamicObject(870,310.10000610,-1190.90002441,80.19999695,0.00000000,0.00000000,76.00000000); //object(veg_pflowers2wee) (4)
CreateDynamicObject(9833,263.20001221,-1174.90002441,77.50000000,0.00000000,0.00000000,34.00000000); //object(fountain_sfw) (1)
//familia 1
CreateDynamicObject(19377,793.7349900,-1519.2766100,14.5860000,0.0000000,0.0000000,-15.3600000); //
CreateDynamicObject(19377,799.4542200,-1512.9995100,14.5860000,0.0000000,0.0000000,-70.5600000); //
CreateDynamicObject(19377,786.4896200,-1549.1671100,14.5860000,0.0000000,0.0000000,-11.8800000); //
CreateDynamicObject(19377,806.0244100,-1557.2305900,14.5860000,0.0000000,0.0000000,-122.8200000); //
CreateDynamicObject(19377,814.1236000,-1562.4505600,14.5860000,0.0000000,0.0000000,-122.8200000); //
CreateDynamicObject(19377,815.2072100,-1563.1980000,14.5860000,0.0000000,0.0000000,-122.1000000); //
CreateDynamicObject(19377,829.4846200,-1566.4293200,14.5860000,0.0000000,0.0000000,-93.3600000); //
CreateDynamicObject(19377,836.4033800,-1566.8066400,14.5860000,0.0000000,0.0000000,-93.3600000); //
CreateDynamicObject(19377,844.9882800,-1564.3568100,14.5860000,0.0000000,0.0000000,-54.4799000); //
CreateDynamicObject(19377,852.8184800,-1558.7991900,14.5860000,0.0000000,0.0000000,-54.4799000); //
CreateDynamicObject(19377,855.0106200,-1557.2050800,14.5860000,0.0000000,0.0000000,-54.4799000); //
CreateDynamicObject(19377,824.1237200,-1566.0404100,14.5860000,0.0000000,0.0000000,-93.3600000); //
CreateDynamicObject(19377,853.9641700,-1554.5142800,11.1420000,0.0000000,0.0000000,-89.1000000); //
CreateDynamicObject(19377,844.3441200,-1554.5839800,11.1341000,0.0000000,0.0000000,-90.1800000); //
CreateDynamicObject(19377,829.5291100,-1554.5434600,11.1353000,0.0000000,0.0000000,-89.9400000); //
CreateDynamicObject(19377,806.8911100,-1554.5725100,11.2473000,0.0000000,0.0000000,-90.1800000); //
CreateDynamicObject(19377,807.6113300,-1554.5576200,11.2333000,0.0000000,0.0000000,-90.1800000); //
CreateDynamicObject(19370,857.2951000,-1556.2856400,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,854.1939100,-1556.2934600,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,854.1809100,-1559.8134800,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,850.9869400,-1556.2917500,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,847.7739300,-1556.3005400,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,844.5672000,-1556.3275100,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,850.9809000,-1559.7840600,16.3623000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,847.7724600,-1559.7497600,16.3763000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,847.7658100,-1563.0395500,16.3903000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,841.4051500,-1556.2904100,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,838.2061800,-1556.3046900,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,844.5799600,-1559.7960200,16.3763000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,844.5946700,-1563.3105500,16.4183000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,835.0889900,-1556.3132300,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,831.9010000,-1556.2938200,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,828.7175900,-1556.2923600,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19377,822.4603300,-1554.5540800,11.1353000,0.0000000,0.0000000,-89.9400000); //
CreateDynamicObject(19370,825.5449200,-1556.2876000,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,822.3617600,-1556.2990700,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,815.9542200,-1556.3192100,16.3623000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,812.7418800,-1556.3114000,16.3903000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,809.5809900,-1556.3277600,16.4043000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,806.3981900,-1556.3335000,16.4323000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,803.2882100,-1556.3354500,16.4323000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,841.5175200,-1559.7548800,16.3763000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,841.5112300,-1563.2369400,16.4323000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,841.4893800,-1566.7242400,16.4603000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,844.6967800,-1566.8223900,16.4603000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,838.2970000,-1559.7957800,16.4043000,0.2400000,89.9999800,90.4199900); //
CreateDynamicObject(19370,835.1240200,-1559.7991900,16.4043000,0.2400000,89.9999800,90.4199900); //
CreateDynamicObject(19370,831.8993500,-1559.7857700,16.4043000,0.2400000,89.9999800,90.4199900); //
CreateDynamicObject(19370,828.7116700,-1559.7878400,16.4183000,0.2400000,90.0000000,90.4200000); //
CreateDynamicObject(19370,825.5097700,-1559.7797900,16.4183000,0.2400000,90.0000000,90.4200000); //
CreateDynamicObject(19370,822.2888800,-1559.7752700,16.4183000,0.2400000,90.0000000,90.4200000); //
CreateDynamicObject(19370,819.1067500,-1559.7617200,16.4183000,0.2400000,90.0000000,90.1200100); //
CreateDynamicObject(19370,815.9733900,-1559.7880900,16.4463000,0.2400000,90.0000000,90.1200000); //
CreateDynamicObject(19370,812.7679400,-1559.7733200,16.4603000,0.2400000,90.0000000,90.1200000); //
CreateDynamicObject(19370,809.6087600,-1559.7769800,16.4603000,0.2400000,90.0000000,90.1200000); //
CreateDynamicObject(19370,806.4337800,-1559.8029800,16.4603000,0.2400000,90.0000000,90.1200000); //
CreateDynamicObject(19385,826.7401700,-1554.6055900,18.1015000,0.0000000,0.0000000,90.1200000); //
CreateDynamicObject(19370,838.3533900,-1563.2540300,16.4323000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,838.3082900,-1566.7419400,16.4743000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19370,835.1601600,-1563.2060500,16.4463000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,831.9329200,-1563.2489000,16.4463000,0.4200000,90.4200000,90.1799900); //
CreateDynamicObject(19370,828.7645300,-1563.2634300,16.4603000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,825.5772700,-1563.2210700,16.4603000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,822.4037500,-1563.2379200,16.4603000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,819.2103900,-1563.2561000,16.4743000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,816.0566400,-1563.2690400,16.4743000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,813.0244800,-1563.2834500,16.4743000,0.4200000,90.4200000,90.1800000); //
CreateDynamicObject(19370,835.1543000,-1566.7120400,16.4743000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,831.9270000,-1566.7430400,16.4743000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,828.7208300,-1566.7340100,16.4883000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,825.6139500,-1566.6573500,16.4883000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,822.5695800,-1566.7074000,16.5023000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(19370,819.4075900,-1566.6903100,16.5023000,0.4200000,90.4200000,89.9400000); //
CreateDynamicObject(1649,822.9238900,-1554.5502900,18.0404000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19370,819.1525300,-1556.2902800,16.3483000,0.4200000,90.4200000,90.0000000); //
CreateDynamicObject(19355,819.1727900,-1554.6146200,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1649,815.3485700,-1554.5661600,18.0404000,0.0000000,0.0000000,0.0600000); //
CreateDynamicObject(19355,811.6035200,-1554.5970500,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,808.4021000,-1554.5711700,18.1032000,0.0000000,0.0000000,89.8800000); //
CreateDynamicObject(19355,805.1984900,-1554.5614000,18.1032000,0.0000000,0.0000000,89.8800000); //
CreateDynamicObject(19355,802.0217900,-1554.5874000,18.1032000,0.0000000,0.0000000,91.0800000); //
CreateDynamicObject(1649,830.5287500,-1554.5267300,18.0404000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19355,834.3060300,-1554.5544400,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19385,845.1378200,-1554.6470900,18.1155000,0.0000000,0.0000000,90.1200000); //
CreateDynamicObject(1649,838.1322600,-1554.5535900,18.0404000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19355,841.9339000,-1554.6110800,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,848.3320300,-1554.6148700,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,851.5321700,-1554.5946000,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,854.7324200,-1554.5743400,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,857.9326200,-1554.5741000,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19377,806.5534100,-1559.7825900,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,816.1853000,-1559.7691700,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,825.8350800,-1559.7512200,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,835.4589800,-1559.7231400,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,845.1019300,-1559.6949500,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,854.7233900,-1559.6783400,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,826.0338700,-1570.2420700,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,816.4231600,-1570.2668500,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,835.6792600,-1570.1864000,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(19377,845.1926300,-1570.0476100,19.7686000,-0.1199900,-89.8800500,-89.9399800); //
CreateDynamicObject(1491,825.9386000,-1554.5365000,16.4177300,0.0000000,0.0000000,0.1800000); //
CreateDynamicObject(1491,844.3314200,-1554.5771500,16.4177300,0.0000000,0.0000000,0.1800000); //
CreateDynamicObject(19370,845.1448400,-1552.7484100,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1660800,-1549.2854000,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1788900,-1545.7902800,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1656500,-1542.3691400,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1843900,-1538.8960000,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1960400,-1535.4611800,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(19370,845.1910400,-1532.0095200,16.3343000,0.4200000,90.4199800,90.0000200); //
CreateDynamicObject(3850,843.6180400,-1552.7586700,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,843.6133400,-1549.2823500,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,843.6210300,-1545.8167700,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,843.6327500,-1542.3327600,16.9277000,0.0000000,0.0000000,-0.2400000); //
CreateDynamicObject(3850,843.6579000,-1538.8686500,16.9277000,0.0000000,0.0000000,-0.2400000); //
CreateDynamicObject(3850,843.6718100,-1535.3880600,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,846.6934200,-1552.7313200,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,846.7003800,-1549.2901600,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,846.7079500,-1545.8309300,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,846.7293100,-1542.3958700,16.9277000,0.0000000,0.0000000,-0.2400000); //
CreateDynamicObject(3850,846.7644700,-1538.9602100,16.9277000,0.0000000,0.0000000,-0.2400000); //
CreateDynamicObject(3850,846.7757000,-1535.5098900,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,846.7951000,-1532.0533400,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3850,843.6904900,-1531.9654500,16.9277000,0.0000000,0.0000000,-0.3000000); //
CreateDynamicObject(3499,845.1052900,-1550.6187700,10.8448300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3499,845.1052900,-1538.1661400,10.8448000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(10009,826.6201800,-1549.3806200,13.1969000,0.0000000,0.0000000,-88.8600500); //
CreateDynamicObject(1649,815.3857400,-1554.5192900,18.0404000,0.0000000,0.0000000,180.0600600); //
CreateDynamicObject(1649,822.9998200,-1554.5264900,18.0404000,0.0000000,0.0000000,180.0600600); //
CreateDynamicObject(1649,830.5782500,-1554.5064700,18.0404000,0.0000000,0.0000000,180.0600600); //
CreateDynamicObject(1649,838.1091300,-1554.4998800,18.0404000,0.0000000,0.0000000,180.0600600); //
CreateDynamicObject(19377,858.9542800,-1549.6084000,14.5860000,0.0000000,0.0000000,-0.8400000); //
CreateDynamicObject(19377,859.1037000,-1540.0389400,14.5860000,0.0000000,0.0000000,-0.8400000); //
CreateDynamicObject(19377,851.5863000,-1533.3283700,14.9004000,0.0000000,0.0000000,86.7000000); //
CreateDynamicObject(19377,859.0599400,-1538.5793500,14.5860000,0.0000000,0.0000000,-0.8400000); //
CreateDynamicObject(19377,854.5493800,-1533.4797400,14.5860000,0.0000000,0.0000000,86.7000100); //
CreateDynamicObject(3361,845.4105200,-1535.9914600,18.0347000,0.0000000,0.0000000,-92.6400000); //
CreateDynamicObject(19377,843.6528300,-1535.9428700,11.1689900,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(19377,846.7396900,-1535.8610800,11.1410000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(19355,835.8870800,-1532.5052500,21.9209000,0.0000000,0.0000000,87.3000000); //
CreateDynamicObject(19355,845.2125900,-1540.6623500,14.4938000,0.0000000,0.0000000,90.5399900); //
CreateDynamicObject(19355,845.2125900,-1540.6623500,13.4622300,0.0000000,0.0000000,90.5399900); //
CreateDynamicObject(1649,839.7127700,-1532.7395000,21.8411000,0.0000000,0.0000000,177.3000900); //
CreateDynamicObject(1649,839.6830400,-1532.7954100,21.8411000,0.0000000,0.0000000,357.3601400); //
CreateDynamicObject(19385,843.7257100,-1529.8488800,21.9081000,0.0000000,0.0000000,89.4600000); //
CreateDynamicObject(19355,842.0065300,-1531.3361800,21.9209000,0.0000000,0.0000000,178.0196500); //
CreateDynamicObject(3850,842.8508300,-1532.9013700,20.6436000,0.0000000,0.0000000,87.0000000); //
CreateDynamicObject(3850,848.4382900,-1533.1567400,20.6436000,0.0000000,0.0000000,87.0000000); //
CreateDynamicObject(3850,849.2831400,-1531.4635000,20.6436000,0.0000000,0.0000000,177.5401300); //
CreateDynamicObject(1649,847.0929600,-1530.0040300,21.8411000,0.0000000,0.0000000,357.6601300); //
CreateDynamicObject(1649,847.0888700,-1529.9433600,21.8411000,0.0000000,0.0000000,177.3000900); //
CreateDynamicObject(19355,849.3860500,-1528.5069600,21.9209000,0.0000000,0.0000000,178.0196500); //
CreateDynamicObject(1491,842.9447000,-1529.8332500,20.1075000,0.0000000,0.0000000,-0.7800000); //
CreateDynamicObject(19377,839.3302000,-1527.5787400,23.6373100,-0.1199900,-89.8800500,-93.1199500); //
CreateDynamicObject(19377,844.7459100,-1527.8160400,23.6373100,-0.1199900,-89.8800500,-93.1199500); //
CreateDynamicObject(3499,848.6146900,-1532.5249000,18.2109000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19355,849.5564000,-1525.3098100,21.9209000,0.0000000,0.0000000,176.8797000); //
CreateDynamicObject(19355,834.4467200,-1530.7893100,21.9209000,0.0000000,0.0000000,176.8797000); //
CreateDynamicObject(19355,834.6308000,-1527.6037600,21.9209000,0.0000000,0.0000000,176.1597300); //
CreateDynamicObject(19355,834.8716400,-1524.4637500,21.9209000,0.0000000,0.0000000,175.4397600); //
CreateDynamicObject(19355,835.0804400,-1521.3953900,21.9209000,0.0000000,0.0000000,175.4397600); //
CreateDynamicObject(19355,849.9552600,-1517.7414600,21.9209000,0.0000000,0.0000000,176.7597000); //
CreateDynamicObject(1649,849.8033400,-1521.5468800,21.8411000,0.0000000,0.0000000,446.7601000); //
CreateDynamicObject(1649,849.7850300,-1521.4897500,21.8411000,0.0000000,0.0000000,626.2801500); //
CreateDynamicObject(19355,848.5081800,-1516.1193800,21.9209000,0.0000000,0.0000000,266.7597400); //
CreateDynamicObject(19377,845.1314100,-1521.1159700,23.6373100,-0.1199900,-89.8800500,-93.1199500); //
CreateDynamicObject(19355,845.3691400,-1515.9272500,21.9209000,0.0000000,0.0000000,266.7597400); //
CreateDynamicObject(19355,842.2097200,-1515.7547600,21.9209000,0.0000000,0.0000000,266.7597400); //
CreateDynamicObject(19355,839.0569500,-1515.5554200,21.9209000,0.0000000,0.0000000,266.7597400); //
CreateDynamicObject(19355,835.3311800,-1518.2082500,21.9209000,0.0000000,0.0000000,175.4397600); //
CreateDynamicObject(19355,835.4280400,-1517.0026900,21.9209000,0.0000000,0.0000000,175.4397600); //
CreateDynamicObject(19355,837.0828900,-1515.4566700,21.9209000,0.0000000,0.0000000,267.4197100); //
CreateDynamicObject(19377,839.7113600,-1520.8211700,23.6373100,-0.1199900,-89.8800500,-93.4199400); //
CreateDynamicObject(19370,844.8870200,-1528.0947300,20.0711000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,847.8392900,-1528.3059100,20.0711000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,841.6901200,-1527.9471400,20.0851000,0.0600000,89.8200000,87.2400000); //
CreateDynamicObject(19370,838.4877900,-1527.7828400,20.0851000,0.0600000,89.8200000,87.2400000); //
CreateDynamicObject(19370,840.3630400,-1531.0577400,20.0851000,0.0600000,89.8200000,86.7000200); //
CreateDynamicObject(19370,837.1590000,-1530.8796400,20.0851000,0.0600000,89.8200000,86.7000200); //
CreateDynamicObject(19370,836.1460000,-1530.7253400,20.0851000,0.0600000,89.8200000,86.4000200); //
CreateDynamicObject(19370,836.3314800,-1527.2203400,20.0991000,0.0600000,89.8200000,87.2400000); //
CreateDynamicObject(19370,847.9441500,-1524.8098100,20.0711000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,844.7412700,-1524.6053500,20.0851000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,841.5449800,-1524.4400600,20.0991000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,838.3651100,-1524.2703900,20.1131000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,836.5571900,-1523.7491500,20.1271000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,836.8654200,-1520.2995600,20.1271000,0.0600000,89.8200000,85.6200100); //
CreateDynamicObject(19370,837.0997300,-1517.3138400,20.1271000,0.0600000,89.8200000,85.6200400); //
CreateDynamicObject(19370,839.7644700,-1520.8576700,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,842.9063100,-1521.0103800,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,846.0920400,-1521.1735800,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,848.1764500,-1521.2940700,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,848.0119600,-1524.5629900,20.0711000,0.0600000,89.8200000,86.8800000); //
CreateDynamicObject(19370,848.3181200,-1517.9460400,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,845.2648300,-1517.6324500,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,842.1010100,-1517.4689900,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(19370,839.6270800,-1517.4421400,20.1271000,0.0600000,89.8200000,87.2399900); //
CreateDynamicObject(3749,791.2991300,-1535.3813500,18.1242000,0.0000000,0.0000000,-104.5800200); //
CreateDynamicObject(19377,792.7899800,-1522.8601100,14.5860000,0.0000000,0.0000000,-15.3600000); //
CreateDynamicObject(19787,813.4783900,-1561.9576400,17.9486800,0.0000000,0.0000000,146.9999500); //
CreateDynamicObject(1703,815.0087900,-1558.0589600,16.5364700,0.0000000,0.0000000,-39.7800100); //
CreateDynamicObject(1704,817.0214200,-1560.6140100,16.5313100,0.0000000,0.0000000,-78.8999900); //
CreateDynamicObject(1704,813.1035200,-1557.3166500,16.5313100,0.0000000,0.0000000,-10.2599700); //
CreateDynamicObject(2315,813.0111700,-1561.1765100,16.5443600,0.0000000,0.0000000,-32.8799600); //
CreateDynamicObject(2028,813.7349900,-1561.5004900,17.1303000,0.0000000,0.0000000,-213.3598900); //
CreateDynamicObject(2195,803.7616000,-1555.0589600,17.1112500,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2811,812.1849400,-1560.6269500,16.5492300,0.0000000,0.0000000,-47.2800000); //
CreateDynamicObject(14455,806.6165800,-1557.5097700,17.9311000,0.0000000,0.0000000,-33.5399900); //
CreateDynamicObject(2008,830.0814200,-1562.6483200,16.5370200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2008,833.6442900,-1562.6206100,16.5370200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2167,828.8486300,-1566.5495600,16.5660300,0.0000000,0.0000000,174.3599900); //
CreateDynamicObject(2167,833.4412800,-1566.7756300,16.5660300,0.0000000,0.0000000,179.3400100); //
CreateDynamicObject(1806,830.6298200,-1564.2551300,16.5442300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1806,834.3150600,-1564.2603800,16.5442300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,828.2993800,-1565.4578900,14.5860000,0.0000000,0.0000000,1.6800000); //
CreateDynamicObject(19385,826.6493500,-1560.6973900,18.1015000,0.0000000,0.0000000,90.1200000); //
CreateDynamicObject(19377,820.0327800,-1565.4779100,14.5860000,0.0000000,0.0000000,1.6800000); //
CreateDynamicObject(19355,823.4592900,-1560.7131300,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19355,821.4185200,-1560.7282700,18.1032000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1491,825.8754900,-1560.7139900,16.4177300,0.0000000,0.0000000,0.1800000); //
CreateDynamicObject(1714,821.3241600,-1565.2630600,16.5615300,0.0000000,0.0000000,127.9800400); //
CreateDynamicObject(2184,823.7889400,-1564.8201900,16.5523500,0.0000000,0.0000000,121.9200400); //
CreateDynamicObject(19893,823.0296000,-1564.5535900,17.3269800,0.0000000,0.0000000,-73.4999800); //
CreateDynamicObject(19807,822.4959700,-1563.8273900,17.3831000,0.0000000,0.0000000,-43.4400000); //
CreateDynamicObject(1703,827.6684000,-1563.8453400,16.5608600,0.0000000,0.0000000,-89.2800100); //
CreateDynamicObject(1817,825.6155400,-1564.4294400,16.5567100,0.0000000,0.0000000,-88.9799800); //
CreateDynamicObject(1806,825.0867900,-1564.1118200,16.5366800,0.0000000,0.0000000,109.5600400); //
CreateDynamicObject(1806,824.1237200,-1562.6969000,16.5366800,0.0000000,0.0000000,133.7400200); //
CreateDynamicObject(2266,820.5515100,-1563.2341300,18.0902300,0.0000000,0.0000000,91.0200000); //
CreateDynamicObject(2270,823.5781300,-1565.4154100,18.2420100,0.0000000,0.0000000,181.1400300); //
CreateDynamicObject(2332,820.6256100,-1566.0368700,17.0394300,0.0000000,0.0000000,178.9799500); //
CreateDynamicObject(1703,847.1168800,-1562.0892300,16.4525000,0.0000000,0.0000000,-144.3600000); //
CreateDynamicObject(1703,843.9084500,-1564.3939200,16.4525000,0.0000000,0.0000000,-142.4400300); //
CreateDynamicObject(2251,844.8157300,-1563.8179900,17.3630000,0.0000000,0.0000000,-99.4800000); //
CreateDynamicObject(1722,834.2428600,-1560.9338400,16.4949600,0.0000000,0.0000000,-178.1999700); //
CreateDynamicObject(1722,830.5701900,-1561.0330800,16.4949600,0.0000000,0.0000000,-178.1999700); //
CreateDynamicObject(1722,824.8989300,-1560.4494600,16.4949600,0.0000000,0.0000000,-1.1999700); //
CreateDynamicObject(1722,822.9788800,-1560.4525100,16.4949600,0.0000000,0.0000000,-1.1999700); //
CreateDynamicObject(1722,820.7986500,-1560.4539800,16.4949600,0.0000000,0.0000000,-1.1999700); //
CreateDynamicObject(19174,822.9897500,-1560.6203600,18.5088600,0.0000000,0.0000000,-179.5799700); //
CreateDynamicObject(19175,838.7244900,-1566.8508300,18.3627600,0.0000000,0.0000000,177.1800400); //
CreateDynamicObject(1817,841.8670000,-1562.8154300,16.5567100,0.0000000,0.0000000,-141.4799700); //
CreateDynamicObject(1817,844.9308500,-1560.2774700,16.5567100,0.0000000,0.0000000,-143.9399000); //
CreateDynamicObject(2195,856.4965200,-1555.2179000,16.9469300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1829,836.6414800,-1516.0739700,20.7011000,0.0000000,0.0000000,-0.6600000); //
CreateDynamicObject(2332,837.4973800,-1515.6633300,20.7022000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2332,837.4973800,-1515.6633300,21.6133000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2332,836.6024800,-1515.6632100,21.6133000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(16782,835.3455200,-1524.8347200,21.6460100,0.0000000,0.0000000,-2.6400000); //
CreateDynamicObject(2747,841.1752900,-1522.1912800,20.6058000,0.0000000,0.0000000,24.0600000); //
CreateDynamicObject(1550,840.9911500,-1522.2258300,21.1347000,22.2600000,76.6200000,-14.9400000); //
CreateDynamicObject(348,841.2871100,-1521.9832800,21.0509000,-79.0800000,-3.3000000,26.2800000); //
CreateDynamicObject(348,841.6063200,-1522.0069600,21.0509000,-79.0800000,-3.3000000,-67.4400000); //
CreateDynamicObject(1703,841.4808300,-1516.3580300,20.1753000,0.0000000,0.0000000,-2.5800000); //
CreateDynamicObject(1703,845.5501700,-1516.6601600,20.1753000,0.0000000,0.0000000,-3.9000000); //
CreateDynamicObject(2358,849.2177100,-1525.5949700,20.2552100,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2358,849.2843000,-1524.8262900,20.2552100,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2358,849.1596100,-1526.5048800,20.2552100,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2358,849.1052200,-1527.3317900,20.2552100,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2358,848.8976400,-1525.9263900,20.5582200,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2619,842.3231800,-1515.9879200,22.0211400,0.0000000,0.0000000,88.2000100); //
CreateDynamicObject(2619,846.5526100,-1516.2657500,22.0211400,0.0000000,0.0000000,88.2000100); //
CreateDynamicObject(937,843.1986700,-1521.8034700,20.6529000,0.0000000,0.0000000,-2.7600000); //
CreateDynamicObject(1550,842.6051000,-1521.8372800,21.1968000,22.2600000,76.6200000,-135.7199600); //
CreateDynamicObject(355,843.2943100,-1521.8900100,21.1693000,-84.6000000,34.9200000,0.0000000); //
CreateDynamicObject(937,845.5018900,-1521.9128400,20.6529000,0.0000000,0.0000000,-2.7000000); //
CreateDynamicObject(937,847.9121700,-1522.0297900,20.6529000,0.0000000,0.0000000,-2.7600000); //
CreateDynamicObject(351,844.8004200,-1521.9056400,21.1876000,-79.2600000,43.7400000,42.5400100); //
CreateDynamicObject(372,845.9799800,-1522.2376700,21.1693000,-88.8000000,-44.7600000,0.0000000); //
CreateDynamicObject(348,845.2866800,-1522.1564900,21.1489000,-79.0800000,-3.3000000,-18.1800000); //
CreateDynamicObject(355,848.0340600,-1521.8120100,21.1693000,-84.6000000,34.9200000,195.7799500); //
CreateDynamicObject(355,847.9210800,-1522.2801500,21.1693000,-84.6000000,34.9200000,195.7799500); //
CreateDynamicObject(355,848.5901500,-1522.2188700,21.1693000,-84.6000000,34.9200000,195.7799500); //
CreateDynamicObject(2358,848.7294300,-1526.0015900,20.2552100,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2358,849.0766600,-1525.0821500,20.5582200,0.0000000,0.0000000,265.1970500); //
CreateDynamicObject(2195,844.5448600,-1516.5720200,20.7279700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1550,841.0670800,-1516.0031700,20.6256900,0.0000000,0.0000000,156.2999700); //
CreateDynamicObject(1550,840.9794300,-1516.5365000,20.6256900,0.0000000,0.0000000,156.2999700); //
CreateDynamicObject(1550,840.5699500,-1516.1142600,20.6256900,0.0000000,0.0000000,156.2999700); //
CreateDynamicObject(1722,839.0496800,-1530.5633500,20.1741000,0.0000000,0.0000000,84.7200000); //
CreateDynamicObject(1722,839.1390400,-1528.9556900,20.1741000,0.0000000,0.0000000,89.5200000); //
CreateDynamicObject(1722,839.1909800,-1527.2551300,20.1741000,0.0000000,0.0000000,89.5200000); //
CreateDynamicObject(1722,841.0997900,-1530.6298800,20.1741000,0.0000000,0.0000000,89.5200000); //
CreateDynamicObject(1722,841.1562500,-1528.7972400,20.1741000,0.0000000,0.0000000,89.5200000); //
CreateDynamicObject(1722,840.8513800,-1527.2163100,20.1741000,0.0000000,0.0000000,89.5200000); //
CreateDynamicObject(2616,834.6821900,-1529.1466100,21.3463700,0.0000000,0.0000000,87.6600000); //
CreateDynamicObject(19377,797.3281900,-1554.1401400,14.6294000,0.0000000,0.0000000,-94.4400000); //
CreateDynamicObject(19377,790.7755100,-1553.5356400,14.6339000,0.0000000,0.0000000,-95.7000000); //
CreateDynamicObject(1690,845.5297900,-1523.2954100,24.3107000,0.0000000,0.0000000,-92.4600000); //
CreateDynamicObject(4588,820.7988900,-1558.3881800,21.2297800,0.0000000,0.0000000,0.4800000); //
CreateDynamicObject(1690,829.1409900,-1558.7402300,20.3922000,0.0000000,0.0000000,89.4600000); //
CreateDynamicObject(1688,835.6943400,-1562.5424800,20.8698000,0.0000000,0.0000000,-0.7800000); //
CreateDynamicObject(1688,828.9937100,-1562.2973600,20.8698000,0.0000000,0.0000000,-0.7800000); //
CreateDynamicObject(19377,829.6981800,-1527.4945100,12.6563000,-0.1200000,-89.8801000,-90.7200000); //
CreateDynamicObject(19377,839.0263100,-1522.4611800,12.6143000,-0.1200000,-89.8801000,-90.7200000); //
CreateDynamicObject(19377,820.3664600,-1527.4152800,12.6563000,-0.1200000,-89.8801000,-90.1200000); //
CreateDynamicObject(19377,810.7827800,-1527.3778100,12.6423000,-0.1200000,-89.8801000,-89.9999000); //
CreateDynamicObject(19377,810.7284500,-1516.8923300,12.6983000,-0.1200000,-89.8801000,-89.3399000); //
CreateDynamicObject(19377,820.2108200,-1517.3243400,12.6283000,-0.1200000,-89.8801000,-89.3399000); //
CreateDynamicObject(19377,829.7429800,-1524.4704600,12.6563000,-0.1200000,-89.8801000,-90.7200000); //
CreateDynamicObject(3627,824.4746100,-1523.5105000,15.6120700,0.0000000,0.0000000,-91.3199700); //
CreateDynamicObject(1690,835.8729900,-1558.5864300,20.3782000,0.0000000,0.0000000,89.4600000); //
CreateDynamicObject(1688,839.7264400,-1523.1792000,24.7261000,0.0000000,0.0000000,-0.7800000); //
CreateDynamicObject(3361,857.4345100,-1551.6850600,18.2907000,0.0000000,0.0000000,-272.5201100); //
CreateDynamicObject(3361,857.7014800,-1545.5800800,14.2213000,0.0000000,0.0000000,-272.5201100); //
CreateDynamicObject(3928,852.3172000,-1568.6062000,20.5337000,0.0000000,0.0000000,-49.3199900); //
CreateDynamicObject(3928,841.6387900,-1577.6353800,20.5337000,0.0000000,0.0000000,-50.6400100); //
CreateDynamicObject(1215,857.5592700,-1569.3324000,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,852.0408900,-1574.0035400,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,846.8318500,-1567.9775400,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,852.3779900,-1563.3050500,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,846.9151600,-1578.5045200,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,841.2728300,-1583.0776400,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,836.2056900,-1576.8009000,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,841.8617600,-1572.2418200,20.5261700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,854.6951900,-1557.3435100,20.9162000,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(3850,851.8665200,-1559.3575400,20.9162000,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(3850,849.0512700,-1561.3660900,20.9162000,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(3850,846.2439600,-1563.3614500,20.9162000,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(3850,843.4298100,-1565.3747600,20.9162000,0.0000000,0.0000000,-54.4800000); //
CreateDynamicObject(3850,840.7605000,-1567.5387000,20.9162000,0.0000000,0.0000000,-47.3399700); //
CreateDynamicObject(3850,838.2116100,-1569.8739000,20.9162000,0.0000000,0.0000000,-47.3399700); //
CreateDynamicObject(3850,835.6484400,-1572.2275400,20.9162000,0.0000000,0.0000000,-47.3399700); //
CreateDynamicObject(3850,833.1115700,-1574.5512700,20.9162000,0.0000000,0.0000000,-47.3399700); //
CreateDynamicObject(3850,830.5991800,-1576.8908700,20.9162000,0.0000000,0.0000000,-46.4399800); //
CreateDynamicObject(3850,829.5929000,-1579.7556200,20.9162000,0.0000000,0.0000000,8.8200300); //
CreateDynamicObject(3850,830.9550200,-1582.7991900,20.9162000,0.0000000,0.0000000,39.0600400); //
CreateDynamicObject(3850,833.4044200,-1585.2227800,20.9162000,0.0000000,0.0000000,52.0800400); //
CreateDynamicObject(3850,836.1116300,-1587.3405800,20.9162000,0.0000000,0.0000000,52.0800400); //
CreateDynamicObject(3850,838.6289700,-1589.6453900,20.9162000,0.0000000,0.0000000,43.7400600); //
CreateDynamicObject(3850,841.1599100,-1591.9801000,20.9162000,0.0000000,0.0000000,51.3000700); //
CreateDynamicObject(3850,843.7570200,-1591.8269000,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,846.2460900,-1589.4211400,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,848.7255200,-1587.0064700,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,851.1768200,-1584.6204800,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,853.6514300,-1582.2170400,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,856.1174900,-1579.8234900,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,858.6072400,-1577.4265100,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,861.0113500,-1575.0805700,20.9162000,0.0000000,0.0000000,134.1600600); //
CreateDynamicObject(3850,860.9487900,-1572.7270500,20.9162000,0.0000000,0.0000000,227.0399900); //
CreateDynamicObject(3850,861.0142800,-1570.4188200,20.9162000,0.0000000,0.0000000,131.7599900); //
CreateDynamicObject(3850,863.5831300,-1568.1251200,20.9162000,0.0000000,0.0000000,131.7599900); //
CreateDynamicObject(3850,864.1586900,-1565.4221200,20.9162000,0.0000000,0.0000000,205.2600300); //
CreateDynamicObject(3850,862.6946400,-1562.3095700,20.9162000,0.0000000,0.0000000,205.2600300); //
CreateDynamicObject(3850,861.2256500,-1559.2176500,20.9162000,0.0000000,0.0000000,205.2600300); //
CreateDynamicObject(3850,859.4068000,-1556.2935800,20.9162000,0.0000000,0.0000000,217.5599100); //
CreateDynamicObject(3472,829.6012000,-1578.2321800,19.4173200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3472,842.7486000,-1592.4123500,19.4173200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3472,861.2518900,-1573.6243900,19.4173200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3472,859.0730000,-1555.1672400,19.4173200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,856.5853300,-1559.3209200,14.5860000,0.0000000,0.0000000,9.5401000); //
CreateDynamicObject(1688,822.2844200,-1574.7025100,21.4768400,0.0000000,0.0000000,137.0999000); //
CreateDynamicObject(1688,816.3009000,-1570.6481900,21.4768400,0.0000000,0.0000000,35.4600100); //
CreateDynamicObject(1690,820.6429400,-1576.5312500,21.0253600,0.0000000,0.0000000,-135.7199900); //
CreateDynamicObject(3279,797.9158900,-1520.2894300,12.5940000,0.0000000,0.0000000,-15.5400000); //
// concesionario LS
CreateDynamicObject(11317,1255.5300300,-1250.8800000,23.6600000,0.0000000,0.0000000,89.9400000); //
CreateDynamicObject(3851,1251.2900400,-1269.5799600,14.7600000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1277.3100600,-1269.4399400,14.7600000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1233.4699700,-1269.2900400,14.7600000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1233.4699700,-1269.2900400,20.3900000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1251.2299800,-1269.2299800,20.3900000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1264.3900100,-1269.3599900,20.3900000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(3851,1277.4899900,-1269.3499800,20.3900000,0.0000000,0.0000000,90.1800000); //
CreateDynamicObject(10977,1323.4300500,-1235.7700200,24.2100000,0.0000000,0.0000000,180.4800000); //
CreateDynamicObject(10977,1314.6800500,-1235.0999800,24.2100000,0.0000000,0.0000000,362.1600000); //
CreateDynamicObject(17554,1263.8900100,-1230.7900400,1.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(17554,1263.9499500,-1202.2600100,1.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(17554,1303.4699700,-1223.1800500,1.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(17554,1303.1400100,-1251.8100600,1.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(987,1227.0999800,-1167.7600100,21.7200000,0.0000000,0.0000000,-91.0200000); //
CreateDynamicObject(987,1299.0799600,-1181.4699700,21.7200000,0.0000000,0.0000000,94.3200000); //
CreateDynamicObject(1223,1258.0500500,-1171.8800000,22.8100000,3.1400000,0.0000000,-115.8500000); //
CreateDynamicObject(1223,1252.0600600,-1171.6700400,22.8100000,3.1400000,0.0000000,-42.3500000); //
CreateDynamicObject(5726,1310.4399400,-1245.2900400,20.0000000,451.1200000,175.8000000,93.8600000); //
CreateDynamicObject(5726,1230.9599600,-1239.9899900,16.9300000,451.1200000,175.8000000,94.1000000); //
CreateDynamicObject(2011,1240.0600600,-1270.8599900,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1244.8199500,-1270.8599900,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1257.8499800,-1270.8299600,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1271.0799600,-1270.8700000,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1227.2099600,-1270.8000500,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1294,1239.9599600,-1271.2199700,17.0800000,3.1400000,0.0000000,85.8700000); //
CreateDynamicObject(3851,1284.1899400,-1250.1999500,20.3900000,0.0000000,0.0000000,0.3600000); //
CreateDynamicObject(1223,1270.8100600,-1243.1099900,17.7200000,3.1400000,0.0000000,-268.9100000); //
CreateDynamicObject(1223,1283.9399400,-1242.8499800,17.7200000,3.1400000,0.0000000,-268.9100000); //
CreateDynamicObject(18761,1255.4899900,-1189.7099600,25.2800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(718,1271.0799600,-1242.9799800,18.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(718,1284.1200000,-1242.8199500,18.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(718,1304.5200200,-1253.3700000,18.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(718,1293.2700200,-1210.9200400,18.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1292.3100600,-1231.3800000,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.3499800,-1235.0600600,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.3000500,-1227.7500000,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.3299600,-1224.3299600,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.3700000,-1220.5100100,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.3399700,-1216.8800000,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1292.2700200,-1213.4499500,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1303.9300500,-1238.1800500,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1303.8399700,-1241.1899400,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1303.7700200,-1243.9100300,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1303.7700200,-1246.9200400,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1303.8299600,-1250.0500500,18.9200000,0.0000000,0.0000000,-90.3000000); //
CreateDynamicObject(3850,1281.2199700,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1277.7600100,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1281.2199700,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1274.3000500,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1270.8599900,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1267.4399400,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1264.0000000,-1263.3299600,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1260.5300300,-1263.3000500,18.9200000,0.0000000,0.0000000,-91.0800000); //
CreateDynamicObject(3850,1257.1300000,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1253.6999500,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1250.2399900,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1246.8199500,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1243.3599900,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1239.8900100,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1236.4300500,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1232.9699700,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1229.5200200,-1263.2900400,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(2011,1228.0899700,-1253.9599600,18.3800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1248.7500000,-1253.9100300,18.3800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1257.0000000,-1257.1600300,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1253.5899700,-1257.1600300,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1250.6500200,-1257.1600300,18.9200000,0.0000000,0.0000000,-90.1200000); //
CreateDynamicObject(3850,1248.9499500,-1255.4599600,18.9200000,0.0000000,0.0000000,0.3000000); //
CreateDynamicObject(2011,1248.8299600,-1257.2900400,18.3800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,1271.1400100,-1245.3700000,18.3800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18784,1255.6099900,-1202.2700200,20.1600000,0.0000000,0.0000000,89.4000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,13.0200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,15.2400000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,17.4400000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,19.5700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,21.7900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,24.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1226.3100600,-1270.6500200,24.4200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,13.0200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,15.0400000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,17.1700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,19.3600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,21.5800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,23.8500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,24.4700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9131,1283.1200000,-1270.8100600,17.1700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1294,1244.3800000,-1271.4399400,17.0800000,3.1400000,0.0000000,85.8700000); //
CreateDynamicObject(1294,1227.0799600,-1271.2199700,17.0800000,3.1400000,0.0000000,85.8700000); //
CreateDynamicObject(1294,1257.6300000,-1271.3499800,17.0800000,3.1400000,0.0000000,85.8700000); //
CreateDynamicObject(1294,1270.8100600,-1271.1400100,17.0800000,3.1400000,0.0000000,85.8700000); //
//mercado negro
CreateDynamicObject(1344, 2355.94141, -645.44440, 127.96090,   0.00000, 0.00000, 180.01300);
CreateDynamicObject(1349, 2357.90308, -644.90308, 127.90169,   0.00000, 0.00000, 50.50063);
CreateDynamicObject(1415, 2353.10596, -645.42639, 127.25990,   0.00000, 0.00000, 180.41060);
CreateDynamicObject(1439, 2350.64185, -645.57208, 127.27290,   0.00000, 0.00000, 180.01300);
CreateDynamicObject(853, 2352.40137, -643.38293, 128.01765,   0.00000, 0.00000, 324.69888);
CreateDynamicObject(852, 2355.22656, -643.54095, 127.62496,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3092, 2352.73291, -645.79474, 127.92703,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3009, 2351.03979, -645.18011, 127.59072,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3012, 2350.60059, -645.30176, 127.54958,   0.00000, 0.00000, 353.58014);
CreateDynamicObject(3036, 2349.03296, -659.25787, 127.66695,   0.00000, 0.00000, 0.27534);
CreateDynamicObject(1492, 2353.79419, -656.68903, 126.73132,   0.00000, 0.00000, 90.98164);
CreateDynamicObject(1492, 2354.97021, -650.67029, 126.81380,   0.00000, 0.00000, 0.21130);
CreateDynamicObject(1348, 2352.45483, -658.68359, 127.77477,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1431, 2350.32715, -658.64764, 127.59220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1362, 2353.65039, -660.11713, 127.83913,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 2349.62573, -660.29791, 127.56930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, 2355.55396, -646.95502, 127.53550,   0.00000, 0.00000, 359.04309);
CreateDynamicObject(1550, 2355.02393, -646.73230, 128.36819,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2354.90771, -647.07208, 128.00301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2355.15625, -647.06622, 128.00301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2354.90527, -647.17511, 128.00301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2355.15332, -647.16882, 128.00301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2355.19751, -647.35358, 128.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2356.10669, -647.35358, 128.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1252, 2355.44336, -646.53778, 128.22650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 2356.04810, -647.07178, 128.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1650, 2355.84399, -646.51727, 128.32280,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1654, 2355.50659, -646.75848, 128.21970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2356.17188, -646.54773, 128.26271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2356.65601, -646.54773, 128.32950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2237, 2356.81787, -650.66815, 128.92554,   0.00000, 0.00000, 359.59393);
CreateDynamicObject(2228, 2354.41138, -650.67407, 128.21703,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, 2350.48608, -646.95599, 127.53550,   0.00000, 0.00000, 0.37628);
CreateDynamicObject(941, 2352.03857, -646.95599, 127.51550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 2350.05200, -646.70618, 128.00951,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 2350.67480, -646.70618, 128.00951,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2358, 2351.46069, -646.72369, 128.12959,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2358, 2351.46411, -647.18372, 128.12959,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 2350.69702, -647.03418, 128.02950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 2350.08472, -647.02869, 128.02991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2033, 2349.89526, -647.32831, 128.03410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, 2349.90259, -647.17279, 128.11440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2350.64136, -647.34320, 128.05440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 2349.09009, -652.56354, 128.96442,   0.00000, 0.00000, 0.31847);
CreateDynamicObject(1636, 2352.08203, -646.89807, 128.03461,   0.00000, 0.00000, 357.70535);
CreateDynamicObject(1636, 2352.42163, -646.90271, 128.03461,   0.00000, 0.00000, 357.70541);
CreateDynamicObject(2037, 2352.27539, -646.52667, 128.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2352.73413, -646.55060, 128.13870,   0.00000, 0.00000, 358.04605);
CreateDynamicObject(2061, 2353.07544, -646.56128, 128.12350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 2353.02954, -647.00079, 127.99050,   0.00000, 0.00000, 45.37020);
CreateDynamicObject(941, 2349.96240, -652.27728, 127.53550,   0.00000, 0.00000, 90.64780);
CreateDynamicObject(1749, 2349.71558, -651.19232, 128.00867,   0.00000, 0.00000, 30.27099);
CreateDynamicObject(1752, 2349.50171, -652.76794, 128.00899,   0.00000, 0.00000, 135.45847);
CreateDynamicObject(1565, 2350.01172, -652.06378, 128.07050,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 2350.12256, -651.58099, 128.03250,   0.00000, 0.00000, 0.00000);
//Taller
CreateDynamicObject(7832, 2511.27588, -2108.83569, 17.12150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7619, 2511.28320, -2108.82739, 17.11960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9823, 2506.83960, -2142.92749, 13.53920,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(9823, 2520.66797, -2142.89600, 13.53780,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3499, 2501.25342, -2138.35742, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 2501.27930, -2092.27124, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 2501.23877, -2102.40039, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 2501.25952, -2079.33569, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 2501.13159, -2115.20703, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 2501.27319, -2125.45728, 12.44230,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19817, 2521.19678, -2126.99634, 12.51790,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19817, 2521.96045, -2090.80127, 12.51790,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19817, 2519.84448, -2104.44531, 12.51790,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19817, 2519.87305, -2113.30249, 12.51790,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19872, 2535.58862, -2126.91333, 10.65100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19872, 2534.83203, -2104.99829, 10.65100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19872, 2534.98340, -2113.88232, 10.65100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1013, 2509.44922, -2078.81079, 15.35850,   0.00000, 0.00520, 180.09190);
CreateDynamicObject(1024, 2509.46289, -2078.82715, 15.59100,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1025, 2502.71826, -2079.00317, 17.18680,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1073, 2504.24097, -2079.00684, 17.18030,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1074, 2505.56201, -2078.98877, 17.20270,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1075, 2507.03882, -2078.99268, 17.21010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1076, 2502.77026, -2078.98535, 15.98920,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1077, 2504.11108, -2078.98364, 15.97450,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1078, 2505.35620, -2078.98657, 15.97750,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1079, 2507.02417, -2078.99609, 15.97470,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1080, 2508.33594, -2078.98315, 17.26330,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1081, 2511.07251, -2078.97900, 17.25430,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1082, 2511.31885, -2078.98926, 16.03450,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1083, 2512.53418, -2078.97998, 17.29880,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1084, 2512.75439, -2078.97607, 15.98270,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1085, 2513.99365, -2078.99438, 17.35230,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19899, 2527.55933, -2122.17871, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(11713, 2526.87280, -2086.95264, 14.56290,   0.00000, 0.00000, 181.07860);
CreateDynamicObject(19900, 2527.46704, -2124.00854, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(11738, 2527.28394, -2121.44800, 14.20180,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19903, 2527.57373, -2124.99268, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19893, 2527.32349, -2122.73413, 13.78200,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19921, 2527.20679, -2124.01709, 13.50160,   0.00000, 0.00000, 269.82010);
CreateDynamicObject(19816, 2527.31689, -2123.57935, 12.79650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19899, 2526.40039, -2085.06543, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19900, 2526.37183, -2087.05640, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19903, 2526.56079, -2088.37305, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19893, 2526.18896, -2084.97119, 13.78100,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19921, 2525.93091, -2085.86084, 13.90760,   0.00000, 0.00000, 269.82007);
CreateDynamicObject(11738, 2526.29639, -2087.01685, 13.45070,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19816, 2526.19043, -2087.62402, 12.79650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19899, 2527.49878, -2106.59448, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19900, 2527.41797, -2104.67578, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19903, 2527.51050, -2103.67407, 12.54950,   0.00000, 0.00000, 180.42050);
CreateDynamicObject(19893, 2527.33936, -2104.65894, 13.42000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19921, 2527.05566, -2105.82642, 13.90760,   0.00000, 0.00000, 269.82007);
CreateDynamicObject(11738, 2527.34131, -2107.19922, 13.83670,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19816, 2527.33252, -2104.13721, 12.79650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1728, 2512.89917, -2142.46973, 12.41470,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1728, 2516.74756, -2142.36841, 12.41470,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1256, 2539.64160, -2127.50903, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.70752, -2098.85571, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.72754, -2104.04395, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.74194, -2110.60254, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.70410, -2114.83472, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.59570, -2118.78491, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 2539.68579, -2122.81396, 17.68010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 2527.63721, -2130.12451, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.40015, -2100.23657, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.31519, -2103.95483, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.44189, -2107.39355, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.53516, -2111.77002, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.89478, -2116.00195, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.36816, -2123.07568, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1726, 2527.38647, -2126.29639, 16.92090,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1278, 2534.91772, -2118.32642, 7.09010,   0.00000, 0.00000, 76.00000);
CreateDynamicObject(1278, 2526.53174, -2079.02612, 4.23241,   0.00000, 0.00000, 327.15948);
CreateDynamicObject(1278, 2526.66284, -2097.57813, 4.75625,   0.00000, 0.00000, 286.84607);
CreateDynamicObject(1278, 2526.96021, -2108.80103, 5.94799,   0.00000, 0.00000, 283.63315);
CreateDynamicObject(1278, 2527.02515, -2120.47095, 5.94799,   0.00000, 0.00000, 283.63315);
CreateDynamicObject(1278, 2501.13599, -2097.30981, 4.03950,   0.00000, 0.00000, 89.65077);
CreateDynamicObject(1278, 2539.09546, -2141.48755, 6.88905,   0.00000, 0.00000, 236.00000);
CreateDynamicObject(1278, 2540.00439, -2097.80811, 6.88910,   0.00000, 0.00000, 297.98746);
CreateDynamicObject(1278, 2534.25854, -2097.65210, 7.09010,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(1278, 2534.71582, -2118.24146, 7.09010,   0.00000, 0.00000, 280.00000);
CreateDynamicObject(1278, 2513.76270, -2142.40796, 4.03950,   0.00000, 0.00000, 176.57343);
CreateDynamicObject(1278, 2501.08887, -2120.56274, 4.03950,   0.00000, 0.00000, 89.65077);
CreateDynamicObject(1568, 2500.63623, -2120.33447, 12.41145,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2500.87866, -2097.36255, 12.41145,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19905, 2445.20288, -2135.71509, 12.36660,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11319, 2431.48828, -2127.66650, 13.29896,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2458.54053, -2127.66895, 13.29896,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2449.84106, -2127.63232, 13.29896,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2440.29932, -2127.62866, 13.29896,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19870, 2462.99951, -2137.51294, 13.58720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19870, 2454.34717, -2143.45020, 13.25110,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 2460.03784, -2142.77295, 2.29700,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(1278, 2428.98560, -2142.78052, 2.29700,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(1278, 2436.06787, -2142.83740, 2.29700,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(1278, 2444.10693, -2142.83862, 2.29700,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(1278, 2451.90381, -2142.80420, 2.29700,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(19425, 2424.31348, -2091.26611, 12.54790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 2424.31665, -2087.96167, 12.54790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1278, 2539.39526, -2084.52563, 8.79630,   0.00000, 0.00000, -94.00000);
CreateDynamicObject(1278, 2538.25488, -2067.47656, 8.79630,   0.00000, 0.00000, -36.00000);
CreateDynamicObject(8948, 2500.96338, -2070.34790, 14.30310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 2501.65723, -2065.98071, 8.22850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 2501.66455, -2074.85864, 8.22847,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10789, 2467.26392, -2081.33081, 15.16490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2465.11865, -2083.53394, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2469.15210, -2083.53589, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2473.15601, -2083.46851, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2472.98877, -2092.73828, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2469.20874, -2092.69141, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2465.13550, -2092.76392, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2461.68994, -2092.76392, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 2461.55957, -2083.48438, 14.19990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 2425.41089, -2111.08423, 8.54710,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1278, 2426.15723, -2068.02686, 10.09740,   0.00000, 0.00000, 51.00000);
CreateDynamicObject(1278, 2446.94189, -2066.81494, 10.09740,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(1278, 2486.12549, -2067.08252, 10.09740,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(1278, 2485.96167, -2141.95532, 8.54713,   0.00000, 0.00000, 175.99066);
CreateDynamicObject(1278, 2468.28418, -2142.06519, 8.54710,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(971, 2071.59521, -1830.10486, 15.91562,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2038.20850, -1821.94592, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2003.27930, -1821.90149, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2010.39636, -1821.93164, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2017.40906, -1821.89038, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2024.65576, -1821.88440, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11319, 2031.79785, -1821.91357, 12.54614,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14762, 2050.02539, -1922.97510, 31.10197,   0.00000, 0.00000, 269.83878);
CreateDynamicObject(19870, 1179.30701, -1182.97595, 20.41576,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18755, 1181.29907, -1180.53625, 20.91670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19986, 1617.85986, -1667.77661, 27.76712,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -1904.41138, 277.72479, 42.89674,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -1935.84583, 238.65192, 36.61327,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1465.51904, 499.05002, -2.57983,   0.00000, -90.00000, 359.79083);
CreateDynamicObject(18769, -1443.46143, 498.16891, -0.63617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1465.57751, 501.56134, 7.13734,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(18769, -1465.44543, 503.72513, -2.78562,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(18769, -1455.68030, 501.22916, 16.46313,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1456.31628, 498.13315, -0.63617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1456.52319, 504.51648, -0.63617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1443.81213, 505.14108, -0.63617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18769, -1456.66980, 499.84164, -0.63617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8948, -1335.15198, 487.28433, 13.25067,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8948, -1335.15198, 487.28433, 11.71726,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11359, -1348.07813, 499.21890, 18.30760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8948, -1324.27295, 515.20166, 13.67719,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8948, -1324.27295, 515.20166, 11.60466,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8948, -1367.58142, 514.23169, 11.46991,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19913, -1419.29163, 514.28455, 12.26143,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -2715.97949, 217.41414, 6.30784,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1283, 1528.10779, -1602.19031, 15.33965,   0.00000, 0.00000, 180.07764);
CreateDynamicObject(10985, -2049.10962, 252.94357, 34.97822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10985, -2047.55798, 248.01003, 35.49545,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18766, 2424.26758, -2081.31128, 10.78860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18766, 2424.26758, -2097.82690, 14.54260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18766, 2424.26758, -2081.31128, 15.77410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18766, 2424.26758, -2097.82080, 15.77410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19456, 2501.00684, -2070.48120, 17.84330,   0.00000, 0.00000, 0.00000);
//Ayuntamiento
///PARQUEO AYUNTA ATRAS.
CreateDynamicObject(982, 1502.91003, -1862.25000, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1559.54004, -1849.41003, 13.22000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1411.98999, -1862.27002, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1411.90002, -1835.67004, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1437.57996, -1862.27002, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1437.50000, -1835.67004, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1456.70996, -1835.68005, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(983, 1554.69995, -1859.04004, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1463.13000, -1859.07996, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1399.18005, -1849.44995, 13.22000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1456.81006, -1862.28003, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1503.17004, -1835.66003, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1546.78003, -1862.26001, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1546.83997, -1835.68005, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(982, 1521.23999, -1835.68005, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(983, 1463.07996, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1554.77002, -1838.88000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1521.20996, -1862.25000, 13.22000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(983, 1469.48730, -1838.85461, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1405.45996, -1838.90002, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1411.84998, -1838.88000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1418.25000, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1424.65002, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1430.98999, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1437.45996, -1838.88000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1443.83997, -1838.85999, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1450.20996, -1838.93005, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1456.67004, -1838.90002, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1469.59998, -1859.10999, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1411.93005, -1859.08997, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1418.31995, -1859.06006, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1437.54004, -1859.06006, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1443.93005, -1859.07996, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1450.31995, -1859.08997, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1456.75000, -1859.13000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1490.10999, -1859.03003, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1496.42004, -1859.03003, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1502.85999, -1859.06006, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1509.25000, -1859.05005, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1515.64001, -1859.07996, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1522.76001, -1859.01001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1529.14001, -1859.05005, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1535.46997, -1859.06006, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1541.92004, -1859.06995, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1548.30005, -1859.05005, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1490.31995, -1838.84998, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1496.73999, -1838.85999, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1503.14001, -1838.85999, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1509.98999, -1838.85999, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1516.40002, -1838.91003, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1522.81006, -1838.88000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1529.21997, -1838.87000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1535.57996, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1541.98999, -1838.89001, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1548.41003, -1838.88000, 13.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1537.47998, -1678.15002, 12.49000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1537.50000, -1671.48999, 12.49000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1537.47998, -1667.16003, 12.49000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(994, 1538.09998, -1663.88000, 12.59000,   0.00000, 0.00000, 270.25000);
CreateDynamicObject(3437, 1476.00000, 8275.00000, -1780.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1466.00000, 500.00000, -1743.00000,   0.00000, 0.00000, 0.00000);
//Nuevo spawn
CreateDynamicObject(1557, 1498.29102, -2287.75610, 12.56620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1557, 1498.29211, -2284.72754, 12.56620,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19379, 1502.91943, -2286.52759, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1502.91907, -2288.00073, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(3851, 1504.64746, -2278.85449, 14.50499,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19384, 1510.25476, -2282.88037, 14.32760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1510.26343, -2290.21094, 14.32760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1493.35046, -2293.21021, 14.50499,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, 1502.91431, -2284.12183, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19427, 1510.25769, -2280.47559, 14.32760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, 1510.24817, -2279.65576, 14.32760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19378, 1498.19836, -2288.46484, 11.25520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19378, 1503.49329, -2283.63843, 16.58760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19378, 1498.19446, -2284.73926, 11.25520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1505.53345, -2284.15942, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1505.37659, -2287.90918, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19378, 1503.49976, -2288.38452, 16.58760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19429, 1509.47510, -2280.60645, 16.34320,   18.00000, 90.00000, 90.00000);
CreateDynamicObject(19429, 1509.47498, -2284.09448, 16.34320,   18.00000, 90.00000, 90.00000);
CreateDynamicObject(19429, 1509.48059, -2287.55884, 16.34320,   18.00000, 90.00000, 90.00000);
CreateDynamicObject(19429, 1509.48230, -2291.00708, 16.34320,   18.00000, 90.00000, 90.00000);
CreateDynamicObject(1491, 1510.23547, -2283.63623, 12.57990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2775, 1509.83044, -2287.43457, 15.41590,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2774, 1496.35229, -2294.05664, 15.73850,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(1572, 1509.02051, -2280.58813, 13.11060,   0.00000, 0.00000, -207.00000);
CreateDynamicObject(1572, 1506.66919, -2280.36353, 13.11060,   0.00000, 0.00000, -151.61996);
CreateDynamicObject(2773, 1499.44409, -2287.92847, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1499.49683, -2283.93091, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1501.87524, -2281.81641, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1504.23486, -2281.87817, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1506.57288, -2281.91626, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1508.91602, -2281.94385, 13.11110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1500.71606, -2282.82788, 13.11110,   0.00000, 0.00000, 166.55994);
CreateDynamicObject(3969, 1500.67468, -2289.50952, 13.30490,   0.00000, 0.00000, 180.53999);
CreateDynamicObject(19446, 1510.25928, -2288.43140, 14.32760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1505.53625, -2294.93848, 14.32760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1572, 1501.69592, -2289.83765, 13.11060,   0.00000, 0.00000, -66.41998);
CreateDynamicObject(19446, 1503.37073, -2294.94067, 14.32760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19429, 1509.49060, -2291.44043, 16.34320,   18.00000, 90.00000, 90.30000);
CreateDynamicObject(19429, 1509.51282, -2293.23999, 16.34320,   18.00000, 90.00000, 90.30000);
CreateDynamicObject(19379, 1505.35376, -2289.60229, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1502.99084, -2289.51514, 12.49964,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2774, 1499.05420, -2279.38867, 3.44085,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(615, 1500.64587, -2303.06445, 11.91849,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(617, 1508.55457, -2297.43677, 12.52513,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 1499.20728, -2273.26587, 12.53654,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 1505.06873, -2271.60034, 12.53654,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1507.52271, -2272.72607, 12.75237,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(11414, 1481.49500, -2272.61157, 14.13246,   0.00000, 0.00000, 235.07994);
CreateDynamicObject(1232, 1512.25037, -2277.54810, 15.11969,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1346, 1511.31616, -2289.32910, 13.93190,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1209, 1510.04980, -2284.50635, 12.58530,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2754, 1498.65186, -2289.18774, 13.41600,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2011, 1499.48315, -2281.36401, 12.58679,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2010, 1509.45007, -2285.60156, 12.58461,   0.00000, 0.00000, 0.00000);
//Muebles
CreateDynamicObject(19446, 2112.53394, -1737.64624, 14.18390,   0.00000, 0.00000, -16.02000);
CreateDynamicObject(19446, 2117.96167, -1730.63025, 14.18390,   0.00000, 0.00000, -59.40000);
CreateDynamicObject(19446, 2126.15918, -1737.52979, 14.18390,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, 2122.58740, -1728.71680, 14.18390,   0.00000, 0.00000, 46.68000);
CreateDynamicObject(19427, 2123.75220, -1729.81970, 14.18390,   0.00000, 0.00000, 46.68000);
CreateDynamicObject(19427, 2124.92163, -1730.92529, 14.18390,   0.00000, 0.00000, 46.68000);
CreateDynamicObject(19427, 2125.77979, -1732.06763, 14.18390,   0.00000, 0.00000, 28.80000);
CreateDynamicObject(19379, 2120.86133, -1737.48840, 12.55319,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2113.86450, -1740.68018, 12.55320,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2114.38257, -1737.90503, 12.55320,   0.00000, 90.00000, -17.10000);
CreateDynamicObject(19370, 2115.28979, -1734.84241, 12.55320,   0.00000, 90.00000, -17.10000);
CreateDynamicObject(19379, 2121.21802, -1734.41858, 12.55319,   0.00000, 90.00000, 29.88000);
CreateDynamicObject(19377, 2121.00854, -1737.51892, 16.05310,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 2114.93970, -1740.59363, 16.06740,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 2114.95337, -1737.10962, 16.06740,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 2113.48755, -1736.87390, 16.05940,   0.00000, 90.00000, 74.22000);
CreateDynamicObject(19435, 2112.54199, -1740.25525, 16.05140,   0.00000, 90.00000, 74.22000);
CreateDynamicObject(19435, 2113.34131, -1740.61072, 16.05140,   0.00000, 90.00000, 269.57999);
CreateDynamicObject(19435, 2113.67554, -1738.99939, 16.03540,   0.00000, 90.00000, 269.57999);
CreateDynamicObject(19370, 2112.89844, -1740.53125, 12.55320,   0.00000, 90.00000, 90.08020);
CreateDynamicObject(1649, 2123.83594, -1742.31824, 13.30510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 2112.89404, -1741.55884, 16.05140,   0.00000, 90.00000, 360.00000);
CreateDynamicObject(19429, 2113.01196, -1742.27783, 15.77131,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19429, 2116.51245, -1742.28503, 15.77131,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19429, 2119.99341, -1742.28735, 15.77131,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19429, 2123.47949, -1742.28125, 15.77131,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19429, 2124.49023, -1742.30579, 15.77131,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 2115.02124, -1734.44482, 16.06740,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 2114.04370, -1734.91052, 16.03540,   0.00000, 90.00000, 74.04000);
CreateDynamicObject(19435, 2124.45752, -1731.99634, 16.06740,   0.00000, 90.00000, 133.91994);
CreateDynamicObject(19435, 2124.55933, -1731.71252, 16.03540,   0.00000, 90.00000, 131.16000);
CreateDynamicObject(19435, 2122.49463, -1731.81873, 16.06740,   0.00000, 90.00000, 131.15999);
CreateDynamicObject(19435, 2120.45654, -1731.89709, 16.06740,   0.00000, 90.00000, 131.15999);
CreateDynamicObject(19435, 2118.92163, -1732.49084, 16.06740,   0.00000, 90.00000, 131.15999);
CreateDynamicObject(19435, 2115.66089, -1732.79199, 16.04340,   0.00000, 90.00000, 210.06000);
CreateDynamicObject(19435, 2118.69165, -1731.09863, 16.03540,   0.00000, 90.00000, 210.06000);
CreateDynamicObject(19435, 2121.01172, -1729.72729, 16.06740,   0.00000, 90.00000, 211.07991);
CreateDynamicObject(19435, 2122.70190, -1729.82458, 16.05140,   0.00000, 90.00000, 315.11960);
CreateDynamicObject(19435, 2121.33691, -1730.06116, 16.06740,   0.00000, 90.00000, 211.07991);
CreateDynamicObject(19435, 2118.90088, -1731.36707, 16.06740,   0.00000, 90.00000, 210.05995);
CreateDynamicObject(1491, 2115.70752, -1742.35291, 12.48100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1344, 2111.26758, -1739.62537, 13.12315,   0.00000, 0.00000, -106.85999);
CreateDynamicObject(1343, 2110.80664, -1741.29724, 13.27988,   0.00000, 0.00000, -97.98000);
CreateDynamicObject(1345, 2123.54956, -1728.54309, 13.19111,   0.00000, 0.00000, -45.18000);
CreateDynamicObject(1345, 2125.18359, -1730.17419, 13.19111,   0.00000, 0.00000, -45.18000);
CreateDynamicObject(1365, 2127.69873, -1736.06128, 13.73173,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1693, 2118.56567, -1737.74133, 17.64665,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1688, 2119.79785, -1732.88098, 17.08022,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1411, 2108.41870, -1742.11609, 14.09909,   0.00000, 0.00000, -2.70000);
CreateDynamicObject(1411, 2106.81836, -1739.77271, 14.09909,   0.00000, 0.00000, -107.39999);
CreateDynamicObject(1411, 2108.53687, -1734.82007, 14.09909,   0.00000, 0.00000, -110.10000);
CreateDynamicObject(1411, 2110.51904, -1729.97034, 14.09909,   0.00000, 0.00000, -114.42001);
CreateDynamicObject(1411, 2113.74341, -1726.47119, 14.09909,   0.00000, 0.00000, -151.01993);
CreateDynamicObject(1411, 2118.40430, -1724.59998, 14.09909,   0.00000, 0.00000, -165.48004);
CreateDynamicObject(854, 2109.04321, -1740.67261, 12.95969,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(854, 2107.68286, -1740.95227, 12.95969,   0.00000, 0.00000, 21.18000);
CreateDynamicObject(933, 2107.88037, -1739.21082, 12.55559,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 2131.85669, -1737.17114, 13.29657,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3578, 2131.85815, -1728.17664, 13.29657,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2135.91577, -1741.83289, 12.62830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2136.03711, -1737.32910, 12.72830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2136.04199, -1732.68054, 12.62730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2135.99585, -1727.92114, 12.52830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2135.92920, -1723.17517, 12.52830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1411, 2123.43481, -1724.01636, 14.09909,   0.00000, 0.00000, -182.88002);
CreateDynamicObject(1411, 2128.62451, -1724.39270, 14.09909,   0.00000, 0.00000, -185.21997);
CreateDynamicObject(1978, 2119.87939, -1740.57715, 13.56590,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2640, 2125.51343, -1741.01660, 13.47080,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1822, 2124.47949, -1739.97595, 12.64468,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1481, 2119.04443, -1738.88770, 13.24600,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1754, 2113.25366, -1737.69897, 12.63591,   0.00000, 0.00000, 74.22002);
CreateDynamicObject(1754, 2113.58154, -1736.51367, 12.63591,   0.00000, 0.00000, 74.22002);
CreateDynamicObject(1767, 2114.30029, -1734.72034, 12.73894,   0.00000, 0.00000, 44.04000);
CreateDynamicObject(2568, 2115.83008, -1732.61145, 12.53651,   0.00000, 0.00000, 31.61998);
CreateDynamicObject(1742, 2126.09399, -1737.69336, 12.63762,   0.00000, 0.00000, -88.92000);
CreateDynamicObject(2514, 2114.26904, -1735.61450, 12.63704,   0.00000, 0.00000, 45.48000);
CreateDynamicObject(9362, 2121.80298, -1731.98877, 13.37460,   0.00000, 0.00000, 109.50001);
CreateDynamicObject(2232, 2119.13379, -1737.70251, 13.14648,   0.00000, 0.00000, -94.74000);
CreateDynamicObject(1984, 2113.77686, -1739.35779, 12.63752,   0.00000, 0.00000, 306.53995);
CreateDynamicObject(1649, 2113.50366, -1742.29810, 13.30336,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 2119.45142, -1742.30835, 13.30510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3556, 2154.94629, -1736.59045, 15.00680,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3555, 2168.08252, -1734.86194, 15.03640,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(655, 2161.37866, -1739.84131, 12.54421,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(673, 2148.95728, -1738.88916, 12.51689,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 2160.53149, -1725.55554, 12.52409,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1227, 2152.01514, -1730.23157, 13.26540,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(850, 2154.81665, -1729.05981, 12.62779,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2108.85913, -1737.65417, 14.93585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2129.11499, -1741.98450, 14.93585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2132.67676, -1722.96533, 14.93585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2156.82935, -1729.65698, 14.93585,   0.00000, 0.00000, 0.00000);
//Taller

//******************************************************************************************
//Reja comisaria de dillimore:
CreateDynamicObject(14843, 266.30484, 83.32735, 1001.28131,   0.00000, 0.00000, -90.00000);
//***********************ESTACIONAMIENTO SUBTERRANEO****************
CreateDynamicObject(19879, 1421.40674, -1477.58936, 42.19320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19969, 1446.78186, -1463.07544, 12.54600,   0.00000, 0.00000, 180.00000);
//********************PISTA DE CARRERAS****************************
CreateDynamicObject(0, 831.59998, -2081.37988, 7.34000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19980, 827.20001, -2556.40991, 17.24000,   0.00000, 0.00000, 180.24001);
CreateDynamicObject(3460, 791.22998, -2820.59009, 5.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3460, 828.28998, -2907.98999, 5.90000,   0.00000, 0.00000, 269.42999);
CreateDynamicObject(17622, 269.53000, -1868.03003, 3.93000,   0.00000, 0.00000, 178.60001);
CreateDynamicObject(19790, 278.25000, -1875.42004, 1.76000,   0.00000, 0.00000, 358.69000);
CreateDynamicObject(19790, 260.54999, -1875.67004, 1.76000,   0.00000, 0.00000, 358.69000);
CreateDynamicObject(16358, 266.28000, -2024.21997, 9.55000,   0.00000, 0.00000, 268.69000);
CreateDynamicObject(3330, 268.67999, -1902.16003, -0.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3330, 265.73999, -2030.12000, -0.62000,   0.00000, 0.00000, 358.34000);
CreateDynamicObject(3330, 260.50000, -2142.53003, -0.62000,   0.00000, 0.00000, 358.34000);
CreateDynamicObject(17622, 262.81000, -2176.62012, 3.93000,   0.00000, 0.00000, 359.23001);
CreateDynamicObject(19542, 258.84000, -2224.79004, 2.00000,   0.00000, 0.00000, 89.48000);
CreateDynamicObject(19542, 133.89000, -2223.61011, 2.00000,   0.00000, 0.00000, 89.48000);
CreateDynamicObject(19542, 383.82001, -2225.93994, 2.00000,   0.00000, 0.00000, 89.48000);
CreateDynamicObject(19540, 446.31000, -2226.52002, 2.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19542, 447.29001, -2284.54004, 2.00000,   0.00000, 0.00000, 0.09000);
CreateDynamicObject(19542, 447.31000, -2409.54004, 2.00000,   0.00000, 0.00000, 0.09000);
CreateDynamicObject(19542, 447.51999, -2534.53003, 2.00000,   0.00000, 0.00000, 0.09000);
CreateDynamicObject(19540, 447.60999, -2597.02002, 2.00000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(19542, 385.14001, -2597.07007, 1.89000,   0.00000, 0.00000, 270.12000);
CreateDynamicObject(19542, 260.17999, -2597.00000, 1.89000,   0.00000, 0.00000, 270.12000);
CreateDynamicObject(19542, 135.14999, -2597.60010, 1.89000,   0.00000, 0.00000, 270.12000);
CreateDynamicObject(0, 72.66000, -2597.78003, 2.00000,   0.00000, 0.00000, 180.41000);
CreateDynamicObject(19540, 72.65000, -2597.73999, 1.90000,   0.00000, 0.00000, 180.14999);
CreateDynamicObject(19542, 72.24000, -2535.25000, 1.89000,   0.00000, 0.00000, 180.16000);
CreateDynamicObject(19542, 71.88000, -2410.25000, 1.89000,   0.00000, 0.00000, 180.16000);
CreateDynamicObject(19542, 71.60000, -2285.34009, 1.89000,   0.00000, 0.00000, 180.16000);
CreateDynamicObject(19540, 71.84000, -2223.29004, 2.00000,   0.00000, 0.00000, 89.69000);
CreateDynamicObject(19533, 400.82999, -2233.48999, 2.00000,   0.00000, 0.00000, 269.76999);
CreateDynamicObject(19788, 439.59000, -2233.63989, 2.00000,   0.00000, 0.00000, 89.93000);
CreateDynamicObject(19532, 307.12000, -2232.65991, 2.00000,   0.00000, 0.00000, 269.35999);
CreateDynamicObject(19532, 182.16000, -2231.26001, 2.00000,   0.00000, 0.00000, 269.35999);
CreateDynamicObject(19533, 117.35000, -2230.56006, 2.00000,   0.00000, 0.00000, 269.78000);
CreateDynamicObject(19788, 78.78000, -2230.32007, 2.00000,   0.00000, 0.00000, 179.42000);
CreateDynamicObject(19532, 439.72000, -2303.63989, 2.00000,   0.00000, 0.00000, 0.12000);
CreateDynamicObject(19532, 439.98001, -2428.62988, 2.00000,   0.00000, 0.00000, 0.12000);
CreateDynamicObject(19532, 440.39001, -2519.56006, 2.00000,   0.00000, 0.00000, 0.12000);
CreateDynamicObject(19788, 440.47000, -2589.59009, 2.00000,   0.00000, 0.00000, 359.48999);
CreateDynamicObject(19532, 370.53000, -2589.72998, 2.00000,   0.00000, 0.00000, 270.17999);
CreateDynamicObject(19532, 245.53999, -2590.12012, 2.00000,   0.00000, 0.00000, 270.17999);
CreateDynamicObject(19532, 149.57001, -2590.42993, 2.00000,   0.00000, 0.00000, 270.17999);
CreateDynamicObject(19788, 79.68000, -2590.62988, 2.00000,   0.00000, 0.00000, 270.04001);
CreateDynamicObject(19532, 79.56000, -2520.63989, 2.00000,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(19532, 79.33000, -2395.64990, 2.00000,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(19532, 78.90000, -2299.89990, 2.00000,   0.00000, 0.00000, 0.21000);
CreateDynamicObject(19529, 370.59000, -2303.25000, 2.00000,   0.00000, 0.00000, 359.59000);
CreateDynamicObject(19529, 248.42999, -2315.56006, 2.00000,   0.00000, 0.00000, 359.48999);
CreateDynamicObject(19529, 147.98000, -2301.10010, 2.00000,   0.00000, 0.00000, 359.48999);
CreateDynamicObject(19529, 148.12000, -2425.15991, 2.00000,   0.00000, 0.00000, 359.48999);
CreateDynamicObject(19529, 267.54999, -2413.08008, 2.00000,   0.00000, 0.00000, 359.48999);
CreateDynamicObject(19529, 371.45001, -2427.22998, 2.00000,   0.00000, 0.00000, 359.91000);
CreateDynamicObject(19529, 372.35999, -2520.27002, 2.00000,   0.00000, 0.00000, 359.91000);
CreateDynamicObject(19529, 251.82001, -2520.14990, 2.00000,   0.00000, 0.00000, 0.41000);
CreateDynamicObject(19529, 148.46001, -2521.12012, 2.00000,   0.00000, 0.00000, 0.41000);
CreateDynamicObject(19535, 261.88000, -2208.95996, 2.00000,   0.00000, 0.00000, 90.03000);
CreateDynamicObject(19535, 261.89999, -2218.55005, 2.00000,   0.00000, 0.00000, 90.03000);
CreateDynamicObject(19535, 261.89999, -2218.55005, 2.00000,   0.00000, 0.00000, 270.19000);
CreateDynamicObject(19535, 261.75000, -2218.26001, 2.00000,   0.00000, 0.00000, 269.78000);
CreateDynamicObject(5501, 361.84000, -2292.08008, 2.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5509, 139.17999, -2302.05005, 2.32000,   0.00000, 0.00000, 180.21001);
CreateDynamicObject(19532, 226.39000, -2291.33008, 2.42000,   0.00000, 0.00000, 270.01999);
CreateDynamicObject(3578, 108.05000, -2286.19995, 2.85000,   0.00000, 0.00000, 19.03000);
CreateDynamicObject(3578, 99.95000, -2291.70996, 2.85000,   0.00000, 0.00000, 52.91000);
CreateDynamicObject(3578, 117.94000, -2284.58008, 2.85000,   0.00000, 0.00000, 0.79000);
CreateDynamicObject(3578, 128.17999, -2284.51001, 2.85000,   0.00000, 0.00000, 359.75000);
CreateDynamicObject(3578, 138.50999, -2284.53003, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 148.87000, -2284.48999, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 159.03999, -2284.40991, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 169.07001, -2284.35010, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 179.25000, -2284.22998, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 189.46001, -2284.19995, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 199.71001, -2284.10010, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 209.62000, -2284.11011, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 219.95000, -2284.09009, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 230.17000, -2284.06006, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 240.37000, -2283.98999, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 250.47000, -2283.98999, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 260.62000, -2284.01001, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 270.69000, -2284.01001, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 281.04999, -2284.18994, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(3578, 284.35999, -2284.17993, 2.85000,   0.00000, 0.00000, 0.16000);
CreateDynamicObject(8661, 412.29001, -2250.96997, 2.10000,   0.00000, 0.00000, 359.79999);
CreateDynamicObject(8661, 372.48001, -2250.72998, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 333.01001, -2250.19995, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 293.32999, -2249.58008, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 253.61000, -2249.04004, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 214.11000, -2248.60010, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 174.16000, -2248.08008, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 134.63000, -2248.03003, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 105.43000, -2246.85010, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 105.93000, -2266.45996, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 105.86000, -2272.23999, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 182.56000, -2273.69995, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 182.50000, -2263.96997, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 218.17999, -2266.45996, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 220.34000, -2274.34009, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 257.56000, -2274.28003, 2.09000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 256.20999, -2265.48999, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 292.72000, -2275.79004, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 294.03000, -2265.15991, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 324.00000, -2268.18994, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 331.13000, -2275.34009, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 357.06000, -2269.55005, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 360.82999, -2272.45996, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 387.32999, -2269.12012, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 412.04001, -2288.73999, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 388.38000, -2274.54004, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 413.01999, -2270.07007, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 413.01999, -2270.07007, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(3578, 290.03000, -2278.79004, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(3578, 289.91000, -2268.39990, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(3578, 289.89001, -2258.04004, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(3578, 307.54999, -2278.36011, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(3578, 307.41000, -2268.12012, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(3578, 307.26999, -2258.27002, 2.85000,   0.00000, 0.00000, 91.24000);
CreateDynamicObject(8843, 298.35001, -2267.62988, 2.21000,   0.00000, 0.00000, 180.86000);
CreateDynamicObject(3526, 302.87000, -2280.21997, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 302.34000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 301.81000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 301.25000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 300.69000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 300.13000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 299.59000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 299.06000, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 298.54001, -2280.21997, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 297.98999, -2280.20996, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 297.42999, -2280.19995, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 296.85001, -2280.22998, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 296.26999, -2280.25000, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 295.73001, -2280.25000, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 295.17001, -2280.25000, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 294.60001, -2280.26001, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 294.01999, -2280.29004, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(3526, 293.51001, -2280.28003, 2.43000,   0.00000, 0.00000, 270.09000);
CreateDynamicObject(978, 303.26001, -2299.04004, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 294.73001, -2299.02002, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 285.51999, -2299.03003, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 276.62000, -2299.06006, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 267.39001, -2299.04004, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 258.45999, -2299.04004, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 249.72000, -2299.03003, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 240.78999, -2299.03003, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 231.78999, -2299.04004, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 222.78999, -2299.03003, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 213.67000, -2299.03003, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 204.89000, -2299.12012, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 195.98000, -2299.11011, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 187.08000, -2299.15991, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 178.44000, -2299.20996, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 169.70000, -2299.15991, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 160.67999, -2299.10010, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 152.24001, -2299.12012, 2.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 143.47000, -2298.95996, 2.92000,   0.00000, 0.00000, 358.98001);
CreateDynamicObject(978, 134.39999, -2298.84009, 2.92000,   0.00000, 0.00000, 358.98001);
CreateDynamicObject(978, 125.99000, -2298.73999, 2.92000,   0.00000, 0.00000, 358.98001);
CreateDynamicObject(978, 117.25000, -2298.50000, 2.92000,   0.00000, 0.00000, 358.98001);
CreateDynamicObject(978, 111.78000, -2302.94995, 2.92000,   0.00000, 0.00000, 78.25000);
CreateDynamicObject(978, 110.84000, -2311.45996, 2.92000,   0.00000, 0.00000, 90.58000);
CreateDynamicObject(3578, 97.08000, -2300.71997, 2.85000,   0.00000, 0.00000, 91.22000);
CreateDynamicObject(3578, 97.27000, -2310.68994, 2.85000,   0.00000, 0.00000, 91.22000);
CreateDynamicObject(3578, 97.58000, -2320.00000, 2.85000,   0.00000, 0.00000, 91.22000);
CreateDynamicObject(978, 110.95000, -2319.83008, 2.92000,   0.00000, 0.00000, 90.58000);
CreateDynamicObject(3578, 312.35999, -2283.91992, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 322.14999, -2283.96997, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 332.32999, -2284.02002, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 342.60999, -2284.12012, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 352.70999, -2284.21997, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 362.47000, -2284.12988, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 372.51001, -2284.18994, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 382.39001, -2284.20996, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 392.29001, -2284.27002, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 402.34000, -2284.31006, 2.85000,   0.00000, 0.00000, 179.72000);
CreateDynamicObject(3578, 412.42999, -2285.07007, 2.85000,   0.00000, 0.00000, 171.92000);
CreateDynamicObject(3578, 420.97000, -2288.89990, 2.85000,   0.00000, 0.00000, 140.42000);
CreateDynamicObject(3578, 425.57999, -2296.41992, 2.85000,   0.00000, 0.00000, 104.17000);
CreateDynamicObject(0, 118.53000, -2342.91992, 2.20000,   0.00000, 0.00000, 179.53000);
CreateDynamicObject(3578, 97.46000, -2330.35010, 2.85000,   0.00000, 0.00000, 87.60000);
CreateDynamicObject(3578, 97.50000, -2340.79004, 2.85000,   0.00000, 0.00000, 90.05000);
CreateDynamicObject(3578, 98.12000, -2350.89990, 2.85000,   0.00000, 0.00000, 97.08000);
CreateDynamicObject(3578, 103.86000, -2356.34009, 2.84000,   0.00000, 0.00000, 173.57001);
CreateDynamicObject(3578, 114.11000, -2356.87012, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 124.21000, -2356.91992, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 134.08000, -2356.95996, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 144.13000, -2357.15991, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 154.11000, -2357.31006, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 163.82001, -2357.54004, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 174.00000, -2357.61011, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(978, 111.03000, -2328.73999, 2.92000,   0.00000, 0.00000, 90.58000);
CreateDynamicObject(978, 111.30000, -2337.54004, 2.92000,   0.00000, 0.00000, 90.58000);
CreateDynamicObject(978, 115.79000, -2341.92993, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 124.91000, -2342.06006, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 134.06000, -2342.13989, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 143.00000, -2342.26001, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(5503, 264.35001, -2352.12988, 2.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 151.84000, -2342.35010, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 161.09000, -2342.51001, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 169.92000, -2342.46997, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 179.00000, -2342.66992, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 188.20000, -2342.75000, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(5494, 119.23000, -2342.23999, 2.41000,   0.00000, 0.00000, 179.95000);
CreateDynamicObject(3578, 184.17999, -2357.65991, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 193.89999, -2357.70996, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 204.14999, -2357.68994, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 213.89000, -2357.71997, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 222.78000, -2357.77002, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 232.89000, -2357.89990, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 243.12000, -2357.93994, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 253.00000, -2357.97998, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 263.03000, -2358.12988, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 272.70001, -2358.16992, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 282.13000, -2358.37988, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(978, 197.34000, -2342.81006, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 205.72000, -2342.93994, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 214.56000, -2343.06006, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 221.53999, -2343.09009, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 229.98000, -2343.13989, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 238.74001, -2343.17993, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 247.77000, -2343.28003, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 256.10999, -2343.19995, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 264.64999, -2343.28003, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 273.41000, -2343.42993, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 282.82999, -2343.47998, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 291.60001, -2343.45996, 2.92000,   0.00000, 0.00000, 179.24001);
CreateDynamicObject(978, 299.57001, -2346.42993, 2.92000,   0.00000, 0.00000, 137.28000);
CreateDynamicObject(978, 304.17999, -2353.97998, 2.92000,   0.00000, 0.00000, 106.61000);
CreateDynamicObject(978, 305.37000, -2363.28003, 3.13000,   0.00000, 0.00000, 93.71000);
CreateDynamicObject(3578, 287.26999, -2358.38989, 2.90000,   0.00000, 0.00000, 179.64999);
CreateDynamicObject(3578, 292.38000, -2363.78003, 2.90000,   0.00000, 0.00000, 93.94000);
CreateDynamicObject(5509, 263.38000, -2378.20996, 2.21000,   0.00000, 0.00000, 1.82000);
CreateDynamicObject(4827, 399.94000, -2386.58008, -4.03000,   0.00000, 0.00000, 271.32001);
CreateDynamicObject(6317, 140.94000, -2432.44995, 2.29000,   0.00000, 0.00000, 7.81000);
CreateDynamicObject(19532, 173.58000, -2392.95996, 2.22000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(19788, 106.23000, -2396.52002, 2.17000,   0.00000, 0.00000, 173.10001);
CreateDynamicObject(19532, 247.16000, -2450.35010, 2.22000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(19788, 316.85001, -2446.08008, 2.19000,   0.00000, 0.00000, 94.51000);
CreateDynamicObject(19788, 318.00000, -2460.92993, 2.19000,   0.00000, 0.00000, 4.18000);
CreateDynamicObject(19532, 248.60001, -2467.58008, 2.22000,   0.00000, 0.00000, 275.64999);
CreateDynamicObject(978, 304.88000, -2371.88989, 3.13000,   0.00000, 0.00000, 86.07000);
CreateDynamicObject(978, 304.38000, -2381.03003, 3.13000,   0.00000, 0.00000, 86.07000);
CreateDynamicObject(978, 301.48001, -2389.37988, 2.96000,   0.00000, 0.00000, 48.06000);
CreateDynamicObject(978, 294.04001, -2394.33008, 2.96000,   0.00000, 0.00000, 21.24000);
CreateDynamicObject(978, 284.72000, -2396.03003, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 275.82001, -2396.35010, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 267.04999, -2396.62012, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 257.95999, -2396.92993, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 248.86000, -2397.20996, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 239.96001, -2397.50000, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 231.32001, -2397.77002, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 222.75000, -2397.96997, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 213.46001, -2397.98999, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 204.42000, -2397.77002, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 195.50999, -2398.03003, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 186.45000, -2398.83008, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 177.30000, -2399.04004, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 168.53999, -2399.41992, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 159.50000, -2399.95996, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 150.32001, -2400.63989, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 141.14000, -2401.03003, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 131.80000, -2401.48999, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(978, 122.59000, -2401.81006, 3.21000,   0.00000, 0.00000, 1.95000);
CreateDynamicObject(3578, 163.89999, -2291.37988, 1.57000,   0.00000, 0.00000, 269.79001);
CreateDynamicObject(3578, 177.10001, -2349.90991, 1.36000,   0.00000, 0.00000, 269.79001);
CreateDynamicObject(3578, 292.32001, -2374.09009, 2.90000,   0.00000, 0.00000, 88.30000);
CreateDynamicObject(3578, 286.89999, -2380.21997, 2.89000,   0.00000, 0.00000, 13.04000);
CreateDynamicObject(3578, 277.07001, -2381.45996, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 267.56000, -2381.90991, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 258.45999, -2382.23999, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 249.10001, -2382.31006, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 240.44000, -2382.55005, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 230.89999, -2382.87012, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 220.67999, -2383.38989, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 211.16000, -2383.70996, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 200.92000, -2384.33008, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 191.13000, -2384.87012, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 181.08000, -2385.36011, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 171.05000, -2385.96997, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 161.27000, -2386.59009, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 150.98000, -2387.06006, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 141.11000, -2387.70996, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 130.77000, -2388.63989, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 120.10000, -2389.27002, 2.89000,   0.00000, 0.00000, 2.06000);
CreateDynamicObject(3578, 109.83000, -2389.37012, 3.08000,   0.00000, 0.00000, 356.32999);
CreateDynamicObject(3578, 105.60000, -2389.01001, 3.08000,   0.00000, 0.00000, 356.32999);
CreateDynamicObject(3578, 99.80000, -2393.87012, 3.03000,   0.00000, 0.00000, 263.57001);
CreateDynamicObject(3578, 98.55000, -2403.72998, 3.03000,   0.00000, 0.00000, 263.57001);
CreateDynamicObject(3578, 98.17000, -2413.10010, 3.03000,   0.00000, 0.00000, 274.45001);
CreateDynamicObject(3578, 99.70000, -2422.65991, 3.03000,   0.00000, 0.00000, 286.17999);
CreateDynamicObject(3578, 102.73000, -2431.65991, 3.03000,   0.00000, 0.00000, 295.66000);
CreateDynamicObject(3578, 107.62000, -2439.47998, 3.03000,   0.00000, 0.00000, 308.95999);
CreateDynamicObject(3578, 114.35000, -2446.88989, 3.03000,   0.00000, 0.00000, 316.76001);
CreateDynamicObject(3578, 122.38000, -2453.13989, 3.03000,   0.00000, 0.00000, 328.28000);
CreateDynamicObject(3578, 131.14999, -2457.56006, 3.03000,   0.00000, 0.00000, 339.57999);
CreateDynamicObject(3578, 140.63000, -2460.35010, 3.03000,   0.00000, 0.00000, 347.92999);
CreateDynamicObject(3578, 150.53000, -2461.53003, 3.03000,   0.00000, 0.00000, 357.60001);
CreateDynamicObject(3578, 160.46001, -2461.90991, 3.03000,   0.00000, 0.00000, 1.08000);
CreateDynamicObject(3578, 170.80000, -2461.75000, 3.03000,   0.00000, 0.00000, 1.08000);
CreateDynamicObject(3578, 180.73000, -2461.42993, 3.03000,   0.00000, 0.00000, 1.08000);
CreateDynamicObject(3578, 191.00000, -2460.81006, 3.03000,   0.00000, 0.00000, 1.08000);
CreateDynamicObject(3578, 200.83000, -2460.36011, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 211.17999, -2459.62988, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 221.35001, -2458.87012, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 231.25000, -2458.35010, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 241.73000, -2457.55005, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 251.62000, -2456.89990, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 261.89001, -2456.35010, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 272.35001, -2455.47998, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 282.60999, -2454.94995, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 294.70999, -2454.16992, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 298.51999, -2455.78003, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 288.26001, -2456.54004, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 274.57999, -2458.22998, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 264.50000, -2458.96997, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 253.87000, -2460.04004, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 242.97000, -2461.04004, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 232.77000, -2462.34009, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 223.19000, -2463.46997, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 213.33000, -2464.22998, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 203.09000, -2465.31006, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 192.78999, -2466.25000, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 304.75000, -2453.46997, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 305.17999, -2455.13989, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(3578, 282.07999, -2457.37988, 3.03000,   0.00000, 0.00000, 4.16000);
CreateDynamicObject(6391, 128.30000, -2320.54004, 39.00000,   0.00000, 0.00000, 8.31000);
CreateDynamicObject(4832, 338.03000, -2364.93994, 34.61000,   0.00000, 0.00000, 270.76001);
CreateDynamicObject(4828, 353.07999, -2428.37988, 2.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1684, 279.89001, -2222.67993, 3.38000,   0.00000, 0.00000, 179.11000);
CreateDynamicObject(1684, 243.87000, -2222.36011, 3.38000,   0.00000, 0.00000, 179.11000);
CreateDynamicObject(6875, 231.46001, -2326.40991, -6.60000,   0.00000, 0.00000, 359.70001);
CreateDynamicObject(10183, 328.66000, -2277.43994, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 368.84000, -2277.57007, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 403.84000, -2277.45996, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 328.60999, -2263.83008, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 368.89001, -2263.94995, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 404.14001, -2264.01001, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 328.45001, -2248.36011, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 368.76999, -2248.45996, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 403.97000, -2248.53003, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(5488, 155.49001, -2461.22998, -0.06000,   0.00000, 0.00000, 185.28999);
CreateDynamicObject(5501, 203.07001, -2517.04004, 2.34000,   0.00000, 0.00000, 184.44000);
CreateDynamicObject(19532, 319.37000, -2490.12988, 2.22000,   0.00000, 0.00000, 295.04001);
CreateDynamicObject(4585, 235.58000, -2422.53003, 92.01000,   0.00000, 0.00000, 273.67001);
CreateDynamicObject(6522, 387.42001, -2568.56006, 10.21000,   0.00000, 0.00000, 90.60000);
CreateDynamicObject(6522, 319.51999, -2569.22998, 10.21000,   0.00000, 0.00000, 90.60000);
CreateDynamicObject(3578, 182.70000, -2467.01001, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 172.78000, -2467.86011, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 163.02000, -2469.00000, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 152.89999, -2470.15991, 3.03000,   0.00000, 0.00000, 6.61000);
CreateDynamicObject(3578, 143.42999, -2473.61011, 3.03000,   0.00000, 0.00000, 35.70000);
CreateDynamicObject(3578, 137.58000, -2482.02002, 3.03000,   0.00000, 0.00000, 81.07000);
CreateDynamicObject(3578, 137.08000, -2492.07007, 3.03000,   0.00000, 0.00000, 96.30000);
CreateDynamicObject(3578, 137.83000, -2502.26001, 3.03000,   0.00000, 0.00000, 96.30000);
CreateDynamicObject(3578, 139.10001, -2511.87012, 3.03000,   0.00000, 0.00000, 96.30000);
CreateDynamicObject(3578, 142.53999, -2521.36011, 3.03000,   0.00000, 0.00000, 120.64000);
CreateDynamicObject(3578, 149.94000, -2527.12012, 3.03000,   0.00000, 0.00000, 161.97000);
CreateDynamicObject(3578, 159.53000, -2528.12988, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 169.34000, -2527.47998, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 179.17999, -2526.91992, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 189.25999, -2526.01001, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 199.49001, -2525.26001, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 209.83000, -2524.57007, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 220.09000, -2523.87012, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 230.67999, -2523.23999, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 240.62000, -2522.68994, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 250.85001, -2522.15991, 3.03000,   0.00000, 0.00000, 182.37000);
CreateDynamicObject(3578, 260.82999, -2520.66992, 3.03000,   0.00000, 0.00000, 194.98000);
CreateDynamicObject(3578, 270.82001, -2518.22998, 3.03000,   0.00000, 0.00000, 194.98000);
CreateDynamicObject(3578, 280.76001, -2515.28003, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 289.95999, -2511.02002, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 299.60999, -2506.88989, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 308.47000, -2502.86011, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 317.57999, -2498.71997, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 326.03000, -2494.46997, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 335.29999, -2490.33008, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 344.48001, -2486.08008, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 353.75000, -2481.80005, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 363.16000, -2477.34009, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 372.78000, -2472.87988, 3.03000,   0.00000, 0.00000, 204.46001);
CreateDynamicObject(3578, 380.92999, -2467.17993, 3.03000,   0.00000, 0.00000, 222.89000);
CreateDynamicObject(3578, 388.22000, -2459.86011, 3.03000,   0.00000, 0.00000, 222.89000);
CreateDynamicObject(3578, 401.53000, -2444.94995, 3.03000,   0.00000, 0.00000, 232.02000);
CreateDynamicObject(3578, 395.13000, -2452.94995, 3.03000,   0.00000, 0.00000, 222.89000);
CreateDynamicObject(3578, 407.57001, -2436.66992, 3.03000,   0.00000, 0.00000, 232.02000);
CreateDynamicObject(3578, 413.03000, -2427.88989, 3.03000,   0.00000, 0.00000, 243.32001);
CreateDynamicObject(3578, 417.37000, -2418.71997, 3.03000,   0.00000, 0.00000, 243.32001);
CreateDynamicObject(3578, 421.57999, -2409.29004, 3.03000,   0.00000, 0.00000, 252.80000);
CreateDynamicObject(3578, 424.42001, -2399.11011, 3.03000,   0.00000, 0.00000, 256.82999);
CreateDynamicObject(3578, 425.88000, -2388.44995, 3.15000,   0.00000, 0.00000, 264.76999);
CreateDynamicObject(3578, 426.67999, -2378.23999, 3.15000,   0.00000, 0.00000, 266.85001);
CreateDynamicObject(3578, 427.10999, -2367.80005, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.67001, -2357.66992, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.50000, -2347.11011, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.82999, -2336.97998, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.48999, -2326.81006, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.42999, -2317.09009, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(3578, 426.42999, -2306.88989, 3.15000,   0.00000, 0.00000, 269.42001);
CreateDynamicObject(978, 114.01000, -2402.68994, 3.21000,   0.00000, 0.00000, 11.43000);
CreateDynamicObject(978, 110.45000, -2408.19995, 3.21000,   0.00000, 0.00000, 96.41000);
CreateDynamicObject(978, 111.92000, -2416.69995, 3.21000,   0.00000, 0.00000, 102.53000);
CreateDynamicObject(978, 115.05000, -2425.67993, 3.21000,   0.00000, 0.00000, 114.20000);
CreateDynamicObject(978, 119.23000, -2433.31006, 3.21000,   0.00000, 0.00000, 127.97000);
CreateDynamicObject(978, 124.44000, -2438.33008, 3.21000,   0.00000, 0.00000, 142.21001);
CreateDynamicObject(978, 132.37000, -2443.58008, 3.21000,   0.00000, 0.00000, 151.69000);
CreateDynamicObject(978, 139.31000, -2446.42993, 3.21000,   0.00000, 0.00000, 163.74001);
CreateDynamicObject(978, 148.10001, -2448.12988, 3.21000,   0.00000, 0.00000, 173.85001);
CreateDynamicObject(978, 157.03000, -2448.84009, 3.21000,   0.00000, 0.00000, 179.82001);
CreateDynamicObject(978, 166.07001, -2449.03003, 3.21000,   0.00000, 0.00000, 179.82001);
CreateDynamicObject(978, 175.38000, -2448.56006, 3.21000,   0.00000, 0.00000, 179.82001);
CreateDynamicObject(978, 184.71001, -2448.13989, 3.21000,   0.00000, 0.00000, 179.82001);
CreateDynamicObject(978, 192.61000, -2447.42993, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 201.83000, -2446.62988, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 210.95000, -2446.05005, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 220.10001, -2445.28003, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 228.55000, -2444.82007, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 237.48000, -2444.37988, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 245.74001, -2443.90991, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 253.07001, -2443.44995, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 262.23999, -2442.59009, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 271.26999, -2442.06006, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 280.34000, -2441.81006, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 289.45001, -2441.34009, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 298.63000, -2441.16992, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 307.76999, -2440.60010, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 317.13000, -2439.87988, 3.21000,   0.00000, 0.00000, 184.70000);
CreateDynamicObject(978, 323.01999, -2444.25000, 3.21000,   0.00000, 0.00000, 96.10000);
CreateDynamicObject(978, 323.75000, -2452.65991, 3.21000,   0.00000, 0.00000, 96.10000);
CreateDynamicObject(978, 324.44000, -2462.08008, 3.21000,   0.00000, 0.00000, 94.01000);
CreateDynamicObject(978, 320.56000, -2467.36011, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 311.22000, -2467.94995, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 302.48999, -2468.72998, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 293.14999, -2469.76001, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 283.62000, -2470.53003, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 274.28000, -2471.19995, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 265.06000, -2472.36011, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 256.42999, -2473.09009, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 247.78000, -2474.27002, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 238.74001, -2475.03003, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 230.25000, -2475.80005, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 221.42000, -2476.91992, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 212.78999, -2477.66992, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 204.10001, -2478.34009, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 195.91000, -2478.95996, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 187.14999, -2479.52002, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 178.28999, -2480.14990, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 169.58000, -2480.94995, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 160.44000, -2482.20996, 3.21000,   0.00000, 0.00000, 4.08000);
CreateDynamicObject(978, 152.71001, -2484.38989, 3.21000,   0.00000, 0.00000, 28.77000);
CreateDynamicObject(978, 150.57001, -2490.26001, 3.21000,   0.00000, 0.00000, 95.65000);
CreateDynamicObject(978, 151.49001, -2499.38989, 3.21000,   0.00000, 0.00000, 95.65000);
CreateDynamicObject(978, 152.34000, -2508.70996, 3.21000,   0.00000, 0.00000, 95.65000);
CreateDynamicObject(978, 157.25999, -2513.54004, 3.21000,   0.00000, 0.00000, 177.71001);
CreateDynamicObject(978, 166.57001, -2513.50000, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 175.64999, -2513.08008, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 184.38000, -2512.35010, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 193.55000, -2511.53003, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 202.32001, -2511.11011, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 211.37000, -2510.48999, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 220.48000, -2509.85010, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 229.36000, -2509.11011, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 238.25000, -2508.39990, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 247.22000, -2507.50000, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 256.23001, -2506.88989, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 265.28000, -2505.93994, 3.21000,   0.00000, 0.00000, 185.17000);
CreateDynamicObject(978, 274.32999, -2504.08008, 3.21000,   0.00000, 0.00000, 198.00999);
CreateDynamicObject(978, 282.89001, -2500.61011, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 291.28000, -2496.80005, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 299.01001, -2493.04004, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 307.41000, -2489.09009, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 315.88000, -2485.30005, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 324.07001, -2481.15991, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 331.39001, -2477.86011, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 339.29999, -2474.13989, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 347.48999, -2470.45996, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 355.31000, -2466.72998, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 363.62000, -2462.75000, 3.21000,   0.00000, 0.00000, 203.81000);
CreateDynamicObject(978, 370.89999, -2458.27002, 3.21000,   0.00000, 0.00000, 223.69000);
CreateDynamicObject(978, 377.23001, -2452.07007, 3.21000,   0.00000, 0.00000, 223.69000);
CreateDynamicObject(978, 383.72000, -2445.69995, 3.21000,   0.00000, 0.00000, 226.25999);
CreateDynamicObject(978, 389.89999, -2439.02002, 3.21000,   0.00000, 0.00000, 226.25999);
CreateDynamicObject(978, 395.72000, -2432.21997, 3.21000,   0.00000, 0.00000, 233.05000);
CreateDynamicObject(978, 400.79001, -2424.84009, 3.21000,   0.00000, 0.00000, 240.69000);
CreateDynamicObject(978, 405.16000, -2416.41992, 3.21000,   0.00000, 0.00000, 245.87000);
CreateDynamicObject(978, 408.53000, -2407.85010, 3.21000,   0.00000, 0.00000, 250.17999);
CreateDynamicObject(978, 411.59000, -2398.91992, 3.21000,   0.00000, 0.00000, 255.99001);
CreateDynamicObject(978, 413.73999, -2389.31006, 3.56000,   0.00000, 0.00000, 261.01999);
CreateDynamicObject(978, 414.66000, -2380.95996, 3.56000,   0.00000, 0.00000, 268.31000);
CreateDynamicObject(978, 414.82999, -2372.02002, 3.56000,   0.00000, 0.00000, 268.31000);
CreateDynamicObject(978, 415.12000, -2362.47998, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 414.95001, -2353.15991, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 414.73999, -2343.83008, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 414.60001, -2334.37012, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 414.41000, -2325.17993, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 414.01001, -2315.85010, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 413.76001, -2306.19995, 3.56000,   0.00000, 0.00000, 271.01001);
CreateDynamicObject(978, 409.45001, -2298.63989, 3.56000,   0.00000, 0.00000, 329.92999);
CreateDynamicObject(978, 400.97000, -2296.62988, 3.56000,   0.00000, 0.00000, 1.42000);
CreateDynamicObject(978, 391.87000, -2296.88989, 3.56000,   0.00000, 0.00000, 358.47000);
CreateDynamicObject(978, 382.67001, -2296.65991, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 373.57001, -2296.64990, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 364.26001, -2296.61011, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 354.91000, -2296.45996, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 345.76999, -2296.50000, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 336.79999, -2296.45996, 3.56000,   0.00000, 0.00000, 359.81000);
CreateDynamicObject(978, 327.63000, -2296.90991, 3.56000,   0.00000, 0.00000, 4.55000);
CreateDynamicObject(978, 318.51001, -2297.67993, 3.56000,   0.00000, 0.00000, 4.55000);
CreateDynamicObject(978, 311.04999, -2298.38989, 3.56000,   0.00000, 0.00000, 4.55000);
CreateDynamicObject(3578, 288.85999, -2290.94995, 1.68000,   0.00000, 0.00000, 90.33000);
CreateDynamicObject(10183, 269.22000, -2277.14990, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 228.95000, -2277.13989, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 188.62000, -2277.26001, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 188.62000, -2262.09009, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 188.74001, -2246.72998, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 228.97000, -2262.06006, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 229.07001, -2246.87988, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 269.26999, -2261.92993, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(10183, 269.29999, -2246.95996, 2.14000,   0.00000, 0.00000, 225.34000);
CreateDynamicObject(3749, 261.82001, -2208.91992, 7.70000,   0.00000, 0.00000, 359.20999);
CreateDynamicObject(19535, 261.88000, -2208.95996, 2.00000,   0.00000, 0.00000, 270.26001);
CreateDynamicObject(966, 265.29001, -2212.31006, 2.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(968, 265.28000, -2212.39990, 2.79000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 258.04999, -2211.91992, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 257.59000, -2211.56006, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 257.17999, -2211.23999, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 256.72000, -2211.06006, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 256.25000, -2210.86011, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 265.79001, -2212.00000, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 266.17001, -2211.69995, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 266.53000, -2211.46997, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 266.89001, -2211.27002, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 267.26001, -2211.12988, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1238, 267.70999, -2210.98999, 2.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 145.39000, -2262.45996, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(8661, 144.84000, -2274.42993, 2.10000,   0.00000, 0.00000, 359.39001);
CreateDynamicObject(6295, 47.64000, -2197.08008, 21.89000,   0.00000, 0.00000, 29.06000);
//*******************LUGAR VENDEDOR DE ARMA Y /CREARARMA*********************************
CreateDynamicObject(18451, 2195.52246, -2236.74023, 12.84584,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18451, 2180.00244, -2233.76538, 17.93295,   0.00000, 0.00000, 351.80945);
CreateDynamicObject(3627, 2165.51855, -2281.78809, 15.90625,   356.85840, 0.00000, -2.35619);
CreateDynamicObject(323, 2150.76709, -2272.49780, 13.23400,   91.00000, -113.00000, 105.71962);
CreateDynamicObject(323, 2151.39209, -2272.02246, 13.23400,   91.00000, -113.00000, 105.71962);
CreateDynamicObject(335, 2151.04883, -2271.81079, 13.27840,   76.00000, 79.00000, 55.00000);
CreateDynamicObject(335, 2150.67383, -2272.40747, 13.27840,   76.00000, 79.00000, 55.00000);
CreateDynamicObject(349, 2150.16821, -2272.00391, 13.23280,   84.00000, 11.00000, 33.00000);
CreateDynamicObject(349, 2150.36475, -2271.54590, 13.23280,   84.00000, 11.00000, 33.00000);
CreateDynamicObject(355, 2149.79639, -2270.63989, 13.32372,   91.00000, 0.00000, 0.00000);
CreateDynamicObject(355, 2149.36523, -2271.26318, 13.32372,   91.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 2148.58301, -2270.47290, 13.23130,   76.00000, -4.00000, -25.00000);
CreateDynamicObject(356, 2149.29199, -2269.73950, 13.23130,   76.00000, -4.00000, -25.00000);
CreateDynamicObject(336, 2148.67944, -2269.11328, 13.23200,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(336, 2148.67944, -2269.11328, 13.23200,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(336, 2148.41016, -2269.10669, 13.23200,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(336, 2148.07349, -2269.20264, 13.23200,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(336, 2147.69165, -2269.15454, 13.23200,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(339, 2148.14648, -2268.76050, 13.20657,   85.00000, 0.00000, 267.60349);
CreateDynamicObject(339, 2148.13940, -2268.49976, 13.20657,   85.00000, 0.00000, 267.60349);
CreateDynamicObject(347, 2147.32690, -2269.09497, 13.21819,   92.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 2146.87354, -2268.89941, 13.21819,   92.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 2146.82080, -2268.54346, 13.21819,   92.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 2147.64771, -2268.25928, 13.21819,   92.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 2147.03979, -2268.24829, 13.21819,   92.00000, 0.00000, 0.00000);
CreateDynamicObject(337, 2146.95532, -2268.02246, 13.22230,   190.00000, 87.00000, 8.00000);
CreateDynamicObject(337, 2146.60034, -2267.72705, 13.22230,   190.00000, 87.00000, 8.00000);
CreateDynamicObject(353, 2145.67847, -2267.61816, 13.30280,   74.00000, 11.00000, 330.00000);
CreateDynamicObject(348, 2145.51489, -2266.53394, 13.23499,   72.00000, 0.00000, 315.00000);
CreateDynamicObject(348, 2145.84644, -2266.11646, 13.23499,   72.00000, 0.00000, 315.00000);
CreateDynamicObject(348, 2145.15601, -2266.82202, 13.23499,   72.00000, 0.00000, 315.00000);
CreateDynamicObject(348, 2145.11157, -2266.11328, 13.23499,   72.00000, 0.00000, 315.00000);
CreateDynamicObject(1491, 2132.14233, -2277.77710, 19.57166,   0.00000, 0.00000, 313.92691);
CreateDynamicObject(2064, 2135.45630, -2255.77710, 12.86694,   0.00000, 0.00000, 43.65355);
CreateDynamicObject(2060, 2136.05933, -2256.38013, 12.49531,   0.00000, 0.00000, 43.84024);
CreateDynamicObject(2033, 2152.01758, -2273.38013, 13.35993,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2033, 2152.21582, -2272.76758, 13.35993,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2034, 2150.33545, -2272.14014, 16.77402,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 2149.18726, -2270.28467, 13.23200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2064, 2134.78442, -2256.32666, 12.87945,   0.00000, 0.00000, 39.78627);
CreateDynamicObject(2060, 2135.35254, -2257.06567, 12.60193,   0.00000, 0.00000, 40.96299);
CreateDynamicObject(2634, 2118.84692, -2275.05176, 20.75315,   0.00000, 0.00000, 135.89410);
CreateDynamicObject(931, 2146.60889, -2251.81934, 13.33306,   0.00000, 0.00000, 321.31549);
CreateDynamicObject(2068, 2144.47192, -2253.74438, 22.09165,   0.00000, 0.00000, 325.98663);
CreateDynamicObject(3267, 2125.13672, -2270.48560, 13.35136,   0.00000, 0.00000, 316.75003);
CreateDynamicObject(3267, 2127.58301, -2272.30200, 13.35136,   0.00000, 0.00000, 316.75003);
CreateDynamicObject(1358, 2129.18701, -2262.25806, 14.93197,   0.00000, 0.00000, 41.45337);
CreateDynamicObject(1369, 2130.94214, -2260.25342, 14.33870,   0.00000, 0.00000, 37.64679);
CreateDynamicObject(853, 2131.69092, -2265.34839, 14.12502,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1338, 2153.27832, -2261.59131, 14.09905,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2153.18555, -2261.46680, 14.55667,   0.00000, 0.00000, 17.20513);
CreateDynamicObject(2035, 2153.28442, -2261.77686, 14.55767,   0.00000, 0.00000, 17.20513);
CreateDynamicObject(1357, 2144.25977, -2265.23560, 12.63272,   0.00000, 0.00000, 38.23339);
CreateDynamicObject(2044, 2144.34741, -2265.29590, 12.60221,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(359, 2161.25195, -2267.54370, 15.81510,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(359, 2161.40308, -2266.52124, 15.81510,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(362, 2129.47778, -2262.50757, 15.83860,   185.00000, -62.00000, 0.00000);
CreateDynamicObject(362, 2131.37280, -2265.67529, 14.70926,   185.00000, -62.00000, 0.00000);
CreateDynamicObject(358, 2131.74854, -2265.74805, 14.55850,   -34.00000, 105.00000, 0.00000);
CreateDynamicObject(358, 2129.61182, -2261.99146, 15.42930,   -28.00000, 105.00000, 0.00000);
CreateDynamicObject(1225, 2150.09692, -2254.79956, 14.99994,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 2149.59473, -2254.15723, 14.99994,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 2148.92847, -2254.77783, 14.99994,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 2149.52051, -2255.41235, 14.99994,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 2146.31152, -2267.22021, 13.23200,   0.00000, 0.00000, 0.00000);
//**********************Parque e iglesia antiguo hospital
CreateDynamicObject(19545, 1154.64575, -1377.94604, 12.65460,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19545, 1154.68530, -1362.69958, 12.63960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8678, 1166.00818, -1330.81763, 13.20350,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8675, 1164.31995, -1338.96826, 21.85463,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19545, 1141.99792, -1327.07117, 12.55780,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1160.66406, -1373.17224, 13.05500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1280, 1180.25793, -1373.27002, 13.05500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1280, 1170.14282, -1373.11584, 13.05500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19545, 1153.94299, -1378.12976, 10.47550,   0.00000, 18.00000, 90.00000);
CreateDynamicObject(1281, 1162.13696, -1380.08545, 13.38680,   0.00000, 0.00000, 56.00000);
CreateDynamicObject(1281, 1175.41443, -1380.17590, 13.38680,   0.00000, 0.00000, 56.00000);
CreateDynamicObject(621, 1153.50806, -1376.42151, 9.16158,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1340, 1164.70166, -1373.80725, 13.78960,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1341, 1182.47974, -1378.55176, 13.62790,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1346, 1169.23962, -1381.52502, 14.07590,   0.00000, 0.00000, 0.20676);
CreateDynamicObject(1211, 1184.27075, -1383.99011, 13.16167,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1167.45618, -1375.18066, 13.04881,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1175.49622, -1375.14648, 13.04881,   0.00000, 0.00000, 0.00000);
//*******************Residencia navaja y yo********************************+
CreateDynamicObject(3446, -5.53992, -2520.23755, 39.23989,   0.00000, 0.00000, -61.97999);
CreateDynamicObject(3488, -12.25480, -2501.70020, 42.15560,   0.00000, 0.00000, -62.04000);
CreateDynamicObject(987, -40.32603, -2507.72021, 34.70126,   0.00000, 0.00000, -55.68000);
CreateDynamicObject(987, -33.59436, -2517.56030, 35.11960,   0.00000, 0.00000, -60.35998);
CreateDynamicObject(987, -27.68142, -2527.95532, 35.43711,   0.00000, 0.00000, -59.87999);
CreateDynamicObject(987, -21.75654, -2538.34741, 35.60226,   0.00000, 0.00000, 22.38004);
CreateDynamicObject(987, -10.72756, -2533.80469, 35.60226,   0.00000, 0.00000, 28.02003);
CreateDynamicObject(987, -0.17021, -2528.17896, 35.80326,   0.00000, 0.00000, 29.28003);
CreateDynamicObject(987, 10.27374, -2522.39697, 35.70847,   0.00000, 0.00000, 106.74005);
CreateDynamicObject(987, 5.55577, -2499.07690, 35.70847,   0.00000, 0.00000, 117.92336);
CreateDynamicObject(987, 6.85491, -2510.94336, 35.70847,   0.00000, 0.00000, 96.24004);
CreateDynamicObject(987, -0.04046, -2488.53247, 35.70847,   0.00000, 0.00000, 117.92336);
CreateDynamicObject(987, -5.62996, -2478.04321, 35.70847,   0.00000, 0.00000, 141.38338);
CreateDynamicObject(987, -14.92650, -2470.58594, 35.70847,   0.00000, 0.00000, 191.12334);
CreateDynamicObject(987, -26.67383, -2472.87793, 35.70847,   0.00000, 0.00000, 213.92329);
CreateDynamicObject(987, -36.57758, -2479.50537, 35.70847,   0.00000, 0.00000, 213.92329);
CreateDynamicObject(987, -46.71485, -2488.38452, 35.50747,   0.00000, 0.00000, 278.00302);
CreateDynamicObject(987, -46.48714, -2486.10303, 35.60747,   0.00000, 0.00000, 273.92331);
CreateDynamicObject(3361, -11.58692, -2450.54541, 26.76229,   0.00000, 0.00000, 338.26672);
CreateDynamicObject(3361, -5.62620, -2452.65845, 22.69592,   0.00000, 0.00000, 340.96661);
CreateDynamicObject(6300, -12.33206, -2475.12280, -4.21800,   0.00000, 0.00000, 152.51999);
CreateDynamicObject(3361, -0.12619, -2454.24585, 18.53590,   0.00000, 0.00000, 346.54651);
CreateDynamicObject(3361, 5.77212, -2455.64624, 14.57305,   0.00000, 0.00000, 346.54651);
CreateDynamicObject(3361, 11.78912, -2457.09839, 10.37878,   0.00000, 0.00000, 346.54651);
CreateDynamicObject(3361, 17.46225, -2458.43799, 6.55401,   0.00000, 0.00000, 346.54651);
CreateDynamicObject(3361, 23.16817, -2459.81934, 2.66711,   0.00000, 0.00000, 346.54651);
CreateDynamicObject(4874, -1.78218, -2432.45874, 3.42477,   0.00000, 0.00000, -117.35997);
CreateDynamicObject(3526, 0.27664, -2399.87817, 2.93840,   0.00000, 0.00000, 332.04623);
CreateDynamicObject(3526, -12.12350, -2423.36060, 2.93840,   0.00000, 0.00000, 332.04623);
CreateDynamicObject(3526, 7.86387, -2433.66406, 2.93840,   0.00000, 0.00000, 332.04623);
CreateDynamicObject(3526, 20.07407, -2410.08423, 2.93840,   0.00000, 0.00000, 332.04623);
//Tienda de muebles by benjamin alastre

//*************************FBI BY BENJAMIN ALASTRE**********************************
CreateDynamicObject(7090, 2811.98608, -1099.86963, 46.45689,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 2811.96948, -1103.73474, 46.45690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 2811.96899, -1107.76074, 46.45690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 2811.79810, -1076.51428, 46.45689,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 2811.76025, -1072.51526, 46.45689,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 2811.74023, -1068.05444, 46.45689,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19777, 2792.41333, -1088.32104, 32.59700,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19777, 2792.39136, -1086.85754, 32.59700,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 2793.59595, -1085.74280, 30.21480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 2793.53638, -1089.30884, 30.21480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 2805.16479, -1104.46667, 93.17511,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 2803.55518, -1071.32275, 93.17511,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1346, 2801.58911, -1095.40247, 31.17912,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 2793.72803, -1091.82617, 30.40135,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 2793.64185, -1083.15698, 30.40135,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 2798.75366, -1078.76453, 30.41647,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4642, 2787.40137, -1098.73840, 94.76890,   0.00000, 0.00000, 90.00000);
//***********************BANCO INTERIOR BY BENJAMIN ALASTRE*******************
CreateDynamicObject(13007, 1491.21130, -1570.88086, -8.62170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1536, 1497.41626, -1578.96118, -10.41990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19366, 1481.26538, -1570.22754, -8.90740,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19368, 1498.13257, -1578.98816, -8.66770,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, 1481.27124, -1568.72339, -10.81560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19366, 1481.26575, -1566.90088, -6.69810,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1892, 1497.64941, -1578.27661, -10.36426,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 1499.32971, -1575.35522, -7.19667,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 1482.32288, -1566.67163, -7.19670,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14576, 1495.99280, -1564.32520, -15.00624,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1536, 1478.69128, -1570.02173, -14.83510,   0.00000, 0.00000, -0.42000);
CreateDynamicObject(19437, 1479.38074, -1570.05420, -12.30050,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2332, 1519.21887, -1561.42627, -21.95200,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2332, 1519.21887, -1561.42627, -22.77670,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2332, 1519.11951, -1565.33264, -22.77670,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2332, 1519.18152, -1562.68787, -22.77670,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2332, 1519.11365, -1566.68469, -22.77670,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2332, 1519.12195, -1565.33130, -21.92400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1829, 1518.81360, -1563.95178, -22.79410,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(18643, 1493.42517, -1559.47241, -21.89650,   0.00000, 0.00000, -47.00000);
CreateDynamicObject(18643, 1490.34460, -1578.37048, -20.79030,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(18643, 1486.87097, -1578.30237, -20.79030,   0.00000, 0.00000, 55.67569);
CreateDynamicObject(18643, 1483.42175, -1574.17090, -20.79030,   0.00000, 0.00000, 55.67569);
CreateDynamicObject(18643, 1486.38525, -1551.47571, -20.79030,   0.00000, 0.00000, -98.00000);
CreateDynamicObject(18643, 1488.70239, -1557.04614, -22.36130,   0.00000, 0.00000, -98.00000);
CreateDynamicObject(18643, 1483.51416, -1562.13721, -22.36129,   0.00000, 0.00000, -47.00000);
CreateDynamicObject(19087, 1499.29639, -1564.15820, -19.78849,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19087, 1499.29639, -1564.15820, -17.70740,   0.00000, 0.00000, 0.00000);
//*****************AYUNTAMIENTO BY BENJAMIN ALASTRE*************++
/*CreateDynamicObject(10377, 1480.51514, -1775.59937, 30.45746,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 1487.83423, -1812.65479, 12.62620,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1475.90601, -1798.24402, 12.54160,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1475.91028, -1810.23657, 12.54160,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1475.85229, -1822.16528, 12.54160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1487.81982, -1822.17310, 12.54160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1511.71802, -1822.15540, 12.54160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1523.65735, -1822.21362, 12.54160,   0.00000, 0.00000, 91.14000);
CreateDynamicObject(10377, 1480.51514, -1775.59937, 30.45746,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(4641, 1525.21887, -1809.20190, 14.33380,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1499.76501, -1822.15564, 12.54160,   0.00000, 0.00000, 0.00000);*/
//***********************CASAS BY ELIAS RIVAS*************
CreateDynamicObject(8167, 273.03180, -1208.42651, 74.11820,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(8167, 266.69070, -1223.86597, 74.11820,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(8167, 265.38327, -1213.77051, 74.11820,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(8167, 271.41806, -1209.53357, 74.11820,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(19447, 240.12036, -1240.02551, 73.00160,   0.00000, 90.00000, 38.00000);
CreateDynamicObject(19447, 251.62289, -1231.83704, 71.28160,   0.00000, 179.00000, 38.00000);
CreateDynamicObject(19447, 247.31239, -1234.87817, 73.00160,   0.00000, 90.00000, 38.00000);
CreateDynamicObject(19447, 244.61955, -1236.88538, 73.00160,   0.00000, 90.00000, 38.00000);
CreateDynamicObject(19447, 241.77823, -1238.79443, 73.00160,   0.00000, 90.00000, 38.00000);
CreateDynamicObject(19447, 250.69389, -1233.50854, 73.00160,   0.00000, 90.00000, 38.00000);
CreateDynamicObject(1457, 238.27115, -1175.26697, 75.71000,   0.00000, 0.00000, -56.00000);
CreateDynamicObject(1471, 227.82899, -1187.44043, 73.87170,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1471, 231.55350, -1192.54565, 73.87170,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1471, 230.57906, -1191.19849, 73.87170,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1471, 229.76984, -1190.06311, 73.87170,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1471, 228.71982, -1188.63171, 73.87170,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1451, 233.44414, -1175.46265, 74.91280,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1458, 234.14413, -1172.77454, 74.53860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1482, 230.06563, -1199.30640, 75.64110,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(1482, 198.80450, -1224.13074, 78.69710,   0.00000, 0.00000, 214.00000);
CreateDynamicObject(5152, 233.66422, -1178.56836, 74.21600,   0.00000, 24.00000, 35.00000);
CreateDynamicObject(5152, 237.54858, -1175.42712, 74.21600,   0.00000, 24.00000, 35.00000);
CreateDynamicObject(640, 234.01988, -1176.80237, 74.73880,   0.00000, 0.00000, -56.00000);
CreateDynamicObject(640, 228.17889, -1198.39258, 74.93080,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(5152, 235.21490, -1177.48743, 74.21600,   0.00000, 24.00000, 35.00000);
CreateDynamicObject(5152, 238.00023, -1176.10791, 74.21600,   0.00000, 24.00000, 35.00000);
CreateDynamicObject(644, 238.52956, -1188.15710, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 236.41476, -1185.07043, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 234.15318, -1182.10852, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 230.54500, -1176.86938, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 228.84973, -1174.48767, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 227.05379, -1172.00305, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 224.05637, -1173.02161, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 221.50252, -1174.76013, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 219.40694, -1176.34705, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 216.24327, -1178.66797, 74.31184,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 240.89145, -1182.63257, 74.47700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 213.61523, -1191.67639, 74.47700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 215.64824, -1195.14648, 74.47700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 217.93750, -1198.55981, 74.47700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 245.09999, -1178.06702, 74.47700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(628, 237.16362, -1175.13232, 75.91800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(639, 233.23151, -1176.76636, 75.19320,   0.00000, 0.00000, -53.00000);
CreateDynamicObject(639, 234.98782, -1180.14282, 75.36120,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(1482, 234.12489, -1178.45886, 75.64110,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(1482, 233.89583, -1178.23328, 75.64110,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(1219, 236.46750, -1182.00464, 75.08800,   0.00000, 0.00000, -35.00000);
CreateDynamicObject(1219, 236.43581, -1182.03198, 74.59200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 235.24480, -1179.05127, 74.74680,   0.00000, 0.00000, -56.00000);
CreateDynamicObject(640, 229.52400, -1197.43652, 74.93080,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(11544, 250.47185, -1237.08264, 72.13500,   0.00000, 0.00000, 126.00000);
CreateDynamicObject(8167, 264.15820, -1220.25208, 74.11820,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(8167, 250.41316, -1230.52966, 74.11820,   0.00000, 0.00000, 38.00000);
CreateDynamicObject(8167, 251.29704, -1231.66821, 74.11820,   0.00000, 0.00000, 38.00000);
CreateDynamicObject(11472, 256.06488, -1215.24548, 71.36690,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(11472, 245.50931, -1222.47034, 71.36690,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(1990, 240.56912, -1224.85278, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 245.00493, -1221.75122, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 245.77626, -1221.25098, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 249.69804, -1220.10034, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 242.80855, -1223.25500, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 242.04906, -1223.81836, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 241.28505, -1224.34888, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 246.31133, -1220.90552, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 259.93567, -1211.39575, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 251.90804, -1218.55408, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 254.13826, -1215.33276, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 254.88795, -1214.84375, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 255.62898, -1214.34338, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 258.13495, -1212.59875, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 258.93857, -1212.10950, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 259.69095, -1211.57104, 75.09570,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1497, 236.60390, -1175.78821, 73.76010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1221, 238.74240, -1174.06091, 74.35870,   0.00000, 0.00000, 33.00000);
CreateDynamicObject(1222, 239.29950, -1174.71436, 74.76450,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(918, 237.83141, -1174.56555, 74.71070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 239.29280, -1175.47437, 74.39020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 239.19530, -1175.99170, 74.39020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1433, 230.94003, -1198.57141, 74.60090,   0.00000, 0.00000, 37.00000);
CreateDynamicObject(1433, 232.47260, -1197.45679, 74.60090,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(1433, 231.73227, -1197.99121, 74.60090,   0.00000, 0.00000, 37.00000);
CreateDynamicObject(2124, 232.63150, -1198.25903, 74.94660,   0.00000, 0.00000, 307.00000);
CreateDynamicObject(2124, 231.03792, -1197.60791, 74.94660,   0.00000, 0.00000, 126.00000);
CreateDynamicObject(2124, 232.20551, -1196.68140, 74.94660,   0.00000, 0.00000, 126.00000);
CreateDynamicObject(2124, 230.20441, -1199.20032, 74.94660,   0.00000, 0.00000, 216.00000);
CreateDynamicObject(2124, 231.48613, -1199.14087, 74.94660,   0.00000, 0.00000, 307.00000);
CreateDynamicObject(1256, 245.00357, -1237.10779, 73.69650,   0.00000, 0.00000, 129.00000);
CreateDynamicObject(1256, 248.22490, -1234.42883, 73.69650,   0.00000, 0.00000, 129.00000);
CreateDynamicObject(3599, 211.23547, -1245.99023, 83.23810,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1990, 257.29660, -1213.15088, 75.07970,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 219.37788, -1249.60779, 77.19970,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1990, 221.51581, -1248.04224, 77.19970,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(3851, 207.58807, -1252.70422, 78.71970,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(3851, 211.92967, -1249.67200, 78.71970,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(1505, 221.28185, -1248.70947, 77.16290,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1557, 203.07961, -1244.73792, 77.20730,   0.00000, 0.00000, -144.00000);
CreateDynamicObject(1557, 200.72040, -1246.44873, 77.20730,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(1482, 230.18790, -1199.44495, 7.64110,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(5152, 200.51054, -1225.95532, 77.32070,   0.00000, 23.00000, 125.00000);
CreateDynamicObject(5152, 198.53169, -1223.07263, 77.32070,   0.00000, 23.00000, 125.00000);
CreateDynamicObject(640, 188.41336, -1240.89075, 77.94530,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(640, 195.21625, -1219.59241, 77.94530,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(640, 202.66042, -1230.35693, 77.94530,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(640, 181.73056, -1231.02808, 77.94530,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(967, 263.56079, -1228.12671, 72.93060,   0.00000, 0.00000, -52.00000);
CreateDynamicObject(1638, 183.49840, -1235.47070, 78.89410,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(1497, 184.85284, -1234.74536, 76.94740,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(1640, 198.36571, -1222.70923, 77.47730,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(1641, 199.59004, -1224.59241, 77.49560,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(1643, 200.50488, -1225.96130, 77.46030,   0.00000, 0.00000, -54.00000);
CreateDynamicObject(1461, 195.30460, -1243.95984, 78.06770,   0.00000, 0.00000, -198.00000);
CreateDynamicObject(1461, 191.88840, -1216.66833, 78.06770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(17068, 188.64355, -1223.73572, 77.06220,   0.00000, 0.00000, 34.00000);
CreateDynamicObject(644, 234.18794, -1252.43237, 68.01012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 224.55617, -1261.82434, 65.67624,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 213.97258, -1290.89197, 59.56095,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 219.19655, -1306.68579, 56.64964,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 230.31712, -1324.36877, 52.95523,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 200.12451, -1272.80920, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 171.93666, -1249.34229, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 172.09148, -1238.58154, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 182.95383, -1256.53308, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 188.97504, -1250.96863, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 192.99620, -1259.43835, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 186.59428, -1262.37463, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 193.02756, -1267.41370, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(878, 198.69762, -1266.94604, 76.44616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 173.10576, -1236.83472, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 189.96860, -1259.40906, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 187.12955, -1260.09558, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 187.10670, -1256.37756, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 189.06778, -1252.09973, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 179.05751, -1254.77979, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 178.01213, -1234.37073, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 176.82030, -1238.96436, 78.89560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 176.39255, -1240.90027, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 185.17439, -1261.23376, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 182.19426, -1247.03394, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 171.25717, -1249.83191, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 171.95099, -1236.62451, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(823, 178.02988, -1256.58972, 76.89824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 219.21217, -1250.47095, 77.45420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 222.51190, -1248.06946, 77.45420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3810, 216.70288, -1249.29675, 84.28340,   0.00000, 0.00000, -60.00000);
CreateDynamicObject(3810, 213.89055, -1251.67505, 84.28340,   0.00000, 0.00000, -60.00000);
CreateDynamicObject(3810, 212.36057, -1252.77441, 84.28340,   0.00000, 0.00000, -60.00000);
CreateDynamicObject(3810, 215.39658, -1250.68616, 84.28340,   0.00000, 0.00000, -60.00000);
CreateDynamicObject(2254, 221.79245, -1248.53418, 80.31380,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(758, 192.73666, -1252.68188, 76.96340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(758, 197.98640, -1265.62781, 76.96340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(758, 192.33153, -1269.63257, 76.96340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(758, 181.91521, -1261.32300, 76.96340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(758, 184.14812, -1250.70496, 76.96340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 196.49989, -1263.49670, 77.85411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 186.93182, -1254.99451, 77.85411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 172.23746, -1237.79675, 77.85411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 188.18823, -1259.44116, 77.85411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 178.54510, -1252.56628, 77.85411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 174.46010, -1243.91138, 77.85411,   0.00000, 0.00000, 0.00000);
//*******************Paintball*******************
CreateDynamicObject(3279, -1071.69995, 1032.30005, 1342.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3279, -972.79999, 1076.80005, 1344.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3279, -1022.00000, 1028.90002, 1342.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3279, -1107.69995, 1094.80005, 1340.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(13591, -1089.50000, 1031.40002, 1342.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3270, -1060.50000, 1058.80005, 1341.40002,   0.00000, 352.00000, 14.00000);
CreateDynamicObject(18568, -1077.00000, 1093.59998, 1343.09998,   0.00000, 266.00000, 180.00000);
CreateDynamicObject(13647, -1060.40002, 1090.90002, 1341.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18568, -1077.09998, 1098.80005, 1343.09998,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1052.09998, 1091.69995, 1343.09998,   0.00000, 265.99500, 0.00000);
CreateDynamicObject(18568, -1052.19995, 1098.00000, 1343.09998,   0.00000, 265.99500, 0.00000);
CreateDynamicObject(13647, -1063.40002, 1096.09998, 1341.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3363, -1035.59998, 1062.50000, 1343.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3887, -1043.40002, 1007.00000, 1349.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13590, -1087.50000, 1061.40002, 1341.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3364, -1007.50000, 1057.59998, 1339.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11442, -999.70001, 1029.90002, 1340.90002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11443, -987.90002, 1059.19995, 1342.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11446, -993.40002, 1083.30005, 1341.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11446, -993.50000, 1093.40002, 1341.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11458, -1000.09998, 1074.19995, 1341.09998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11426, -999.40002, 1046.00000, 1341.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3279, -987.00000, 1030.40002, 1340.90002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(5130, -1131.80005, 1095.50000, 1345.68994,   0.00000, 0.00000, 42.00000);
CreateDynamicObject(5130, -974.29999, 1023.70001, 1344.69995,   0.00000, 0.00000, 224.00000);
CreateDynamicObject(18568, -1124.00000, 1061.80005, 1345.00000,   0.00000, 266.00000, 180.00000);
CreateDynamicObject(18568, -1124.00000, 1055.70020, 1345.09998,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1123.30005, 1032.50000, 1345.09998,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1123.19995, 1027.90002, 1345.09998,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(3279, -1034.20020, 1092.40039, 1342.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3279, -1132.59998, 1042.40002, 1344.69995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(13638, -1115.30005, 1047.40002, 1343.59998,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18568, -1110.19995, 1055.40002, 1345.90002,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1110.20020, 1042.09961, 1349.80005,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(3665, -1111.40002, 1072.50000, 1342.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18568, -1102.59998, 1070.40002, 1344.69995,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1102.50000, 1078.19995, 1344.69995,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(18568, -1102.40002, 1074.00000, 1344.69995,   0.00000, 265.99500, 179.99500);
CreateDynamicObject(11442, -1113.30005, 1028.50000, 1342.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(13591, -1019.29980, 1063.90039, 1342.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18451, -1021.40002, 1088.59998, 1343.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3279, -1049.69995, 1065.90002, 1342.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18609, -1054.30005, 1075.69995, 1343.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18609, -1015.70001, 1043.00000, 1342.19995,   0.00000, 0.00000, 0.00000);

//*******************interior tienda electronica*******************
CreateDynamicObject(14665, 1008.47949, 52.23438, 56.30649,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1885, 1004.62476, 50.38561, 54.27211,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1984, 1006.75482, 54.02099, 54.29711,   0.00000, 0.00000, 179.19000);
CreateDynamicObject(2362, 1006.30518, 54.29913, 55.24323,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2412, 1004.01837, 53.52606, 54.30394,   0.00000, 0.00000, 270.67499);
CreateDynamicObject(2412, 1004.02881, 50.21970, 54.30394,   0.00000, 0.00000, 270.67017);
CreateDynamicObject(2413, 1013.72852, 56.21582, 54.32211,   0.00000, 0.00000, 270.35706);
CreateDynamicObject(2413, 1013.73242, 54.61816, 54.32211,   0.00000, 0.00000, 270.35156);
CreateDynamicObject(2413, 1013.72284, 53.02059, 54.32211,   0.00000, 0.00000, 270.35706);
CreateDynamicObject(2413, 1013.71869, 51.39541, 54.32211,   0.00000, 0.00000, 270.35706);
CreateDynamicObject(2434, 1010.06415, 46.37968, 54.32211,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2434, 1010.25702, 47.48144, 54.32211,   0.00000, 0.00000, 87.34003);
CreateDynamicObject(2435, 1009.17365, 46.38908, 54.32211,   0.00000, 0.00000, 359.86502);
CreateDynamicObject(2435, 1009.16736, 47.67495, 54.32211,   0.00000, 0.00000, 180.63501);
CreateDynamicObject(2434, 1008.27612, 47.67778, 54.32211,   0.00000, 0.00000, 178.64587);
CreateDynamicObject(2434, 1008.07953, 46.56667, 54.32211,   0.00000, 0.00000, 269.95313);
CreateDynamicObject(2403, 1008.97479, 46.52891, 54.27761,   0.00000, 0.00000, 274.64499);
CreateDynamicObject(2403, 1008.96179, 46.53107, 55.45269,   0.00000, 0.00000, 274.64172);
CreateDynamicObject(2403, 1008.34180, 46.39944, 55.45269,   0.00000, 0.00000, 183.33185);
CreateDynamicObject(2403, 1008.33276, 46.37611, 54.27761,   0.00000, 0.00000, 183.32886);
CreateDynamicObject(2125, 1004.63397, 55.09865, 54.63199,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1954, 1013.56964, 51.37440, 54.65974,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1954, 1013.58215, 53.96910, 54.64600,   0.00000, 0.00000, 89.54999);
CreateDynamicObject(3031, 1012.88629, 62.28394, 55.87587,   0.00000, 0.00000, 246.22498);
CreateDynamicObject(1958, 1013.59436, 51.53061, 55.38877,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1429, 1013.63660, 46.33495, 56.37989,   0.00000, 0.00000, 260.74988);
CreateDynamicObject(1429, 1006.49237, 42.15121, 56.37989,   0.00000, 0.00000, 157.52991);
CreateDynamicObject(2199, 1013.88226, 48.28861, 54.30039,   0.00000, 0.00000, 270.67505);
CreateDynamicObject(2606, 1013.87793, 53.52930, 56.69782,   0.00000, 0.00000, 270.67017);
CreateDynamicObject(5061, 1003.05414, 57.75640, 56.23474,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5061, 1003.05957, 62.00736, 56.23474,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5061, 1003.06720, 46.83071, 55.93834,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1500, 1003.03998, 52.22422, 54.32211,   0.00000, 0.00000, 270.67505);
CreateDynamicObject(1500, 1003.03235, 53.71820, 54.32211,   0.00000, 0.00000, 270.67017);
CreateDynamicObject(1717, 1009.88562, 48.04082, 54.80265,   0.00000, 0.00000, 131.14502);
CreateDynamicObject(1718, 1013.62854, 55.51069, 55.39830,   0.00000, 0.00000, 272.65997);
CreateDynamicObject(1719, 1013.28741, 55.99262, 54.72882,   0.00000, 0.00000, 270.67499);
CreateDynamicObject(1747, 1007.80927, 41.54731, 54.95312,   0.00000, 0.00000, 175.35498);
CreateDynamicObject(1747, 1012.53168, 43.28279, 54.95312,   0.00000, 0.00000, 230.93280);
CreateDynamicObject(1748, 1005.09814, 42.76603, 56.15341,   0.00000, 0.00000, 143.46002);
CreateDynamicObject(1749, 1009.36414, 46.65398, 55.37768,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1750, 1011.29980, 42.42367, 56.16826,   0.00000, 0.00000, 208.59998);
CreateDynamicObject(1750, 1009.81439, 41.71519, 54.94319,   0.00000, 0.00000, 194.70239);
CreateDynamicObject(1752, 1009.90765, 41.75657, 56.11424,   0.00000, 0.00000, 190.59999);
CreateDynamicObject(1782, 1012.42474, 43.61005, 55.90462,   0.00000, 0.00000, 224.65997);
CreateDynamicObject(1785, 1005.32373, 43.01709, 55.62032,   0.00000, 0.00000, 318.31500);
CreateDynamicObject(1786, 1004.16943, 43.97821, 56.13497,   0.00000, 0.00000, 119.46002);
CreateDynamicObject(1786, 1013.50677, 44.84127, 56.10997,   0.00000, 0.00000, 246.85986);
CreateDynamicObject(1787, 1013.18933, 44.82385, 55.93029,   0.00000, 0.00000, 248.34500);
CreateDynamicObject(1788, 1006.57074, 42.20835, 55.01282,   0.00000, 0.00000, 157.40002);
CreateDynamicObject(1791, 1004.19690, 44.15108, 54.93644,   0.00000, 0.00000, 121.44501);
CreateDynamicObject(1792, 1012.70013, 43.38141, 56.05910,   358.01498, 0.00000, 226.55499);
CreateDynamicObject(1792, 1008.00201, 41.51371, 56.05910,   358.01147, 0.00000, 172.95953);
CreateDynamicObject(1809, 1008.02533, 47.10511, 55.37768,   0.00000, 0.00000, 272.34500);
CreateDynamicObject(1839, 1010.15833, 47.16987, 55.37768,   0.00000, 0.00000, 180.58499);
CreateDynamicObject(1840, 1013.47046, 46.41183, 54.97294,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1840, 1013.46375, 45.91414, 54.97294,   0.00000, 0.00000, 346.10501);
CreateDynamicObject(2028, 1013.58325, 56.23041, 55.44719,   0.00000, 0.00000, 270.31506);
CreateDynamicObject(2099, 1003.37598, 47.47678, 54.32211,   0.00000, 0.00000, 91.67001);
CreateDynamicObject(2101, 1003.80560, 45.64203, 56.09894,   0.00000, 0.00000, 105.56500);
CreateDynamicObject(2102, 1013.60876, 52.67992, 55.36386,   0.00000, 0.00000, 270.31500);
CreateDynamicObject(2103, 1013.58905, 54.30647, 55.33886,   0.00000, 0.00000, 270.49500);
CreateDynamicObject(2104, 1014.00873, 49.25853, 54.32211,   0.00000, 0.00000, 270.31500);
CreateDynamicObject(2190, 1013.82373, 50.56318, 55.35017,   0.00000, 0.00000, 268.51001);
CreateDynamicObject(2202, 171.55243, 95.82595, 483.48163,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2224, 1004.18176, 48.30791, 54.32211,   0.00000, 0.00000, 43.67001);
CreateDynamicObject(2226, 1013.49457, 52.70935, 54.52899,   0.00000, 0.00000, 270.67499);
CreateDynamicObject(2229, 1013.74280, 58.60546, 54.32919,   0.00000, 0.00000, 266.70499);
CreateDynamicObject(2230, 1013.77118, 59.19083, 54.27211,   0.00000, 0.00000, 270.67499);
CreateDynamicObject(2231, 1013.72852, 59.83271, 54.29711,   0.00000, 0.00000, 270.49500);
CreateDynamicObject(2232, 1013.54077, 60.87248, 54.89499,   0.00000, 0.00000, 268.41998);
CreateDynamicObject(2344, 1008.57330, 47.80574, 55.38776,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2596, 1003.57465, 53.88491, 57.26685,   0.00000, 0.00000, 91.53500);
CreateDynamicObject(14391, 1006.78271, 62.39412, 55.25719,   0.00000, 0.00000, 268.51001);
CreateDynamicObject(14604, 1010.75397, 61.88091, 55.30276,   0.00000, 0.00000, 179.28003);
CreateDynamicObject(16377, 1011.85620, 61.87670, 55.27744,   0.00000, 0.00000, 179.37000);
CreateDynamicObject(1208, 1003.60913, 59.88251, 54.32211,   0.00000, 0.00000, 270.45001);
CreateDynamicObject(16779, 1009.01923, 56.20559, 58.45436,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16779, 1008.61096, 50.10574, 58.45436,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2413, 1003.50055, 58.24919, 54.32211,   0.00000, 0.00000, 89.54114);
CreateDynamicObject(2413, 1003.50000, 56.64326, 54.32211,   0.00000, 0.00000, 89.53857);
CreateDynamicObject(2413, 1013.72351, 57.80486, 54.32211,   0.00000, 0.00000, 270.35706);
CreateDynamicObject(2966, 1003.64410, 58.02969, 54.91491,   0.00000, 0.00000, 91.31003);
CreateDynamicObject(2966, 1003.64905, 56.62140, 54.91491,   0.00000, 0.00000, 91.30737);
CreateDynamicObject(2966, 1003.65784, 59.15842, 54.91491,   0.00000, 0.00000, 91.30737);
CreateDynamicObject(2967, 1003.59509, 58.56643, 54.87525,   0.00000, 0.00000, 87.34003);
CreateDynamicObject(2967, 1003.53387, 56.95958, 54.87525,   0.00000, 0.00000, 87.33582);
CreateDynamicObject(2967, 1003.56024, 57.35735, 54.87525,   0.00000, 0.00000, 87.33582);
CreateDynamicObject(2422, 1005.60016, 54.33130, 55.21822,   0.00000, 0.00000, 17.86499);
CreateDynamicObject(2495, 1006.14709, 53.50404, 55.03824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2593, 1006.73267, 53.99062, 56.09513,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2506, 1006.83405, 53.74325, 56.27468,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2506, 1006.66010, 54.28924, 56.27468,   0.00000, 0.00000, 179.19000);
CreateDynamicObject(2506, 1007.03479, 54.13796, 56.27468,   0.00000, 0.00000, 95.28003);
CreateDynamicObject(2506, 1006.43298, 53.94798, 56.27468,   0.00000, 0.00000, 270.67499);
//*******************Mapas Lugares de Interés*******************
CreateDynamicObject(1444, 1544.6503,-1681.0081,13.5588,   0.00000, 0.00000, -46.74000);
CreateDynamicObject(1444, 1738.1191,-1862.8081,13.5758,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1185.3795,-1339.4580,13.5742,   0.00000, 0.00000, -94.92000);
CreateDynamicObject(1444, 981.88, -1157.62, 23.86,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1195.7616,-919.6393,43.1544,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 562.7845,-1250.2927,17.2599,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 805.9656,-1387.7549,13.5602,   0.00000, 0.00000, -33.24000);
CreateDynamicObject(1444, 159.1252,-1946.8750,3.7734,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1309.5337,-912.6902,38.6741,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1756.7098,-1147.4298,23.9336,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1829.0646,-1679.4893,13.5469,   0.00000, 0.00000, -88.74001);
CreateDynamicObject(1444, 1934.2709,-1761.6580,13.5469,   0.00000, 0.00000, -40.74000);
CreateDynamicObject(1444, 1205.8312,-1842.7323,13.5432,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 844.4606,-2059.8254,12.8672,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1355.6024,-1739.5306,13.5469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 2074.5828,-1919.4938,13.5469,   0.00000, 0.00000, 90.77998);
CreateDynamicObject(1444, 1832.5538,-1845.5059,13.1817,   0.00000, 0.00000, -85.56002);
CreateDynamicObject(1444, 811.1441,-1340.9791,13.5377,   0.00000, 0.00000, -85.56002);
//*******************Estacionamiento*******************
CreateDynamicObject(970,1162.8609619,-1730.8530273,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
CreateDynamicObject(970,1158.6800537,-1730.8580322,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(2)
CreateDynamicObject(970,1154.4990234,-1730.8599854,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(3)
CreateDynamicObject(970,1150.3310547,-1730.8459473,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(4)
CreateDynamicObject(970,1146.1760254,-1730.8449707,13.3310003,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(5)
CreateDynamicObject(970,1141.9990234,-1730.8430176,13.3310003,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(6)
CreateDynamicObject(970,1137.9620361,-1730.8459473,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(7)
CreateDynamicObject(970,1133.8139648,-1730.8489990,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(8)
CreateDynamicObject(970,1129.6719971,-1730.8609619,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(9)
CreateDynamicObject(970,1125.5949707,-1730.8609619,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(10)
CreateDynamicObject(970,1121.5050049,-1730.8499756,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(11)
CreateDynamicObject(970,1117.3620605,-1730.8499756,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(12)
CreateDynamicObject(970,1113.2120361,-1730.8659668,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(13)
CreateDynamicObject(970,1109.0909424,-1730.8699951,13.3249998,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(14)
CreateDynamicObject(970,1104.9267578,-1730.8505859,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1138.6949463,-1750.8590088,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(16)
CreateDynamicObject(970,1134.5030518,-1750.8339844,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(17)
CreateDynamicObject(970,1130.3879395,-1750.8459473,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(18)
CreateDynamicObject(970,1126.2370605,-1750.8470459,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(19)
CreateDynamicObject(970,1122.1080322,-1750.8709717,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(20)
CreateDynamicObject(970,1117.9610596,-1750.8330078,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(21)
CreateDynamicObject(970,1113.8134766,-1750.8222656,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1109.7177734,-1750.8232422,13.1219997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(23)
CreateDynamicObject(970,1106.7138672,-1752.9687500,13.1280003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(24)
CreateDynamicObject(970,1106.7158203,-1757.0449219,13.1280003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1106.7189941,-1761.2290039,13.1280003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(26)
CreateDynamicObject(970,1106.6949463,-1765.3590088,13.1280003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(27)
CreateDynamicObject(970,1106.6929932,-1769.5209961,13.1280003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(28)
CreateDynamicObject(970,1106.6800537,-1773.6309814,13.1269999,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(29)
CreateDynamicObject(970,1106.6960449,-1777.7309570,13.1450005,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(30)
CreateDynamicObject(970,1140.8437500,-1753.0302734,13.1269999,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(31)
CreateDynamicObject(970,1141.0980225,-1760.2650146,13.1429996,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(32)
CreateDynamicObject(19425,1164.6979980,-1738.4110107,12.4960003,0.0000000,0.0000000,90.0000000); //object(speed_bump01)(1)
CreateDynamicObject(19425,1164.6409912,-1743.4460449,12.3979998,0.0000000,0.0000000,90.0000000); //object(speed_bump01)(2)
CreateDynamicObject(19425,1107.0760498,-1743.4150391,12.3979998,0.0000000,0.0000000,90.0000000); //object(speed_bump01)(3)
CreateDynamicObject(19425,1107.0560303,-1737.9840088,12.5129995,0.0000000,0.0000000,90.0000000); //object(speed_bump01)(4)
CreateDynamicObject(19338,1125.3420410,-1757.6860352,12.5839996,0.0000000,0.0000000,0.0000000); //object(hot_air_balloon07)(1)
CreateDynamicObject(19315,1126.4079590,-1763.0849609,13.0850000,0.0000000,0.0000000,0.0000000); //object(deer01)(1)
CreateDynamicObject(19315,1115.5059814,-1761.8590088,13.0769997,0.0000000,0.0000000,34.0000000); //object(deer01)(2)
CreateDynamicObject(19315,1115.1450195,-1756.1710205,13.0699997,0.0000000,0.0000000,337.9971924); //object(deer01)(3)
CreateDynamicObject(19315,1121.8310547,-1754.0059814,13.0649996,0.0000000,0.0000000,293.9943848); //object(deer01)(4)
CreateDynamicObject(949,1140.7819824,-1758.0799561,13.2209997,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(1)
CreateDynamicObject(949,1140.5789795,-1755.0799561,13.2159996,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(2)
CreateDynamicObject(949,1107.8530273,-1751.1590576,13.2130003,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(3)
CreateDynamicObject(970,1100.8289795,-1730.8430176,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1096.6899414,-1730.8559570,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1092.5400391,-1730.8520508,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1088.4320068,-1730.8640137,13.3299999,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1084.2800293,-1730.8370361,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1080.1929932,-1730.8220215,13.3269997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1076.0469971,-1730.8530273,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1071.9420166,-1730.8260498,13.3260002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1067.8990479,-1730.7969971,13.3269997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1063.7919922,-1730.7709961,13.3280001,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1059.6710205,-1730.8010254,13.3249998,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1056.0050049,-1732.1479492,13.3789997,0.0000000,0.0000000,40.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1054.3620605,-1735.4949951,13.3360004,0.0000000,0.0000000,89.9957275); //object(fencesmallb)(15)
CreateDynamicObject(970,1054.3289795,-1739.6159668,13.3140001,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.3320312,-1743.7259521,13.3009996,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.3249512,-1747.8179932,13.2880001,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.3170166,-1751.9189453,13.2749996,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.3120117,-1756.0810547,13.2609997,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.3020020,-1760.2080078,13.2469997,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.2819824,-1764.3430176,13.2340002,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.2679443,-1768.4980469,13.2200003,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.2709961,-1772.6500244,13.2069998,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1054.2469482,-1776.8170166,13.1949997,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1055.5489502,-1780.5570068,13.2340002,0.0000000,0.0000000,128.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1058.8139648,-1782.1839600,13.2030001,0.0000000,0.0000000,179.9962158); //object(fencesmallb)(25)
CreateDynamicObject(970,1062.9659424,-1782.1899414,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1067.0679932,-1782.1700439,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1073.6579590,-1782.0689697,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1077.7750244,-1782.0870361,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1081.9270020,-1782.0760498,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1086.0610352,-1782.0450439,13.1910000,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1090.2490234,-1782.0300293,13.1899996,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1094.2960205,-1782.0479736,13.1920004,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1098.4079590,-1782.0190430,13.1899996,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1102.5439453,-1782.0340576,13.1829996,0.0000000,0.0000000,179.9945068); //object(fencesmallb)(25)
CreateDynamicObject(970,1105.9350586,-1780.4169922,13.1750002,0.0000000,0.0000000,227.9945068); //object(fencesmallb)(25)
CreateDynamicObject(949,1069.3530273,-1782.0009766,13.2749996,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(4)
CreateDynamicObject(949,1071.3640137,-1781.9320068,13.2729998,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(5)
CreateDynamicObject(8623,1157.2359619,-1726.8979492,13.6300001,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(1)
CreateDynamicObject(8623,1146.6560059,-1726.5250244,13.6339998,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(2)
CreateDynamicObject(8623,1135.7010498,-1726.6510010,13.6300001,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(3)
CreateDynamicObject(8623,1124.5030518,-1726.6810303,13.6260004,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(4)
CreateDynamicObject(8623,1112.9620361,-1726.7709961,13.4829998,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(5)
CreateDynamicObject(8623,1101.4949951,-1726.5560303,13.4589996,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(6)
CreateDynamicObject(8623,1090.8260498,-1726.8050537,13.4530001,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(7)
CreateDynamicObject(8623,1080.3680420,-1727.2580566,13.4560003,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(8)
CreateDynamicObject(8623,1069.4570312,-1727.1469727,13.4589996,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(9)
CreateDynamicObject(8623,1058.1479492,-1727.1130371,13.4490004,0.0000000,0.0000000,0.0000000); //object(bush03_lvs)(10)
CreateDynamicObject(8623,1051.3299561,-1729.1889648,13.4150000,0.0000000,0.0000000,88.0000000); //object(bush03_lvs)(13)
CreateDynamicObject(8623,1051.1059570,-1739.3199463,13.4359999,0.0000000,0.0000000,87.9949951); //object(bush03_lvs)(11)
CreateDynamicObject(8623,1050.7889404,-1751.1540527,13.4099998,0.0000000,0.0000000,87.9949951); //object(bush03_lvs)(12)
CreateDynamicObject(8623,1050.5119629,-1762.2259521,13.3800001,0.0000000,0.0000000,87.9949951); //object(bush03_lvs)(14)
CreateDynamicObject(717,1163.3470459,-1727.0350342,12.8590002,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(1)
CreateDynamicObject(717,1140.2860107,-1727.2309570,12.8599997,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(2)
CreateDynamicObject(717,1118.5360107,-1727.1739502,12.8140001,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(3)
CreateDynamicObject(717,1095.5400391,-1727.5429688,12.7290001,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(4)
CreateDynamicObject(717,1074.0250244,-1726.7640381,12.6859999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(5)
CreateDynamicObject(717,1051.8270264,-1726.5219727,12.6709995,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(6)
CreateDynamicObject(717,1050.9129639,-1745.5560303,12.6639996,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(7)
CreateDynamicObject(717,1050.1750488,-1770.0510254,12.6000004,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(8)
CreateDynamicObject(878,1112.2629395,-1773.4990234,14.3789997,0.0000000,0.0000000,0.0000000); //object(veg_pflowers02)(1)
CreateDynamicObject(1280,1104.6290283,-1753.4010010,12.9519997,0.0000000,0.0000000,0.0000000); //object(parkbench1)(1)
CreateDynamicObject(1280,1104.2089844,-1770.6519775,12.9469995,0.0000000,0.0000000,0.0000000); //object(parkbench1)(2)
CreateDynamicObject(1280,1094.3100586,-1781.1850586,13.0190001,0.0000000,0.0000000,270.0000000); //object(parkbench1)(3)
CreateDynamicObject(1280,1084.7099609,-1781.2600098,13.0209999,0.0000000,0.0000000,269.9949951); //object(parkbench1)(4)
CreateDynamicObject(1280,1075.0200195,-1781.2969971,13.0220003,0.0000000,0.0000000,269.9945068); //object(parkbench1)(5)
CreateDynamicObject(1280,1065.9389648,-1781.2220459,13.0200005,0.0000000,0.0000000,269.9945068); //object(parkbench1)(6)
CreateDynamicObject(1280,1089.8950195,-1731.9759521,13.1800003,0.0000000,0.0000000,90.0000000); //object(parkbench1)(8)
CreateDynamicObject(1280,1075.0970459,-1731.6750488,13.1800003,0.0000000,0.0000000,90.0000000); //object(parkbench1)(9)
CreateDynamicObject(1280,1063.3089600,-1731.4279785,13.1739998,0.0000000,0.0000000,90.0000000); //object(parkbench1)(10)
CreateDynamicObject(970,1085.2370605,-1748.0789795,13.1370001,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1081.1779785,-1748.0710449,13.1359997,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1077.0269775,-1748.0810547,13.1379995,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1074.3900146,-1750.2170410,13.1379995,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1087.3229980,-1750.3819580,13.1320000,0.0000000,0.0000000,90.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1085.1839600,-1752.7659912,13.1370001,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1081.1120605,-1752.7590332,13.1379995,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(970,1076.9610596,-1752.7669678,13.1370001,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(22)
CreateDynamicObject(949,1074.6419678,-1752.5179443,13.2519999,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(6)
CreateDynamicObject(949,1074.6970215,-1748.3339844,13.2570000,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(7)
CreateDynamicObject(949,1087.1070557,-1752.5429688,13.2419996,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(8)
CreateDynamicObject(949,1086.9320068,-1748.3580322,13.2609997,0.0000000,0.0000000,0.0000000); //object(plant_pot_4)(9)
//*******************Gasolinera St.Maria Beach - Grotti*******************
CreateDynamicObject(11547, 203.04, -1440.76, 14.98,   0.00, 0.00, 318.29);
CreateDynamicObject(11546, 215.48, -1427.27, 12.16,   0.00, 0.00, 44.42);
CreateDynamicObject(1676, 197.51, -1446.97, 13.71,   0.00, 0.00, 317.45);
CreateDynamicObject(1676, 201.41, -1442.92, 13.71,   0.00, 0.00, 317.45);
CreateDynamicObject(1676, 205.09, -1438.94, 13.71,   0.00, 0.00, 317.45);
CreateDynamicObject(1676, 208.77, -1434.72, 13.71,   0.00, 0.00, 317.45);
CreateDynamicObject(970, 198.17, -1446.31, 12.62,   0.00, 0.00, 317.76);
CreateDynamicObject(970, 197.01, -1447.59, 12.58,   0.00, 0.00, 317.76);
CreateDynamicObject(970, 201.75, -1442.23, 12.62,   0.00, 0.00, 317.76);
CreateDynamicObject(970, 200.69, -1443.41, 12.62,   0.00, 0.00, 317.76);
CreateDynamicObject(970, 204.44, -1439.43, 12.62,   0.00, 0.00, 318.28);
CreateDynamicObject(970, 205.56, -1438.25, 12.62,   0.00, 0.00, 318.28);
CreateDynamicObject(970, 208.06, -1435.31, 12.62,   0.00, 0.00, 318.28);
CreateDynamicObject(970, 209.30, -1434.20, 12.62,   0.00, 0.00, 318.28);
//*******************Gasolinera Ganton*******************
CreateDynamicObject(4100, 2387.15, -1930.65, 14.00,   0.00, 0.00, 140.00);
CreateDynamicObject(4100, 2373.46, -1930.63, 14.00,   0.00, 0.00, 140.00);
CreateDynamicObject(10789, 2381.59, -1905.21, 15.04,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2393.99, -1913.74, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2394.00, -1909.59, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2394.00, -1905.45, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2394.01, -1901.29, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2394.01, -1897.12, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2392.00, -1913.58, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2392.00, -1909.44, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2391.99, -1905.27, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2391.92, -1901.12, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(8661, 2383.91, -1912.12, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(8661, 2383.76, -1932.07, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(8661, 2383.93, -1892.24, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 2403.67, -1921.30, 11.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 2403.67, -1892.30, 11.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 2403.65, -1902.60, 11.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 2403.65, -1912.36, 11.78,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 2403.65, -1925.49, 11.78,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2391.91, -1896.96, 13.00,   0.00, 0.00, 269.96);
CreateDynamicObject(970, 2384.65, -1896.55, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2384.67, -1900.72, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2384.69, -1904.89, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2384.70, -1909.05, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2384.72, -1913.20, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2382.62, -1913.16, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2382.60, -1909.00, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2382.60, -1904.86, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2382.59, -1900.70, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(970, 2382.57, -1896.56, 13.00,   0.00, 0.00, 270.16);
CreateDynamicObject(1676, 2393.01, -1910.96, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2392.98, -1907.29, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2393.04, -1902.87, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2393.04, -1899.83, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2383.69, -1899.44, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2383.69, -1902.95, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2383.70, -1907.62, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1676, 2383.66, -1910.96, 14.10,   0.00, 0.00, 90.00);
//*******************Gasolineras interior*******************
CreateDynamicObject(14670, -55.35, 61.46, 1004.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1002.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1002.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1003.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1002.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1002.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1002.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1002.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1002.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1002.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1002.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1004.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1004.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1004.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1004.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1004.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1004.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1004.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1004.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1002.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1002.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1002.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1003.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1003.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1003.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1002.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1003.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1003.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1003.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1003.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1003.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1002.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1003.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1003.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1003.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1003.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1003.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1003.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1002.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1002.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1002.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1002.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1002.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1003.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1003.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1003.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1003.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1003.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1003.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1003.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1004.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1003.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1003.92,   0.00, 0.00, 180.00);
//*******************Interior 2 Gasolinera*******************
CreateDynamicObject(14670, -55.35, 61.24, 1024.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1022.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1022.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1023.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1022.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1022.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1022.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1022.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1022.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1022.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1022.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1024.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1024.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1024.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1024.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1024.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1024.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1024.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1024.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1022.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1022.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1022.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1023.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1023.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1023.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1022.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1023.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1023.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1023.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1023.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1023.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1022.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1023.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1023.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1023.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1023.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1023.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1023.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1022.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1022.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1022.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1022.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1022.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1023.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1023.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1023.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1023.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1023.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1023.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1023.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1024.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1023.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1023.92,   0.00, 0.00, 180.00);
//*******************Interior 3 Gasolinera*******************
CreateDynamicObject(14670, -55.35, 61.24, 1044.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1042.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1042.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1043.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1042.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1042.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1042.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1042.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1042.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1042.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1042.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1044.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1044.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1044.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1044.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1044.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1044.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1044.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1044.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1042.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1042.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1042.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1043.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1043.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1043.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1042.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1043.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1043.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1043.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1043.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1043.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1042.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1043.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1043.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1043.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1043.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1043.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1043.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1042.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1042.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1042.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1042.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1042.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1043.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1043.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1043.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1043.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1043.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1043.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1043.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1044.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1043.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1043.92,   0.00, 0.00, 180.00);
//*******************Interior 4 Gasolinera*******************
CreateDynamicObject(14670, -55.35, 61.24, 1064.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1062.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1062.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1063.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1062.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1062.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1062.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1062.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1062.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1062.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1062.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1064.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1064.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1064.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1064.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1064.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1064.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1064.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1064.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1062.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1062.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1062.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1063.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1063.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1063.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1062.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1063.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1063.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1063.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1063.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1063.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1062.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1063.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1063.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1063.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1063.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1063.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1063.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1062.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1062.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1062.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1062.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1062.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1063.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1063.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1063.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1063.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1063.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1063.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1063.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1064.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1063.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1063.92,   0.00, 0.00, 180.00);
//*******************Interior 5 Gasolinera*******************
CreateDynamicObject(14670, -55.35, 61.24, 1084.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1082.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1082.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1083.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1082.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1082.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1082.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1082.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1082.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1082.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1082.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1084.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1084.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1084.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1084.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1084.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1084.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1084.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1064.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1082.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1082.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1082.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1083.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1083.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1083.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1082.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1083.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1083.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1083.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1083.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1083.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1082.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1083.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1083.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1083.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1083.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1083.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1083.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1082.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1082.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1082.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1082.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1082.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1083.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1083.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1083.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1083.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1083.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1083.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1083.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1084.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1083.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1083.92,   0.00, 0.00, 180.00);
CreateDynamicObject(19379, -49.91, 70.29, 1085.42,   0.00, 0.00, 90.00);
//*******************Interior 6 Gasolinera*******************
CreateDynamicObject(14670, -55.35, 61.24, 1099.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1984, -61.20, 57.99, 1097.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1984, -58.26, 57.92, 1097.55,   0.00, 0.00, -90.00);
CreateDynamicObject(1982, -63.78, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1986, -58.79, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1987, -63.79, 60.18, 1098.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1989, -63.80, 61.29, 1097.54,   0.00, 0.00, 90.00);
CreateDynamicObject(1891, -58.42, 63.70, 1097.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1989, -63.80, 62.29, 1097.54,   0.00, 0.00, 90.00);
CreateDynamicObject(19376, -57.73, 60.81, 1097.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.23, 60.81, 1097.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -57.78, 70.43, 1097.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19376, -68.28, 70.44, 1097.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, -53.21, 61.04, 1099.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -53.21, 70.65, 1099.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -58.02, 56.16, 1099.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -67.63, 56.16, 1099.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -64.38, 59.61, 1099.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -64.38, 69.25, 1099.75,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, -59.53, 70.30, 1099.75,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, -49.91, 70.29, 1099.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1982, -62.78, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -61.78, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -60.78, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1982, -59.78, 69.69, 1097.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -57.00, 56.28, 1097.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, -54.00, 56.29, 1097.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1650, -53.55, 63.35, 1097.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.31, 62.93, 1097.09,   90.00, 0.00, -90.00);
CreateDynamicObject(2063, -56.75, 69.69, 1097.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2475, -53.35, 64.12, 1097.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1098.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.51, 64.36, 1098.26,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.54, 63.85, 1098.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 63.33, 1098.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.47, 64.34, 1098.93,   0.00, 0.00, -90.00);
CreateDynamicObject(2475, -53.35, 62.62, 1097.83,   0.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.41, 1098.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.42, 62.71, 1098.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.34, 62.15, 1098.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1644, -53.50, 61.98, 1098.09,   90.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.42, 62.76, 1098.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1650, -53.49, 61.89, 1098.93,   0.00, 0.00, -90.00);
CreateDynamicObject(1885, -58.24, 58.64, 1097.51,   0.00, 0.00, 0.00);
CreateDynamicObject(2798, -57.57, 69.67, 1097.95,   90.00, 0.00, 0.00);
CreateDynamicObject(2798, -56.81, 69.68, 1097.95,   90.00, 0.00, 0.00);
CreateDynamicObject(918, -55.01, 69.77, 1097.94,   0.00, 0.00, 70.00);
CreateDynamicObject(918, -54.23, 69.84, 1097.94,   0.00, 0.00, -70.00);
CreateDynamicObject(2690, -53.36, 57.66, 1098.79,   0.00, 0.00, -90.00);
CreateDynamicObject(1218, -63.82, 59.08, 1098.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.29, 69.71, 1098.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -55.71, 69.69, 1098.04,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -55.71, 69.69, 1098.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2040, -56.29, 69.71, 1098.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2040, -56.89, 69.68, 1098.52,   0.00, 0.00, 0.00);
CreateDynamicObject(2656, -59.37, 56.27, 1099.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2660, -60.29, 56.28, 1098.85,   0.00, 0.00, 180.00);
CreateDynamicObject(2661, -61.98, 56.28, 1098.92,   0.00, 0.00, 180.00);
CreateDynamicObject(19379, -49.91, 70.29, 1100.42,   0.00, 0.00, 90.00);
//*******************Autos chocones*******************
CreateDynamicObject(250, 358.07, -2031.58, 7.55,   90.00, 0.00, 87.99);
CreateDynamicObject(3095, 358.56, -2065.65, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 358.54, -2056.71, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 367.54, -2056.70, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 367.55, -2065.66, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 367.53, -2074.65, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 358.54, -2074.64, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 376.55, -2065.66, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 376.54, -2056.70, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 376.53, -2074.65, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 385.54, -2056.70, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 385.54, -2065.70, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 385.52, -2074.69, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 394.53, -2056.71, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 394.53, -2065.70, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 394.52, -2074.69, 6.45,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 365.00, -2046.88, 9.50,   356.86, 0.00, 3.14);
CreateDynamicObject(970, 360.50, -2014.24, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 360.48, -2018.38, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 360.47, -2022.50, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 358.37, -2024.60, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 354.32, -2024.64, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 352.27, -2026.73, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 352.27, -2030.87, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 352.26, -2035.03, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 354.29, -2037.57, 7.33,   0.00, 0.00, 167.18);
CreateDynamicObject(970, 358.39, -2038.01, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 360.43, -2040.08, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 360.41, -2044.23, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 360.42, -2045.51, 7.33,   0.00, 0.00, 89.22);
CreateDynamicObject(970, 358.32, -2047.58, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 354.15, -2047.61, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 351.57, -2047.62, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 349.49, -2049.71, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.48, -2053.86, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.47, -2058.02, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.46, -2062.19, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.46, -2066.35, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.44, -2070.52, 7.33,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 349.43, -2074.66, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 349.44, -2078.81, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 349.45, -2082.97, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 349.45, -2087.14, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 351.54, -2089.20, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 355.68, -2089.17, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 359.83, -2089.14, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 363.97, -2089.12, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 368.11, -2089.11, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 372.20, -2089.10, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 376.36, -2089.08, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 380.51, -2089.08, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 384.66, -2089.08, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 388.78, -2089.07, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 392.95, -2089.05, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 397.11, -2089.04, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 401.27, -2089.03, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 405.41, -2089.02, 7.33,   0.00, 0.00, 0.10);
CreateDynamicObject(970, 408.52, -2087.23, 7.33,   0.00, 0.00, 59.50);
CreateDynamicObject(970, 409.57, -2083.34, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.56, -2079.17, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.55, -2075.02, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.55, -2070.86, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.54, -2066.69, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.53, -2062.55, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.53, -2058.38, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.52, -2054.21, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 409.50, -2050.05, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 407.45, -2047.60, 7.33,   0.00, 0.00, 169.99);
CreateDynamicObject(970, 403.36, -2047.26, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 401.26, -2047.27, 7.33,   0.00, 0.00, 0.41);
CreateDynamicObject(970, 409.50, -2050.05, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.19, -2045.19, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.19, -2041.02, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.20, -2036.77, 7.33,   0.00, 0.00, 91.22);
CreateDynamicObject(970, 399.11, -2032.61, 7.33,   0.00, 0.00, 91.22);
CreateDynamicObject(970, 399.05, -2028.45, 7.33,   0.00, 0.00, 90.17);
CreateDynamicObject(970, 399.03, -2024.31, 7.33,   0.00, 0.00, 90.17);
CreateDynamicObject(970, 399.00, -2020.14, 7.33,   0.00, 0.00, 90.17);
CreateDynamicObject(970, 398.99, -2015.97, 7.33,   0.00, 0.00, 90.17);
CreateDynamicObject(970, 397.01, -2013.26, 7.33,   0.00, 0.00, 162.85);
CreateDynamicObject(970, 392.97, -2012.62, 7.33,   0.00, 0.00, 359.35);
CreateDynamicObject(970, 388.80, -2012.60, 7.33,   0.00, 0.00, 359.86);
CreateDynamicObject(970, 384.64, -2012.59, 7.33,   0.00, 0.00, 359.86);
CreateDynamicObject(970, 382.03, -2012.61, 7.33,   0.00, 0.00, 359.86);
CreateDynamicObject(970, 396.96, -2052.17, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 392.83, -2052.17, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 388.68, -2052.17, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 384.51, -2052.18, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 380.34, -2052.18, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 376.18, -2052.18, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 373.15, -2053.32, 7.50,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 370.16, -2052.16, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 365.99, -2052.16, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 361.82, -2052.15, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 357.66, -2052.15, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 356.03, -2052.16, 7.38,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 354.01, -2054.23, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 354.00, -2058.38, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 353.98, -2062.53, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 353.97, -2066.70, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 353.96, -2070.87, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 353.96, -2075.04, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 353.96, -2077.15, 7.35,   0.00, 0.00, 89.86);
CreateDynamicObject(970, 356.05, -2079.21, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 360.21, -2079.22, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 364.38, -2079.24, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 368.54, -2079.25, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 372.70, -2079.28, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 376.86, -2079.28, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 381.02, -2079.30, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 385.16, -2079.32, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 389.32, -2079.33, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 393.48, -2079.35, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 397.10, -2079.37, 7.33,   0.00, 0.00, 359.79);
CreateDynamicObject(970, 399.10, -2077.28, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.10, -2073.12, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.10, -2068.96, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.10, -2064.82, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.10, -2060.64, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.09, -2056.49, 7.33,   0.00, 0.00, 90.06);
CreateDynamicObject(970, 399.04, -2054.25, 7.33,   0.00, 0.00, 90.06);
//*************************Job jardinero*************************
CreateDynamicObject(1660, 2013.00000, -1279.09961, 20.80000,   352.49100, 0.00000, 0.00000);
CreateDynamicObject(3749, 2012.19922, -1244.69922, 26.90000,   352.24399, 0.00000, 358.74799);
CreateDynamicObject(7191, 2034.00000, -1250.79980, 22.30000,   0.00000, 359.49500, 90.00000);
CreateDynamicObject(7191, 2056.80005, -1228.80005, 22.30000,   0.00000, 359.49500, 180.00000);
CreateDynamicObject(7191, 2056.89990, -1183.80005, 22.30000,   0.00000, 359.48901, 180.24500);
CreateDynamicObject(7191, 1910.30005, -1250.80005, 12.50000,   349.75101, 359.22699, 89.60400);
CreateDynamicObject(7191, 1883.90002, -1250.90002, 12.10000,   0.00000, 359.49500, 90.50000);
CreateDynamicObject(7191, 1861.59998, -1228.50000, 16.00000,   9.99800, 358.97400, 359.92801);
CreateDynamicObject(7191, 2034.90002, -1145.69995, 22.80000,   359.00000, 359.48901, 269.98300);
CreateDynamicObject(9482, 1884.09998, -1155.40002, 26.50000,   0.00000, 0.00000, 318.75000);
CreateDynamicObject(9131, 2056.80005, -1159.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1157.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1155.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1153.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1151.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1147.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 2056.80005, -1149.40002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1914.00000, -1146.90002, 23.30000,   0.99500, 359.48401, 272.24600);
CreateDynamicObject(848, 1879.30005, -1161.50000, 24.60000,   0.00000, 0.00000, 330.00000);
CreateDynamicObject(848, 1889.40002, -1149.59998, 24.60000,   0.00000, 0.00000, 343.25000);
CreateDynamicObject(647, 1879.69995, -1161.80005, 23.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, 1889.40002, -1149.50000, 23.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(845, 1883.30005, -1156.00000, 29.60000,   0.00000, 5.25000, 15.50000);
CreateDynamicObject(700, 1861.69995, -1205.30005, 18.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1861.90002, -1202.90002, 19.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1861.50000, -1200.09998, 18.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1862.09998, -1191.00000, 19.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1864.80005, -1190.00000, 19.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1866.59998, -1188.80005, 19.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1872.50000, -1183.30005, 20.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1874.59998, -1180.59998, 20.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1875.90002, -1177.40002, 20.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1876.80005, -1165.40002, 20.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1876.59998, -1167.80005, 20.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1876.00000, -1174.80005, 28.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1876.59998, -1170.69995, 28.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1876.30005, -1172.80005, 28.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1869.09998, -1187.40002, 28.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1870.69995, -1185.69995, 28.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1862.09998, -1197.50000, 27.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1862.30005, -1193.90002, 27.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(711, 1862.19995, -1195.69995, 27.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1865.90002, -1188.69995, 23.20000,   0.00000, 0.00000, 26.75000);
CreateDynamicObject(970, 1862.69995, -1190.19995, 23.40000,   0.00000, 0.00000, 25.99600);
CreateDynamicObject(970, 1862.59998, -1191.09998, 23.30000,   0.00000, 0.00000, 52.74400);
CreateDynamicObject(970, 1875.09998, -1178.59998, 23.40000,   0.00000, 0.00000, 65.24600);
CreateDynamicObject(970, 1873.09998, -1182.30005, 23.40000,   0.00000, 0.00000, 54.99200);
CreateDynamicObject(970, 1876.50000, -1166.90002, 23.40000,   0.00000, 0.00000, 82.99200);
CreateDynamicObject(970, 1861.90002, -1200.90002, 21.70000,   357.53799, 349.99100, 90.30900);
CreateDynamicObject(970, 1861.80005, -1204.40002, 21.10000,   0.00000, 351.74899, 84.24100);
CreateDynamicObject(970, 1975.39941, -1272.00000, 23.30000,   0.00000, 0.00000, 0.24700);
CreateDynamicObject(970, 1967.59998, -1272.00000, 23.40000,   0.00000, 0.00000, 0.24200);
CreateDynamicObject(970, 1974.50000, -1272.00000, 23.30000,   0.00000, 0.00000, 0.24200);
CreateDynamicObject(1215, 2003.90002, -1272.00000, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1995.09998, -1272.00000, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1986.30005, -1272.00000, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1977.59998, -1272.00000, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16337, 2021.69995, -1272.30005, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3663, 2021.30005, -1286.59998, 24.10000,   0.00000, 351.00000, 91.00000);
CreateDynamicObject(18609, 2020.19995, -1303.69995, 24.10000,   0.00000, 0.00000, 345.50000);
CreateDynamicObject(16083, 2020.69995, -1290.90002, 20.80000,   0.00000, 0.00000, 350.25000);
CreateDynamicObject(1360, 2016.59961, -1271.50000, 23.80000,   0.00000, 0.00000, 270.24701);
CreateDynamicObject(1360, 2019.09998, -1271.50000, 23.80000,   0.00000, 0.00000, 269.74500);
CreateDynamicObject(1361, 2009.79980, -1271.89941, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1886.80005, -1152.80005, 23.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1885.19995, -1154.40002, 23.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1883.50000, -1156.19995, 23.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1881.90002, -1158.09998, 23.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3439, 2009.79980, -1273.59961, 26.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3439, 2016.00000, -1273.69922, 27.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(974, 1969.09998, -1303.80005, 22.70000,   0.00000, 1.75000, 0.49700);
CreateDynamicObject(1361, 2004.69995, -1145.90002, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 2006.69995, -1145.90002, 24.80000,   0.00000, 0.00000, 8.00000);
CreateDynamicObject(1361, 2008.69995, -1145.90002, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 2010.90002, -1145.90002, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1970.09998, -1180.50000, 18.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1931.19995, -1197.90002, 18.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1971.00000, -1218.30005, 18.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2008.40002, -1201.19995, 18.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1984.09998, -1230.59998, 19.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1985.19995, -1235.90002, 19.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2017.09998, -1242.09998, 22.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2007.50000, -1241.80005, 22.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2012.50000, -1145.69995, 25.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2003.30005, -1146.30005, 25.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2056.80005, -1153.40002, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2056.80005, -1155.50000, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2056.80005, -1151.40002, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2044.50000, -1187.19995, 23.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2037.40002, -1214.30005, 22.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2023.69995, -1210.19995, 21.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2042.30005, -1159.50000, 22.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1984.30005, -1160.80005, 20.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1961.40002, -1233.40002, 19.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1957.30005, -1153.59998, 20.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1957.30005, -1160.40002, 20.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1957.09998, -1174.00000, 19.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1934.50000, -1170.09998, 20.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1908.69995, -1201.80005, 19.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1872.50000, -1236.00000, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, 2020.50000, -1297.00000, 23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, 2021.19995, -1296.80005, 23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, 2021.69995, -1296.59998, 23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, 2022.19995, -1296.90002, 23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, 2022.00000, -1296.00000, 23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(671, 2020.50000, -1294.59998, 19.40000,   0.00000, 0.00000, 322.00000);
CreateDynamicObject(671, 2020.50000, -1295.59998, 19.50000,   0.00000, 20.00000, 223.99800);
CreateDynamicObject(671, 2019.42383, -1294.70898, 20.07069,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(671, 2020.30005, -1290.00000, 19.00000,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(703, 1998.50000, -1247.79980, 20.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(703, 2028.50000, -1245.30005, 22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(803, 2017.80005, -1248.19995, 24.10000,   0.00000, 0.00000, 26.00000);
CreateDynamicObject(803, 2021.30005, -1248.50000, 24.20000,   0.00000, 4.00000, 33.99900);
CreateDynamicObject(803, 2007.69995, -1247.30005, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(803, 2004.50000, -1247.80005, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(803, 2008.50000, -1248.59961, 23.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1337, 2006.97852, -1250.39844, 22.89928,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2008.40002, -1244.80005, 22.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2016.40002, -1244.90002, 22.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(872, 2017.19922, -1246.69922, 22.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(872, 2008.69922, -1247.00000, 22.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 2004.50000, -1225.69995, 20.70000,   0.00000, 0.00000, 11.00000);
CreateDynamicObject(1364, 1943.30005, -1233.90002, 19.00000,   0.00000, 356.00000, 0.49700);
CreateDynamicObject(1364, 1945.69995, -1175.59998, 19.90000,   0.00000, 359.74500, 4.74400);
CreateDynamicObject(1419, 2017.59998, -1243.59998, 22.60000,   0.00000, 0.00000, 358.99500);
CreateDynamicObject(1419, 2008.40002, -1243.59998, 22.10000,   0.00000, 357.74799, 2.24200);
CreateDynamicObject(1498, 2022.50000, -1273.69995, 22.90000,   0.00000, 0.00000, 179.50000);
CreateDynamicObject(1360, 2015.80005, -1272.30005, 23.80000,   0.00000, 0.00000, 180.24699);
CreateDynamicObject(1361, 2009.80005, -1272.69995, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1970.80005, -1273.09998, 23.50000,   359.75000, 0.25000, 0.24300);
CreateDynamicObject(970, 2010.59961, -1273.69922, 24.20000,   0.00000, 334.99500, 88.98700);
CreateDynamicObject(970, 2015.30005, -1273.59998, 24.20000,   0.00000, 335.98999, 90.48300);
CreateDynamicObject(8674, 2011.80005, -1269.19995, 25.50000,   68.00000, 270.00000, 179.75000);
CreateDynamicObject(8674, 2013.90002, -1269.19995, 25.50000,   68.00000, 270.00000, 179.74699);
CreateDynamicObject(8674, 2014.00000, -1259.30005, 27.50000,   88.75000, 270.00000, 179.74699);
CreateDynamicObject(8674, 2011.90002, -1259.30005, 27.50000,   88.74800, 269.99399, 179.74800);
CreateDynamicObject(8674, 2014.00000, -1249.69995, 25.30000,   63.75200, 90.00000, 359.74100);
CreateDynamicObject(8674, 2014.09998, -1240.59998, 20.80000,   63.74800, 90.00000, 359.73599);
CreateDynamicObject(8674, 2011.90002, -1249.69995, 25.30000,   63.74800, 90.00000, 359.73599);
CreateDynamicObject(8674, 2011.80005, -1240.59998, 20.80000,   63.74800, 90.00000, 358.73599);
CreateDynamicObject(970, 2010.59998, -1270.09998, 25.70000,   0.00000, 339.49500, 90.23700);
CreateDynamicObject(970, 2010.50000, -1266.69995, 27.00000,   0.00000, 339.49399, 90.23600);
CreateDynamicObject(970, 2010.50000, -1262.69995, 27.90000,   0.00000, 359.49399, 90.23600);
CreateDynamicObject(970, 2010.50000, -1259.50000, 28.00000,   0.00000, 358.73901, 90.23100);
CreateDynamicObject(970, 2010.50000, -1256.30005, 28.10000,   0.00000, 358.73700, 90.22500);
CreateDynamicObject(970, 2010.50000, -1252.50000, 27.20000,   0.00000, 26.98700, 90.22500);
CreateDynamicObject(970, 2010.50000, -1248.80005, 25.30000,   0.00000, 26.98200, 90.22000);
CreateDynamicObject(970, 2010.50000, -1245.19995, 23.50000,   0.00000, 26.98200, 90.22000);
CreateDynamicObject(970, 2015.30005, -1269.69995, 25.80000,   0.00000, 339.49399, 90.23600);
CreateDynamicObject(970, 2015.30005, -1266.59998, 27.00000,   0.00000, 338.24399, 90.23600);
CreateDynamicObject(970, 2015.30005, -1262.59998, 27.80000,   0.00000, 358.73901, 89.48100);
CreateDynamicObject(970, 2015.40002, -1259.69995, 27.90000,   0.00000, 358.73700, 89.72500);
CreateDynamicObject(970, 2015.40002, -1256.69995, 28.00000,   0.00000, 358.73700, 89.72000);
CreateDynamicObject(970, 2015.40002, -1252.69995, 27.20000,   0.00000, 26.23200, 90.22000);
CreateDynamicObject(970, 2015.40002, -1249.00000, 25.30000,   0.00000, 26.98200, 90.47000);
CreateDynamicObject(970, 2015.50000, -1245.40002, 23.40000,   0.00000, 26.97700, 89.22000);
//*************************Funeraria exterior*************************
CreateDynamicObject(8843, 1383.00000, -1568.40002, 12.70000,   0.00000, 0.00000, 340.25000);
CreateDynamicObject(1211, 1388.80005, -1580.59998, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1373.80005, -1579.40002, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1384.69995, -1582.59998, 15.30000,   0.00000, 0.00000, 356.25000);
CreateDynamicObject(1231, 1401.00000, -1570.59998, 16.00000,   0.00000, 0.00000, 316.24799);
CreateDynamicObject(1231, 1405.59998, -1586.90002, 15.30000,   0.00000, 0.00000, 356.24799);
CreateDynamicObject(1257, 1410.19995, -1586.09998, 13.80000,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1258, 1386.59998, -1578.50000, 13.20000,   0.00000, 0.00000, 354.00000);
CreateDynamicObject(3802, 1399.40002, -1570.40002, 16.30000,   0.00000, 0.00000, 290.00000);
CreateDynamicObject(3802, 1394.30005, -1570.50000, 16.30000,   0.00000, 0.00000, 289.99500);
CreateDynamicObject(18014, 1394.50000, -1556.00000, 13.00000,   0.00000, 0.00000, 346.00000);
CreateDynamicObject(18014, 1393.50000, -1560.00000, 13.00000,   0.00000, 0.00000, 345.99799);
CreateDynamicObject(18014, 1392.59998, -1563.59998, 13.00000,   0.00000, 0.00000, 345.99799);
CreateDynamicObject(18014, 1376.30005, -1573.40002, 13.00000,   0.00000, 0.00000, 345.49799);
CreateDynamicObject(18014, 1391.50000, -1567.79980, 13.00000,   0.00000, 0.00000, 345.49301);
CreateDynamicObject(18014, 1377.30005, -1569.50000, 13.00000,   0.00000, 0.00000, 345.49301);
CreateDynamicObject(18014, 1378.30005, -1565.69995, 13.00000,   0.00000, 0.00000, 345.49301);
CreateDynamicObject(18014, 1379.30005, -1561.80005, 13.00000,   0.00000, 0.00000, 345.49301);
CreateDynamicObject(18014, 1380.40002, -1557.69995, 13.00000,   0.00000, 0.00000, 344.49301);
CreateDynamicObject(18014, 1381.40002, -1554.00000, 13.00000,   0.00000, 0.00000, 344.48700);
CreateDynamicObject(18014, 1382.19995, -1551.19995, 13.00000,   0.00000, 0.00000, 344.48700);
CreateDynamicObject(625, 1395.00000, -1570.19995, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1401.30005, -1574.90002, 15.90000,   0.00000, 0.00000, 269.50000);
CreateDynamicObject(18014, 1404.50000, -1498.90002, 13.00000,   0.00000, 0.00000, 345.99799);
CreateDynamicObject(18014, 1403.59998, -1502.50000, 13.00000,   0.00000, 0.00000, 345.99799);
CreateDynamicObject(18014, 1402.59998, -1506.69995, 13.00000,   0.00000, 0.00000, 347.99799);
CreateDynamicObject(18014, 1401.80005, -1510.19995, 13.00000,   0.00000, 0.00000, 347.49701);
CreateDynamicObject(18014, 1400.90002, -1513.90002, 13.00000,   0.00000, 0.00000, 344.74200);
CreateDynamicObject(18014, 1400.00000, -1517.80005, 13.00000,   0.00000, 0.00000, 348.74200);
CreateDynamicObject(18014, 1399.19995, -1521.80005, 13.00000,   0.00000, 0.00000, 347.24100);
CreateDynamicObject(974, 1385.69995, -1549.59998, 15.40000,   0.00000, 0.00000, 346.75000);
CreateDynamicObject(1231, 1394.40039, -1584.79980, 15.30000,   0.00000, 0.00000, 356.24799);
CreateDynamicObject(1364, 1400.69995, -1573.50000, 14.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1364, 1400.69995, -1576.59998, 14.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1364, 1392.30005, -1580.19995, 13.30000,   0.00000, 0.00000, 350.00000);
CreateDynamicObject(2245, 1400.90002, -1579.09998, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1400.19995, -1578.90002, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1394.19995, -1570.80005, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1395.19995, -1570.80005, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1398.69995, -1570.80005, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1400.09998, -1570.80005, 13.60000,   0.00000, 0.00000, 0.00000);
//*************************Funeraria interior*************************
CreateDynamicObject(14602, 2953.90039, -1768.59961, 1982.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 2949.50000, -1775.80005, 1978.80005,   0.00000, 0.00000, 357.50000);
CreateDynamicObject(2904, 2943.89990, -1752.80005, 1978.80005,   0.00000, 0.00000, 359.99500);
CreateDynamicObject(1649, 2951.10010, -1762.90002, 1979.19995,   0.00000, 0.00000, 0.25000);
CreateDynamicObject(1649, 2955.39990, -1762.90002, 1979.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 2946.30005, -1760.59998, 1979.19995,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(1649, 2946.30005, -1756.40002, 1979.19995,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(1649, 2946.30005, -1752.00000, 1979.19995,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(1649, 2946.29980, -1756.40039, 1979.19995,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1649, 2946.29980, -1760.59961, 1979.19995,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1649, 2946.29980, -1752.00000, 1979.19995,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1649, 2951.10010, -1762.80005, 1979.19995,   0.00000, 0.00000, 180.25000);
CreateDynamicObject(1649, 2955.40039, -1762.90039, 1979.19995,   0.00000, 0.00000, 176.00000);
CreateDynamicObject(2896, 2936.39990, -1759.30005, 1978.90002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2808, 2942.69995, -1781.50000, 1978.19995,   0.00000, 0.00000, 90.49400);
CreateDynamicObject(2808, 2942.69995, -1779.50000, 1978.19995,   0.00000, 0.00000, 90.49400);
CreateDynamicObject(2808, 2942.69995, -1777.50000, 1978.19995,   0.00000, 0.00000, 90.49400);
CreateDynamicObject(2808, 2942.69995, -1776.90002, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2940.30005, -1777.00000, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2940.30005, -1778.00000, 1978.19995,   0.00000, 0.00000, 90.49400);
CreateDynamicObject(2808, 2940.29980, -1779.90039, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2940.29980, -1781.50000, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2940.30005, -1761.00000, 1978.19995,   0.00000, 0.00000, 90.49400);
CreateDynamicObject(2808, 2940.30005, -1759.00000, 1978.19995,   0.00000, 0.00000, 89.48900);
CreateDynamicObject(2808, 2940.30005, -1757.09998, 1978.19995,   0.00000, 0.00000, 89.74400);
CreateDynamicObject(2808, 2940.29980, -1755.20020, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2945.30005, -1763.00000, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2945.30005, -1761.00000, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2945.30005, -1759.50000, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2945.30005, -1758.09998, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2945.30005, -1756.50000, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2945.29980, -1755.00000, 1978.19995,   0.00000, 0.00000, 89.98400);
CreateDynamicObject(2808, 2942.60010, -1761.19995, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2942.60010, -1759.09998, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2942.60010, -1757.59998, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2942.60010, -1756.00000, 1978.19995,   0.00000, 0.00000, 89.98900);
CreateDynamicObject(2808, 2942.60059, -1755.09961, 1978.19995,   0.00000, 0.00000, 89.98400);
CreateDynamicObject(2896, 2936.60010, -1778.80005, 1978.90002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2936.50000, -1772.30005, 1978.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2936.50000, -1772.30005, 1980.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2936.50000, -1772.30005, 1982.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2960.80005, -1763.80005, 1978.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2960.80005, -1763.80005, 1980.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2960.80005, -1763.80005, 1982.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8659, 2946.10010, -1749.00000, 1980.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2946.10010, -1749.00000, 1982.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2946.10010, -1749.00000, 1978.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2808, 2945.80005, -1776.80005, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2945.80005, -1778.80005, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2945.80005, -1780.80005, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2945.80005, -1782.09998, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2945.80005, -1783.40002, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2942.69995, -1783.50000, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(2808, 2940.30005, -1783.50000, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(7921, 2941.30005, -1770.59998, 1978.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1765.80005, 1978.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1768.50000, 1978.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1770.59998, 1981.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1768.50000, 1981.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1765.80005, 1981.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1765.80005, 1981.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.19995, -1767.40002, 1981.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2941.30005, -1770.59998, 1981.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7921, 2939.60010, -1765.19995, 1978.90002,   0.00000, 0.00000, 90.75000);
CreateDynamicObject(7921, 2937.00000, -1765.19995, 1978.90002,   0.00000, 0.00000, 90.74700);
CreateDynamicObject(7921, 2937.00000, -1765.19995, 1981.59998,   0.00000, 0.00000, 90.74700);
CreateDynamicObject(7921, 2939.00000, -1765.19995, 1981.59998,   0.00000, 0.00000, 90.74700);
CreateDynamicObject(8659, 2935.50000, -1767.19995, 1978.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2935.39990, -1769.80005, 1978.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2935.39990, -1769.80005, 1980.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2935.50000, -1767.69995, 1980.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8659, 2935.50000, -1767.69995, 1982.09998,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(8659, 2935.50000, -1769.50000, 1982.09998,   0.00000, 0.00000, 89.99700);
CreateDynamicObject(2808, 2942.60010, -1753.59998, 1978.19995,   0.00000, 0.00000, 89.98400);
CreateDynamicObject(2808, 2945.30005, -1753.59998, 1978.19995,   0.00000, 0.00000, 89.98400);
CreateDynamicObject(2808, 2940.30005, -1753.80005, 1978.19995,   0.00000, 0.00000, 90.48900);
CreateDynamicObject(631, 2936.10010, -1753.19995, 1978.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(631, 2937.30005, -1753.19995, 1978.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(631, 2938.39990, -1753.19995, 1978.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(631, 2939.60010, -1753.19995, 1978.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 2936.30005, -1762.90002, 1978.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 2936.50000, -1755.40002, 1978.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 2936.30005, -1757.59998, 1978.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 2940.69995, -1761.90002, 1979.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 2942.89990, -1762.19995, 1979.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 2945.60010, -1763.90002, 1979.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3802, 2941.00000, -1763.80005, 1981.59998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3802, 2936.50000, -1763.90002, 1981.59998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3802, 2938.80005, -1763.80005, 1981.59998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3802, 2936.19995, -1753.50000, 1981.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3802, 2938.39990, -1753.40002, 1981.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3802, 2940.80005, -1753.30005, 1981.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3802, 2943.60010, -1753.19995, 1981.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3810, 2935.69995, -1783.40002, 1981.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3810, 2935.69995, -1780.59998, 1981.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3810, 2935.69995, -1777.59998, 1981.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3810, 2935.69995, -1774.40002, 1981.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3810, 2937.30005, -1773.19995, 1981.50000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(3810, 2940.10010, -1773.19995, 1981.50000,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(3810, 2943.39990, -1773.19995, 1981.50000,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(3810, 2946.19995, -1773.19995, 1981.50000,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(3810, 2945.80005, -1776.50000, 1981.50000,   0.00000, 0.00000, 171.99500);
CreateDynamicObject(3810, 2945.69995, -1779.50000, 1981.50000,   0.00000, 0.00000, 171.99100);
CreateDynamicObject(3810, 2945.80005, -1783.30005, 1981.50000,   0.00000, 0.00000, 171.99100);
CreateDynamicObject(3810, 2942.80005, -1783.80005, 1981.50000,   0.00000, 0.00000, 93.99100);
CreateDynamicObject(3810, 2938.69995, -1783.40002, 1981.50000,   0.00000, 0.00000, 93.98800);
CreateDynamicObject(2180, 2936.19995, -1759.69995, 1977.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2180, 2936.19995, -1757.80005, 1977.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2180, 2936.69995, -1757.80005, 1977.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2180, 2936.69995, -1759.69995, 1977.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2180, 2936.10010, -1779.30005, 1977.50000,   0.00000, 0.00000, 268.50000);
CreateDynamicObject(2180, 2936.19995, -1777.40002, 1977.50000,   0.00000, 0.00000, 268.49500);
CreateDynamicObject(2180, 2936.89990, -1777.40002, 1977.50000,   0.00000, 0.00000, 268.49500);
CreateDynamicObject(2180, 2936.89990, -1779.30005, 1977.50000,   0.00000, 0.00000, 268.49500);
CreateDynamicObject(1360, 2936.19995, -1774.80005, 1978.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 2936.10010, -1782.50000, 1978.30005,   0.00000, 0.00000, 0.00000);
//*************************Leñador*************************
CreateDynamicObject(14877, -574.09998, -1499.59998, 8.00000,   0.00000, 0.00000, 38.50000);
CreateDynamicObject(747, -571.09998, -1499.30005, 8.50000,   0.00000, 358.00000, 307.99994);
CreateDynamicObject(747, -573.19922, -1497.29980, 8.60000,   0.00000, 0.00000, 133.99475);
CreateDynamicObject(647, -587.00000, -1498.00000, 9.30000,   2.00000, 0.00000, 183.99998);
CreateDynamicObject(647, -571.09998, -1500.40002, 8.80000,   3.99951, 0.00000, 321.99902);
CreateDynamicObject(1463, -408.50000, -1422.59998, 25.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -408.29980, -1423.50000, 25.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -408.39941, -1421.79980, 25.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -408.10001, -1430.90002, 25.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -408.29980, -1429.29980, 25.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -407.89999, -1430.09998, 25.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -573.09998, -1502.09998, 8.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -573.00000, -1503.29980, 8.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -573.19922, -1502.59961, 9.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1337, -407.20001, -1431.90002, 25.00000,   0.00000, 14.00000, 0.00000);
CreateDynamicObject(842, -504.50000, -1480.00000, 11.50000,   0.00000, 354.49585, 358.99475);
CreateDynamicObject(842, -412.19922, -1423.19922, 24.30000,   0.00000, 349.74976, 0.00000);
CreateDynamicObject(842, -521.50000, -1463.50000, 10.40000,   1.24371, 354.24451, 359.87006);
CreateDynamicObject(840, -511.70001, -1478.90002, 12.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(838, -530.09998, -1463.50000, 12.20000,   0.00000, 0.00000, 78.00000);
CreateDynamicObject(837, -583.70001, -1498.59998, 9.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -583.79999, -1498.40002, 9.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -583.79999, -1497.90002, 10.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -583.79999, -1497.40002, 10.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -584.00000, -1496.90002, 10.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -584.00000, -1496.40002, 10.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(837, -583.90002, -1495.90002, 9.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -575.09961, -1496.09961, 9.50000,   1.99951, 0.00000, 183.99902);
CreateDynamicObject(647, -580.90002, -1497.50000, 9.30000,   1.99951, 0.00000, 183.99902);
CreateDynamicObject(832, -550.29999, -1503.30005, 10.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(842, -572.00000, -1511.30005, 8.50000,   0.49524, 354.24432, 359.79294);
CreateDynamicObject(834, -520.29999, -1465.00000, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(832, -525.40002, -1506.00000, 10.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(832, -455.00000, -1452.50000, 19.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(842, -507.50000, -1467.19922, 11.50000,   0.00000, 354.49585, 358.99475);
CreateDynamicObject(842, -412.50000, -1421.90002, 24.20000,   0.00000, 349.74976, 0.00000);
CreateDynamicObject(842, -412.19922, -1423.19922, 24.30000,   0.00000, 349.75000, 0.00000);
CreateDynamicObject(1337, -412.79999, -1422.90002, 24.40000,   280.74994, 180.00000, 180.00000);
CreateDynamicObject(733, -508.89999, -1485.30005, 10.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(734, -544.09998, -1458.90002, 8.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(734, -534.69922, -1483.39941, 9.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -532.00000, -1465.50000, 9.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -530.50000, -1465.89941, 9.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -531.09998, -1455.00000, 10.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1463, -512.90002, -1474.69995, 11.10000,   0.00000, 0.00000, 86.00000);
CreateDynamicObject(841, -540.20001, -1461.80005, 9.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(841, -528.40002, -1473.50000, 9.80000,   0.00000, 0.00000, 0.00000);
//*************************Exterior The Lost and Damned By Jeferson*************************
CreateDynamicObject(997, 692.70001, -471.70001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 692.70001, -468.60001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 692.70001, -465.50000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 692.70001, -462.39999, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 692.70001, -459.20001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 708.00000, -466.00000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 708.00000, -463.00000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 708.00000, -459.79999, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 707.90002, -456.70001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 666.79999, -456.79999, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 667.00000, -459.79999, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 667.09998, -463.00000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 667.00000, -466.10001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 667.00000, -469.20001, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 667.09998, -472.39999, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 670.50000, -474.89999, 18.40000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(3524, 692.40002, -475.00000, 18.40000,   0.00000, 0.00000, 1.99951);
CreateDynamicObject(3528, 681.20001, -473.10001, 26.50000,   0.00000, 0.00000, 270.00000);

//*************************Interior The Lost and Damned*************************
CreateDynamicObject(18028, 679.53851, -464.06750, -86.92203,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2924, 682.26984, -453.16879, -87.90810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2762, 687.58124, -468.69019, -88.49340,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(2120, 688.89465, -468.05069, -88.26083,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2120, 688.93872, -469.18829, -88.26083,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2120, 687.59479, -470.61377, -88.26083,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2120, 686.34967, -468.11911, -88.26083,   0.00000, 0.00000, 184.00000);
CreateDynamicObject(2120, 686.39032, -469.24884, -88.26083,   0.00000, 0.00000, 183.99902);
CreateDynamicObject(2120, 687.81470, -466.77206, -88.26083,   0.00000, 0.00000, 93.99902);
CreateDynamicObject(1544, 687.42352, -468.90942, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 687.41577, -468.69919, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 687.23663, -467.88351, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 687.78931, -468.20169, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, 687.49316, -469.40018, -88.06501,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1951, 687.59143, -468.09598, -87.88730,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1951, 687.67908, -468.61639, -87.88730,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 687.71027, -468.95480, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 687.33862, -468.43109, -88.07546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(854, 684.93909, -474.45370, -88.68452,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(854, 670.08820, -468.53162, -88.88770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2453, 675.82013, -466.18097, -87.60618,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2859, 690.51941, -467.83719, -88.89859,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2858, 684.83398, -465.98026, -88.89859,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1511, 676.69208, -466.41965, -87.12803,   0.00000, 0.00000, 200.00000);
CreateDynamicObject(1512, 679.87653, -465.79434, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 679.65552, -465.80890, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 679.43091, -465.82364, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 679.76984, -465.50409, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 679.54126, -465.53015, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 679.31476, -465.57480, -87.78708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.68933, -466.10681, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.70313, -465.78278, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.50964, -465.99719, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.47260, -465.65933, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.30347, -465.90964, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 677.64392, -465.43646, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.82465, -466.08920, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.50256, -466.14520, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.73645, -465.69479, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.51477, -465.72867, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.23297, -465.73816, -87.98453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 678.49390, -465.35657, -88.00307,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 691.81384, -474.84375, -88.50525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 690.79730, -474.70837, -88.69617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 690.20898, -474.72354, -88.69617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 690.21570, -474.34851, -88.69617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 690.79932, -474.30960, -88.69617,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 675.45013, -462.79999, -88.03040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 676.72180, -462.77029, -88.02091,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2034, 674.60083, -462.83072, -88.02402,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2033, 674.92358, -463.07642, -88.02402,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 677.16547, -463.02631, -88.02731,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 677.81885, -462.81635, -88.02731,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2045, 674.24469, -462.90009, -87.96197,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2045, 674.03857, -462.91229, -87.96197,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2045, 673.82074, -462.91345, -87.96197,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2057, 673.25433, -462.88629, -87.88438,   0.00000, 0.00000, 0.00000);

//************************Cierre de talleres tuneos de gta*************************
CreateDynamicObject(971, 1025.27954, -1029.22986, 32.10160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, 488.23410, -1735.45911, 11.14160,   0.00000, 0.00000, 174.00000);
CreateDynamicObject(971, 2071.54102, -1831.41431, 13.54690,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(971, 719.81989, -462.47681, 16.33590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -1904.45605, 277.85779, 41.04690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 1007.33362, -936.41272, 42.75810,   0.00000, 0.00000, 5.00000);
CreateDynamicObject(1676, 1000.64063, -937.10272, 42.75810,   0.00000, 0.00000, 5.00000);
CreateDynamicObject(980, 2385.96094, 1043.56250, 12.59370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1968.78955, 2162.33325, 12.59370,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(980, -1421.79968, 2590.89697, 56.80568,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, -1935.38757, 239.34282, 36.12965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, -2425.79126, 1028.10962, 52.17105,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -99.74067, 1111.51843, 20.36211,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 2385.96094, 1043.56250, 12.59370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1968.78955, 2162.33325, 12.59370,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(980, -1421.79968, 2590.89697, 56.80568,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, -1935.38757, 239.34282, 36.12965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, -2425.79126, 1028.10962, 52.17105,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, -99.74067, 1111.51843, 20.36211,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(971, 1042.32288, -1026.02527, 31.09317,   0.00000, 0.00000, 0.00000);
//*************************Glen Park*************************
CreateDynamicObject(994, 1930.06763, -1195.10400, 19.03111,   0.00000, 0.00000, 54.00000);
CreateDynamicObject(994, 1933.77380, -1190.03076, 19.03111,   0.00000, 0.00000, 36.24780);
CreateDynamicObject(994, 1938.80237, -1186.33972, 19.03111,   0.00000, 0.00000, 26.99390);
CreateDynamicObject(994, 1944.53821, -1183.43494, 19.03111,   0.00000, 0.00000, 18.99341);
CreateDynamicObject(994, 1950.47803, -1181.38257, 19.03111,   0.00000, 0.00000, 5.73987);
CreateDynamicObject(994, 1955.08984, -1180.83020, 19.03111,   0.00000, 0.00000, 16.73499);
CreateDynamicObject(994, 1961.09253, -1179.05603, 19.03111,   0.00000, 0.00000, 2.73218);
CreateDynamicObject(994, 1967.35742, -1178.74487, 19.03111,   0.00000, 0.00000, 352.73010);
CreateDynamicObject(994, 1971.26062, -1179.23914, 19.03111,   0.00000, 0.00000, 0.72705);
CreateDynamicObject(994, 1977.50342, -1179.15735, 19.03111,   0.00000, 0.00000, 354.47510);
CreateDynamicObject(994, 1983.75317, -1179.76294, 19.03111,   0.00000, 0.00000, 346.97388);
CreateDynamicObject(994, 1929.41614, -1201.37170, 19.03111,   0.00000, 0.00000, 83.99780);
CreateDynamicObject(994, 1931.97705, -1207.10449, 19.03111,   0.00000, 0.00000, 113.99597);
CreateDynamicObject(994, 1936.43469, -1211.50549, 19.03111,   0.00000, 0.00000, 135.24414);
CreateDynamicObject(994, 1941.81494, -1214.75793, 19.03111,   0.00000, 0.00000, 148.99170);
CreateDynamicObject(994, 1947.64465, -1217.07971, 19.03111,   0.00000, 0.00000, 158.24109);
CreateDynamicObject(994, 1953.66333, -1219.03589, 19.03111,   0.00000, 0.00000, 162.23608);
CreateDynamicObject(994, 1959.74768, -1220.54517, 19.03111,   0.00000, 0.00000, 165.98511);
CreateDynamicObject(994, 1965.99463, -1221.04443, 19.03111,   0.00000, 0.00000, 175.48145);
CreateDynamicObject(994, 1972.27966, -1220.91675, 19.03111,   0.00000, 0.00000, 181.22913);
CreateDynamicObject(994, 1978.55811, -1220.51733, 19.03111,   0.00000, 0.00000, 183.72498);
CreateDynamicObject(994, 1984.73999, -1219.58398, 19.03111,   0.00000, 0.00000, 188.47437);
CreateDynamicObject(994, 1989.90247, -1181.15686, 19.03111,   0.00000, 0.00000, 342.72021);
CreateDynamicObject(994, 1995.89355, -1182.99207, 19.03111,   0.00000, 0.00000, 334.21851);
CreateDynamicObject(994, 2001.55249, -1185.71228, 19.03111,   0.00000, 0.00000, 324.71509);
CreateDynamicObject(994, 2006.68323, -1189.31006, 19.03111,   0.00000, 0.00000, 309.71191);
CreateDynamicObject(994, 2010.72058, -1194.13782, 19.03111,   0.00000, 0.00000, 283.71008);
CreateDynamicObject(994, 2012.20557, -1200.26453, 19.03111,   0.00000, 0.00000, 250.20544);
CreateDynamicObject(994, 1990.81201, -1218.02112, 19.03111,   0.00000, 0.00000, 194.47046);
CreateDynamicObject(994, 1996.81604, -1216.02039, 19.03111,   0.00000, 0.00000, 198.46899);
CreateDynamicObject(994, 2010.11609, -1206.13574, 19.03111,   0.00000, 0.00000, 227.45264);
CreateDynamicObject(994, 2005.76611, -1210.80933, 19.03111,   0.00000, 0.00000, 212.94995);
CreateDynamicObject(997, 1997.25330, -1215.84448, 19.02344,   0.00000, 0.00000, 26.25000);

//*********************PARK GYM AND CITY HALL*********************
CreateDynamicObject(4232, 2257.50000, -1727.50000, 2030.59998,   0.00000, 0.00000, 176.00000);
CreateDynamicObject(10010, 1170.80005, -1622.09998, 6601.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16773, 1136.09998, -1588.90002, 6605.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7891, 1242.09998, -1736.09998, 14.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1215, 1246.19995, -1735.59998, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1238.09998, -1735.40002, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4642, 1236.59998, -1737.30005, 14.30000,   0.00000, 0.00000, 90.75000);
CreateDynamicObject(7891, 2281.19995, -1721.59998, 14.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(4642, 2285.00000, -1720.80005, 14.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16773, 2246.00000, -1707.50000, 2028.69995,   0.00000, 0.00000, 266.00000);
CreateDynamicObject(16773, 2247.00000, -1692.90002, 2028.69995,   0.00000, 0.00000, 265.99548);
CreateDynamicObject(16773, 2248.00000, -1678.40002, 2028.69995,   0.00000, 0.00000, 265.99548);
CreateDynamicObject(16773, 2235.89990, -1765.80005, 2034.09998,   0.00000, 0.00000, 175.99548);
//*************************Atras de Ammu*************************
CreateDynamicObject(850, 1425.00000, -1337.30005, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(850, 1424.00000, -1293.80005, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(849, 1424.69995, -1315.00000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3119, 1425.19995, -1341.00000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3035, 1436.59998, -1323.69995, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(853, 1433.30005, -1324.50000, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(924, 1426.80005, -1323.40002, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(851, 1424.30005, -1355.40002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3119, 1419.40002, -1354.80005, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1439, 1406.50000, -1364.09998, 7.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1358, 1406.59998, -1369.69995, 8.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12957, 1423.90002, -1293.19995, 13.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3594, 1436.09998, -1333.59998, 13.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18451, 1424.50000, -1299.90002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(851, 1413.80005, -1321.80005, 8.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12954, 1406.90002, -1306.30005, 8.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(910, 1409.69995, -1299.30005, 13.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(952, 1406.19995, -1299.09998, 13.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2837, 1422.50000, -1355.69995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1358, 1442.19995, -1333.30005, 13.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1424, 1409.69995, -1370.09998, 8.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1422, 1413.30005, -1370.09998, 8.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1335, 1406.50000, -1311.00000, 8.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(923, 1418.40002, -1351.90002, 13.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(939, 1425.00000, -1307.80005, 15.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(853, 1412.40002, -1299.69995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3005, 1429.19995, -1323.80005, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1369, 1411.90002, -1326.50000, 8.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1440, 1430.40002, -1333.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1635, 1426.59998, -1337.44995, 17.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1299, 1425.40002, -1348.69995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1357, 1426.00000, -1352.00000, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1442, 1406.80005, -1360.30005, 8.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1441, 1422.80005, -1347.59998, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1450, 1426.59998, -1350.19995, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1345, 1412.90002, -1305.19995, 9.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1264, 1424.19995, -1348.59998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(926, 1426.30005, -1353.40002, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(927, 1403.30005, -1300.69995, 14.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1353, 1404.00000, -1301.30005, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2976, 1425.40002, -1350.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, 1426.09998, -1355.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3787, 1424.80005, -1345.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1654, 1423.19995, -1345.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2060, 1424.50000, -1349.90002, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1424.50000, -1350.50000, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1424.50000, -1351.09998, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1424.40002, -1350.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1424.40002, -1350.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1424.30005, -1350.50000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2064, 1423.80005, -1352.90002, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2061, 1424.40002, -1353.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2315, 1419.69995, -1351.90002, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2315, 1422.59998, -1352.00000, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1550, 1422.59998, -1350.59998, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1581, 1422.50000, -1351.40002, 13.10000,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, 1422.80005, -1351.90002, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, 1422.50000, -1351.90002, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, 1422.19995, -1351.90002, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1422.50000, -1352.30005, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1210, 1419.69995, -1352.00000, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2057, 1419.69995, -1351.59998, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 1419.69995, -1350.19995, 13.40000,   0.00000, 0.00000, 0.00000);

//*************************alhambra*************************
CreateDynamicObject(3850, 1827.01001, -1677.19995, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1827.01001, -1673.81006, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1827.07996, -1687.81006, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1827.08997, -1691.29004, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1826.98999, -1682.41003, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1831.50000, -1672.04004, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1831.64001, -1689.21997, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1831.46997, -1675.45996, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1831.47998, -1678.85999, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1831.59998, -1685.65002, 13.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1834.52002, -1738.15002, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1834.06995, -1720.87000, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1833.93994, -1705.78003, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1834.92004, -1654.65002, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1834.34998, -1638.26001, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(620, 1834.51001, -1624.81006, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.40002, -1689.60999, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.44995, -1675.34998, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43005, -1689.56995, 17.14000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43005, -1689.56995, 20.98000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.44995, -1675.34998, 17.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.44995, -1675.34998, 20.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.45996, -1664.25000, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.45996, -1664.25000, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.45996, -1664.25000, 20.38000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1653.10999, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1653.10999, 17.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1653.10999, 20.49000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43005, -1641.95996, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43005, -1641.95996, 16.96000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43005, -1641.95996, 18.76000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1635.57996, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1635.57996, 16.81000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1635.57996, 20.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.35999, -1700.68994, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.35999, -1700.68994, 17.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.35999, -1700.68994, 19.78000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.38000, -1711.57996, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.38000, -1711.57996, 17.14000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.38000, -1711.57996, 20.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.42004, -1722.78003, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.42004, -1722.78003, 17.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.42004, -1722.78003, 18.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1730.56006, 13.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1730.56006, 17.02000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1837.43994, -1730.56006, 19.32000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1836.79004, -1684.00000, 13.09000,   0.00000, 0.00000, 88.56000);
CreateDynamicObject(3850, 1833.22998, -1680.60999, 13.09000,   0.00000, 0.00000, 88.56000);
CreateDynamicObject(3850, 1836.62000, -1680.68005, 13.09000,   0.00000, 0.00000, 88.56000);
CreateDynamicObject(1536, 1837.46997, -1684.00000, 12.30000,   0.00000, 0.00000, 88.68000);
CreateDynamicObject(1536, 1837.47998, -1681.00000, 12.30000,   0.00000, 0.00000, 269.82001);
CreateDynamicObject(3850, 1836.90002, -1691.17004, 13.09000,   0.00000, 0.00000, 268.62000);
CreateDynamicObject(3850, 1833.46997, -1694.15002, 13.09000,   0.00000, 0.00000, 270.84000);
CreateDynamicObject(3850, 1837.06006, -1694.08997, 13.09000,   0.00000, 0.00000, 271.38000);
CreateDynamicObject(3850, 1833.35999, -1683.97998, 13.09000,   0.00000, 0.00000, 89.58000);
CreateDynamicObject(3850, 1833.42004, -1691.09998, 13.09000,   0.00000, 0.00000, 88.32000);

//*************************jail ooc*************************
CreateDynamicObject(18759, -3599.48584, -2317.53979, -3.81637,   0.00000, 0.00000, -0.54000);

//*************************Prision SAEM*************************
CreateDynamicObject(4724, 174.20000, 1930.00000, 3868.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 168.70000, 1944.80005, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 177.59961, 1944.79980, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(3361, 193.50000, 1939.30005, 3867.39990,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(976, 168.70000, 1944.80005, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 177.60001, 1944.80005, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(976, 186.50000, 1944.80005, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 195.39999, 1944.80005, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.30005, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.30005, 3868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.30005, 3869.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.30005, 3870.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.30005, 3872.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1941.90002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1952.69995, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1950.00000, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1947.30005, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1944.59998, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(976, 186.50000, 1944.80005, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 195.39999, 1944.80005, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 168.60001, 1951.19995, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 168.60001, 1951.19995, 3868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 168.60001, 1951.19995, 3869.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 168.60001, 1951.19995, 3870.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 168.60001, 1951.19995, 3872.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 195.30000, 1951.30005, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 186.39999, 1951.30005, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 186.39999, 1951.30005, 3868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 186.39999, 1951.30005, 3869.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 186.39999, 1951.30005, 3870.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 186.39999, 1951.30005, 3872.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 195.30000, 1951.30005, 3868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 195.30000, 1951.30005, 3869.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 195.30000, 1951.30005, 3870.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 195.30000, 1951.30005, 3872.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 204.20000, 1951.30005, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 204.20000, 1951.30005, 3868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 204.20000, 1951.30005, 3869.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 204.20000, 1951.30005, 3870.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 204.20000, 1951.30005, 3872.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1944.69995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 169.30000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1958.19995, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1955.39941, 3869.60010,   269.98901, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1955.40002, 3869.60010,   269.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1955.50000, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.59961, 1952.79980, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.19922, 1952.79980, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.69922, 1952.79980, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1952.80005, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.69922, 1950.09961, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39941, 1950.09961, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.79980, 1950.09961, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89941, 1950.09961, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1950.09998, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 173.00000, 1947.39941, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 176.70000, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 180.39999, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 184.10001, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 187.80000, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 191.50000, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 195.20000, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 198.89999, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 202.60001, 1947.40002, 3869.39990,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 203.50000, 1951.19995, 3872.80005,   0.00000, 89.49994, 0.00000);
CreateDynamicObject(984, 202.20000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 200.89999, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 199.60001, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 198.30000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 197.00000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 195.70000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 194.39999, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 193.10001, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 191.80000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 190.50000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 189.20000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 187.89999, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 186.60001, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 185.30000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 184.00000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 182.70000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 181.39999, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 180.10001, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 178.80000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 177.50000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 176.20000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 174.89999, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 173.60001, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 172.30000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 171.00000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 169.70000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(984, 169.20000, 1951.19995, 3872.80005,   0.00000, 89.49463, 0.00000);
CreateDynamicObject(4724, 200.00000, 1929.50000, 3868.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2639, 202.20000, 1929.40002, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2639, 201.80000, 1932.69995, 3866.89990,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2923, 196.19922, 1924.59961, 3866.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 177.89999, 1925.09998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2632, 174.00000, 1927.09998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, 174.00000, 1925.09998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2630, 170.50000, 1934.69995, 3866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2629, 170.00000, 1926.50000, 3866.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2627, 173.50000, 1934.40002, 3866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2628, 169.89999, 1931.40002, 3866.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2528, 170.20000, 1955.69995, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 179.50000, 1955.69995, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 188.20000, 1955.69995, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 197.30000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 197.00000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 187.80000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 178.70000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 169.70000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 171.20000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 180.50000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 189.20000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 198.20000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 198.00000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 188.50000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 179.20000, 1955.59998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2524, 170.30000, 1955.69995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 175.20000, 1952.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 184.00000, 1952.40002, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 193.00000, 1952.40002, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 201.89999, 1952.40002, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 201.60001, 1952.50000, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 192.80000, 1952.50000, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 183.10001, 1952.50000, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 174.20000, 1952.19995, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 169.30000, 1955.59998, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 178.50000, 1955.50000, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 187.39999, 1955.69995, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 196.30000, 1955.50000, 3869.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 196.00000, 1955.59998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 187.00000, 1955.59998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 178.10001, 1955.50000, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 169.20000, 1955.40002, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2915, 175.50000, 1927.50000, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2916, 179.30000, 1925.00000, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2913, 169.50000, 1926.09998, 3867.30005,   271.27441, 348.68408, 348.68408);
CreateDynamicObject(2921, 207.00000, 1914.69995, 3874.39990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 207.00000, 1946.59998, 3874.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 207.00000, 1931.59998, 3874.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 184.00000, 1913.00000, 3874.60010,   0.00000, 0.00000, 261.75000);
CreateDynamicObject(2921, 162.20000, 1913.00000, 3874.60010,   0.00000, 0.00000, 261.74927);
CreateDynamicObject(2921, 155.00000, 1931.59998, 3874.60010,   0.00000, 0.00000, 191.74927);
CreateDynamicObject(2644, 204.30000, 1930.59998, 3866.69995,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(1892, 189.30000, 1924.59998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2639, 203.89999, 1932.69995, 3866.89990,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2644, 203.39999, 1930.59998, 3866.69995,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(2644, 202.50000, 1930.59998, 3866.69995,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(2644, 201.60001, 1930.59998, 3866.69995,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(2639, 204.30000, 1929.40002, 3866.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, 177.89999, 1927.09998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2915, 176.39999, 1925.30005, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2915, 176.30000, 1927.40002, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2915, 175.50000, 1925.40002, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2916, 179.39999, 1927.09998, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2916, 172.50000, 1927.19995, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2916, 172.39999, 1925.09998, 3866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1892, 186.89999, 1924.59998, 3866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 189.00000, 1924.09998, 3866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 186.60001, 1924.09998, 3866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 177.10001, 1935.40002, 3869.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 183.09961, 1935.50000, 3869.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 190.70000, 1935.30005, 3869.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 172.89999, 1942.00000, 3870.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(984, 185.70000, 1942.00000, 3870.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(984, 201.20000, 1942.00000, 3870.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8228, 237.80000, 1924.09998, 3868.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8228, 136.60001, 1956.30005, 3868.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, 173.00000, 1951.80005, 3877.00000,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8228, 237.80000, 1877.19995, 3874.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8228, 136.50000, 2003.19995, 3874.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, 182.00000, 1951.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 191.00000, 1951.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 200.00000, 1951.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 200.00000, 1942.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 191.00000, 1942.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 182.00000, 1942.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 173.00000, 1942.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 173.00000, 1933.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 182.00000, 1933.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 191.00000, 1933.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 200.00000, 1933.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 200.00000, 1924.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 191.00000, 1924.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 182.00000, 1924.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 173.00000, 1924.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 209.00000, 1951.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 209.00000, 1942.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 209.00000, 1933.80005, 3877.00000,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(3095, 209.00000, 1924.80005, 3877.00000,   179.99451, 0.00000, 0.00000);

//*************************Punto add*************************
CreateDynamicObject(967, 2387.08008, -2008.34998, 12.55000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1508, 2391.19995, -2007.40002, 14.21000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2294.02002, -1118.62000, 37.53000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2294.01001, -1114.51001, 37.53000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2294.01001, -1110.38000, 37.53000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2294.01001, -1106.26001, 37.53000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2294.01001, -1102.10999, 37.53000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1940.88000, -1775.05005, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1940.88000, -1779.18994, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1940.88000, -1770.93994, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1940.89001, -1766.81995, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1942.43005, -1779.08997, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1942.43005, -1774.94995, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1942.43005, -1770.82996, 12.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1942.43005, -1766.68994, 12.94000,   0.00000, 0.00000, 90.00000);

//*************************interior vip*************************
CreateDynamicObject(14607,812.2000100,-1388.4000200,1022.0081200,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(14614, 812.20001, -1388.40002, 1022.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14563, 812.20001, -1388.40002, 1022.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14561, 812.20001, -1381.00000, 1021.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14605, 812.20001, -1410.25000, 1025.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8661, 810.70001, -1398.40002, 1031.30005,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3528, 811.79999, -1400.09998, 1024.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3528, 811.79999, -1400.09998, 1024.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(6136, 754.70001, -1394.69995, 1017.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1386.69995, 1017.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1378.80005, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1370.80005, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1362.80005, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1354.90002, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1346.90002, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1338.90002, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 869.50000, -1395.40002, 1016.90002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(6136, 869.50000, -1387.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1379.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1371.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1363.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1355.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1347.40002, 1016.90002,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1339.40002, 1016.70001,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(9044, 816.79999, -1333.00000, 1025.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8483, 813.50000, -1343.59998, 1018.90002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(9831, 811.79999, -1352.80005, 1013.90002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(6965, 812.59998, -1348.40002, 1016.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2780, 812.59998, -1354.69995, 1008.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 803.00000, -1350.19995, 1014.40002,   0.00000, 0.00000, 12.00000);
CreateDynamicObject(2773, 803.40002, -1352.09998, 1014.40002,   0.00000, 0.00000, 11.99000);
CreateDynamicObject(2773, 804.20001, -1353.80005, 1014.40002,   0.00000, 0.00000, 39.24000);
CreateDynamicObject(2773, 805.59998, -1355.50000, 1014.40002,   0.00000, 0.00000, 38.99000);
CreateDynamicObject(2773, 807.09998, -1356.80005, 1014.40002,   0.00000, 0.00000, 62.99000);
CreateDynamicObject(2773, 809.09998, -1357.80005, 1014.40002,   0.00000, 0.00000, 64.48000);
CreateDynamicObject(2773, 811.20001, -1358.30005, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 813.50000, -1358.30005, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 815.50000, -1357.90002, 1014.40002,   0.00000, 0.00000, 116.00000);
CreateDynamicObject(2773, 817.40002, -1357.00000, 1014.40002,   0.00000, 0.00000, 116.00000);
CreateDynamicObject(2773, 819.20001, -1355.90002, 1014.40002,   0.00000, 0.00000, 135.25000);
CreateDynamicObject(2773, 820.70001, -1354.19995, 1014.40002,   0.00000, 0.00000, 141.24001);
CreateDynamicObject(2773, 821.79999, -1352.19995, 1014.40002,   0.00000, 0.00000, 161.49001);
CreateDynamicObject(2773, 823.50000, -1349.40002, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2774, 825.40002, -1348.19995, 1026.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 798.79999, -1348.19995, 1026.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 807.00000, -1353.19995, 1010.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 817.09998, -1353.19995, 1010.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10771, 932.20001, -1371.50000, 1003.29999,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2773, 821.79999, -1366.30005, 1015.59998,   0.00000, 0.00000, 294.98999);
CreateDynamicObject(2773, 823.90002, -1365.30005, 1015.59998,   0.00000, 0.00000, 294.98999);
CreateDynamicObject(2773, 821.70001, -1376.59998, 1015.59998,   0.00000, 0.00000, 65.74000);
CreateDynamicObject(2773, 823.79999, -1377.59998, 1015.59998,   0.00000, 0.00000, 65.74000);
CreateDynamicObject(2773, 825.79999, -1378.50000, 1015.59998,   0.00000, 0.00000, 65.74000);
CreateDynamicObject(12950, 825.59998, -1360.50000, 1011.70001,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(12950, 825.59998, -1360.50000, 1011.70001,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3524, 820.50000, -1376.00000, 1014.79999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3524, 820.50000, -1376.00000, 1014.79999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3524, 820.40002, -1366.90002, 1014.79999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3524, 820.40002, -1366.90002, 1014.79999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14391, 821.50000, -1371.50000, 1015.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2439, 820.70001, -1375.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1374.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1373.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1372.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1371.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1370.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1369.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1368.40002, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2439, 820.70001, -1367.59998, 1015.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3498, 818.90002, -1372.59998, 1010.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3498, 819.00000, -1369.69995, 1010.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2595, 822.40002, -1368.40002, 1015.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2232, 820.59998, -1374.50000, 1016.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2232, 820.59998, -1368.50000, 1016.59998,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18102, 821.79999, -1367.59998, 1017.09998,   52.00000, 0.00000, 90.00000);
CreateDynamicObject(16088, 821.00000, -1371.59998, 1011.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2232, 820.40002, -1364.80005, 1016.90002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2232, 820.40002, -1364.80005, 1015.29999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2232, 820.29999, -1378.30005, 1015.29999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2232, 820.29999, -1378.30005, 1016.90002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2773, 816.59998, -1405.50000, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.59998, -1407.80005, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.59998, -1410.09998, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.59998, -1412.40002, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.59998, -1414.69995, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 807.79999, -1405.50000, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 807.79999, -1407.80005, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 807.79999, -1410.09998, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 807.79999, -1412.40002, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 807.79999, -1414.69995, 1016.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14560, 798.29999, -1370.54004, 1017.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14565, 798.33002, -1370.58997, 1015.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1378.80005, 1024.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1370.80005, 1024.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1362.80005, 1024.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136, 754.70001, -1354.90002, 1024.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 800.06000, -1360.81995, 1013.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2350, 802.59998, -1364.43994, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2350, 803.25000, -1365.68005, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2350, 803.40997, -1367.07996, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2350, 803.47998, -1368.54004, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2350, 803.44000, -1371.88000, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2350, 803.64001, -1369.92004, 1013.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 812.59998, -1421.59998, 1021.00000,   90.00000, 0.00000, 179.99001);
CreateDynamicObject(3851, 804.40002, -1421.59998, 1024.80005,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 808.40002, -1421.59998, 1024.80005,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 812.40002, -1421.59998, 1024.80005,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 816.40002, -1421.59998, 1024.80005,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 820.40002, -1421.59998, 1024.80005,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 804.40002, -1421.59998, 1013.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 808.40002, -1421.59998, 1013.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 812.40002, -1421.59998, 1013.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 816.40002, -1421.59998, 1013.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 820.40002, -1421.59998, 1013.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(1569, 810.50000, -1421.50000, 1015.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 813.50000, -1421.50000, 1015.40002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(13594, 812.00000, -1421.50000, 1015.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14782, 797.59998, -1414.59998, 1016.29999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(6136, 869.50000, -1379.40002, 1025.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1371.50000, 1025.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1363.59998, 1025.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(6136, 869.50000, -1355.69995, 1025.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2773, 801.79999, -1349.19995, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 799.90002, -1349.19995, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 798.00000, -1349.19995, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 822.29999, -1350.30005, 1014.40002,   0.00000, 0.00000, 168.74001);
CreateDynamicObject(2773, 825.50000, -1349.40002, 1014.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 805.40002, -1400.50000, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 804.40002, -1417.50000, 1020.79999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1420.00000, 1019.70001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1420.00000, 1029.59998,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1411.40002, 1019.70001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1411.40002, 1029.59998,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1407.69995, 1019.70001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 801.90002, -1407.50000, 1020.79999,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 797.90002, -1407.50000, 1020.79999,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 804.70001, -1409.69995, 1023.79999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3533, 804.50000, -1407.69995, 1029.59998,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 802.50000, -1407.19995, 1017.79999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 797.79999, -1409.09998, 1020.79999,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14397, 798.20001, -1409.09998, 1020.79999,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14397, 798.59998, -1409.09998, 1020.79999,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14397, 799.00000, -1409.09998, 1020.79999,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14397, 802.50000, -1407.19995, 1015.90002,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 802.50000, -1407.50000, 1015.90002,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 802.50000, -1407.59998, 1015.90002,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 804.40002, -1413.50000, 1020.79999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 803.20001, -1411.90002, 1002.29999,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(14397, 803.20001, -1412.40002, 1002.29999,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(14397, 803.20001, -1412.09998, 1002.29999,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2332, 797.23999, -1418.94995, 1017.32001,   0.00000, 0.00000, 88.50000);
CreateDynamicObject(1703, 803.82001, -1414.81995, 1015.29999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8661, 784.00000, -1407.40002, 1016.29999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 784.09998, -1407.50000, 1022.79999,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, 804.50000, -1431.40002, 1018.09998,   90.00000, 0.00000, 270.00000);
CreateDynamicObject(8661, 804.40002, -1431.40002, 1018.09998,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 804.40002, -1421.69995, 1020.79999,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 784.09998, -1420.90002, 1022.79999,   90.00000, 0.00000, 179.99001);
CreateDynamicObject(3851, 801.90002, -1420.90002, 1020.90002,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 797.90002, -1420.90002, 1020.90002,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(14608, 825.40002, -1410.30005, 1017.09998,   0.00000, 0.00000, 44.50000);
CreateDynamicObject(2773, 802.29999, -1408.80005, 1016.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 800.20001, -1408.80005, 1016.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 798.09998, -1408.80005, 1016.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 804.88000, -1399.50000, 1015.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1703, 800.85999, -1399.47998, 1015.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1703, 801.90002, -1401.50000, 1015.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 801.40002, -1400.40002, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 797.67999, -1401.47998, 1015.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 801.41998, -1405.92004, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 805.40002, -1406.00000, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 797.67999, -1407.07996, 1015.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 800.91998, -1405.04004, 1015.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1703, 801.94000, -1407.06006, 1015.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1704, 804.88000, -1405.00000, 1015.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3533, 804.50000, -1398.40002, 1016.29999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 801.70001, -1398.59998, 1020.79999,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 797.70001, -1398.59998, 1020.79999,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 799.79999, -1403.30005, 1015.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, 803.70001, -1403.30005, 1015.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, 796.90002, -1403.19995, 1015.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2100, 797.40002, -1403.50000, 1015.59998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18646, 820.39001, -1366.92004, 1017.04999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18646, 820.40002, -1376.03003, 1017.04999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18653, 814.00000, 4583.00000, -1351.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18653, 810.34998, -1350.07996, 1017.07001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18653, 814.00000, 5515.00000, -135.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18653, 814.32001, -1350.16003, 1017.07001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18653, 811.97998, -1398.28003, 1022.88000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18653, 811.97998, -1398.28003, 1022.88000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18653, 814.32001, -1350.16003, 1017.07001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18654, 820.00000, 2551365.00000, 5977.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18654, 820.31000, -1365.60999, 1017.28998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18654, 820.31000, -1377.59998, 1017.28998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18653, 810.34998, -1350.07996, 1017.07001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18885, 802.70001, -1420.52002, 1016.54999,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18646, 805.40002, -1402.02002, 1018.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18646, 805.39001, -1404.47998, 1018.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2311, 799.32001, -1406.81006, 1015.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2311, 799.32001, -1401.31995, 1015.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2311, 803.38000, -1406.81006, 1015.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2311, 803.00000, 3800.00000, -1401.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, 815.73999, -1370.78003, 1013.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, 795.77002, -1370.79004, 1013.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2311, 803.38000, -1401.29004, 1015.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3524, 799.69000, -1380.66003, 1013.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 827.00000, -1417.40002, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2755, 827.00000, -1403.19995, 1017.20001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1569, 826.90002, -1418.19995, 1015.40002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1569, 826.90002, -1402.50000, 1015.40002,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2942, 800.34003, -1420.55005, 1016.10999,   0.00000, 0.00000, 180.84000);
CreateDynamicObject(19125, 802.83002, -1408.05005, 1016.17999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19125, 801.16998, -1408.10999, 1016.17999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19125, 799.77002, -1408.09998, 1016.17999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19125, 798.09998, -1408.13000, 1016.17999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6136,848.4663700,-1418.3608400,1010.1018100,0.0000000,0.0000000,179.9900100); //
CreateDynamicObject(6136,848.4663700,-1418.3608400,1010.6483200,0.0000000,0.0000000,179.9900100); //
CreateDynamicObject(6136,848.4581300,-1418.4167500,1010.3028000,0.0000000,0.0000000,179.9900100); //
//********************************CASA MAPEADA BY ELIAS RIVAS***************
CreateDynamicObject(3599, 777.58917, -1428.52039, 18.15055,   0.00000, 0.00000, 90.77880);
CreateDynamicObject(984, 780.83087, -1440.89209, 16.21250,   0.00000, 0.00000, 87.51390);
CreateDynamicObject(1505, 780.97546, -1426.36084, 12.52450,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1505, 780.95660, -1426.34326, 19.12731,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1505, 780.95660, -1426.34326, 15.64882,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(984, 783.17413, -1426.91187, 19.80230,   0.00000, 0.00000, 0.96524);
CreateDynamicObject(19462, 782.25781, -1441.05640, 13.96002,   0.00000, 0.00000, 87.43661);
CreateDynamicObject(19462, 782.33899, -1439.27954, 15.63202,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(19462, 782.47906, -1435.95593, 15.63606,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(19462, 782.56342, -1430.68848, 13.80502,   0.00000, 0.00000, 87.43661);
CreateDynamicObject(19462, 782.61841, -1432.49280, 15.63202,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(640, 783.60229, -1431.29944, 13.04274,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(640, 783.77161, -1440.61194, 13.03670,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, 786.33295, -1431.60632, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.33215, -1431.10278, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.38794, -1441.00415, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.41486, -1440.40381, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 786.79437, -1432.96875, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 786.78705, -1439.52063, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 786.79846, -1436.24377, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 781.35345, -1428.94836, 15.63200,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1825, 785.08942, -1432.61694, 15.71760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 786.82990, -1438.50952, 16.34130,   0.00000, 0.00000, 358.70953);
CreateDynamicObject(970, 785.47058, -1430.99500, 16.25998,   0.00000, 0.00000, 357.76407);
CreateDynamicObject(970, 783.33154, -1428.83313, 16.36100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 783.48907, -1426.87000, 16.36100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 787.50201, -1433.12244, 16.36100,   0.00000, 0.00000, 87.34409);
CreateDynamicObject(970, 787.33655, -1437.21899, 16.36100,   0.00000, 0.00000, 88.28094);
CreateDynamicObject(970, 787.30035, -1439.05872, 16.36100,   0.00000, 0.00000, 88.28094);
CreateDynamicObject(640, 787.00800, -1433.70630, 16.34130,   0.00000, 0.00000, 356.86649);
CreateDynamicObject(640, 783.86542, -1440.68372, 16.34130,   0.00000, 0.00000, 87.82703);
CreateDynamicObject(1703, 783.68506, -1436.16431, 15.71695,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1703, 785.72473, -1439.30359, 15.71690,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2311, 783.85736, -1437.79395, 15.71667,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 787.35028, -1431.32666, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 787.20251, -1434.45483, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 787.09882, -1437.02881, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.98901, -1441.12439, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.91083, -1439.39026, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 785.05188, -1440.88916, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 782.31342, -1440.83972, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 782.15521, -1430.00867, 12.49066,   0.00000, 90.00000, 359.53369);
CreateDynamicObject(19377, 781.99780, -1420.63770, 12.49066,   0.00000, 90.00000, 1.05909);
CreateDynamicObject(19377, 782.09119, -1437.10266, 12.49066,   0.00000, 90.00000, 358.15274);
CreateDynamicObject(970, 785.59100, -1418.19849, 16.36100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 783.53876, -1416.14026, 16.36100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 781.36206, -1433.39868, 19.77490,   0.00000, 0.00000, 359.60712);
CreateDynamicObject(19377, 777.04932, -1420.49023, 12.49066,   0.00000, 90.00000, 1.05909);
CreateDynamicObject(19377, 777.11414, -1436.28052, 12.49066,   0.00000, 90.00000, 359.79083);
CreateDynamicObject(984, 780.83087, -1440.89209, 16.21250,   0.00000, 0.00000, 87.51390);
CreateDynamicObject(1505, 780.97546, -1426.36084, 12.52450,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1505, 780.95660, -1426.34326, 19.12731,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1505, 780.95660, -1426.34326, 15.64882,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 782.33899, -1439.27954, 15.63202,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(19462, 782.47906, -1435.95593, 15.63606,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(19462, 782.56342, -1430.68848, 13.80502,   0.00000, 0.00000, 87.43661);
CreateDynamicObject(19462, 782.61841, -1432.49280, 15.63202,   0.00000, 90.00000, 87.43660);
CreateDynamicObject(640, 783.60229, -1431.29944, 13.04274,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(640, 783.77161, -1440.61194, 13.03670,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, 786.33295, -1431.60632, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.33215, -1431.10278, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.38794, -1441.00415, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.41486, -1440.40381, 12.87077,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 786.79437, -1432.96875, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 786.78705, -1439.52063, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 786.79846, -1436.24377, 12.55100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 781.35345, -1428.94836, 15.63200,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(970, 783.33154, -1428.83313, 16.25899,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, 787.35028, -1431.32666, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 787.20251, -1434.45483, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 787.09882, -1437.02881, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.98901, -1441.12439, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 786.91083, -1439.39026, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 782.31342, -1440.83972, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 782.13501, -1429.96875, 12.49066,   0.00000, 90.00000, 359.53369);
CreateDynamicObject(19377, 781.99780, -1420.63770, 12.49066,   0.00000, 90.00000, 1.05909);
CreateDynamicObject(19377, 782.09119, -1437.10266, 12.49066,   0.00000, 90.00000, 358.15274);
CreateDynamicObject(970, 785.59100, -1418.19849, 16.36100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 783.53876, -1416.14026, 16.36100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 781.36206, -1433.39868, 19.77490,   0.00000, 0.00000, 359.60712);
CreateDynamicObject(1215, 787.20251, -1434.45483, 16.42509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 768.71008, -1422.75745, 19.74199,   0.00000, 0.00000, 90.20100);
CreateDynamicObject(970, 770.53937, -1424.92029, 19.72276,   0.00000, 0.00000, 0.20100);
CreateDynamicObject(970, 770.70557, -1420.70093, 19.62780,   0.00000, 0.00000, 0.20100);
//*************************exterior vip*************************
CreateDynamicObject(3851, 809.20001, -1385.09998, 17.00000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 827.00000, -1385.09961, 17.00000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 823.00000, -1385.09998, 17.00000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2885, 807.50000, -1379.59961, 22.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2885, 807.50000, -1379.59998, 16.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2885, 807.50000, -1368.69922, 22.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2885, 807.50000, -1368.69995, 15.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2885, 834.50000, -1385.00000, 21.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2885, 842.00000, -1385.00000, 21.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2885, 834.50000, -1385.00000, 14.80000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2885, 842.00000, -1385.00000, 14.80000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1566, 815.40002, -1385.69995, 13.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 807.20001, -1383.09998, 17.00000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 807.20001, -1379.09998, 17.00000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 807.20001, -1375.09998, 17.00000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 807.20001, -1371.09998, 17.00000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 807.20001, -1367.09998, 17.00000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 821.69922, -1390.09961, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 810.79999, -1390.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 819.59961, -1390.09961, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 812.89941, -1390.09961, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2885, 822.39941, -1384.79980, 19.00000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2885, 812.79999, -1384.80005, 19.00000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1215, 814.90002, -1390.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 817.39941, -1390.09961, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 823.79980, -1390.09961, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 808.69922, -1390.09961, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 817.29999, -1386.00000, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 815.00000, -1386.00000, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 817.29980, -1386.00000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 815.00000, -1385.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, 823.00000, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 821.09998, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 819.20001, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 817.29980, -1388.19922, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 815.40002, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 813.50000, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 811.59998, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 809.70001, -1388.19995, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 809.70001, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 811.59998, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 813.50000, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 815.40002, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 817.29999, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 819.20001, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 821.09998, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2632, 823.00000, -1384.30005, 12.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 823.90002, -1386.59998, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, 823.79999, -1388.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 808.79999, -1386.59998, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, 808.70001, -1388.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 815.40002, -1386.90002, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 817.00000, -1386.90002, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2885, 842.00000, -1384.59998, 14.80000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2885, 842.00000, -1384.59998, 21.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2885, 869.00000, -1371.50000, 15.50000,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(8425, 857.50000, -1379.79980, 15.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8425, 857.00000, -1371.90002, 15.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11313, 853.39941, -1384.50000, 14.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 845.59998, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 841.50000, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 837.40002, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 861.40002, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 865.50000, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 869.59998, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 873.70001, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 877.79999, -1389.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 860.20001, -1384.80005, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 864.90002, -1384.80005, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 860.19922, -1384.79980, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 863.70001, -1385.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 859.59998, -1385.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 865.79999, -1385.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 857.50000, -1383.09998, 12.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 867.90002, -1383.09998, 12.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10010, 819.20001, -1385.90002, 4201.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11313, 856.00000, -1415.90002, 4203.29980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8425, 854.09998, -1420.59998, 4204.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8425, 854.09998, -1420.59998, 4211.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3578, 852.40002, -1417.00000, 4201.29980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3578, 851.50000, -1406.90002, 4201.29980,   0.00000, 0.00000, 100.25000);
CreateDynamicObject(1232, 859.20001, -1389.40002, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 847.79999, -1389.50000, 15.30000,   0.00000, 0.00000, 182.00000);

//*************************restaurante vip exterior*************************
CreateDynamicObject(3934, 1039.86096, -1094.03906, 22.82813,   0.00000, 0.00000, 0.25000);
CreateDynamicObject(10183, 1015.49591, -1084.50671, 22.84680,   0.00000, 0.00000, 45.50000);
CreateDynamicObject(980, 973.01343, -1103.70032, 25.63875,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(980, 973.01270, -1103.70020, 20.01377,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1033.85156, -1130.90039, 24.83013,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3499, 1017.19189, -1130.83386, 28.33246,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1033.85156, -1130.90039, 28.83011,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3499, 1027.59619, -1130.87915, 28.33246,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 1022.46033, -1130.86804, 33.08242,   89.74976, 180.00000, 269.75000);
CreateDynamicObject(3499, 1022.45996, -1130.86719, 28.08240,   89.74731, 179.99451, 269.74731);
CreateDynamicObject(3499, 1011.14099, -1130.80835, 31.25740,   89.74731, 179.99451, 269.74731);
CreateDynamicObject(3499, 1033.73511, -1130.73792, 31.25740,   89.74731, 179.99451, 269.74731);
CreateDynamicObject(3851, 1019.08142, -1130.80859, 21.83011,   90.00000, 180.69592, 269.30420);
CreateDynamicObject(1569, 1021.05035, -1130.79028, 22.82813,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1025.47424, -1130.87744, 21.83011,   90.00000, 180.69214, 269.30237);
CreateDynamicObject(1569, 1023.46747, -1130.83386, 22.82813,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3499, 1022.45996, -1130.86719, 25.98242,   89.74731, 179.99451, 269.74731);
CreateDynamicObject(3851, 1022.38281, -1131.21777, 27.55510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3499, 1017.34875, -1125.44910, 31.88239,   89.74731, 179.99451, 359.74731);
CreateDynamicObject(3499, 1027.44775, -1125.58899, 31.88239,   89.74731, 179.99451, 359.74731);
CreateDynamicObject(1432, 1012.77173, -1118.19153, 22.97374,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1006.73132, -1118.04358, 22.95021,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1003.48999, -1122.68005, 22.97344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1030.74365, -1119.09790, 22.96136,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1007.11993, -1127.60095, 22.95012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1013.42554, -1127.37122, 22.85253,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1008.72559, -1122.54785, 22.94973,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1036.84338, -1118.48047, 22.89828,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1039.87988, -1123.32556, 22.97344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1033.84680, -1122.73035, 22.96743,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1036.14392, -1126.91736, 22.97191,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 1030.74878, -1126.72339, 22.98637,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 1019.19611, -1131.27026, 23.48758,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1256, 1025.57202, -1131.35828, 23.48758,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1670, 1013.49274, -1127.31616, 23.49287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1007.25647, -1127.57861, 23.59045,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1039.84485, -1123.28345, 23.61377,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1006.85254, -1118.07520, 23.59055,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1033.82019, -1122.82813, 23.60776,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1030.80859, -1119.15332, 23.60170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1019.70056, -1120.60791, 23.57035,   0.00000, 0.00000, 61.50000);
CreateDynamicObject(638, 1025.22046, -1120.60144, 23.57035,   0.00000, 0.00000, 299.24597);
CreateDynamicObject(949, 1020.59229, -1132.11804, 23.46441,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 1023.68500, -1121.16516, 23.50680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1011.11133, -1130.83105, 24.83013,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1011.11133, -1130.83105, 28.83010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1022.38281, -1131.21777, 30.55510,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1011.11133, -1130.83105, 28.83010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1011.11133, -1130.83105, 24.83013,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1019.08105, -1130.80859, 21.83011,   90.00000, 180.69214, 89.30237);
CreateDynamicObject(3851, 1025.47363, -1130.87695, 21.83011,   90.00000, 180.69214, 89.30237);
CreateDynamicObject(3851, 1022.38092, -1131.19287, 27.55510,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1022.40607, -1131.24951, 30.55510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1033.85156, -1130.90039, 28.83011,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1033.85156, -1130.90039, 24.83013,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(949, 1021.29980, -1121.18555, 23.50680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 1023.93701, -1132.14966, 23.46441,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1023.79138, -1131.25122, 23.38465,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1020.76074, -1131.23730, 23.39245,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1024.02515, -1121.54224, 23.43862,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1020.93066, -1121.47070, 23.43427,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14777, 963.30609, -1100.76294, -61.63955,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1486, 970.50757, -1099.97449, -60.38350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1517, 972.03149, -1099.99377, -60.32870,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 970.53113, -1101.53772, -60.50345,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 962.13544, -1099.98047, -60.47845,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 960.58075, -1100.06970, -60.52845,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1546, 967.28162, -1106.45654, -60.48928,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1548, 966.45343, -1106.52783, -60.56609,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1664, 964.07623, -1106.44263, -60.41171,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1666, 965.51276, -1106.40344, -60.49765,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1666, 965.31750, -1106.40479, -60.49765,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1664, 963.99640, -1106.53882, -60.41171,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1950, 959.73267, -1106.47473, -60.39025,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1951, 960.04669, -1106.48511, -60.39025,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, 956.01819, -1105.51587, -60.36347,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, 955.95801, -1098.89893, -60.36347,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, 955.99414, -1102.61035, -60.36347,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, 956.01843, -1097.78015, -60.36347,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(950, 961.25763, -1090.03418, -61.08865,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(950, 965.26544, -1090.03210, -61.08865,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 966.79022, -1087.16931, -61.63174,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1723, 959.83795, -1089.10632, -61.63174,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1739, 973.11121, -1093.18628, -59.33249,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1739, 976.26715, -1093.22180, -59.33249,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1739, 975.59564, -1093.69019, -59.33249,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(1739, 973.69269, -1093.75146, -59.33249,   0.00000, 0.00000, 1.99951);
CreateDynamicObject(1739, 970.74139, -1093.79358, -59.33249,   0.00000, 0.00000, 1.99951);
CreateDynamicObject(1739, 970.13135, -1093.24988, -59.33249,   0.00000, 0.00000, 89.99951);
CreateDynamicObject(2232, 978.74323, -1104.18530, -61.03386,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2232, 953.05957, -1105.35547, -61.04167,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 978.75323, -1097.27966, -61.03386,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(2773, 953.85675, -1109.66797, -61.11451,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 956.04846, -1109.07410, -61.11451,   0.00000, 0.00000, 116.00000);
CreateDynamicObject(14758, 950.57617, -980.17480, -73.09735,   0.00000, 0.00000, 359.74731);
CreateDynamicObject(14757, 965.37286, -976.24158, -73.33220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14764, 950.56287, -980.29095, -73.15961,   0.00000, 0.00000, 359.50000);
CreateDynamicObject(2605, 951.41504, -960.32031, -70.07617,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1714, 951.40039, -958.84570, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2161, 962.34485, -958.24213, -68.89468,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2163, 945.35742, -962.50195, -68.93787,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(2167, 954.46777, -958.21973, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2191, 956.90540, -960.59448, -70.46454,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2197, 946.79395, -960.80957, -70.46454,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 954.79132, -963.14288, -70.46944,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1723, 950.11523, -963.12402, -70.46944,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2163, 945.38672, -959.89941, -68.93787,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(1491, 960.76630, -967.90564, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 950.66370, -963.73590, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 960.79602, -963.77850, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2605, 961.60132, -960.64990, -70.06610,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1714, 961.66522, -959.16852, -70.46454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2163, 957.53760, -962.71527, -68.66535,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(2163, 957.55695, -960.09027, -68.66535,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(2197, 959.01825, -961.04260, -70.46454,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 964.90240, -963.16022, -70.46454,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2167, 965.56152, -959.02606, -70.46454,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2161, 949.86719, -958.15332, -69.05852,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2605, 961.50415, -973.90411, -70.06610,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(1714, 961.48187, -975.42017, -70.46454,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1723, 962.88324, -968.50665, -70.46454,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(1723, 958.23035, -968.49249, -70.46454,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2161, 957.53180, -973.72162, -69.18152,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2163, 957.52551, -971.72266, -68.96359,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(2197, 965.28253, -974.64984, -70.46454,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2197, 964.60657, -974.65106, -70.46454,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2167, 959.23248, -976.14929, -70.46454,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1557, 949.81732, -980.24768, -74.97054,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, 952.86597, -980.24646, -74.97054,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1557, 957.52289, -963.42792, -74.94735,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2738, 951.45081, -958.62189, -74.36169,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2739, 949.81750, -961.52679, -74.96454,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2526, 951.77100, -965.77600, -74.96454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2527, 952.93451, -962.44238, -74.96454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 949.27472, -963.39728, -74.96059,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2637, 961.54443, -972.28973, -74.56761,   0.00000, 0.00000, 359.50000);
CreateDynamicObject(2637, 961.54065, -973.54004, -74.56761,   0.00000, 0.00000, 359.49463);
CreateDynamicObject(2637, 961.53857, -974.79089, -74.56761,   0.00000, 0.00000, 359.49463);
CreateDynamicObject(2637, 961.50555, -976.04272, -74.56761,   0.00000, 0.00000, 359.49463);
CreateDynamicObject(2636, 959.72650, -972.10492, -74.33656,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2636, 959.71973, -973.39685, -74.33656,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2636, 959.70422, -974.97388, -74.33656,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2636, 959.70288, -976.22369, -74.33656,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2636, 960.93738, -977.46619, -74.33656,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(2636, 962.06122, -977.43622, -74.33656,   0.00000, 0.00000, 269.98901);
CreateDynamicObject(2636, 962.28455, -970.95032, -74.33656,   0.00000, 0.00000, 89.98901);
CreateDynamicObject(2636, 960.98389, -970.93970, -74.33656,   0.00000, 0.00000, 89.98901);
CreateDynamicObject(2636, 963.28119, -976.10168, -74.33656,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(2636, 963.30450, -974.90295, -74.33656,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2636, 963.30280, -973.67627, -74.33656,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2636, 963.31427, -972.29865, -74.33656,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2700, 957.77094, -972.87897, -71.91550,   0.00000, 0.00000, 0.00000);

//*************************isla vip*************************
CreateDynamicObject(5191, 2971.94214, -668.02863, 4.01833,   0.00000, 0.00000, 268.24768);
CreateDynamicObject(5437, 3041.65723, -682.16113, 9.88397,   0.00000, 0.00000, 88.24768);
CreateDynamicObject(5494, 3058.38501, -722.64819, 9.97401,   0.24988, 0.00000, 178.24768);
CreateDynamicObject(5494, 3118.67627, -716.57562, 9.99901,   359.99988, 359.75000, 268.24219);
CreateDynamicObject(3484, 3047.19873, -755.85425, 17.54730,   2.25000, 359.75000, 178.25000);
CreateDynamicObject(3488, 3072.68872, -756.66895, 16.92534,   0.75000, 0.00000, 178.25000);
CreateDynamicObject(3603, 3149.51733, -706.67529, 15.82696,   0.00000, 0.00000, 268.49487);
CreateDynamicObject(12814, 3020.64502, -634.74701, 9.82460,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(3604, 3160.39111, -734.17908, 12.78701,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(3605, 3018.59814, -630.72101, 15.88802,   0.00000, 0.00000, 88.49487);
CreateDynamicObject(5520, 3147.85327, -666.75372, 15.17269,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(17864, 3152.55469, -722.71399, 9.98233,   358.49463, 359.74731, 268.24768);
CreateDynamicObject(12814, 2998.79932, -633.87866, 9.82460,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(3604, 2988.84546, -651.26849, 12.39091,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(5437, 3048.45483, -612.86646, 9.85897,   0.00000, 0.00000, 268.24768);
CreateDynamicObject(5494, 3055.53223, -557.11047, 9.91061,   0.24988, 359.75000, 88.24219);
CreateDynamicObject(5437, 3126.42749, -639.02252, 9.88397,   0.00000, 0.00000, 88.24768);
CreateDynamicObject(17864, 3153.38672, -683.18848, 9.88234,   358.99463, 359.49463, 268.24219);
CreateDynamicObject(17864, 3154.30298, -643.57098, 9.82499,   359.24744, 0.24719, 268.74756);
CreateDynamicObject(4186, 3084.13477, -678.63379, 16.74888,   359.74463, 0.25000, 87.99500);
CreateDynamicObject(9931, 3084.19141, -680.23383, 26.60528,   359.75000, 0.00000, 358.00000);
CreateDynamicObject(12814, 3009.14014, -694.94061, 9.82460,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(12814, 3007.92383, -724.87048, 10.02459,   0.00000, 359.25000, 267.99500);
CreateDynamicObject(13725, 3002.99561, -699.44476, 11.45226,   0.00000, 0.00000, 269.00000);
CreateDynamicObject(14447, 3023.00342, -701.34692, 14.77269,   0.00000, 0.00000, 89.25000);
CreateDynamicObject(3606, 3144.53906, -642.06689, 13.23175,   0.00000, 0.00000, 268.25000);
CreateDynamicObject(12814, 3022.11743, -584.84167, 9.82460,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(12814, 3000.60815, -584.07593, 9.82460,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(12814, 3012.76978, -544.97498, 9.89960,   0.00000, 0.25000, 267.99500);
CreateDynamicObject(17864, 3104.06323, -596.48065, 9.85734,   359.00000, 359.99731, 268.24768);
CreateDynamicObject(17864, 3072.30420, -595.54785, 9.85734,   358.99475, 359.99451, 268.24219);
CreateDynamicObject(17864, 3073.26440, -571.62817, 9.85734,   358.99475, 0.24451, 268.24219);
CreateDynamicObject(17864, 3104.95435, -573.07092, 9.85734,   359.24475, 0.24451, 268.24219);
CreateDynamicObject(5494, 3115.86816, -551.10889, 9.91061,   0.24731, 0.00000, 358.24219);
CreateDynamicObject(17864, 3155.30371, -603.70483, 9.95733,   359.24744, 359.99719, 268.74756);
CreateDynamicObject(17864, 3156.27197, -563.91522, 9.95733,   359.24194, 359.99451, 268.74756);
CreateDynamicObject(3599, 3148.87109, -616.39117, 12.43440,   0.00000, 0.00000, 268.75000);
CreateDynamicObject(17864, 3156.47803, -553.91040, 9.95733,   359.24194, 359.99451, 268.74756);
CreateDynamicObject(3619, 3054.14771, -524.10419, 13.61529,   0.00000, 0.00000, 357.75000);
CreateDynamicObject(5986, 3140.45483, -530.51984, 28.20686,   0.00000, 0.00000, 359.00000);
CreateDynamicObject(12814, 3148.30176, -520.26074, 11.32459,   0.00000, 5.24597, 268.24219);
CreateDynamicObject(12814, 3098.42554, -517.45367, 11.44959,   0.00000, 5.24597, 268.24219);
CreateDynamicObject(12814, 3048.64380, -516.85712, 11.37459,   0.00000, 5.24597, 268.24219);
CreateDynamicObject(12814, 3013.74194, -515.96545, 11.37459,   0.00000, 5.24597, 268.24219);
CreateDynamicObject(6285, 3105.35840, -752.43683, 15.61325,   0.00000, 0.00000, 179.25000);
CreateDynamicObject(6294, 3084.16064, -521.67426, 15.77760,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(6522, 3088.04541, -584.67194, 18.10800,   0.00000, 0.00000, 357.99487);
CreateDynamicObject(7885, 3012.69409, -566.51538, 9.83241,   0.00000, 0.00000, 358.50000);
CreateDynamicObject(7929, 3137.89038, -758.48364, 16.79774,   0.00000, 0.00000, 179.25000);
CreateDynamicObject(9515, 3015.81152, -729.23053, 13.24493,   0.00000, 0.00000, 87.50000);
CreateDynamicObject(11490, 3150.51636, -581.86176, 9.92202,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(11491, 3161.64185, -582.26263, 11.41316,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(9362, 3156.44092, -584.33582, 12.18086,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(14813, 3147.84106, -584.40393, 11.85483,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(7022, 3009.55664, -553.92120, 11.98477,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(7191, 2984.06104, -700.70770, 11.83209,   0.00000, 0.00000, 357.75000);
CreateDynamicObject(7191, 3007.60693, -609.47839, 11.80709,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(7191, 3013.15186, -609.67004, 11.80709,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(7191, 2984.25684, -627.68555, 11.80709,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(7191, 2983.44800, -717.01361, 11.83209,   0.00000, 0.00000, 177.74780);
CreateDynamicObject(7191, 3005.40137, -739.87311, 11.83209,   0.00000, 0.00000, 267.24780);
CreateDynamicObject(7191, 3005.44751, -717.78674, 11.83209,   0.00000, 0.00000, 87.49243);
CreateDynamicObject(7504, 3168.18701, -696.99951, 11.50940,   0.00000, 0.00000, 88.25000);
CreateDynamicObject(7504, 3170.81665, -604.54431, 11.50940,   0.00000, 0.00000, 88.49768);
CreateDynamicObject(7504, 3172.22437, -552.28436, 11.50940,   0.00000, 0.00000, 88.49487);
CreateDynamicObject(7504, 3127.48169, -504.98184, 12.65938,   0.00000, 0.00000, 178.24487);
CreateDynamicObject(7504, 3078.94727, -503.49475, 12.65938,   0.00000, 0.00000, 178.74219);
CreateDynamicObject(7665, 3080.14453, -580.64972, 11.02369,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(7664, 3086.85132, -585.94183, 11.03264,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(8646, 3082.75464, -759.31238, 11.14796,   0.00000, 0.00000, 358.25000);
CreateDynamicObject(8646, 3082.79321, -754.61798, 11.14796,   0.00000, 0.00000, 358.24768);
CreateDynamicObject(8649, 3153.28516, -682.96875, 10.74742,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(8649, 3154.19189, -653.28601, 10.74742,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(8649, 3154.77515, -630.93536, 10.74742,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(8649, 3155.59082, -601.56750, 10.74742,   0.00000, 0.00000, 269.49500);
CreateDynamicObject(8649, 3157.07910, -558.20050, 10.74742,   0.00000, 0.00000, 269.49463);
CreateDynamicObject(8649, 3107.92725, -518.65192, 12.27240,   5.75000, 1.75000, 357.49463);
CreateDynamicObject(8649, 3037.39526, -516.82751, 12.40589,   5.74585, 1.74683, 357.98950);
CreateDynamicObject(7191, 3010.38110, -740.12390, 11.83209,   0.00000, 0.00000, 87.24243);
CreateDynamicObject(616, 3104.96118, -658.00513, 10.84275,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(616, 3073.36230, -702.50586, 10.58071,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 3070.14429, -530.69733, 10.52959,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(618, 3142.16797, -561.95752, 9.90507,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(617, 3139.06006, -654.36981, 9.76159,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(617, 3137.04004, -726.67810, 9.91188,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8646, 3148.04175, -760.47174, 11.03021,   0.00000, 0.00000, 359.49768);
CreateDynamicObject(8646, 3148.07104, -757.61359, 11.03021,   0.00000, 0.00000, 359.49463);
CreateDynamicObject(621, 3075.14990, -657.18323, 10.58249,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(621, 3101.80469, -702.89746, 10.82890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(629, 3055.72876, -668.12183, 10.42278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(629, 3055.67725, -672.57837, 10.42278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(629, 3055.51709, -677.52661, 10.42278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(629, 3055.30176, -687.40308, 10.42278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(629, 3055.37500, -682.36237, 10.42278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 3061.72314, -556.13892, 9.90399,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 3061.56641, -610.40918, 9.83188,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3140.45532, -603.03870, 9.90856,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3031.46802, -718.70367, 9.93964,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3097.13257, -531.60114, 10.61986,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(715, 3091.19238, -660.41559, 18.91781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(715, 3089.34033, -697.99988, 18.86782,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 3033.71704, -639.99579, 21.03250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 3034.20117, -625.22656, 21.03250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 3036.81592, -601.98157, 9.93332,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 3038.57617, -551.32678, 10.18332,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3507, 3011.54980, -669.29254, 10.00490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3517, 3115.50781, -743.23096, 21.66102,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3517, 3084.30786, -741.71240, 21.44874,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3139.33594, -629.22656, 9.87222,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7952, 2978.26074, -668.31934, 10.47107,   0.00000, 0.00000, 268.24768);
CreateDynamicObject(3507, 2989.79492, -668.59888, 10.00490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3507, 2969.96875, -668.07288, 10.00490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3507, 2945.47461, -667.15466, 10.00490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1597, 3029.40698, -670.03375, 12.38412,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(1226, 3040.49170, -654.83691, 13.75183,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1226, 3041.37793, -614.52924, 13.56928,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(1226, 3045.65747, -536.95819, 13.98355,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(1226, 3042.79297, -571.07520, 13.67327,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(1226, 3114.73950, -622.30597, 13.58651,   0.00000, 0.00000, 87.99451);
CreateDynamicObject(1226, 3105.53418, -538.58411, 13.98355,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(1226, 3135.89063, -546.10968, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3135.01123, -576.97382, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3133.99487, -609.75714, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3132.70410, -651.75531, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3131.62964, -688.73370, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3130.45068, -722.74048, 13.98355,   0.00000, 0.00000, 357.98950);
CreateDynamicObject(1226, 3107.11841, -736.29462, 13.98355,   0.00000, 0.00000, 267.98950);
CreateDynamicObject(1226, 3082.97607, -735.45355, 13.98355,   0.00000, 0.00000, 267.98401);
CreateDynamicObject(1226, 3038.06860, -732.53857, 13.98355,   0.00000, 0.00000, 179.98401);
CreateDynamicObject(1226, 3039.29468, -690.71057, 13.98355,   0.00000, 0.00000, 179.98352);
CreateDynamicObject(1231, 3118.43433, -637.11200, 12.68729,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3055.77148, -634.82813, 12.13420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3117.00928, -694.75696, 12.69252,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3086.65698, -721.21832, 12.81153,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3052.82324, -720.10156, 12.13454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3088.24585, -636.30615, 12.81153,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3051.48755, -665.63501, 13.11233,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3050.71167, -689.84259, 13.11296,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3115.77832, -721.78223, 12.69001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 3118.47144, -666.78271, 12.69252,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1226, 3074.97559, -537.85840, 13.98355,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(1226, 3060.74219, -620.87207, 13.58651,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(1290, 3021.84180, -669.69788, 15.75016,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1290, 3000.95435, -668.98187, 15.75016,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(1290, 2934.52319, -666.67737, 15.75016,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(1290, 2979.77734, -668.17578, 15.75016,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(1290, 2957.65234, -667.49414, 15.75016,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(7952, 2983.61865, -668.54028, 10.47107,   0.00000, 0.00000, 268.24768);
CreateDynamicObject(7952, 2973.66553, -668.21930, 10.47107,   0.00000, 0.00000, 268.24768);
CreateDynamicObject(10828, 2989.54248, -518.35419, 6.82507,   0.00000, 0.00000, 267.75000);
CreateDynamicObject(10828, 2988.30859, -553.65875, 6.32507,   0.00000, 0.00000, 267.74780);
CreateDynamicObject(10828, 2986.90405, -588.00201, 6.32507,   0.00000, 0.00000, 267.74780);
CreateDynamicObject(10828, 2985.53760, -622.30103, 6.32507,   0.00000, 0.00000, 267.74780);
CreateDynamicObject(10828, 2984.13281, -657.19135, 6.17507,   0.00000, 0.00000, 267.74780);
CreateDynamicObject(10828, 2985.58105, -691.44141, 6.17507,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(10828, 2985.58130, -691.44165, 6.17507,   0.00000, 0.00000, 267.99780);
CreateDynamicObject(10828, 2984.40723, -721.33569, 6.17507,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(10828, 3049.44116, -772.23438, 7.45002,   0.00000, 1.25000, 358.49500);
CreateDynamicObject(10828, 3017.76978, -739.33148, 6.17507,   0.00000, 0.00000, 357.48962);
CreateDynamicObject(10828, 3033.27783, -756.00507, 7.47500,   359.75000, 357.75000, 268.49500);
CreateDynamicObject(10828, 3000.23340, -738.57227, 6.17507,   0.00000, 0.00000, 357.48962);
CreateDynamicObject(10828, 3100.28052, -759.03949, 6.75000,   0.00000, 359.99695, 359.74487);
CreateDynamicObject(10828, 3065.02051, -772.96191, 7.07502,   0.00000, 1.24695, 358.49487);
CreateDynamicObject(10828, 3113.03906, -759.19330, 6.70000,   0.00000, 359.99451, 359.74182);
CreateDynamicObject(10828, 3082.05566, -757.17480, 6.50000,   359.74731, 357.74780, 268.49487);
CreateDynamicObject(10828, 3145.57056, -774.17627, 6.67500,   0.00000, 359.99695, 359.99487);
CreateDynamicObject(10828, 3128.84766, -757.76660, 6.56547,   359.74731, 358.74756, 269.24194);
CreateDynamicObject(10828, 3166.50366, -723.40717, 6.13998,   359.74731, 0.24719, 268.23975);
CreateDynamicObject(10828, 3167.56592, -688.15973, 6.21498,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3168.51001, -653.39789, 6.23998,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3169.53613, -618.82336, 6.31498,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3170.59473, -584.22949, 6.43998,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3171.66943, -549.26312, 6.46498,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3172.84839, -523.01953, 6.46498,   359.74731, 0.24719, 268.23669);
CreateDynamicObject(10828, 3156.83838, -505.80722, 8.96497,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3122.22046, -504.76328, 9.03997,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3087.52954, -504.03610, 9.03997,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3053.08936, -503.15921, 9.03997,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3024.12524, -502.48209, 9.03997,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3006.94971, -502.17987, 9.01497,   359.74731, 0.24719, 358.23669);
CreateDynamicObject(10828, 3146.90234, -757.74316, 6.66498,   359.74731, 0.24719, 268.98975);
CreateDynamicObject(10828, 3149.34448, -739.85156, 6.55000,   0.00000, 359.99451, 357.49451);
CreateDynamicObject(6300, 3125.03613, -742.91711, -6.02501,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(13749, 3153.68848, -752.58752, 3.46839,   0.00000, 0.00000, 52.00000);
CreateDynamicObject(3578, 3161.84375, -742.62793, 10.74304,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(3578, 3156.35083, -742.43280, 10.74304,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(669, 2992.25220, -639.65240, 9.83241,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 2997.02124, -730.74536, 10.11454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(671, 3060.85498, -596.56128, 9.83240,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3118.02612, -615.43323, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3119.69995, -554.62555, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3119.35254, -562.43097, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3117.89722, -608.11725, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3119.54297, -569.49976, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 3118.09277, -600.47107, 9.83479,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 2989.61841, -600.00232, 9.83241,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(691, 2998.34595, -508.55936, 11.76803,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(691, 3057.06226, -507.81046, 7.51803,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(705, 3028.64551, -517.64746, 7.27006,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 3165.41089, -639.69739, 9.89146,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 3163.23145, -666.96875, 9.71015,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 3165.59326, -566.13824, 9.89146,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 3028.71582, -688.30371, 9.83241,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3749, 2911.55688, -666.34692, 15.02644,   0.00000, 0.00000, 87.54905);
CreateDynamicObject(986, 2918.05786, -656.84412, 12.54633,   0.00000, 0.00000, 357.79486);
CreateDynamicObject(986, 2926.12085, -657.17480, 12.54633,   0.00000, 0.00000, 357.79486);
CreateDynamicObject(986, 2935.77002, -657.12280, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2943.81665, -657.40485, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2951.86426, -657.69824, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2959.89185, -658.01257, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2967.91455, -658.29266, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2975.93652, -658.57245, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2983.94165, -658.87305, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2991.93970, -659.15826, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 2999.95386, -659.48279, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 3007.97607, -659.79047, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 3016.01294, -660.10150, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(986, 3024.04150, -660.41943, 13.71571,   0.00000, 0.00000, 357.88501);
CreateDynamicObject(985, 2917.15771, -676.33752, 13.03475,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2925.05151, -676.53009, 13.03475,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2934.95361, -676.45612, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2942.82324, -676.72528, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2950.71118, -676.95325, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2958.59155, -677.16443, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2966.44971, -677.40430, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2974.32813, -677.60669, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2982.22461, -677.82416, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2990.08154, -678.06506, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 2997.92065, -678.32867, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 3005.79541, -678.55359, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 3013.68579, -678.76740, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 3021.58545, -678.95032, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(985, 3029.41772, -679.18182, 13.64995,   0.00000, 0.00000, 358.25558);
CreateDynamicObject(986, 3024.92407, -660.46075, 13.71571,   0.00000, 0.00000, 357.88501);

//*************************mapeo ammu*************************
CreateDynamicObject(19376, 1367.55005, -1286.89001, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19376, 1367.50000, -1296.31006, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19376, 1367.48999, -1305.88000, 15.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19376, 1367.55005, -1272.69995, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19376, 1367.53003, -1263.14001, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19376, 1367.51001, -1255.72998, 15.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2754, 1367.40002, -1283.15002, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 1367.42004, -1284.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 1367.41003, -1283.06995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8843, 1369.30005, -1279.91003, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8843, 1360.63000, -1282.62000, 12.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 1366.88000, -1285.81006, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(646, 1366.80005, -1283.97998, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 1367.23999, -1290.06995, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1348.91003, -1287.14001, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1348.80005, -1280.62000, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1348.76001, -1274.17004, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1351.07996, -1287.25000, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1351.06995, -1280.78003, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1351.06995, -1274.32996, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1349.66003, -1280.63000, 14.84000,   0.00000, 0.00000, 90.48000);
CreateDynamicObject(646, 1366.92004, -1292.84998, 13.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 1367.40002, -1296.62000, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2754, 1366.97998, -1296.67004, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(997, 1367.40002, -1297.58997, 13.08000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1256, 1367.03003, -1294.57996, 13.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1369.39001, -1279.02002, 14.02000,   0.00000, -24.00000, 271.25000);
CreateDynamicObject(355, 1369.41003, -1280.75000, 14.18000,   0.00000, -15.00000, 88.87000);
CreateDynamicObject(922, 1366.84998, -1266.79004, 13.57000,   0.00000, 0.00000, 91.82000);
CreateDynamicObject(926, 1367.01001, -1264.10999, 12.68000,   0.00000, 0.00000, 2.45000);
CreateDynamicObject(910, 1366.96997, -1262.82996, 13.75000,   0.00000, 0.00000, 269.92001);
CreateDynamicObject(1509, 1366.62000, -1264.66003, 13.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1524, 1367.43994, -1260.80005, 15.16000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1366.18005, -1259.63000, 13.19000,   0.00000, 0.00000, 90.09000);
CreateDynamicObject(983, 1366.20996, -1256.09998, 13.19000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1366.18994, -1251.09998, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1366.21997, -1299.93994, 13.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1366.22998, -1304.10999, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1366.15002, -1305.81995, 13.09000,   0.00000, 0.00000, 89.87000);
CreateDynamicObject(983, 1366.21997, -1309.98999, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(640, 1366.69995, -1304.97998, 13.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1366.22998, -1254.48999, 13.07000,   0.00000, 0.00000, 89.71000);
CreateDynamicObject(640, 1366.93005, -1255.14001, 13.12000,   0.00000, 0.00000, 90.95000);

//*************************ayunta, 24/7************************
CreateDynamicObject(1483, 1359.90002, -1751.19995, 14.30000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(970, 1361.00000, -1749.30005, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1358.90002, -1747.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1361.00000, -1754.00000, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1358.90002, -1756.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1356.80005, -1756.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1347.69995, -1756.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1343.59998, -1756.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1341.50000, -1754.09998, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1341.50000, -1750.00000, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1341.50000, -1745.90002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1341.50000, -1743.80005, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1354.80005, -1756.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1483, 1342.59998, -1752.30005, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1483, 1342.59998, -1747.40002, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1362.50000, -1746.00000, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1362.50000, -1751.00000, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1362.40002, -1756.59998, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1339.40002, -1756.80005, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1339.40002, -1751.19995, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1339.40002, -1746.19995, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, 1353.40002, -1759.19995, 13.50000,   0.00000, 0.00000, 140.00000);
CreateDynamicObject(630, 1351.19995, -1759.19995, 13.50000,   0.00000, 0.00000, 143.99997);
CreateDynamicObject(640, 1356.40002, -1759.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 1361.40002, -1759.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 1348.30005, -1759.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 1345.00000, -1759.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(17969, 1363.90002, -1745.40002, 14.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1490, 1336.59998, -1743.30005, 14.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1215, 1361.09998, -1751.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1356.69995, -1747.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1341.40002, -1741.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1352.59998, -1756.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1349.90002, -1756.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1357.50000, -1746.90002, 12.50000,   0.00000, 0.00000, 248.00000);
CreateDynamicObject(1257, 1366.59998, -1741.40002, 13.80000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(910, 1341.69995, -1760.59998, 13.80000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1441, 1341.90002, -1762.90002, 13.20000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(3119, 1342.69995, -1764.30005, 13.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1442, 1341.90002, -1764.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3525, 1342.50000, -1764.59998, 13.00000,   0.00000, 311.00000, 0.00000);
CreateDynamicObject(17070, 1343.30005, -1753.50000, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(17070, 1359.90002, -1755.30005, 12.50000,   0.00000, 0.00000, 4.00000);

//*************************aeropuerto ls*************************
CreateDynamicObject(800, 1583.96777, -2365.16016, 14.78406,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1575.32776, -2325.32422, 15.53943,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1575.32715, -2325.32422, 11.56444,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1586.57715, -2325.32422, 15.53943,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1586.57715, -2325.32422, 11.53945,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1609.07886, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1620.37207, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1609.07813, -2325.32422, 11.53944,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1620.37207, -2325.32422, 11.58943,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1631.68481, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1631.68457, -2325.32422, 11.53944,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1569.69568, -2327.31055, 11.81442,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1569.69568, -2331.27344, 11.81442,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1569.69568, -2335.24805, 11.81442,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1575.35339, -2335.27979, 17.46444,   180.00000, 270.00000, 270.00000);
CreateDynamicObject(3851, 1586.60803, -2335.27979, 17.46444,   179.99451, 269.99451, 269.99451);
CreateDynamicObject(3851, 1575.36365, -2331.32813, 17.46444,   179.99451, 269.99451, 269.99451);
CreateDynamicObject(3851, 1586.65454, -2331.30371, 17.46444,   179.99451, 269.99451, 269.99451);
CreateDynamicObject(3851, 1575.32336, -2337.22998, 15.46443,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1586.57068, -2337.22998, 15.48943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1575.32324, -2337.22949, 11.46443,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1586.57031, -2337.22949, 11.51443,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1642.98438, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1654.28821, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1665.56702, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1676.86243, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1688.14160, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1699.33264, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1642.98438, -2325.32422, 11.56444,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1654.28809, -2325.32422, 11.53942,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1665.56677, -2325.32422, 11.56444,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1676.86230, -2325.32422, 11.53944,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1688.14160, -2325.32422, 11.56444,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1699.33203, -2325.32422, 11.53942,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1710.62402, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1721.90063, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1733.08020, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1744.35632, -2325.32178, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1755.63049, -2325.32324, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1766.86890, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1778.16992, -2325.32300, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1789.45813, -2325.32422, 15.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1795.11096, -2330.97021, 15.53943,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3851, 1795.08716, -2330.96045, 11.56443,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3851, 1710.62402, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1721.90039, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1733.08008, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1744.35547, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1755.62988, -2325.32422, 11.56443,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1766.86816, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1778.13843, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1789.45801, -2325.32422, 11.53943,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3851, 1601.46094, -2325.32422, 14.31443,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(3851, 1594.16699, -2325.32422, 14.28940,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(1536, 1596.23755, -2325.34448, 12.54688,   0.00000, 0.00000, 107.64005);
CreateDynamicObject(1536, 1599.47925, -2325.34546, 12.54688,   0.00000, 0.00000, 76.65265);
CreateDynamicObject(800, 1574.39661, -2357.83252, 14.78406,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(800, 1584.43738, -2353.72754, 14.78406,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(800, 1578.28894, -2344.50781, 14.78406,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8651, 1780.91541, -2325.42627, 9.91702,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(8651, 1751.16711, -2325.42749, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1721.52588, -2325.43921, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1692.05859, -2325.48193, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1662.34314, -2325.49707, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1632.69092, -2325.50122, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1602.96582, -2325.47046, 9.86703,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1573.38501, -2325.52148, 9.91702,   0.00000, 269.99451, 270.00000);
CreateDynamicObject(8651, 1794.89636, -2339.42480, 9.91702,   0.00000, 269.99451, 180.00000);
CreateDynamicObject(8651, 1569.60083, -2340.09619, 8.09202,   0.00000, 0.00000, 179.72998);
CreateDynamicObject(8651, 1569.65234, -2340.09668, 9.99199,   0.00000, 0.00000, 179.72534);
CreateDynamicObject(8651, 1569.60278, -2340.08984, 9.09199,   0.00000, 0.00000, 179.72534);
CreateDynamicObject(8651, 1569.59998, -2340.10010, 7.00000,   0.00000, 0.00000, 179.72534);
CreateDynamicObject(2774, 1600.19922, -2326.09961, 6.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 1595.50000, -2326.10010, 6.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1957.80005, -2212.00000, 14.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1950.69995, -2212.00000, 14.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1943.59998, -2212.00000, 14.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1943.59998, -2212.00000, 19.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1950.69995, -2212.00000, 19.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1957.80005, -2212.00000, 19.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1961.09998, -2210.50000, 14.70000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(16501, 1964.59998, -2207.00000, 14.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1968.09998, -2210.50000, 14.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1968.09998, -2217.39990, 14.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1968.09998, -2223.39990, 14.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1964.59998, -2226.89990, 14.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1957.59998, -2226.89990, 14.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1950.59998, -2226.89990, 14.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1943.69995, -2226.89990, 14.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1961.09998, -2210.50000, 19.00000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(16501, 1964.59998, -2207.00000, 19.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1968.09998, -2210.50000, 19.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1968.09998, -2217.39990, 19.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1968.09998, -2223.39990, 19.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1964.59998, -2226.89990, 19.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1957.59998, -2226.89990, 19.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1950.59998, -2226.89990, 19.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1943.69995, -2226.89990, 19.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16501, 1964.59998, -2209.10010, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1964.59998, -2213.39990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1964.59998, -2217.69995, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1964.59998, -2221.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1964.59998, -2224.80005, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1957.50000, -2224.80005, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1957.50000, -2221.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1957.50000, -2217.69995, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1957.50000, -2213.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1950.50000, -2213.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1950.50000, -2217.60010, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1950.50000, -2221.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1950.50000, -2224.80005, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1943.50000, -2213.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1943.69995, -2224.80005, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1943.59998, -2221.89990, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(16501, 1944.00000, -2217.60010, 21.30000,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(3920, 1954.69995, -2212.00000, 20.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3920, 1942.59998, -2212.00000, 20.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1951.19995, -2211.00000, 15.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1952.00000, -2211.89990, 17.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3660, 1969.40002, -2216.69995, 15.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1968.19995, -2216.89990, 17.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1682, 1954.40002, -2217.60010, 27.80000,   0.00000, 0.00000, 320.00000);
CreateDynamicObject(1569, 1963.09998, -2206.89990, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 1966.09998, -2206.89990, 12.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(16501, 1964.59998, -2207.19995, 16.80000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1569, 1966.09998, -2206.89990, 16.90000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1569, 1963.09998, -2206.89990, 16.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1966.09998, -2205.10010, 17.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1963.19995, -2205.10010, 17.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1961.09998, -2207.19995, 17.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1968.09998, -2207.19995, 17.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3629, 2030.19995, -2200.69995, 19.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(4882, 1983.59998, -2227.39990, 17.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3660, 1976.19995, -2216.69995, 15.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, 1977.90002, -2225.89990, 15.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1995.80005, -2225.89990, 15.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1999.80005, -2227.10010, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1999.80005, -2227.10010, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1989.50000, -2227.10010, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1979.19995, -2227.10010, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1989.50000, -2227.10010, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1979.19995, -2227.10010, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1968.90002, -2226.89990, 13.60000,   0.00000, 0.00000, 357.75000);
CreateDynamicObject(8674, 1968.90002, -2226.89990, 16.50000,   0.00000, 0.00000, 357.74780);
CreateDynamicObject(9241, 1959.50000, -2263.10010, 14.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9241, 1959.50000, -2302.00000, 14.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1681, 1921.90002, -2247.69995, 14.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1681, 1988.50000, -2385.60010, 14.80000,   0.00000, 0.00000, 109.99448);
CreateDynamicObject(8674, 2005.59998, -2227.00000, 13.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 2005.59998, -2227.00000, 16.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8038, 2011.59998, -2544.60010, 32.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8249, 1874.90002, -2375.39990, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8249, 1854.50000, -2409.69995, 16.50000,   0.00000, 0.00000, 300.00000);
CreateDynamicObject(8249, 1818.59998, -2417.89990, 16.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(10810, 1826.90002, -2521.19995, 17.40000,   0.00000, 0.00000, 20.50000);
CreateDynamicObject(16098, 1765.40002, -2543.30005, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10838, 1961.69995, -2179.39990, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10838, 1961.69922, -2179.39941, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10757, 1962.19995, -2178.39990, 31.80000,   0.00000, 0.00000, 180.00000);

//*************************atms*************************
CreateDynamicObject(2942, 1467.93250, -1769.47314, 18.34897,   0.00000, 0.00000, 90.30000);//Ayuntamiento LS
CreateDynamicObject(2942, 1494.46448, -1768.74097, 18.33230,   0.00000, 0.00000, -90.48000);//Ayuntamiento LS
CreateDynamicObject(2942, 1833.24268, -1846.19141, 13.17900,   0.00000, 0.00000, -91.56001);//24/7 Unity
CreateDynamicObject(2942, 1837.34595, -1672.31592, 12.94730,   0.00000, 0.00000, -90.18002);//Albrahama LS
CreateDynamicObject(2942, 2010.88110, -1451.23486, 13.17634,   0.00000, 0.00000, 0.00000);//Hospital LS
CreateDynamicObject(2942, 2118.22583, -1119.08044, 24.91362,   0.00000, 0.00000, 163.79999);//COncesionario de Motos LS
CreateDynamicObject(2942, 607.25879, -1233.42444, 17.88725,   0.00000, 0.00000, -162.35991);//BAnco Exterior LS
CreateDynamicObject(2942, 562.59302, -1253.75623, 16.82513,   0.00000, 0.00000, -76.25999);//Concesionario Grotti LS
CreateDynamicObject(2942, 158.84294, -1949.27344, 3.35796,   0.00000, 0.00000, 119.93999);//Faro LS
CreateDynamicObject(2942, 1254.49707, -1695.39844, 13.12211,   0.00000, 0.00000, 0.00000);//Inicio de SPawn LS
CreateDynamicObject(2942, 2449.93066, -1998.21167, 13.06436,   0.00000, 0.00000, 0.00000);//Mercado Negro LS
CreateDynamicObject(2942, 2379.11353, 1112.15613, 33.88081,   0.00000, 0.00000, -180.35992);//Vip Interior Los SAntos
CreateDynamicObject(2942, 24.7601,-2654.2646,40.5045,   0.00000, 0.00000, -87.66000);//24/7 Camino Hacia San Francisco
CreateDynamicObject(2942, 1541.30005, -1601.90002, 13.20000,   0.00000, 0.00000, 179.74756);//LSPD
CreateDynamicObject(2942, 1356.69995, -1759.19995, 13.10025,   0.00000, 0.00000, 179.74731);//24/7 Ayuntamiento
CreateDynamicObject(2942, 1318.59998, -897.79999, 39.20000,   0.00000, 0.00000, 359.74731);//24/7 Vinewood
CreateDynamicObject(2942, 536.59998, -1740.69995, 11.90000,   0.00000, 0.00000, 172.74731); //Casi En La Playa LS
CreateDynamicObject(2942, 1415.00000, -1020.79999, 23.50000,   0.00000, 0.00000, 0.73889);//Por Vinewood LS
CreateDynamicObject(2942, 1186.19995, -1372.50000, 13.20000,   0.00000, 0.00000, 92.23608);//Antiguo Hospital LS
CreateDynamicObject(2942, 2228.38989, -1707.78003, 13.25000,   0.00000, 0.00000, 270.00000);//GYM LS
CreateDynamicObject(2942, 665.59003, -577.96997, 15.96000,   0.00000, 0.00000, 0.00000);//Dilmori LS
CreateDynamicObject(2942, 1482.27185, -1571.08643, -9.80410,   0.00000, 0.00000, 90.00000); //Atm 1 banco
CreateDynamicObject(2942, 1499.44409, -1573.88135, -9.80410,   0.00000, 0.00000, -90.00000); //Atm 2 banco

//*************************Estacionamiento de la playa*************************
CreateDynamicObject(3660, 349.98999, -1786.65002, 6.56000,   0.00000, 0.00000, 0.57000);
CreateDynamicObject(3660, 318.42001, -1786.68994, 6.06000,   0.00000, 0.00000, 0.06000);
CreateDynamicObject(4641, 329.32001, -1787.81006, 5.52000,   0.00000, 0.00000, 89.71000);
CreateDynamicObject(8406, 337.26999, -1785.62000, 9.35000,   0.00000, 0.00000, 179.95000);
CreateDynamicObject(982, 333.82001, -1799.31006, 4.25000,   0.00000, 0.00000, 269.50000);
CreateDynamicObject(1250, 331.01999, -1786.89001, 4.83000,   0.00000, 0.00000, 89.87000);
CreateDynamicObject(968, 330.98999, -1786.76001, 5.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 348.45001, -1827.10999, 3.77000,   0.00000, 0.00000, 342.41000);
CreateDynamicObject(1281, 331.85999, -1825.93994, 3.78000,   0.00000, 0.00000, 26.42000);
CreateDynamicObject(1281, 340.20001, -1825.68005, 3.78000,   0.00000, 0.00000, 5.80000);
CreateDynamicObject(1280, 358.04999, -1816.83997, 3.71000,   0.00000, 0.00000, 270.14001);
CreateDynamicObject(1280, 351.84000, -1816.80005, 3.70000,   0.00000, 0.00000, 269.78000);
CreateDynamicObject(1280, 345.23001, -1816.84998, 3.66000,   0.00000, 0.00000, 270.44000);
CreateDynamicObject(1280, 338.64999, -1816.83997, 3.64000,   0.00000, 0.00000, 271.16000);
CreateDynamicObject(1280, 329.76001, -1816.79004, 3.69000,   0.00000, 0.00000, 270.04999);
CreateDynamicObject(1280, 323.81000, -1816.84998, 3.64000,   0.00000, 0.00000, 270.13000);
CreateDynamicObject(1280, 317.25000, -1816.77002, 3.65000,   0.00000, 0.00000, 270.29999);
CreateDynamicObject(1280, 310.79999, -1816.88000, 3.61000,   0.00000, 0.00000, 270.76001);
CreateDynamicObject(1257, 357.48999, -1778.67004, 5.57000,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(1255, 348.23001, -1836.42004, 3.04000,   0.00000, 0.00000, 248.48000);
CreateDynamicObject(1255, 339.20999, -1836.54004, 3.02000,   0.00000, 0.00000, 263.75000);
CreateDynamicObject(1236, 338.01999, -1761.91003, 4.86000,   0.00000, 0.00000, 266.92001);
CreateDynamicObject(1235, 351.64001, -1778.02002, 4.85000,   0.00000, 0.00000, 328.31000);
CreateDynamicObject(1232, 354.98999, -1816.97998, 5.78000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 348.53000, -1816.98999, 5.63000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 341.82001, -1816.96997, 5.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 326.70001, -1816.97998, 5.76000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 320.44000, -1816.97998, 5.72000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 313.89001, -1816.97998, 5.74000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 350.29001, -1785.65002, 4.97000,   0.00000, 0.00000, 180.73000);
CreateDynamicObject(950, 346.57001, -1799.90002, 4.24000,   0.00000, 0.00000, 268.92001);
CreateDynamicObject(950, 320.94000, -1799.67004, 4.14000,   0.00000, 0.00000, 268.91000);
CreateDynamicObject(982, 333.78000, -1800.31995, 4.37000,   0.00000, 0.00000, 269.62000);
CreateDynamicObject(640, 343.67999, -1799.90002, 4.35000,   0.00000, 0.00000, 269.06000);
CreateDynamicObject(640, 338.31000, -1799.81995, 4.35000,   0.00000, 0.00000, 269.17001);
CreateDynamicObject(640, 332.92999, -1799.77002, 4.35000,   0.00000, 0.00000, 269.54999);
CreateDynamicObject(640, 327.54999, -1799.77002, 4.35000,   0.00000, 0.00000, 269.84000);
CreateDynamicObject(640, 323.85001, -1799.75000, 4.36000,   0.00000, 0.00000, 269.75000);
CreateDynamicObject(982, 308.67001, -1799.96997, 3.98000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 354.63000, -1812.78003, 3.89000,   0.00000, 0.00000, 269.95999);
CreateDynamicObject(984, 341.84000, -1812.81006, 3.88000,   0.00000, 0.00000, 270.34000);
CreateDynamicObject(984, 315.10001, -1812.79004, 3.88000,   0.00000, 0.00000, 269.89999);
CreateDynamicObject(984, 327.89999, -1812.82996, 3.88000,   0.00000, 0.00000, 269.63000);
CreateDynamicObject(1255, 330.26999, -1834.65002, 3.04000,   0.00000, 0.00000, 254.66000);
CreateDynamicObject(984, 359.95999, -1794.19995, 4.46000,   0.00000, 0.00000, 0.79000);
CreateDynamicObject(983, 363.14999, -1801.39001, 4.50000,   0.00000, 0.00000, 75.83000);

//*************************Bar las 4p´s*************************
CreateDynamicObject(2232, 745.99, 1436.97, 1102.26,   0.00, 0.00, 148.75);
CreateDynamicObject(2592, 752.63, 1442.17, 1102.73,   0.00, 0.00, 269.61);
CreateDynamicObject(2592, 754.45, 1440.18, 1102.73,   0.00, 0.00, 359.14);
CreateDynamicObject(2592, 758.12, 1440.13, 1102.73,   0.00, 0.00, 359.14);
CreateDynamicObject(2592, 752.82, 1442.13, 1102.73,   0.00, 0.00, 89.01);
CreateDynamicObject(2592, 754.54, 1440.36, 1102.73,   0.00, 0.00, 178.91);
CreateDynamicObject(2592, 758.15, 1440.45, 1102.73,   0.00, 0.00, 180.10);
CreateDynamicObject(2425, 758.24, 1444.22, 1102.65,   0.00, 0.00, 0.00);
CreateDynamicObject(2425, 755.56, 1444.16, 1102.65,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 759.38, 1439.20, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 758.16, 1439.21, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 756.85, 1439.22, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 755.64, 1439.25, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 754.23, 1439.29, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 752.82, 1439.28, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 751.97, 1439.69, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 751.69, 1440.68, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 751.65, 1441.83, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1805, 751.64, 1443.08, 1102.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 761.45, 1436.95, 1101.70,   0.00, 0.00, 310.64);
CreateDynamicObject(1825, 758.35, 1436.82, 1101.70,   0.00, 0.00, 321.52);
CreateDynamicObject(1825, 755.27, 1436.87, 1101.70,   0.00, 0.00, 321.52);
CreateDynamicObject(1825, 752.63, 1436.89, 1101.70,   0.00, 0.00, 321.52);
CreateDynamicObject(1723, 748.52, 1443.59, 1101.70,   0.00, 0.00, 359.80);
CreateDynamicObject(1723, 745.65, 1443.58, 1101.70,   0.00, 0.00, 359.80);
CreateDynamicObject(1723, 748.52, 1443.59, 1101.70,   0.00, 0.00, 359.80);
CreateDynamicObject(1723, 747.45, 1440.43, 1101.70,   0.00, 0.00, 359.80);
CreateDynamicObject(11489, 748.43, 1438.01, 1091.04,   0.00, 0.00, 0.00);
CreateDynamicObject(18102, 744.21, 1438.85, 1106.89,   0.00, 0.00, 177.06);
CreateDynamicObject(1491, 742.35, 1442.81, 1101.70,   0.00, 0.00, 271.27);
CreateDynamicObject(11489, 732.44, 1436.90, 1090.41,   0.00, 0.00, 0.00);
CreateDynamicObject(11489, 740.02, 1436.74, 1090.41,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 730.82, 1436.07, 1101.98,   0.00, 0.00, 89.67);
CreateDynamicObject(1723, 741.68, 1437.84, 1101.70,   0.00, 0.00, 269.20);
CreateDynamicObject(1491, 739.53, 1439.96, 1101.70,   0.00, 0.00, 359.26);
CreateDynamicObject(1491, 731.49, 1439.98, 1101.70,   0.00, 0.00, 359.26);
CreateDynamicObject(1491, 730.22, 1442.81, 1101.70,   0.00, 0.00, 269.27);
CreateDynamicObject(10444, 723.10, 1422.97, 1101.94,   0.00, 0.00, 0.00);
CreateDynamicObject(18102, 727.49, 1440.70, 1106.30,   0.00, 0.00, 0.00);
CreateDynamicObject(18102, 719.72, 1436.59, 1106.30,   0.00, 0.00, 178.67);
CreateDynamicObject(1723, 727.71, 1443.49, 1101.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 724.69, 1443.47, 1101.60,   0.00, 0.00, 0.00);
CreateDynamicObject(11489, 726.90, 1440.76, 1092.69,   0.00, 0.00, 0.00);
CreateDynamicObject(14829, 753.83, 1450.83, 1103.51,   0.00, 0.00, 0.00);
CreateDynamicObject(14829, 738.92, 1441.78, 1103.16,   0.00, 0.00, 269.69);
CreateDynamicObject(14820, 744.23, 1440.10, 1102.92,   0.00, 0.00, 270.01);
CreateDynamicObject(23, 759.39, 1443.21, 1102.74,   90.00, 0.00, 0.00);

//*************************Taxistas*************************
CreateDynamicObject(8841, 2280.99414, -1996.73511, 15.93880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1257, 2242.20532, -1978.44067, 13.87797,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1251, 2242.28052, -1977.29822, 12.31950,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1229, 2238.29688, -1977.39807, 14.06930,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(621, 2248.77832, -2027.42114, 12.53421,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(621, 2226.49365, -1993.21985, 12.53421,   0.00000, 0.00000, 1.62000);
CreateDynamicObject(18241, 2248.27246, -1996.27258, 12.50170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19308, 2246.45581, -1990.49329, 15.64520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2240.36792, -1987.36377, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2236.12549, -1987.35181, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2232.05884, -1987.39880, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2227.93408, -1987.56531, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 2237.65161, -1991.39624, 13.39697,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 2233.00073, -1991.37451, 13.39697,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2240.36304, -1994.58667, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2236.14551, -1994.43860, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2232.08105, -1994.82288, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2228.06152, -1995.06506, 12.53921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1233, 2241.35083, -1985.88281, 13.95660,   0.00000, 0.00000, 180.25230);
CreateDynamicObject(737, 2253.28809, -1983.78406, 12.64660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1532, 2248.20728, -2001.79517, 12.44006,   0.00000, 0.00000, 0.00000);
//*************************Peaje LS-SF*************************
CreateDynamicObject(7033, 65.63000, -1533.56006, 8.27000,   0.00000, 0.00000, 81.96000);
CreateDynamicObject(7033, 40.16000, -1530.50000, 8.27000,   0.00000, 0.00000, 81.96000);
CreateDynamicObject(10829, 38.40000, -1529.05005, 4.36000,   0.00000, 0.00000, -97.02000);
CreateDynamicObject(10829, 67.40000, -1534.84998, 4.36000,   0.00000, 0.00000, 83.00000);
CreateDynamicObject(1237, 82.34000, -1535.66003, 4.26000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(966, 37.73000, -1525.54004, 4.19000,   0.00000, 0.00000, -95.58000);
CreateDynamicObject(966, 66.33000, -1537.72998, 3.97000,   0.00000, 0.00000, -275.22000);
CreateDynamicObject(978, 77.57000, -1534.16003, 5.14000,   0.00000, 0.00000, -13.20000);
CreateDynamicObject(978, 77.30000, -1536.00000, 5.14000,   0.00000, 0.00000, 180.36000);
CreateDynamicObject(1238, 82.37000, -1535.66003, 5.75000,   0.00000, 0.00000, 5.40000);
CreateDynamicObject(978, 28.28000, -1529.68994, 4.78000,   1.56000, 3.72000, 163.67999);
CreateDynamicObject(978, 28.62000, -1527.70996, 4.78000,   1.56000, -3.72000, 356.82001);
CreateDynamicObject(1237, 23.52000, -1527.85999, 3.64000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1238, 23.52000, -1527.85999, 5.17000,   0.00000, 0.00000, -4.68000);
CreateDynamicObject(978, 53.07000, -1530.59998, 5.13000,   0.00000, 0.00000, -5.10000);
CreateDynamicObject(978, 52.74000, -1533.43005, 5.13000,   0.00000, 0.00000, -185.10001);
CreateDynamicObject(3749, 629.33002, -1189.09998, 22.45000,   0.00000, 0.00000, 24.18000);
CreateDynamicObject(3749, 608.53998, -1197.03003, 22.45000,   0.00000, 0.00000, 22.38000);
CreateDynamicObject(980, 629.41998, -1189.21997, 20.30000,   0.00000, 0.00000, 203.94000);
CreateDynamicObject(980, 608.39001, -1196.65002, 20.56000,   0.00000, 0.00000, 203.94000);

//*************************Cerca a wang cars*************************
CreateDynamicObject(3578, 1534.79980, -1451.39941, 11.70000,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(3578, 1534.90002, -1467.30005, 7.80000,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(966, 1537.29980, -1451.89941, 12.40000,   0.00000, 0.00000, 358.49487);
CreateDynamicObject(3666, 1530.09998, -1451.40002, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1528.00000, -1458.59998, 7.80000,   0.00000, 0.00000, 270.49988);
CreateDynamicObject(3578, 1523.50000, -1458.59998, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1518.90002, -1458.80005, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1514.09998, -1458.59998, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1509.59998, -1458.59998, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1509.59998, -1480.30005, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1514.40002, -1480.30005, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1518.80005, -1480.30005, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1523.30005, -1480.30005, 7.80000,   0.00000, 0.00000, 270.49438);
CreateDynamicObject(3578, 1528.09961, -1480.29980, 7.80000,   0.00000, 0.00000, 270.48889);
CreateDynamicObject(3666, 1537.69922, -1451.39941, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 1538.69995, -1452.00000, 12.38000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1534.90002, -1478.40002, 9.20000,   0.00000, 0.00000, 30.49988);
CreateDynamicObject(3439, 1507.80005, -700.00000, 97.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3439, 1487.30005, -700.29999, 97.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -693.00000, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1492.80005, -710.40002, 94.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1486.50000, -721.90002, 93.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1500.90002, -716.40002, 94.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1496.50000, -728.90002, 92.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1499.69995, -757.50000, 86.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1493.59961, -716.69922, 94.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1467.19995, -726.29999, 92.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1467.00000, -734.09998, 93.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1503.19922, -725.89941, 93.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1505.19995, -732.00000, 91.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1505.09998, -741.20001, 90.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1498.09961, -733.09961, 91.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1498.09961, -740.00000, 90.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1492.89941, -755.69922, 87.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 1506.19995, -668.40002, 95.30000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1360, 1502.50000, -668.29999, 95.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1360, 1510.00000, -668.29999, 95.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1364, 1487.40002, -668.50000, 95.30000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1360, 1491.00000, -668.40002, 95.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1360, 1483.69995, -668.50000, 95.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3666, 1502.50000, -710.59961, 94.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -687.29999, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -682.00000, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -676.50000, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -674.59998, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -663.70001, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.69922, -669.09961, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1460.50000, -658.29999, 94.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1491.69995, -712.79999, 96.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1503.09998, -713.59998, 96.80000,   0.00000, 0.00000, 162.00000);
CreateDynamicObject(3472, 1488.50000, -707.20001, 93.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1507.50000, -705.79999, 93.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1472.69995, -723.50000, 92.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1474.40002, -733.70001, 92.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1488.09998, -759.59998, 87.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1501.40002, -762.40002, 84.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(966, 945.29999, -1106.69995, 23.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3578, 947.09998, -1103.50000, 22.50000,   0.00000, 0.00000, 270.48889);
CreateDynamicObject(984, 926.40002, -1088.90002, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(984, 926.50000, -1061.09998, 23.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(984, 939.19922, -1088.89941, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(984, 939.29999, -1061.09998, 23.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(984, 945.59998, -1082.50000, 23.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 945.79999, -1067.59998, 23.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(996, 936.79999, -1107.30005, 24.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(996, 936.20001, -1099.59998, 24.00000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(3505, 1017.70001, -1356.30005, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 990.09998, -1355.80005, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 1017.70001, -1343.19995, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 1017.90002, -1370.30005, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 990.00000, -1369.90002, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 1003.29999, -1370.59998, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3505, 989.70001, -1342.90002, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8615, 293.10001, -1348.19995, 55.20000,   0.00000, 0.00000, 302.00000);

//*************************Gym ganton*************************
CreateDynamicObject(3515, 2323.89990, -1742.59998, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 2303.89990, -1742.50000, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 2363.10010, -1740.69995, 21.50000,   0.00000, 0.00000, 258.00000);
CreateDynamicObject(2921, 2330.69995, -1741.90002, 22.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2348.89990, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1653, 2330.30005, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1653, 2330.00000, -1747.30005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2349.19995, -1747.30005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2374.89990, -1747.30005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1653, 2397.30005, -1747.09998, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2374.69995, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1653, 2397.30005, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1652, 2290.80005, -1747.09998, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2265.10010, -1747.19995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1653, 2245.89990, -1747.19995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1653, 2233.10010, -1747.19995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1652, 2290.89990, -1737.50000, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1652, 2265.39990, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1653, 2246.10010, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2288.69995, -1738.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2270.60010, -1738.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2254.00000, -1738.30005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2236.69995, -1738.30005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2334.39990, -1738.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2354.10010, -1738.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2371.80005, -1738.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2393.00000, -1738.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 2334.30005, -1746.19995, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2354.10010, -1746.30005, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2371.80005, -1746.40002, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2393.00000, -1746.19995, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2288.69995, -1746.40002, 13.10000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(3657, 2270.69995, -1746.30005, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2254.39990, -1746.40002, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, 2236.69995, -1746.50000, 13.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(737, 2270.69995, -1742.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 2293.30005, -1742.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 2397.19995, -1742.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 2372.89990, -1742.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 2337.80005, -1741.69995, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2304.80005, -1747.00000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2307.10010, -1745.80005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2308.19995, -1744.30005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2308.60010, -1742.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2308.10010, -1740.30005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2304.60010, -1737.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2306.80005, -1738.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2225.80005, -1737.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2223.39990, -1738.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2221.80005, -1740.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2221.50000, -1742.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2221.89990, -1744.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2223.19995, -1745.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2226.00000, -1747.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2322.89990, -1737.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2320.89990, -1738.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2319.30005, -1744.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2319.39990, -1740.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2319.00000, -1742.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2320.60010, -1745.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2322.89990, -1747.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2404.19995, -1747.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2406.19995, -1746.40002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2407.69995, -1744.80005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2408.60010, -1742.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2408.10010, -1740.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2406.60010, -1738.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2404.19995, -1737.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2247.89990, -1742.40002, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2237.00000, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2260.60010, -1742.30005, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2266.00000, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2276.80005, -1742.40002, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2288.69995, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2333.10010, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2349.30005, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2360.60010, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2343.00000, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2379.00000, -1742.19995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2392.19995, -1742.30005, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1257, 2231.16992, -1725.72998, 13.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1319, 2404.00000, -1754.19995, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2404.00000, -1752.69995, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2404.00000, -1751.19995, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2404.00000, -1749.90002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2404.00000, -1748.69995, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2403.89990, -1747.40002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.30005, -1747.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.29004, -1748.77002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.30005, -1750.40002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.30005, -1751.80005, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.30005, -1753.00000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2226.30005, -1754.19995, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2310.10010, -1742.40002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2312.50000, -1742.40002, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2314.89990, -1742.50000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2317.39990, -1742.50000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1653, 2233.19995, -1737.59998, 13.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(737, 2242.19995, -1742.30005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2209.78003, -1712.56995, 23.35000,   0.00000, 0.00000, 1.04000);
CreateDynamicObject(736, 2215.09009, -1674.78003, 23.35000,   0.00000, 0.00000, 1.04000);
CreateDynamicObject(736, 2394.37012, -1763.08997, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2235.59009, -1762.79004, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2246.88989, -1762.43994, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2309.14990, -1762.41003, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2322.06006, -1762.78003, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 2384.22998, -1763.18005, 23.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2378.26001, -1817.94995, 11.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2270.32007, -1796.70996, 11.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2294.39990, -1826.63000, 11.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2340.96997, -1801.45996, 11.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2363.06006, -1761.89001, 11.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(731, 2304.85010, -1806.31995, 11.72000,   0.00000, 0.00000, 0.20000);
CreateDynamicObject(736, 2198.22998, -1668.42004, 23.35000,   0.00000, 0.00000, 1.04000);
CreateDynamicObject(736, 2192.25000, -1714.01001, 23.35000,   0.00000, 0.00000, 1.04000);
CreateDynamicObject(1408, 2265.96997, -1649.04004, 15.00000,   0.00000, 0.00000, -1.32000);
CreateDynamicObject(1408, 2243.32007, -1644.81006, 15.00000,   0.00000, 0.00000, -15.12000);
CreateDynamicObject(1408, 2248.32007, -1646.21997, 15.00000,   0.00000, 0.00000, -15.12000);
CreateDynamicObject(1408, 2252.55005, -1647.38000, 15.00000,   0.00000, 0.00000, -15.12000);
CreateDynamicObject(1408, 2261.28003, -1648.98999, 15.00000,   0.00000, 0.00000, -0.84000);
CreateDynamicObject(736, 2231.34009, -1638.51001, 24.26000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(731, 2253.48999, -1622.18994, 12.97000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2292.56006, -1639.93005, 13.64000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2263.76001, -1629.15002, 13.64000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(654, 2242.29004, -1612.45996, 13.64000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2277.96997, -1646.85999, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2275.61011, -1646.96997, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2275.84009, -1644.62000, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2242.69995, -1642.10999, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2278.31006, -1644.47998, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2285.98999, -1645.29004, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2288.38989, -1645.05005, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2291.08008, -1644.76001, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2290.82007, -1647.13000, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2288.29004, -1647.40002, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2285.50000, -1647.18994, 14.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2260.62988, -1646.76001, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2263.27002, -1646.59998, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2265.70996, -1646.45996, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2253.76001, -1645.31006, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2251.63989, -1644.81006, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2249.27002, -1644.15002, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2247.36011, -1643.26001, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 2245.10010, -1642.82996, 14.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2276.22998, -1652.81006, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2228.62988, -1644.71997, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2286.82007, -1652.87000, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2264.61011, -1652.77002, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2253.15991, -1651.59998, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2244.39990, -1649.09998, 16.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 2221.71997, -1642.00000, 16.75000,   0.00000, 0.00000, 0.00000);

//*************************Atras de sur 13*************************
CreateDynamicObject(2669, 1645.00562, -2162.94629, 13.89496,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2935, 1645.83801, -2159.77954, 14.00661,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3043, 1646.17761, -2152.95825, 14.00661,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3073, 1645.92566, -2156.20264, 14.21700,   0.00000, 0.00000, 273.96997);
CreateDynamicObject(3043, 1646.30737, -2149.90063, 14.00661,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2669, 1645.51514, -2146.80249, 13.89496,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2669, 1646.97424, -2149.87036, 16.80029,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2669, 1647.18896, -2152.95044, 16.80029,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3174, 1650.77417, -2143.92383, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11444, 1645.38074, -2141.04785, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3093, 1642.27405, -2160.46191, 14.02021,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1492, 1642.98486, -2146.04468, 12.67731,   0.00000, 0.00000, 270.67566);
CreateDynamicObject(2904, 1635.03101, -2138.26074, 13.86085,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 1632.84265, -2138.26294, 13.86085,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 1636.26416, -2139.53076, 13.86085,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2904, 1631.65027, -2139.47852, 13.86085,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2904, 1635.05530, -2140.76465, 13.86085,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 1634.40002, -2140.78198, 13.86085,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 1635.00000, -2139.50000, 15.17702,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2904, 1632.69995, -2139.47314, 15.17702,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1499, 1631.66003, -2140.70532, 12.62312,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16637, 1635.80249, -2147.50171, 14.06256,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(16637, 1633.94629, -2145.62646, 14.06256,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16637, 1632.07910, -2147.50464, 14.06256,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16637, 1632.09241, -2149.39282, 14.06256,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16637, 1630.17310, -2145.61304, 14.06256,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16637, 1628.30493, -2147.48218, 14.06256,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16637, 1629.83643, -2147.55249, 15.62000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(16637, 1634.34082, -2147.57642, 15.62000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(16637, 1631.59998, -2147.60010, 15.75000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(16501, 1636.03210, -2157.25659, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1633.81580, -2160.63257, 12.15000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1633.71277, -2153.67334, 12.20000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1634.00000, -2157.19995, 15.69000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(16501, 1631.55994, -2155.99585, 12.20000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1631.55994, -2156.72534, 12.10000,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2934, 1625.92065, -2156.61792, 14.00661,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3585, 1624.29175, -2146.73511, 14.18458,   0.00000, 0.00000, 258.76575);
CreateDynamicObject(3564, 1618.75879, -2153.72241, 14.18458,   0.00000, 0.00000, 308.39038);
CreateDynamicObject(13025, 1645.25684, -2131.34277, 15.73667,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2679, 1623.44397, -2145.71948, 14.48768,   0.00000, 0.00000, 75.42957);
CreateDynamicObject(2679, 1623.23352, -2146.59668, 14.48768,   0.00000, 0.00000, 75.42664);
CreateDynamicObject(2679, 1623.28345, -2146.19067, 14.48768,   0.00000, 0.00000, 75.42664);
CreateDynamicObject(11458, 1658.43469, -2168.24194, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3564, 1615.73035, -2163.10156, 14.18458,   0.00000, 0.00000, 286.55139);
CreateDynamicObject(2669, 1627.13440, -2163.28027, 13.89496,   0.00000, 0.00000, 271.98499);
CreateDynamicObject(2669, 1632.73718, -2163.30884, 13.89496,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11457, 1603.56262, -2155.78760, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3073, 1612.95435, -2145.71533, 14.21700,   0.00000, 0.00000, 273.96606);
CreateDynamicObject(3043, 1634.53857, -2157.35181, 17.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3364, 1632.05676, -2171.45313, 12.55469,   0.00000, 0.00000, 286.55554);
CreateDynamicObject(5153, 1627.00000, -2147.87305, 16.00819,   0.00000, 25.00000, 0.00000);
CreateDynamicObject(5153, 1637.85742, -2147.94458, 15.55551,   0.00000, 25.00000, 0.00000);
CreateDynamicObject(5153, 1641.00000, -2147.56738, 15.55551,   0.00000, 30.00000, 0.00000);
CreateDynamicObject(16317, 1615.65283, -2130.69434, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3594, 1632.16602, -2133.26514, 13.18586,   0.00000, 0.00000, 5.95496);
CreateDynamicObject(3593, 1638.69482, -2145.81250, 13.26486,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1336, 1616.88379, -2168.01636, 13.61863,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1335, 1618.33252, -2169.02319, 13.68023,   0.00000, 0.00000, 342.13513);
CreateDynamicObject(12957, 1622.11963, -2173.05688, 13.43290,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1327, 1626.99731, -2174.53809, 13.52266,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1358, 1624.69238, -2131.86011, 13.75823,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1365, 1623.53845, -2135.96777, 13.69760,   0.00000, 0.00000, 334.19519);
CreateDynamicObject(1442, 1634.03821, -2152.83008, 13.15317,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14861, 1633.37524, -2147.19653, 13.00172,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1771, 1634.73596, -2139.17212, 13.18835,   0.00000, 0.00000, 264.72070);
CreateDynamicObject(933, 1630.85046, -2148.07056, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1429, 1630.45801, -2148.02612, 13.82118,   0.00000, 0.00000, 254.79578);
CreateDynamicObject(1265, 1624.31323, -2149.19263, 13.87250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1338, 1623.86426, -2147.88721, 14.11477,   0.00000, 0.00000, 13.89490);
CreateDynamicObject(1499, 1644.33533, -2149.11841, 15.58265,   0.00000, 0.00000, 270.67566);
CreateDynamicObject(1575, 1648.45300, -2149.00317, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1648.44836, -2149.41943, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1648.42041, -2149.82764, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1647.62695, -2149.10278, 15.60000,   0.00000, 0.00000, 356.03003);
CreateDynamicObject(1578, 1647.65833, -2149.48193, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1647.89282, -2150.91772, 15.60708,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2034, 1647.95166, -2150.55298, 15.61347,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1279, 1647.43506, -2150.06470, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1499, 1644.61047, -2153.71533, 15.64314,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14666, 1649.69995, -2152.83008, 16.81926,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14890, 1646.35730, -2153.89673, 15.61611,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2587, 1648.74500, -2154.54224, 17.28391,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2588, 1647.15466, -2151.59009, 17.24910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(853, 1626.42139, -2126.25317, 12.95536,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(851, 1628.82434, -2155.33789, 12.86756,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(849, 1610.69800, -2154.61157, 12.85444,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(851, 1611.15344, -2155.73364, 12.86756,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(854, 1609.45386, -2155.41382, 12.76143,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(849, 1607.86536, -2152.93604, 12.85444,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(849, 1611.40405, -2151.72363, 12.85444,   0.00000, 0.00000, 27.78979);
CreateDynamicObject(3461, 1633.83472, -2152.85376, 11.83357,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2890, 1618.69409, -2130.32397, 14.16938,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1327, 1615.57617, -2132.61768, 15.71517,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1299, 1612.67957, -2135.49487, 15.68411,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12954, 1616.55579, -2128.47266, 14.50312,   0.00000, 0.00000, 306.40540);
CreateDynamicObject(12957, 1613.50757, -2137.30249, 14.42150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13591, 1612.89893, -2135.77930, 13.80225,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, 1620.31665, -2132.15405, 12.86850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, 1617.93799, -2129.17871, 13.92799,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, 1611.25244, -2132.87354, 13.96832,   0.00000, 0.00000, 0.00000);
//*********************Interiores solidos*********************
CreateDynamicObject(2395, 680.76, -450.74, -26.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 680.76, -450.74, -23.88,   298.00, 359.96, 359.96);
CreateDynamicObject(1493, 680.87, -450.72, -26.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2765, 677.89, -450.36, -23.68,   0.00, 0.00, 0.00);
CreateDynamicObject(2766, 686.85, -451.72, -23.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1966, 661.83, -568.60, 15.66,   0.00, 0.00, 90.00);
CreateDynamicObject(2395, 669.83, -565.28, 15.33,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 666.63, -565.37, 15.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 662.90, -565.37, 15.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 665.79, -570.59, 14.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 665.79, -574.92, 14.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2837, 682.88, -457.87, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2838, 679.95, -456.98, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2839, 680.39, -454.61, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 461.40, -15.44, 1000.13,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 461.40, -19.17, 1000.13,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 461.10, -20.20, 1000.14,   0.00, 0.00, 236.00);
CreateDynamicObject(2395, 459.67, -22.85, 1000.14,   0.00, 0.00, 180.00);
CreateDynamicObject(2395, 456.48, -22.66, 1000.14,   0.00, 0.00, 90.00);
CreateDynamicObject(2395, 456.33, -19.92, 1000.14,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 456.88, -23.09, 998.38,   0.00, 0.00, 179.99);
CreateDynamicObject(2395, 455.94, -23.31, 1000.88,   46.00, 0.00, 179.99);
CreateDynamicObject(1532, 456.01, -23.13, 998.53,   0.00, 0.00, 180.00);
CreateDynamicObject(2945, 1.12, 34.35, 1199.92,   0.00, 0.00, 0.00);
CreateDynamicObject(17951, 608.95, -128.31, 998.63,   0.00, 0.00, 0.00);
CreateDynamicObject(17951, 608.95, -122.15, 998.63,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 662.68, -567.73, 13.30,   0.00, 0.00, 0.00);

//*************************Bar ls int/ext*************************
CreateDynamicObject(1569, 1647.90, -1460.25, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 1647.98, -1457.46, 12.50,   0.00, 0.00, 200.00);
CreateDynamicObject(13007, 1638.67, -1459.50, 10.39,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1637.44, -1459.56, 12.88,   0.00, 0.00, 180.00);
CreateDynamicObject(2964, 1641.40, -1455.20, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2964, 1645.50, -1455.20, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2289, 1643.29, -1452.35, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2287, 1636.85, -1457.60, 13.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2280, 1642.51, -1463.37, 13.85,   0.00, 0.00, 180.00);
CreateDynamicObject(3859, 1647.95, -1454.80, 12.14,   0.00, 0.00, 17.06);
CreateDynamicObject(3859, 1647.95, -1462.85, 12.14,   0.00, 0.00, 17.06);
CreateDynamicObject(2357, 1643.83, -1461.70, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 1646.16, -1463.36, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1703, 1643.61, -1463.36, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1703, 1640.84, -1462.69, 12.55,   0.00, 0.00, 90.00);
CreateDynamicObject(2011, 1647.09, -1463.37, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2241, 1647.47, -1452.72, 13.05,   0.00, 0.00, 0.00);
CreateDynamicObject(2251, 1636.65, -1463.58, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(338, 1644.66, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1645.52, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1642.29, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1641.46, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(2011, 1636.95, -1452.80, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 1638.54, -1452.62, 14.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1936, 1646.35, -1452.10, 13.71,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.30, -1453.91, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1457.11, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1460.32, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1463.53, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1646.35, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.74, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1461.06, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1464.56, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1461.06, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1464.56, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1464.56, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1461.06, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1464.56, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1461.06, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1457.57, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(1569, 1647.90, -1460.25, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 1647.98, -1457.46, 12.50,   0.00, 0.00, 200.00);
CreateDynamicObject(13007, 1638.67, -1459.50, 10.39,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1637.44, -1459.56, 12.88,   0.00, 0.00, 180.00);
CreateDynamicObject(2964, 1641.40, -1455.20, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2964, 1645.50, -1455.20, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2289, 1643.29, -1452.35, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2287, 1636.85, -1457.60, 13.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2280, 1642.51, -1463.37, 13.85,   0.00, 0.00, 180.00);
CreateDynamicObject(3859, 1647.95, -1454.80, 12.14,   0.00, 0.00, 17.06);
CreateDynamicObject(3859, 1647.95, -1462.85, 12.14,   0.00, 0.00, 17.06);
CreateDynamicObject(2357, 1643.83, -1461.70, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 1646.16, -1463.36, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1703, 1643.61, -1463.36, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1703, 1640.84, -1462.69, 12.55,   0.00, 0.00, 90.00);
CreateDynamicObject(2011, 1647.09, -1463.37, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2241, 1647.47, -1452.72, 13.05,   0.00, 0.00, 0.00);
CreateDynamicObject(2251, 1636.65, -1463.58, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(338, 1644.66, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1645.52, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1642.29, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(338, 1641.46, -1452.37, 13.50,   355.00, 0.00, 0.00);
CreateDynamicObject(2011, 1636.95, -1452.80, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 1638.54, -1452.62, 14.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1936, 1646.35, -1452.10, 13.71,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1452.23, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.30, -1453.91, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1457.11, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1460.32, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.30, -1463.53, 13.43,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1646.35, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1636.74, -1463.97, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1461.06, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1646.35, -1464.56, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1461.06, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1643.14, -1464.56, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1464.56, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1461.06, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1457.57, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1639.93, -1454.07, 15.09,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1464.56, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1461.06, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1457.57, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(19366, 1636.73, -1454.07, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(1704, 1646.78, -1461.87, 12.55,   0.00, 0.00, 270.00);
CreateDynamicObject(1704, 1646.78, -1460.69, 12.55,   0.00, 0.00, 270.00);
CreateDynamicObject(16780, 1643.93, -1461.44, 15.17,   0.00, 0.00, 0.00);
CreateDynamicObject(16780, 1643.93, -1455.19, 15.17,   0.00, 0.00, 0.00);
CreateDynamicObject(19366, 1636.73, -1454.07, 15.10,   0.00, 90.00, 90.00);
CreateDynamicObject(1704, 1646.78, -1461.87, 12.55,   0.00, 0.00, 270.00);
CreateDynamicObject(1704, 1646.78, -1460.69, 12.55,   0.00, 0.00, 270.00);
CreateDynamicObject(16780, 1643.93, -1461.44, 15.17,   0.00, 0.00, 0.00);
CreateDynamicObject(16780, 1643.93, -1455.19, 15.17,   0.00, 0.00, 0.00);

//*************************Iglesia interior*************************
CreateDynamicObject(3657, -2021.33081, 1113.79761, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2021.24023, 1121.38672, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2017.71777, 1121.39453, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2013.73047, 1121.37988, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2010.03223, 1121.41602, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2006.14331, 1121.40857, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2002.42102, 1121.36511, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2017.75513, 1113.79736, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2013.83374, 1113.80615, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2009.92004, 1113.79907, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2006.22498, 1113.78491, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2002.35095, 1113.78992, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(974, -2030.55750, 1115.40393, 53.74772,   90.00000, 180.00000, 270.00000);
CreateDynamicObject(974, -2030.61243, 1121.97278, 53.74772,   89.25000, 0.00000, 90.50000);
CreateDynamicObject(974, -2027.82275, 1115.39441, 51.04780,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(974, -2027.81799, 1122.04053, 51.04765,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -2027.73242, 1116.31250, 51.09491,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -2027.72363, 1112.58105, 51.09490,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -2027.72949, 1119.87109, 51.09491,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -2027.78320, 1112.58496, 53.87002,   270.50000, 179.99500, 270.00000);
CreateDynamicObject(2395, -2027.78906, 1120.03320, 53.87222,   270.50000, 179.99500, 269.98901);
CreateDynamicObject(2395, -2027.78320, 1116.30957, 53.87000,   270.49399, 179.99500, 269.98901);
CreateDynamicObject(1533, -1999.41016, 1117.46460, 52.91998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1533, -1999.40991, 1117.49658, 52.93288,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14902, -2044.70605, 1130.34216, 54.70988,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18084, -2028.88989, 1113.21582, 55.62321,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18084, -2028.86328, 1115.81738, 55.61905,   0.00000, 0.00000, 270.24701);
CreateDynamicObject(18084, -2028.88464, 1118.42017, 55.62112,   0.00000, 0.00000, 270.25000);
CreateDynamicObject(18084, -2028.87183, 1123.35425, 55.60417,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18084, -2028.90332, 1120.99316, 55.61903,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2869, -2028.01855, 1112.62964, 53.82383,   0.00000, 0.00000, 52.00000);
CreateDynamicObject(2869, -2028.06433, 1122.56628, 53.82567,   0.00000, 0.00000, 51.99800);
CreateDynamicObject(18608, -2017.78223, 1117.70313, 57.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3657, -2011.92700, 1113.72009, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2015.78076, 1113.71680, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2019.49231, 1113.73450, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2023.15869, 1113.72742, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2024.96008, 1121.38916, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2023.11865, 1121.47717, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2015.82336, 1121.47327, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2011.90479, 1121.49243, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2008.07446, 1121.52429, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2004.25073, 1121.61731, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2004.17200, 1113.72327, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2008.17981, 1113.70923, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2025.09583, 1113.79004, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, -2019.45422, 1121.48181, 53.48819,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2842, -2024.86169, 1116.93262, 52.96998,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(2842, -2023.93884, 1116.94275, 52.96998,   0.00000, 0.00000, 89.99700);
CreateDynamicObject(2842, -2023.02319, 1116.93091, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2022.11035, 1116.92139, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2021.18005, 1116.93530, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2020.26453, 1116.94629, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2019.36060, 1116.94128, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2018.44226, 1116.95056, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2017.52087, 1116.93811, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2016.60425, 1116.94458, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2015.68591, 1116.94629, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2014.78748, 1116.93542, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2013.86707, 1116.94641, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2012.95178, 1116.94019, 52.96998,   0.00000, 0.00000, 89.74200);
CreateDynamicObject(2842, -2012.04175, 1116.93274, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2011.12512, 1116.94788, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2010.20862, 1116.93408, 52.96998,   0.00000, 0.00000, 89.74200);
CreateDynamicObject(2842, -2009.29358, 1116.93066, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2008.38318, 1116.93518, 52.96998,   0.00000, 0.00000, 89.49200);
CreateDynamicObject(2842, -2007.46289, 1116.92700, 52.96998,   0.00000, 0.00000, 89.49200);
CreateDynamicObject(2842, -2006.53430, 1116.92969, 52.96998,   0.00000, 0.00000, 89.49200);
CreateDynamicObject(2842, -2005.62305, 1116.92786, 52.96998,   0.00000, 0.00000, 89.49200);
CreateDynamicObject(2842, -2004.70874, 1116.92603, 52.96998,   0.00000, 0.00000, 89.99200);
CreateDynamicObject(2842, -2003.78882, 1116.91968, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2002.87598, 1116.93274, 52.96998,   0.00000, 0.00000, 90.49200);
CreateDynamicObject(2842, -2001.96545, 1116.92310, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2001.07520, 1116.92957, 52.96998,   0.00000, 0.00000, 90.24200);
CreateDynamicObject(2842, -2000.15771, 1116.93567, 52.96998,   0.00000, 0.00000, 90.49200);
CreateDynamicObject(2842, -2000.28149, 1117.96936, 52.96998,   0.00000, 0.00000, 269.74200);
CreateDynamicObject(1698, -2028.02722, 1114.53259, 53.08857,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1698, -2028.08447, 1120.40759, 53.08857,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1698, -2028.44678, 1114.53564, 53.33279,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(1698, -2028.92114, 1114.52100, 53.57702,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(1698, -2028.51001, 1120.40186, 53.33279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1698, -2028.96228, 1120.39917, 53.57702,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2842, -2025.78027, 1116.93518, 52.96998,   0.00000, 0.00000, 89.74700);
CreateDynamicObject(2842, -2026.70374, 1116.93872, 52.96998,   0.00000, 0.00000, 89.74700);
CreateDynamicObject(1656, -2027.95459, 1120.40601, 53.69521,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, -2027.91406, 1114.52698, 53.69328,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2420, -2027.93152, 1117.23022, 53.79958,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2420, -2028.42029, 1117.51685, 53.76689,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3872, -1983.23413, 1110.78296, 60.25876,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3872, -1982.34766, 1125.00977, 60.14774,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(3872, -1984.98975, 1118.42285, 63.44128,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2245, -2028.22656, 1118.15527, 54.10796,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, -2028.15039, 1116.63086, 54.13362,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, -2029.68457, 1112.38379, 54.65215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, -2029.59375, 1122.69141, 54.65518,   0.00000, 0.00000, 59.99634);
CreateDynamicObject(2253, -2027.44727, 1119.54883, 53.25038,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, -2027.40918, 1115.48438, 53.25038,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2345, -2027.67676, 1117.38965, 53.71228,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, -2027.98401, 1118.75208, 54.29090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, -2027.93738, 1115.98474, 54.29069,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, -1945.53320, 1116.82837, 51.00370,   353.61499, 10.81800, 1.21600);
CreateDynamicObject(3928, -1945.64050, 1126.69751, 49.62894,   350.10101, 8.37400, 359.44601);
CreateDynamicObject(3928, -1945.68079, 1136.72656, 48.17485,   352.54501, 6.55200, 0.10000);
CreateDynamicObject(3920, -1989.13525, 1114.61780, 59.52515,   0.00000, 0.00000, 268.25000);
CreateDynamicObject(3920, -1989.06165, 1123.61035, 59.48676,   0.00000, 0.00000, 270.74799);
CreateDynamicObject(19367, -2001.94495, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -1998.94434, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2005.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2008.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2011.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2014.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2017.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2020.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2023.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2026.00000, 1123.30005, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2028.30005, 1123.29980, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, -2026.09998, 1113.70398, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2023.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2020.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2017.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2014.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2011.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2008.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2005.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2002.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -1999.09961, 1113.70313, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -1999.09961, 1116.90002, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -1999.09961, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -1999.09961, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2002.59998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2002.59998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2002.59998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2006.09998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2006.09998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2006.09998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2009.59998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2009.59998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2009.59998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2013.09998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2013.09998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2013.09998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2016.59998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2016.59998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2016.59998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2020.09998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2020.09998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2020.09998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2023.59998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2023.59998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2023.59998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2027.09998, 1123.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2027.09998, 1120.00000, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, -2027.09998, 1116.89941, 52.90000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19367, -2005.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -1998.94434, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2001.94434, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2008.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2028.29980, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2026.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2023.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2020.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2017.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2014.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2011.00000, 1112.00000, 54.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19367, -2030.00000, 1112.00000, 55.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2030.00000, 1115.00000, 55.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2030.00000, 1118.00000, 55.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2030.00000, 1121.00000, 55.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2030.00000, 1124.00000, 55.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2004.40002, 1118.50000, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2001.00000, 1112.90002, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2004.50000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2008.00000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2025.40002, 1118.50000, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2014.89941, 1118.50000, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2011.50000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2015.00000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2018.50000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2022.00000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2025.50000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, -2029.00000, 1112.89941, 56.27000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19367, -1999.30005, 1112.40002, 54.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -1999.29980, 1121.59961, 54.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -1999.29980, 1118.39941, 54.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -1999.29980, 1115.29980, 54.60000,   0.00000, 0.00000, 0.00000);

//*********************SAPD exterior*********************
CreateDynamicObject(19371, 1544.63672, -1622.96558, 14.18992,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19371, 1544.63171, -1619.81311, 14.18992,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19371, 1544.63354, -1619.45081, 14.18992,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19401, 1546.20837, -1630.15942, 14.11360,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19371, 1546.07312, -1634.88525, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19371, 1547.74866, -1638.25488, 14.11220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1544.45654, -1621.45081, 14.46602,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19398, 1547.74915, -1635.06384, 14.10833,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1543.42273, -1631.37708, 12.44370,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3529, 1543.89929, -1630.63953, 15.39063,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19371, 1547.73865, -1631.85779, 14.11220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19371, 1546.06604, -1631.68433, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19371, 1546.06946, -1638.10144, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2173, 1545.80774, -1631.04370, 12.37200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2190, 1545.88416, -1630.73669, 13.15840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1492, 1547.72485, -1634.23975, 12.34770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19371, 1545.16479, -1638.11853, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19371, 1545.26782, -1634.91174, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19371, 1545.26172, -1631.73425, 15.94290,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2342, 1546.92773, -1631.07935, 13.30727,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 1546.38269, -1632.12390, 12.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19808, 1546.24780, -1631.30359, 13.24699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19398, 1547.74915, -1635.06384, 14.10833,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19371, 1545.31958, -1637.25012, 14.11220,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19371, 1546.07983, -1637.23315, 14.11220,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 1547.56970, -1632.86121, 14.19276,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2613, 1547.63269, -1632.89429, 12.57978,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18636, 1546.43665, -1630.83887, 13.27270,   0.00000, 0.00000, -133.49998);
CreateDynamicObject(2606, 1545.94897, -1637.29565, 14.75939,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2606, 1545.94897, -1637.29565, 15.62240,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2606, 1545.94897, -1637.29565, 15.16340,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2604, 1544.55115, -1634.56262, 13.26440,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(975, 1579.74878, -1638.01208, 13.61406,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1577.70068, -1620.44067, 12.81397,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(715, 1551.22729, -1620.74634, 20.82129,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1545.31384, -1660.57471, 13.31716,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1545.42920, -1663.70105, 13.31716,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1545.82715, -1692.19678, 13.25525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1545.89185, -1687.89404, 13.25525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1541.34790, -1705.33020, 13.25525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1541.21423, -1708.30762, 13.25525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1541.48743, -1711.55359, 13.25525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(659, 1547.28857, -1690.95947, 12.89699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(659, 1545.91089, -1686.54211, 12.89699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(700, 1546.49817, -1661.30457, 13.25096,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1541.34766, -1707.38098, 13.22190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7090, 1558.00391, -1670.00354, 45.02180,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(7090, 1557.95850, -1681.20618, 45.02180,   0.00000, 0.00000, 180.00000);

//*********************SAPD entrenamiento*********************
CreateDynamicObject(14700, 217.27461, 1278.90894, 1059.52527,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1535, 216.49924, 1274.77747, 1058.03503,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2313, 209.82182, 1280.35266, 1058.02527,   0.00000, 0.00000, 130.00000);
CreateDynamicObject(1752, 209.06711, 1280.72156, 1058.52502,   0.00000, 0.00000, 130.00000);
CreateDynamicObject(2344, 209.74432, 1280.48877, 1058.53516,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 216.95445, 1287.68640, 1058.25513,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1741, 209.94746, 1283.68018, 1058.03333,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1839, 208.84903, 1284.16492, 1059.18335,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2028, 209.91930, 1281.49744, 1058.11670,   0.00000, 0.00000, 150.00000);
CreateDynamicObject(2232, 209.19936, 1287.25427, 1058.63062,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(2232, 216.02756, 1287.30261, 1058.63062,   0.00000, 0.00000, 310.00122);
CreateDynamicObject(1796, 220.30661, 1287.01819, 1058.02527,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14556, 217.62779, 1288.27039, 1059.54785,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2390, 216.71416, 1288.08508, 1060.04431,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2389, 216.71338, 1288.61621, 1060.09216,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2397, 216.71262, 1289.14111, 1060.04858,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2399, 216.71387, 1288.28577, 1059.12512,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2398, 216.71294, 1288.91760, 1059.13245,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2705, 217.22318, 1289.34253, 1059.42627,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2704, 217.08240, 1287.51111, 1059.42627,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2654, 217.08202, 1288.63464, 1058.32312,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1529, 216.56367, 1285.46350, 1059.77527,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2514, 222.09709, 1282.78015, 1058.02649,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1494, 222.39763, 1279.16895, 1058.03125,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1494, 220.10760, 1280.44800, 1058.03357,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1494, 217.97440, 1284.33496, 1058.05518,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1494, 216.66673, 1282.03442, 1058.02527,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2334, 209.02296, 1278.53906, 1058.03271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2336, 210.00914, 1278.53552, 1058.03247,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2337, 212.00040, 1278.53333, 1058.03589,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2518, 220.47748, 1282.68835, 1058.32654,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2519, 223.66103, 1281.48743, 1058.02649,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2226, 209.23409, 1278.72327, 1059.09229,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1486, 209.95879, 1278.80225, 1059.23535,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 210.19106, 1278.65247, 1059.28796,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 209.82179, 1278.52002, 1059.09045,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, 210.01006, 1278.62683, 1059.10095,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1950, 211.65642, 1278.83350, 1059.28088,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, 211.80739, 1278.65149, 1059.25952,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 209.99846, 1275.98792, 1058.03271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2837, 209.89578, 1275.78210, 1058.64807,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2768, 209.98265, 1276.40100, 1058.69043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1486, 209.96512, 1276.12585, 1058.79297,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1517, 210.28862, 1276.05566, 1058.84778,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 210.13034, 1275.52722, 1058.64807,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 210.30042, 1276.32581, 1058.64807,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1485, 210.38171, 1276.21362, 1058.64807,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, 210.13696, 1276.09985, 1058.65857,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1712, 211.94508, 1287.42480, 1058.02527,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1711, 215.13133, 1281.23853, 1058.02893,   0.00000, 0.00000, 220.00000);
CreateDynamicObject(2855, 215.24818, 1279.48059, 1059.13464,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2826, 214.84993, 1279.39490, 1059.13464,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2844, 222.21262, 1285.07324, 1058.03271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2845, 221.68146, 1288.21289, 1058.02527,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(15028, 221.63931, 1287.88843, 1058.17761,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1529, 223.72531, 1286.97705, 1060.06409,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1768, 224.29665, 1274.55347, 1058.02417,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2346, 220.65817, 1278.02295, 1058.02417,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1786, 220.85506, 1278.37231, 1058.52051,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1768, 225.57793, 1277.65796, 1058.02417,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1529, 226.15276, 1276.63074, 1060.01941,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1067.25403, 1357.95313, 12.45135,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14408, 1032.06738, 1256.96680, 1814.11389,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14412, 1085.99316, 1252.99414, 1816.29663,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1042.01758, 1256.65527, 1806.18286,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 1041.89661, 1256.87927, 1805.68286,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 1042.01770, 1264.75781, 1805.68286,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 1041.91711, 1264.78955, 1805.68286,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(14409, 1019.60840, 1237.17285, 1801.62537,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14409, 1051.82324, 1252.73145, 1807.93701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14438, 1081.48401, 1251.52808, 1816.19849,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1041.88940, 1261.80383, 1813.89514,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1041.89539, 1250.72461, 1813.89514,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1062.85938, 1258.83496, 1813.76538,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1062.81323, 1254.93188, 1813.76538,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1062.79199, 1250.81738, 1813.76538,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1062.83655, 1246.87292, 1813.76538,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(14438, 1019.76062, 1250.07117, 1816.01575,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5422, 1037.93188, 1270.69458, 1806.78247,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8613, 1012.80469, 1249.00781, 1807.54163,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(16501, 1018.80560, 1246.59912, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14438, 1019.17676, 1264.25098, 1816.01575,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1018.80756, 1250.15430, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1015.35938, 1253.58008, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1007.02423, 1246.03552, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1007.02802, 1250.09644, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1013.06415, 1253.59167, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1013.28546, 1257.12292, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1013.33398, 1267.26465, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1016.78320, 1263.79785, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1016.75098, 1260.58008, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1025.29004, 1262.25098, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1025.28223, 1255.17969, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1025.29102, 1264.13281, 1806.97058,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1014.45117, 1265.14844, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1014.56989, 1269.69238, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1014.42676, 1267.47266, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3018, 1014.43127, 1265.10181, 1808.41162,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3019, 1014.45349, 1265.10461, 1808.41821,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3020, 1014.49347, 1265.11072, 1808.35620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3021, 1014.38989, 1265.10095, 1808.41077,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3022, 1014.39948, 1265.35852, 1808.55566,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3023, 1014.41833, 1265.09875, 1808.35120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3024, 1014.43872, 1265.20215, 1808.62256,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3077, 1011.52155, 1268.36792, 1804.77014,   0.00000, 0.00000, 300.00000);
CreateDynamicObject(2051, 931.03369, 1226.70093, 1805.27515,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2055, 1012.08203, 1267.28699, 1807.23267,   0.00000, 0.00000, 300.00000);
CreateDynamicObject(3111, 1035.33191, 1361.30823, 1801.65588,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3111, 1011.21423, 1268.86230, 1806.96155,   90.00000, 90.00000, 30.00000);
CreateDynamicObject(1499, 1020.25500, 1260.68677, 1804.77258,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1499, 1020.22186, 1263.69849, 1804.77014,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3785, 1005.77832, 1254.84485, 1807.02368,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3785, 1005.77832, 1258.62415, 1807.00623,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18625, 1013.43945, 1269.10352, 1882.07410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1014.40332, 1267.44336, 1805.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1584, 1014.56885, 1269.63782, 1805.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1291, 1019.66437, 1266.65417, 1805.18457,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1291, 1019.66211, 1267.37805, 1805.18457,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1262, 1024.69604, 1261.87219, 1808.30994,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1021.98242, 1254.31836, 1810.94482,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(983, 1020.08728, 1248.21924, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1020.07599, 1254.61023, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1020.06976, 1261.01050, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1023.79480, 1248.23743, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1023.81378, 1254.67102, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1023.80225, 1261.04700, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1023.80963, 1265.84607, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1007.67499, 1265.62756, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1007.66528, 1259.26587, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1007.65051, 1252.86011, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1007.64526, 1248.04358, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1016.79279, 1244.97461, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1013.60156, 1244.97461, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1030.54675, 1244.94739, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1017.24915, 1268.82776, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1010.86755, 1268.82471, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1020.07898, 1265.81201, 1811.72571,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1030.48792, 1268.79370, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1027.28638, 1268.80371, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1027.35010, 1244.94849, 1811.80530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1033.72705, 1241.73816, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1033.63013, 1272.01404, 1811.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11245, 1065.91187, 1252.68152, 1814.33350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14438, 1036.57080, 1257.45508, 1816.11304,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1014.45801, 1254.82910, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1014.53760, 1257.00842, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1014.55774, 1259.07385, 1808.36279,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1588, 1014.46271, 1257.01514, 1806.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1590, 1014.45367, 1256.99829, 1806.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1589, 1014.36847, 1256.99817, 1806.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1591, 1014.33441, 1257.00671, 1806.80066,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1592, 1014.40778, 1257.00928, 1806.80066,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1584, 1014.53809, 1259.07715, 1805.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 1014.48254, 1254.80957, 1805.77014,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3800, 1018.91870, 1256.85742, 1804.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3800, 1018.91455, 1257.92932, 1804.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1022.14398, 1251.99255, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16770, 1034.02917, 1270.72461, 1806.36072,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3659, 1043.36365, 1265.80823, 1805.78088,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3659, 1044.21741, 1267.16772, 1805.78088,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3659, 1044.23096, 1267.02991, 1807.80688,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3025, 1041.00916, 1258.86694, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1039.63538, 1260.91980, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1035.50952, 1255.95532, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1036.93921, 1259.54517, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1038.36707, 1258.12122, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1034.01245, 1260.36597, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1032.34351, 1255.27637, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1030.81152, 1258.20154, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16501, 1038.35107, 1250.94263, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16501, 1031.76794, 1250.92065, 1806.97058,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3659, 1043.34009, 1265.80640, 1807.80688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3659, 1043.39502, 1268.52893, 1805.78088,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3659, 1043.35571, 1268.52808, 1807.80688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1029.33545, 1256.31628, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3025, 1028.07654, 1261.66016, 1808.36279,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1040.95605, 1259.02991, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1039.59314, 1261.06543, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1585, 1038.32288, 1258.27124, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1036.85059, 1259.68848, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1035.41284, 1256.15381, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1585, 1033.85779, 1260.48950, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1032.30237, 1255.44373, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1030.75513, 1258.33545, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1029.26477, 1256.52686, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1585, 1027.95679, 1261.82434, 1805.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1614, 1041.77832, 1248.87463, 1808.26965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1615, 1062.71191, 1241.40356, 1814.58289,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14410, 1112.13208, 1252.09692, 1803.76758,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1117.63391, 1259.28955, 1809.85132,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3799, 1043.56189, 1253.45801, 1804.47009,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3798, 1048.35938, 1257.80200, 1804.77014,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1044.16174, 1265.83887, 1808.82214,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1047.65247, 1270.72485, 1808.10706,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1045.45129, 1270.72485, 1806.42932,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1042.19238, 1245.00439, 1814.13538,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 1042.19238, 1247.91760, 1813.03101,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3798, 1048.58020, 1249.37366, 1811.12170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1654, 1053.20996, 1269.41699, 1812.44031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1217, 1053.50928, 1269.55615, 1811.54309,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1218, 1052.77966, 1270.03967, 1811.61340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1222, 1053.16321, 1263.92676, 1811.59778,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3057, 1053.50000, 1268.41907, 1811.50769,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2894, 1004.65320, 1258.94568, 1805.66858,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2919, 1051.50781, 1270.14148, 1811.78833,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1252, 1052.63269, 1269.25012, 1812.09229,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, 1041.77832, 1248.92859, 1809.97327,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, 1053.87988, 1245.07080, 1814.42529,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, 1005.27832, 1256.72461, 1807.97510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, 1103.20825, 1245.17212, 1810.11597,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, 1110.19727, 1241.11438, 1803.88367,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3798, 1048.44446, 1254.98608, 1811.12170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3796, 1044.69885, 1268.20911, 1811.12170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1043.55396, 1267.74268, 1811.22327,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1044.25964, 1268.69556, 1811.22327,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1045.83191, 1270.72485, 1813.84644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1049.09045, 1263.46912, 1811.12170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1046.78308, 1270.45410, 1811.12170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1081.25317, 1257.22290, 1810.92761,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(983, 1079.39893, 1259.77588, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1079.40552, 1253.39905, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1079.42847, 1247.01428, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1083.17627, 1259.75562, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1083.17749, 1253.37231, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1083.19250, 1246.99988, 1811.70850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1066.39014, 1242.78894, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1072.75195, 1242.77966, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1075.94568, 1242.75989, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1070.51196, 1263.09448, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1075.31079, 1263.08496, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1096.05591, 1263.07019, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1089.67700, 1263.06201, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1086.50598, 1263.03625, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1095.97498, 1242.93933, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1089.58533, 1242.91089, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1086.40356, 1242.91748, 1811.80054,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1099.25879, 1259.87781, 1811.80054,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1099.27576, 1253.49426, 1811.80054,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1099.29639, 1247.09644, 1811.80054,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, 1065.28516, 1259.96655, 1807.85291,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9589, 1095.45239, 1250.17468, 1809.86938,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1105.14526, 1266.97070, 1809.68005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1095.00000, 1250.22803, 1812.79236,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 1094.16394, 1257.75549, 1806.95288,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 1082.85498, 1249.00000, 1806.95288,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1584, 1095.47986, 1251.40527, 1809.95288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 1103.21191, 1240.23657, 1816.06909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 1041.77832, 1243.93555, 1815.90222,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1614, 1109.71191, 1256.83289, 1810.44629,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(967, 1104.48865, 1261.02295, 1806.95288,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1584, 1105.29712, 1261.47961, 1806.95288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1108.52258, 1266.97070, 1810.90955,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1431, 1108.63977, 1262.09973, 1807.50049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1685, 1106.49573, 1264.87549, 1807.70288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 1106.34106, 1265.14270, 1808.45288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1584, 1108.07385, 1263.18079, 1806.95288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1271, 1109.36865, 1248.91638, 1807.30286,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, 1106.90588, 1249.63855, 1806.95288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 1110.20740, 1239.72852, 1800.60132,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1569, 1110.20227, 1242.72668, 1800.61133,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1508, 1603.90002, -1646.30005, 14.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1605.40002, -1643.00000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1607.50000, -1643.19995, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1609.30005, -1642.90002, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1607.69995, -1638.40002, 13.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1606.90002, -1638.40002, 13.40000,   0.00000, 0.00000, 0.00000);

//*********************SAPD interior*********************
CreateDynamicObject(19275, 252.97656, 112.52789, 1005.68018,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19172, 239.82813, 109.45617, 1004.81647,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19171, 252.97392, 112.51865, 1004.62677,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(1616, 240.28380, 107.48500, 1010.29999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2058, 262.23831, 107.10000, 1006.12506,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(971, 264.83127, 106.72861, 1004.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 222.17500, 119.46000, 1009.21503,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 258.54999, 117.67969, 1007.82001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 260.73926, 117.67969, 1007.82001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2612, 263.50000, 112.34961, 1005.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3857, 233.04500, 124.00000, 1013.00000,   0.00000, 0.00000, 315.00000);
CreateDynamicObject(3857, 232.73730, 124.00000, 1013.00000,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(1491, 225.06000, 115.95000, 1002.22998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 233.11000, 119.25000, 1002.22998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 236.81000, 119.25000, 1002.22998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3051, 275.77499, 122.65600, 1004.97937,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(3051, 275.75000, 121.50000, 1004.97937,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(1485, 227.89999, 125.30000, 1010.21002,   50.00000, 10.00000, 2.00000);
CreateDynamicObject(1510, 228.07321, 125.27845, 1010.15997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2196, 228.40015, 125.53178, 1010.13959,   0.00000, 0.00000, 29.77478);
CreateDynamicObject(2063, 262.95996, 107.40137, 1004.53998,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2043, 262.29138, 107.46166, 1004.09998,   0.00000, 0.00000, 294.36035);
CreateDynamicObject(2044, 262.99542, 107.55000, 1004.96002,   0.00000, 0.00000, 39.99573);
CreateDynamicObject(1672, 262.62598, 107.60000, 1005.37500,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1672, 262.81586, 107.48021, 1005.41998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14782, 267.76999, 109.30000, 1004.63324,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14782, 260.79980, 108.75000, 1004.63324,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2359, 263.54297, 107.39648, 1005.53003,   0.00000, 0.00000, 183.89465);
CreateDynamicObject(2038, 263.47906, 107.32552, 1004.51001,   270.00000, 0.00000, 29.91000);
CreateDynamicObject(2035, 262.61035, 107.39941, 1004.50000,   0.00000, 0.00000, 19.99512);
CreateDynamicObject(2690, 264.43100, 107.26506, 1003.97662,   0.00000, 0.00000, 312.13489);
CreateDynamicObject(2058, 262.98569, 107.09528, 1005.36926,   90.00000, 180.00549, 359.98352);
CreateDynamicObject(11631, 269.81250, 118.18945, 1004.86310,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2356, 269.14313, 117.66873, 1003.61719,   0.00000, 0.00000, 294.49548);
CreateDynamicObject(2094, 262.86523, 110.89941, 1003.60999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1886, 267.73999, 107.50000, 1007.40002,   20.00000, 0.00000, 235.00000);
CreateDynamicObject(1235, 270.03616, 116.56487, 1004.12024,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2606, 267.36914, 120.50684, 1004.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2606, 267.36914, 120.50684, 1005.04999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1738, 270.29001, 120.00000, 1004.27179,   0.00000, 0.00000, 269.27026);
CreateDynamicObject(2180, 265.50552, 120.28000, 1003.61719,   0.00000, 0.00000, 180.54053);
CreateDynamicObject(1788, 265.60001, 120.50000, 1004.48682,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1782, 265.59961, 120.50000, 1004.65002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2595, 264.21002, 120.37789, 1004.77405,   0.00000, 0.00000, 314.65002);
CreateDynamicObject(1785, 265.59961, 120.50977, 1004.84998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1840, 264.81204, 120.58030, 1004.41882,   0.00000, 0.00000, 105.60999);
CreateDynamicObject(1840, 265.70001, 120.56000, 1004.96265,   0.00000, 0.00000, 75.00000);
CreateDynamicObject(2356, 265.15482, 119.43829, 1003.61719,   0.00000, 0.00000, 34.19394);
CreateDynamicObject(4100, 246.51953, 119.39941, 1005.40002,   0.00000, 179.99451, 219.99023);
CreateDynamicObject(2933, 253.19922, 118.19922, 1005.79999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2933, 239.60001, 110.48000, 1005.79999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2101, 266.74893, 120.49599, 1005.28363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1886, 264.25000, 116.55000, 1007.29999,   30.00000, 0.00000, 140.00000);
CreateDynamicObject(2611, 268.47473, 116.05200, 1005.25000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1703, 243.10001, 107.60000, 1002.21875,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(4100, 232.84961, 128.50000, 1011.91998,   0.00000, 0.00000, 49.99878);
CreateDynamicObject(2595, 226.24515, 120.27544, 1011.28754,   0.00000, 0.00000, 77.72995);
CreateDynamicObject(3934, 1565.94946, -1701.00000, 27.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1565.94922, -1646.02930, 27.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2953, 228.27797, 125.20470, 1010.14331,   0.00000, 0.00000, 143.45984);
CreateDynamicObject(2927, 217.91570, 116.39417, 999.79999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2591, 220.00000, 120.70000, 999.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, 214.30000, 118.90000, 998.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2724, 214.89999, 117.50000, 998.59998,   0.00000, 0.00000, 179.75000);
CreateDynamicObject(1721, 213.80000, 121.30000, 998.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1721, 213.80000, 122.00000, 998.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1721, 213.80000, 122.70000, 998.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1721, 213.80000, 123.50000, 998.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(15038, 219.00000, 124.10000, 998.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(15038, 214.20000, 126.50000, 998.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3089, 1564.09998, -1667.30005, 28.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2591, 221.30048, 116.52026, 999.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2591, 225.06177, 116.45817, 999.19995,   0.00000, 0.00000, 90.00000);

//*********************SAPD Dillimore*********************
CreateDynamicObject(1536, 321.42999, 301.91000, 998.12000,   0.00000, 0.02000, 0.00000);
CreateDynamicObject(19302, 320.89999, 313.01999, 999.40997,   0.00000, 0.00000, -90.24000);
CreateDynamicObject(19302, 320.89001, 317.10001, 999.40997,   0.00000, 0.00000, -90.24000);
CreateDynamicObject(19303, 320.89999, 311.34000, 999.40002,   0.00000, 0.00000, -89.94000);
CreateDynamicObject(19303, 320.89999, 315.32999, 999.40002,   0.00000, 0.00000, -89.94000);
CreateDynamicObject(19304, 320.89001, 312.22000, 1001.25000,   0.00000, 0.00000, 90.24000);
CreateDynamicObject(19304, 320.89001, 316.23001, 1001.25000,   0.00000, 0.00000, 90.24000);

//*********************SAPD prisión*********************
CreateDynamicObject(14412, 1424.09961, -1560.39941, 4348.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2928, 1441.69922, -1567.09961, 4340.39990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2928, 1441.69995, -1569.69995, 4340.39990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(980, 1411.30005, -1550.40002, 4346.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1422.80005, -1550.30005, 4346.10010,   0.00000, 0.00000, 359.75000);
CreateDynamicObject(980, 1431.39941, -1550.29980, 4346.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1431.50000, -1570.50000, 4346.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1420.50000, -1570.50000, 4346.10010,   0.00000, 0.00000, 0.25000);
CreateDynamicObject(980, 1409.09961, -1570.50000, 4346.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1410.29980, -1532.19922, 4341.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1418.09961, -1532.19922, 4341.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1426.09998, -1532.19995, 4341.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1434.09961, -1532.09961, 4341.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1427.79980, -1552.29980, 4343.20020,   0.00000, 270.00000, 90.24719);
CreateDynamicObject(14407, 1403.29980, -1553.50000, 4340.10010,   0.00000, 0.00000, 179.49463);
CreateDynamicObject(980, 1437.19922, -1556.00000, 4346.10010,   0.00000, 0.00000, 270.24719);
CreateDynamicObject(980, 1437.29980, -1564.69922, 4346.10010,   0.00000, 0.00000, 270.24719);
CreateDynamicObject(7191, 1410.09961, -1589.39941, 4341.10010,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(7191, 1418.09961, -1589.29980, 4341.10010,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(7191, 1425.80005, -1589.40002, 4341.20020,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(7191, 1433.90002, -1589.30005, 4341.10010,   0.00000, 0.00000, 180.24451);
CreateDynamicObject(7191, 1419.09998, -1569.19995, 4343.20020,   0.00000, 270.00000, 89.74716);
CreateDynamicObject(8656, 1419.00000, -1567.00000, 4328.10010,   270.00000, 180.00000, 89.75006);
CreateDynamicObject(8656, 1421.09998, -1567.00000, 4328.10010,   270.00000, 180.00150, 90.00430);
CreateDynamicObject(8656, 1427.09998, -1567.09998, 4328.29980,   270.00000, 180.00000, 90.00000);
CreateDynamicObject(8656, 1429.09998, -1567.09998, 4328.29980,   270.00000, 180.00000, 90.00000);
CreateDynamicObject(8656, 1411.50000, -1567.09998, 4328.20020,   270.00000, 180.00153, 89.75427);
CreateDynamicObject(8656, 1413.69922, -1567.09961, 4328.20020,   270.00000, 179.99451, 89.74731);
CreateDynamicObject(8656, 1411.69922, -1554.50000, 4328.20020,   270.00000, 179.99451, 89.74731);
CreateDynamicObject(8656, 1413.89941, -1554.50000, 4328.20020,   270.00000, 179.99451, 89.74731);
CreateDynamicObject(8656, 1419.50000, -1554.50000, 4328.20020,   270.00000, 180.00150, 89.75427);
CreateDynamicObject(8656, 1421.69922, -1554.50000, 4328.20020,   270.00000, 179.99451, 89.74731);
CreateDynamicObject(8656, 1432.69995, -1554.40002, 4328.10010,   270.00000, 179.99451, 89.74731);
CreateDynamicObject(8656, 1430.50000, -1554.39941, 4328.10010,   270.00000, 180.00000, 269.74731);
CreateDynamicObject(1649, 1401.19995, -1562.69995, 4345.29980,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(1649, 1401.19995, -1558.69995, 4345.29980,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(1649, 1401.19995, -1554.50000, 4345.29980,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(1649, 1401.19995, -1566.69995, 4345.20020,   0.00000, 0.00000, 89.74731);
CreateDynamicObject(1649, 1400.90002, -1566.90002, 4345.39990,   0.00000, 0.00000, 269.49731);
CreateDynamicObject(1649, 1400.90002, -1562.80005, 4345.39990,   0.00000, 0.00000, 269.99463);
CreateDynamicObject(1649, 1400.90002, -1558.69995, 4345.39990,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(1649, 1400.90002, -1554.69995, 4345.39990,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(984, 1407.79980, -1567.19922, 4343.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(984, 1420.69922, -1567.19922, 4343.89990,   0.00000, 0.00000, 269.24744);
CreateDynamicObject(984, 1430.79980, -1567.29980, 4343.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2605, 1399.00000, -1551.80005, 4343.70020,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2612, 1400.69995, -1551.50000, 4345.39990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2614, 1401.40002, -1560.80005, 4348.29980,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(2356, 1400.40002, -1552.00000, 4343.29980,   0.00000, 0.00000, 82.75000);
CreateDynamicObject(2604, 1394.80005, -1546.90002, 4344.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1407.09998, -1550.40002, 4348.79980,   0.00000, 0.00000, 180.50000);
CreateDynamicObject(2608, 1393.00000, -1550.19995, 4345.89990,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(2610, 1393.00000, -1550.80005, 4344.10010,   0.00000, 0.00000, 89.25000);
CreateDynamicObject(2610, 1393.00000, -1550.30005, 4344.10010,   0.00000, 0.00000, 89.24744);
CreateDynamicObject(2610, 1393.00000, -1549.80005, 4344.10010,   0.00000, 0.00000, 89.24744);
CreateDynamicObject(1723, 1393.40002, -1556.59998, 4343.29980,   0.00000, 0.00000, 89.25000);
CreateDynamicObject(1723, 1393.40002, -1560.09998, 4343.29980,   0.00000, 0.00000, 89.24744);
CreateDynamicObject(2762, 1407.09998, -1571.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2762, 1407.09998, -1569.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2762, 1407.09998, -1567.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2762, 1403.19995, -1567.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2762, 1403.19995, -1569.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2762, 1403.19995, -1571.69995, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1844, 1401.50000, -1564.40002, 4339.20020,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(1886, 1404.90002, -1568.00000, 4343.20020,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(955, 1401.30005, -1562.19995, 4339.60010,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(2342, 1407.09998, -1567.19995, 4340.12988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1410.90002, -1568.90002, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1416.69995, -1573.30005, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2603, 1419.69995, -1573.00000, 4339.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2603, 1424.69995, -1572.50000, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1432.80005, -1572.30005, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1430.19995, -1572.30005, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1433.19995, -1548.09998, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1433.19995, -1552.50000, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1419.40002, -1548.09998, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1419.40002, -1552.30005, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1411.40002, -1552.50000, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1413.19995, -1552.50000, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2738, 1410.80005, -1547.19995, 4339.79980,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(2738, 1423.30005, -1546.80005, 4339.79980,   0.00000, 0.00000, 0.74951);
CreateDynamicObject(2738, 1429.30005, -1546.90002, 4339.79980,   0.00000, 0.00000, 0.74707);
CreateDynamicObject(2738, 1426.59998, -1568.09998, 4339.79980,   0.00000, 0.00000, 0.74707);
CreateDynamicObject(2738, 1419.50000, -1568.00000, 4339.79980,   0.00000, 0.00000, 0.74707);
CreateDynamicObject(2738, 1410.69995, -1573.00000, 4339.79980,   0.00000, 0.00000, 90.99707);
CreateDynamicObject(2684, 1400.19995, -1546.50000, 4345.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2588, 1416.40002, -1546.40002, 4341.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2587, 1420.40002, -1546.40002, 4341.70020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2928, 1392.80005, -1569.69995, 4344.60010,   0.00000, 0.00000, 270.25000);
CreateDynamicObject(2928, 1392.80005, -1567.19995, 4344.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1280, 1441.00000, -1550.19995, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1441.00000, -1554.19995, 4339.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2181, 1397.09998, -1546.90002, 4343.29980,   0.00000, 0.00000, 0.00000);
//******************Bloodz Interior******************************
CreateDynamicObject(14756, -829.09961, 477.29980, 1867.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2523, -830.90002, 484.20001, 1865.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2525, -833.70001, 484.89999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1208, -830.79999, 485.29999, 1865.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1738, -834.09998, 483.29999, 1866.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1778, -833.79999, 480.00000, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2517, -832.90002, 481.60001, 1865.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2742, -830.90002, 479.70001, 1867.40002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2311, -833.70020, 469.59961, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2311, -833.70001, 470.70001, 1865.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1711, -834.00000, 473.79999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, -833.70001, 472.00000, 1866.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1711, -835.29999, 471.79999, 1865.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1711, -835.29999, 469.39999, 1865.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1711, -833.40002, 468.10001, 1865.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1711, -831.90002, 468.29999, 1865.80005,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1711, -830.70001, 470.00000, 1865.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1669, -832.20001, 469.60001, 1866.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1951, -832.59998, 469.70001, 1866.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1736, -832.50000, 475.00000, 1868.94739,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, -833.29999, 469.60001, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, -833.40002, 470.70001, 1866.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, -833.40002, 471.29999, 1866.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, -833.40002, 471.89999, 1866.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -836.29999, 474.89999, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -835.90002, 474.89999, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -836.29999, 474.50000, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -835.79999, 474.50000, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -835.50000, 474.79999, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -836.09998, 474.20001, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, -836.40002, 474.00000, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2296, -830.09961, 474.90039, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2628, -820.59998, 467.89999, 1865.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2628, -821.79999, 467.89999, 1865.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2816, -833.50000, 469.70001, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, -833.59998, 470.70001, 1866.32996,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1551, -833.70001, 471.20001, 1866.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2837, -833.70001, 470.50000, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2839, -832.40002, 469.70001, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2840, -833.79999, 471.39999, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(926, -831.00000, 474.79999, 1866.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(924, -826.90002, 467.29999, 1866.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1985, -828.00000, 467.79999, 1869.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -833.20001, 475.20001, 1865.81995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2338, -820.50000, 474.60001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2335, -821.50000, 474.60001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2334, -822.40002, 474.60001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2159, -823.77100, 474.89001, 1865.81995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, -823.96820, 474.58401, 1866.31995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2147, -824.76001, 474.70001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2149, -821.59998, 474.70001, 1867.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2144, -820.40002, 473.60001, 1865.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2334, -820.59998, 473.00000, 1865.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2334, -820.59998, 472.00000, 1865.80005,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(1828, -832.29999, 471.29999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2336, -820.59998, 471.00000, 1865.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2337, -825.70001, 474.60001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2629, -823.40039, 467.70020, 1865.80005,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2629, -825.09998, 467.70001, 1865.80005,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2943, -836.20001, 467.39999, 1866.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2941, -820.50000, 472.00000, 1867.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2915, -824.09998, 467.79999, 1865.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2915, -824.09998, 468.20001, 1865.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2228, -829.70001, 467.00000, 1866.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2228, -830.20001, 467.00000, 1866.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2237, -833.50000, 475.00000, 1866.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -830.20001, 475.00000, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.90002, 475.00000, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.59998, 475.00000, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.29999, 475.00000, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -830.20001, 474.89999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.90002, 474.89999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.59998, 474.89999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.29999, 474.89999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -830.20001, 474.79999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.90002, 474.79999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.59998, 474.79999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -829.29999, 474.79999, 1868.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2059, -832.79999, 469.50000, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2057, -825.70001, 474.70001, 1867.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, -830.83496, 474.56641, 1866.01392,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, -828.70001, 475.00000, 1868.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, -828.59998, 474.70001, 1868.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, -833.50000, 469.29999, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, -833.59998, 470.89999, 1866.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1210, -835.29999, 470.50000, 1865.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2045, -831.90002, 469.60001, 1866.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2045, -834.00000, 472.10001, 1866.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2695, -833.70001, 475.00000, 1868.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2696, -827.09998, 475.00000, 1868.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2691, -822.59998, 475.00000, 1868.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2843, -833.09998, 483.79999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2843, -832.70001, 477.29999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2844, -830.00000, 472.79999, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2845, -824.90002, 470.20001, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2846, -832.70001, 473.00000, 1865.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1510, -832.70001, 469.39999, 1866.40002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1510, -835.20001, 471.10001, 1865.90002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1510, -833.29999, 473.60001, 1866.65002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, -830.90002, 469.29999, 1866.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2987, -828.40002, 477.29999, 1867.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2025, -826.75092, 473.38531, 1865.80261,   0.00000, 0.00000, 270.00000);


//*********************FBI interior*********************
CreateDynamicObject(1536, 293.27246, -1481.46582, -34.53342,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1536, 290.27832, -1481.50488, -34.53342,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1776, 291.19232, -1512.44006, -45.03079,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14858, 309.24609, -1498.32813, -29.38236,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14596, 294.02930, -1490.56836, -35.43539,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(14602, 291.64355, -1505.73730, -40.76299,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(14593, 308.32129, -1535.68750, -43.80563,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(8231, 308.96191, -1496.32617, -38.62692,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 300.22046, -1490.45020, -40.34618,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 300.22144, -1495.39575, -40.34618,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 300.21777, -1492.38110, -38.05657,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1523, 300.42981, -1495.13428, -40.51028,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, 317.16406, -1489.74243, -40.33905,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(18001, 300.45490, -1489.20227, -38.69903,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8169, 300.41653, -1489.28137, -37.95204,   73.49854, 270.00000, 179.99451);
CreateDynamicObject(2197, 300.78769, -1490.73352, -40.85678,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2197, 300.78659, -1489.06946, -40.85678,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2197, 300.78653, -1487.39941, -40.85678,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2515, 300.82123, -1491.78662, -39.25311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2515, 300.81488, -1490.82837, -39.25311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2515, 300.80893, -1489.84216, -39.25311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2515, 300.80908, -1488.83655, -39.25311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 313.09998, -1491.99609, -39.72720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2957, 314.01480, -1489.76111, -38.71026,   0.00000, 90.00000, 0.31311);
CreateDynamicObject(2957, 312.46732, -1491.96643, -38.71386,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2957, 312.46869, -1491.96606, -38.47619,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2957, 318.77011, -1489.75574, -38.71026,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2957, 317.91895, -1489.73242, -36.22134,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2602, 310.02234, -1498.55774, -39.60855,   0.00000, 0.00000, 225.12634);
CreateDynamicObject(2602, 311.27765, -1498.55688, -39.60855,   0.00000, 0.00000, 225.12085);
CreateDynamicObject(2602, 312.52237, -1498.55688, -39.60855,   0.00000, 0.00000, 225.12085);
CreateDynamicObject(2741, 300.51300, -1487.71777, -38.53913,   0.00000, 0.00000, 90.19226);
CreateDynamicObject(2742, 300.63559, -1493.05334, -38.75523,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2685, 300.49490, -1495.37646, -38.65333,   0.00000, 0.00000, 90.04395);
CreateDynamicObject(1522, 276.98993, -1506.53882, -46.13738,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3798, 301.63208, -1521.53662, -48.13918,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14420, 301.31415, -1504.62549, -25.47793,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 296.75616, -1490.17004, -28.86031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 299.82715, -1492.76855, -28.86031,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2952, 299.73285, -1476.11963, -28.81253,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2952, 299.73013, -1473.99280, -28.81253,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10558, 307.77490, -1490.10229, -26.71455,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(10558, 303.61008, -1474.12097, -26.71455,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(12814, 313.29492, -1478.75098, -28.73871,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(12814, 313.79980, -1473.21289, -34.54065,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5066, 310.43295, -1484.74878, -33.05167,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14598, 303.44128, -1505.88110, -30.57251,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, 305.25082, -1489.78857, -28.86031,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2395, 301.95947, -1490.32166, -28.86031,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 301.95996, -1494.03027, -28.86031,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 303.02164, -1495.31763, -28.86031,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(10558, 299.79709, -1485.71167, -26.71455,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10558, 299.79199, -1477.44434, -26.71455,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10558, 308.07742, -1477.47681, -26.71455,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10558, 308.07962, -1485.49146, -26.71455,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 303.70001, -1495.32324, -34.54189,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, 303.47012, -1481.95264, -34.54189,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 303.47064, -1485.67786, -34.54189,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 303.47104, -1489.40173, -34.54189,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 303.47223, -1493.12512, -34.54189,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 300.50919, -1485.34570, -34.54189,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 300.50699, -1489.05408, -34.54189,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 300.50998, -1492.77002, -34.54189,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 300.50824, -1484.68982, -34.54189,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14782, 309.60202, -1543.15442, -45.20715,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14782, 309.58765, -1536.19519, -45.20715,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1827, 305.07129, -1533.61816, -46.13375,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 304.16956, -1531.93152, -45.50745,   0.00000, 0.00000, 117.60995);
CreateDynamicObject(1811, 305.66730, -1531.85889, -45.50745,   0.00000, 0.00000, 69.65366);
CreateDynamicObject(16000, 309.58936, -1500.71423, -26.22245,   270.00000, 0.00000, 90.00000);
CreateDynamicObject(16000, 310.02539, -1492.14258, -31.78104,   270.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 309.09744, -1546.07031, -46.13375,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 309.09747, -1542.33789, -46.13375,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 309.09802, -1538.61096, -46.13375,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 309.09781, -1534.87769, -46.13375,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 309.09717, -1534.07751, -46.13375,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, 308.94421, -1531.32495, -46.13555,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 308.94485, -1535.05347, -46.13555,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 308.94528, -1538.78503, -46.13555,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 308.94180, -1542.47778, -46.13555,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, 308.94659, -1543.31519, -46.13555,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1432, 307.47852, -1544.94922, -46.13375,   0.00000, 0.00000, 350.07385);
CreateDynamicObject(1703, 297.30396, -1520.81726, -46.12368,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1703, 298.31497, -1517.79614, -46.12368,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2725, 298.29297, -1520.72168, -45.69049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 309.10547, -1505.52637, -46.12368,   0.00000, 0.00000, 105.87994);
CreateDynamicObject(2190, 307.29688, -1506.07813, -45.40362,   0.00000, 0.00000, 104.99634);
CreateDynamicObject(1892, 278.57611, -1506.30029, -46.13018,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 304.49936, -1504.94629, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 304.50589, -1506.51086, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 302.58798, -1506.51135, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 303.51633, -1503.98291, -45.61295,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 302.57733, -1503.02441, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 301.60446, -1505.54932, -45.61295,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 300.64789, -1503.04053, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 299.66089, -1503.99854, -45.61295,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 298.72501, -1504.95776, -45.61115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 300.66803, -1506.51233, -45.61115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 298.75299, -1506.51001, -45.61295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12814, 309.92465, -1460.12158, -34.53705,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8169, 304.51584, -1444.51807, -32.52924,   107.00000, 90.00000, 180.00000);
CreateDynamicObject(8169, 304.51294, -1449.76050, -32.52924,   106.99585, 90.00000, 179.99451);
CreateDynamicObject(8169, 313.10474, -1444.55774, -32.52924,   106.99588, 90.00000, 0.00000);
CreateDynamicObject(8169, 313.10541, -1449.97327, -32.52924,   106.99585, 90.00000, 0.00000);
CreateDynamicObject(8169, 301.08429, -1441.09985, -32.52924,   106.99588, 90.00000, 270.00000);
CreateDynamicObject(8169, 300.08203, -1441.09961, -32.52924,   106.99585, 90.00000, 270.00000);
CreateDynamicObject(8169, 316.52737, -1441.10034, -32.52924,   106.99588, 90.00000, 270.00000);
CreateDynamicObject(8169, 319.76895, -1441.10217, -32.52924,   106.99585, 90.00000, 270.00000);
CreateDynamicObject(8169, 321.71503, -1444.51538, -32.52924,   106.99585, 90.00000, 179.99451);
CreateDynamicObject(8169, 321.71609, -1451.29590, -32.52924,   106.99585, 90.00000, 179.99451);
CreateDynamicObject(8169, 296.79657, -1444.37244, -32.52924,   106.99585, 90.00000, 0.00000);
CreateDynamicObject(8169, 296.80148, -1451.28528, -32.52924,   106.99585, 90.00000, 0.00000);
CreateDynamicObject(14856, 309.25754, -1451.73975, -32.65511,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8169, 314.25317, -1444.62646, -32.52924,   106.99588, 90.00000, 90.00000);
CreateDynamicObject(8169, 304.31836, -1444.62305, -32.52924,   106.99585, 90.00000, 90.00000);
CreateDynamicObject(2957, 308.80405, -1453.56689, -32.47067,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2957, 305.55273, -1453.56543, -30.41306,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 311.57227, -1453.56543, -30.41333,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 305.67441, -1453.56250, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 310.42267, -1453.56958, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 304.04526, -1453.56958, -32.47067,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2957, 313.55475, -1453.56702, -32.47067,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 308.91376, -1451.29419, -32.86350,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 308.91309, -1451.29395, -32.86350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8169, 308.91879, -1450.16956, -32.52924,   106.99588, 90.00000, 180.00000);
CreateDynamicObject(1649, 308.91669, -1451.29419, -29.60837,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 308.91129, -1451.29431, -29.60297,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14532, 309.53400, -1452.88831, -33.54652,   0.00000, 0.00000, 315.00000);
CreateDynamicObject(1671, 311.07065, -1450.01331, -34.06903,   0.00000, 0.00000, 311.60889);
CreateDynamicObject(1671, 311.91443, -1451.20056, -34.06903,   0.00000, 0.00000, 282.31018);
CreateDynamicObject(1810, 305.47702, -1450.94470, -34.52924,   0.00000, 0.00000, 87.65491);
CreateDynamicObject(1810, 307.89423, -1451.39429, -34.52924,   0.00000, 0.00000, 273.15955);
CreateDynamicObject(1827, 306.67139, -1451.28918, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2009, 290.45792, -1468.11609, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2197, 286.46552, -1467.00256, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2200, 292.76733, -1469.83777, -34.52298,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2204, 287.41705, -1471.50623, -34.52298,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 290.53604, -1467.20203, -34.52298,   0.00000, 0.00000, 289.61609);
CreateDynamicObject(1778, 329.46222, -1474.47827, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1771, 328.46613, -1476.94348, -33.88932,   0.00000, 0.00000, 268.69885);
CreateDynamicObject(1337, 322.30862, -1474.60803, -33.87376,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1338, 326.28952, -1476.88672, -33.81167,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1440, 324.06448, -1476.95020, -34.00387,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1265, 325.22684, -1476.19226, -34.05394,   0.00000, 0.00000, 296.25525);
CreateDynamicObject(1264, 323.25726, -1474.70032, -34.05084,   0.00000, 0.00000, 279.02832);
CreateDynamicObject(11631, 329.22162, -1468.77942, -33.27708,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2607, 325.18939, -1468.12915, -34.12730,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2356, 328.48495, -1469.47021, -34.52298,   0.00000, 0.00000, 303.83496);
CreateDynamicObject(2207, 303.88574, -1480.73438, -28.73090,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 305.63840, -1481.56812, -28.75525,   0.00000, 0.00000, 286.04431);
CreateDynamicObject(2190, 303.95975, -1482.46375, -27.95353,   0.00000, 0.00000, 111.03888);
CreateDynamicObject(2311, 304.88086, -1489.10547, -28.73090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2700, 300.06006, -1481.78223, -25.16612,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 301.89276, -1493.61792, -31.40268,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1893, 301.88687, -1486.12085, -31.40268,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1893, 301.28696, -1483.02026, -31.40268,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2007, 285.47372, -1461.86902, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2007, 285.47827, -1465.82227, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2008, 289.19281, -1463.93909, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 290.24304, -1463.02393, -34.52298,   0.00000, 0.00000, 289.61609);
CreateDynamicObject(2608, 292.67316, -1465.32288, -33.81932,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2609, 292.52435, -1461.60767, -33.79909,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2191, 292.37973, -1462.93567, -34.53080,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16662, 309.20010, -1463.23413, -24.77414,   63.39999, 90.00000, 270.00000);
CreateDynamicObject(1668, 304.25623, -1480.90881, -27.78682,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 303.82895, -1481.18970, -27.95353,   0.00000, 0.00000, 65.86511);
CreateDynamicObject(2852, 303.61880, -1482.01404, -27.95353,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1736, 307.49341, -1481.78394, -25.27207,   0.00000, 0.00000, 269.48694);
CreateDynamicObject(2491, 308.43945, -1467.54590, -35.16663,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1730, 300.42053, -1474.60669, -28.73090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2204, 301.84946, -1474.26086, -28.73090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2200, 302.21353, -1474.26831, -26.94275,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1703, 304.62122, -1474.67419, -28.73090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12814, 313.29492, -1478.75098, -24.23484,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2002, 302.75833, -1489.31335, -28.73090,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2288, 300.29425, -1479.18030, -26.33251,   0.00000, 0.00000, 90.09882);
CreateDynamicObject(2007, 314.12897, -1505.99866, -46.13018,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1806, 312.65527, -1512.03027, -46.12368,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1806, 312.62912, -1518.00183, -46.12368,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1806, 312.64999, -1499.31555, -46.12368,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1806, 312.67896, -1493.98633, -46.12368,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2190, 310.62238, -1512.26941, -45.21636,   0.00000, 0.00000, 104.99631);
CreateDynamicObject(2190, 310.59692, -1518.19751, -45.21636,   0.00000, 0.00000, 104.99631);
CreateDynamicObject(2190, 310.74307, -1499.55859, -45.21636,   0.00000, 0.00000, 104.99631);
CreateDynamicObject(2190, 310.70114, -1494.10925, -45.21636,   0.00000, 0.00000, 104.99634);
CreateDynamicObject(1886, 308.70673, -1467.93701, -30.56187,   16.16791, 0.19574, 179.06506);
CreateDynamicObject(2747, 308.48376, -1472.51135, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2747, 310.08023, -1472.51135, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2747, 306.88693, -1472.51135, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2747, 306.88693, -1473.50244, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2747, 308.48376, -1473.50244, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2747, 310.08023, -1473.50244, -34.11669,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 306.94727, -1474.57141, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 308.53702, -1474.58838, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 310.08981, -1474.62012, -34.52924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 310.13596, -1471.40625, -34.52924,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1806, 308.49731, -1471.39832, -34.52924,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1806, 306.94650, -1471.37988, -34.52924,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1806, 305.62155, -1473.00012, -34.52924,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1806, 311.44116, -1472.99316, -34.52924,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16782, 322.13434, -1469.29297, -32.56003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2611, 325.91858, -1473.77783, -32.58835,   0.00000, 0.00000, 179.93066);
CreateDynamicObject(14527, 304.30048, -1480.94714, -26.86862,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 289.17578, -1474.82629, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 290.23767, -1474.06458, -34.53080,   0.00000, 0.00000, 300.22510);
CreateDynamicObject(2182, 292.43323, -1475.33679, -34.53080,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2000, 285.47577, -1472.12134, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2000, 285.47577, -1472.64124, -34.53080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14632, 321.33325, -1475.83569, -33.03473,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2186, 329.36142, -1464.33728, -34.52298,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2206, 329.35077, -1471.45605, -34.52298,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2606, 329.50375, -1472.36731, -33.36120,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2612, 304.02515, -1463.07300, -32.50023,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2611, 314.25363, -1463.07300, -32.39288,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 323.52783, -1485.03967, -34.52298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 322.35117, -1485.02930, -34.52298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 321.10071, -1485.05798, -34.52298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 325.25961, -1481.93445, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 325.27322, -1480.63782, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 325.24454, -1479.48413, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1808, 317.90686, -1482.45349, -34.52298,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(15038, 325.23392, -1478.51025, -33.90580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 317.07242, -1498.25427, -37.11650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 281.14285, -1481.05762, -31.00307,   0.00000, 0.00000, 267.23352);
CreateDynamicObject(1616, 318.01691, -1485.05334, -31.00307,   0.00000, 0.00000, 267.23145);
CreateDynamicObject(1616, 277.92636, -1509.63354, -43.22993,   0.00000, 0.00000, 267.23145);

//*********************SAEM CAMPO LV*********************
CreateDynamicObject(3866, -10.30000, 1915.80005, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3866, 16.10000, 1915.30005, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3887, -18.10000, 1878.50000, 24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8150, -29.39941, 1879.39941, 19.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8150, 33.60000, 1941.79980, 19.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8150, 33.20000, 1816.19995, 19.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3459, 96.70000, 1941.80005, 24.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3875, -29.00000, 1817.50000, 24.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3875, 96.30000, 1817.00000, 24.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3875, -29.10000, 1941.50000, 24.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 96.09961, 1817.09961, 31.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, -29.20000, 1817.50000, 31.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, -29.30000, 1941.59998, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4106, 5.98926, 1921.69922, 27.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(982, 22.10000, 1919.69995, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 32.80000, 1919.69995, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(997, 35.80000, 1920.19995, 29.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1237, 28.80000, 1924.59998, 24.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 28.70000, 1920.69995, 24.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12958, 23.50000, 1924.50000, 19.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 21.50000, 1925.00000, 24.00000,   345.00000, 90.00000, 90.00000);
CreateDynamicObject(997, 20.00000, 1924.50000, 23.60000,   0.00000, 344.00000, 0.00000);
CreateDynamicObject(944, 16.70000, 1916.90002, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(944, 16.60000, 1906.40002, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(944, 22.10000, 1913.69995, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(944, 22.10000, 1909.19995, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(944, -10.90000, 1914.09998, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(944, -10.60000, 1924.40002, 17.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(935, 15.50000, 1918.90002, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(935, -22.70000, 1925.59998, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(935, -9.80000, 1912.09998, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18260, 10.10000, 1926.09998, 18.20000,   0.00000, 0.00000, 170.00000);
CreateDynamicObject(930, -3.30000, 1925.80005, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(930, -4.50000, 1925.80005, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(930, 9.20000, 1905.30005, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(930, 7.90000, 1905.30005, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3576, 1.80000, 1911.00000, 18.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3576, 6.30000, 1917.30005, 18.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3577, -4.30000, 1918.80005, 17.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, -9.10000, 1911.40002, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, -9.69922, 1911.00000, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, 15.00000, 1925.00000, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, 5.50000, 1915.40002, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, 16.30000, 1915.09998, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8843, 4.79980, 1914.00000, 16.70000,   0.00000, 0.00000, 79.99695);
CreateDynamicObject(1278, -23.10000, 1913.00000, 30.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 29.10000, 1918.00000, 30.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3350, 16.20000, 1924.80005, 20.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3350, -10.40000, 1912.40002, 23.20000,   0.00000, 0.00000, 129.99573);
CreateDynamicObject(3350, -18.60000, 1906.69995, 24.70000,   0.00000, 0.00000, 129.00000);
CreateDynamicObject(3077, -7.20000, 1925.69995, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, 0.50000, 1924.39941, 17.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -12.40000, 1914.30005, 17.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -12.20000, 1924.40002, 17.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -16.20000, 1919.19995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 0.29980, 1909.09961, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, 4.60000, 1916.09998, 17.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -6.50000, 1917.19995, 17.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -17.30000, 1906.19995, 16.60000,   0.00000, 0.00000, 130.00000);
CreateDynamicObject(1586, -22.40000, 1907.09998, 16.60000,   0.00000, 0.00000, 129.99573);
CreateDynamicObject(3632, -12.10000, 1924.40002, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, -12.29980, 1914.19922, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, 0.60000, 1924.50000, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, -6.40000, 1917.19995, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3632, 4.70000, 1916.00000, 17.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3864, -21.10000, 1909.59998, 30.80000,   0.00000, 0.00000, 200.00000);
CreateDynamicObject(3864, 7.00000, 1929.00000, 22.70000,   0.00000, 0.00000, 59.99634);
CreateDynamicObject(4106, -8.30000, 1889.69995, 27.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16774, 63.60000, 1841.69995, 18.20000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1586, -18.30000, 1829.80005, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -23.40000, 1842.59998, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 28.10000, 1828.90002, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -23.40000, 1821.40002, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -9.00000, 1826.50000, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 32.50000, 1824.00000, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -9.10000, 1843.40002, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -0.30000, 1822.80005, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -2.00000, 1848.50000, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 0.90000, 1838.09998, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3108, 34.40000, 1865.00000, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3077, 85.40000, 1847.80005, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2984, 71.00000, 1853.30005, 18.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2984, 71.00000, 1855.50000, 18.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2984, 71.00000, 1851.30005, 18.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2984, 71.00000, 1849.30005, 18.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, 4.29980, 1830.39941, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -16.40000, 1849.09998, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 8.20000, 1842.69995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 12.40000, 1826.80005, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 14.20000, 1845.80005, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, 18.40000, 1835.19995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1622, -9.60000, 1858.90002, 33.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1585, -1.70000, 1827.19995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1585, -6.70000, 1834.19995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1585, 35.80000, 1838.69995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1585, 26.20000, 1845.69995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1585, 1.90000, 1844.59998, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1585, 9.20000, 1835.69995, 16.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3361, -7.30000, 1876.00000, 18.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3361, -7.29980, 1870.00000, 22.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3887, -4.29980, 1885.89941, 24.90000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1318, -10.20000, 1907.40002, 19.10000,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(1318, -9.80000, 1900.30005, 19.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(8843, -15.00000, 1912.00000, 16.70000,   0.00000, 0.00000, 150.00000);
CreateDynamicObject(1318, -9.79980, 1900.29980, 19.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(1318, -6.10000, 1912.80005, 19.70000,   270.00000, 0.00000, 90.00000);
CreateDynamicObject(1586, -17.60000, 1877.50000, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -9.50000, 1873.30005, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -4.90000, 1872.30005, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -3.20000, 1885.30005, 23.70000,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(1586, -19.40000, 1876.59998, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -3.60000, 1872.19995, 23.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -3.30000, 1871.80005, 28.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -17.50000, 1862.90002, 23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1586, -17.70000, 1891.09998, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(944, -19.40000, 1878.80005, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(944, -3.10000, 1887.40002, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(944, -3.00000, 1885.59998, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(939, -23.10000, 1865.80005, 19.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(939, -24.90000, 1880.69995, 19.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3066, 2.30000, 1894.50000, 17.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2062, -1.00000, 1885.80005, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2062, 0.00000, 1885.80005, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2062, -21.70000, 1879.00000, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, -10.20000, 1907.00000, 29.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, -10.20000, 1881.40002, 29.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, -10.20000, 1865.40002, 29.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, -10.20000, 1862.90002, 29.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, -13.40000, 1919.80005, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, -19.80000, 1919.80005, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, -5.10000, 1919.69995, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1.30000, 1919.69995, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 6.10000, 1919.69995, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1237, -5.60000, 1879.09998, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, -8.80000, 1879.19995, 16.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1282, -6.20000, 1879.80005, 17.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1282, -8.30000, 1879.80005, 17.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3864, -5.40000, 1903.59998, 29.00000,   0.00000, 0.00000, 59.99634);
CreateDynamicObject(3864, 27.20000, 1906.50000, 22.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3864, -13.29980, 1860.69922, 29.00000,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(996, 30.90000, 1872.09998, 17.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(996, 26.30000, 1864.59998, 17.40000,   0.00000, 0.00000, 65.00000);
CreateDynamicObject(996, 26.30000, 1862.30005, 17.40000,   0.00000, 0.00000, 310.00000);
CreateDynamicObject(996, 32.70000, 1856.19995, 17.40000,   0.00000, 0.00000, 30.00000);
CreateDynamicObject(996, 40.50000, 1869.50000, 17.40000,   0.00000, 0.00000, 275.00000);
CreateDynamicObject(1215, 39.60000, 1871.19995, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 29.90000, 1871.90002, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 26.00000, 1863.50000, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 40.70000, 1861.00000, 17.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 31.10000, 1856.50000, 18.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16095, 92.60000, 1926.59998, 17.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1278, 83.50000, 1891.90002, 30.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 96.20000, 1941.59998, 31.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 92.80000, 1818.69995, 30.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, -29.50000, 1833.40002, 30.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1278, 47.60000, 1887.00000, 30.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3115, 373.40872, 1986.67773, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3115, 373.40820, 1964.92773, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3115, 373.40820, 1943.51294, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3115, 373.40820, 1922.23828, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 373.47861, 1922.23743, 17.84274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 373.47852, 1943.49878, 17.84274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 373.47852, 1964.93994, 17.84274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 373.47852, 1986.68677, 17.84274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5153, 365.49765, 1975.91833, 17.66381,   0.00000, 23.58499, 270.00000);
CreateDynamicObject(5153, 365.49707, 1954.41797, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(5153, 365.49707, 1932.66797, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(5153, 380.99707, 1932.66797, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(5153, 380.99707, 1954.41797, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(5153, 380.99707, 1975.66797, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(8572, 361.96191, 1966.92834, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8572, 361.96191, 1988.54028, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8572, 361.96191, 1945.44348, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8572, 361.96191, 1924.16211, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3934, 225.69238, 1881.49805, 16.62695,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 201.84863, 1881.49805, 16.62695,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 195.55176, 1834.80176, 22.22852,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 181.30176, 1834.80176, 22.22852,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8251, 339.86621, 1985.07617, 20.56844,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8251, 339.86621, 1954.32617, 20.56844,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(8251, 339.86621, 1924.19482, 20.56844,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3934, 214.31836, 1931.70703, 22.22852,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 199.32227, 1931.70703, 22.22852,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3115, 339.07037, 1898.16919, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3115, 339.07031, 1876.91895, 17.52946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 339.15417, 1898.23853, 17.84161,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 339.15332, 1876.93335, 17.84161,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5153, 330.91626, 1887.89771, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(5153, 346.93994, 1887.89746, 17.66381,   0.00000, 23.58215, 270.00000);
CreateDynamicObject(8572, 327.60913, 1900.00220, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8572, 327.60840, 1878.79395, 16.57840,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16137, 255.20703, 2020.55371, 16.64063,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16138, 228.29297, 2039.78027, 16.64063,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18274, 200.38672, 2022.47827, 16.64063,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18234, 199.06445, 1997.45569, 16.64063,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11492, 339.18524, 1854.61938, 16.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11492, 339.18262, 1842.16895, 16.80530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8038, 274.99512, 2078.70020, 26.14541,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 276.30273, 2047.54297, 49.78402,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 280.67871, 2047.55664, 47.93206,   0.00000, 90.00000, 269.99451);
CreateDynamicObject(1649, 280.70410, 2044.77344, 47.93206,   0.00000, 90.00000, 269.99451);
CreateDynamicObject(1649, 280.70410, 2050.25488, 47.93206,   0.00000, 90.00000, 269.99451);
CreateDynamicObject(1649, 279.03711, 2051.91504, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 273.58691, 2051.91504, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 276.27832, 2051.89844, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 271.92676, 2044.78418, 47.93206,   0.00000, 90.00000, 89.99451);
CreateDynamicObject(1649, 271.93555, 2050.25488, 47.93206,   0.00000, 90.00000, 89.99451);
CreateDynamicObject(1649, 273.58691, 2043.11816, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 279.03711, 2043.12793, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 276.27832, 2043.13477, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 280.72070, 2050.25488, 47.93206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1649, 280.72070, 2044.79004, 47.93206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1649, 279.05371, 2043.11914, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 276.27832, 2043.12598, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 273.58691, 2043.10938, 47.93206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 271.91797, 2044.77539, 47.93206,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(1649, 271.92676, 2050.25488, 47.93206,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(1649, 279.05371, 2051.92285, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 276.27832, 2051.91504, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 273.58691, 2051.92285, 47.93206,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, 271.93457, 2047.55664, 47.93206,   0.00000, 90.00000, 89.99451);
CreateDynamicObject(9819, 276.05957, 2050.54883, 46.35826,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16782, 272.38144, 2045.37402, 48.59831,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 278.32401, 2045.13916, 45.50478,   0.00000, 0.00000, 53.00000);
CreateDynamicObject(9819, 276.58789, 2044.49316, 46.35826,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 276.14789, 2044.91382, 45.50478,   0.00000, 0.00000, 332.95721);
CreateDynamicObject(1714, 273.89709, 2050.08472, 45.50478,   0.00000, 0.00000, 218.93884);
CreateDynamicObject(1714, 276.44690, 2049.85913, 45.50478,   0.00000, 0.00000, 150.79260);
CreateDynamicObject(16095, 282.36621, 2047.64160, 16.64063,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11631, 272.59885, 2046.80554, 46.75069,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 273.24222, 2047.59998, 45.50478,   0.00000, 0.00000, 142.77573);
CreateDynamicObject(1596, 275.30823, 2045.97632, 52.89407,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 280.69531, 2047.55664, 47.93206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1649, 271.92578, 2047.55664, 47.93206,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(964, 280.35428, 2048.18750, 44.88025,   270.00000, 180.00000, 270.00000);
CreateDynamicObject(8615, 169.41895, 1835.92676, 19.36531,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8615, 188.00641, 1932.39832, 19.43106,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16564, 228.07202, 1971.12109, 16.64063,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 227.28906, 2009.24414, 16.66999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16101, 228.07118, 2009.43530, 16.64063,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11245, 228.56006, 2009.23730, 24.43177,   0.00000, 289.84985, 338.16504);
CreateDynamicObject(2928, 233.58304, 1822.79883, 7.66294,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10764, 308.50977, 1748.53906, 19.04363,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(3934, 118.37077, 1836.56055, 16.64063,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16137, 245.95703, 2071.25464, 16.64063,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3108, 69.26209, 2503.05493, 15.48438,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16665, 442.55957, 2295.00854, 8903.91504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8150, 95.86000, 1870.98999, 17.86000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 128.58000, 1941.58997, 17.16000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 116.62000, 1941.57996, 17.16000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(987, 104.70000, 1941.57996, 17.16000,   0.00000, 0.00000, 219.99001);
CreateDynamicObject(8150, 179.36000, 1798.31995, 17.86000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 95.64000, 1807.94995, 16.64000,   0.00000, 0.00000, 319.98999);
CreateDynamicObject(987, 242.42999, 1798.18005, 16.65000,   0.00000, 0.00000, 1.99000);
CreateDynamicObject(987, 104.77000, 1800.28003, 16.64000,   0.00000, 0.00000, 349.98999);
CreateDynamicObject(987, 254.34000, 1798.55005, 16.65000,   0.00000, 0.00000, 1.98000);
CreateDynamicObject(987, 266.32001, 1798.94995, 16.65000,   0.00000, 0.00000, 311.98001);
CreateDynamicObject(987, 274.32999, 1790.07996, 16.65000,   0.00000, 0.00000, 329.98001);
CreateDynamicObject(987, 284.64999, 1784.07996, 16.65000,   0.00000, 0.00000, 359.97000);
CreateDynamicObject(987, 296.57999, 1784.06006, 16.65000,   0.00000, 0.00000, 359.97000);
CreateDynamicObject(987, 308.56000, 1784.07996, 16.65000,   0.00000, 0.00000, 359.97000);
CreateDynamicObject(987, 320.48001, 1784.03003, 16.65000,   0.00000, 0.00000, 29.97000);
CreateDynamicObject(987, 355.67999, 1807.81995, 16.73000,   0.00000, 0.00000, 91.97000);
CreateDynamicObject(3749, 348.14001, 1801.88000, 23.32000,   0.00000, 358.25000, 41.75000);
CreateDynamicObject(987, 330.82001, 1790.00000, 16.65000,   0.00000, 0.00000, 29.97000);
CreateDynamicObject(987, 355.29001, 1819.73999, 16.65000,   0.00000, 0.00000, 91.97000);
CreateDynamicObject(987, 354.85001, 1831.64001, 16.65000,   0.00000, 0.00000, 91.97000);
CreateDynamicObject(987, 354.42001, 1843.57996, 16.65000,   0.00000, 0.00000, 91.97000);
CreateDynamicObject(3749, 135.24001, 1941.68994, 24.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 354.03000, 1855.53003, 16.65000,   0.00000, 0.00000, 91.97000);
CreateDynamicObject(987, 353.64001, 1867.50000, 16.65000,   0.00000, 0.00000, 55.97000);
CreateDynamicObject(987, 360.34000, 1877.43005, 16.65000,   0.00000, 0.00000, 25.96000);
CreateDynamicObject(987, 371.09000, 1882.60999, 16.65000,   0.00000, 0.00000, 25.96000);
CreateDynamicObject(987, 381.82001, 1887.77002, 16.65000,   0.00000, 0.00000, 65.96000);
CreateDynamicObject(987, 386.70001, 1898.66003, 16.65000,   0.00000, 0.00000, 87.96000);
CreateDynamicObject(987, 387.10999, 1910.59998, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 387.57999, 1922.53003, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 387.98999, 1934.48999, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 388.42001, 1946.43005, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 388.82999, 1958.37000, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 389.26001, 1970.31006, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 389.66000, 1982.26001, 16.65000,   0.00000, 0.00000, 87.95000);
CreateDynamicObject(987, 390.12000, 1994.16003, 16.65000,   0.00000, 0.00000, 95.95000);
CreateDynamicObject(987, 388.92001, 2006.05005, 16.65000,   0.00000, 0.00000, 95.95000);
CreateDynamicObject(987, 387.70999, 2017.96997, 16.65000,   0.00000, 0.00000, 85.95000);
CreateDynamicObject(987, 388.56000, 2029.90002, 16.65000,   0.00000, 0.00000, 85.95000);
CreateDynamicObject(987, 389.38000, 2041.82996, 16.65000,   0.00000, 0.00000, 95.95000);
CreateDynamicObject(987, 388.14001, 2053.69995, 16.65000,   0.00000, 0.00000, 125.94000);
CreateDynamicObject(987, 381.12000, 2063.37012, 16.65000,   0.00000, 0.00000, 125.94000);
CreateDynamicObject(987, 374.13000, 2073.03003, 16.65000,   0.00000, 0.00000, 145.94000);
CreateDynamicObject(987, 364.26999, 2079.73999, 16.65000,   0.00000, 0.00000, 177.94000);
CreateDynamicObject(987, 352.32001, 2080.17993, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 340.38000, 2080.60010, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 328.42999, 2081.04004, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 316.48999, 2081.46997, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 304.56000, 2081.90991, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 292.62000, 2082.34009, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 280.67001, 2082.73999, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 268.72000, 2083.16992, 16.65000,   0.00000, 0.00000, 177.92999);
CreateDynamicObject(987, 256.73001, 2083.60010, 16.65000,   0.00000, 0.00000, 127.93000);
CreateDynamicObject(987, 249.42000, 2093.05005, 16.65000,   0.00000, 0.00000, 127.93000);
CreateDynamicObject(987, 242.07001, 2102.48999, 16.65000,   0.00000, 0.00000, 157.92999);
CreateDynamicObject(987, 231.00999, 2106.95996, 16.65000,   0.00000, 0.00000, 157.92999);
CreateDynamicObject(987, 219.96001, 2111.42993, 16.65000,   0.00000, 0.00000, 179.92999);
CreateDynamicObject(987, 208.03000, 2111.48999, 16.65000,   0.00000, 0.00000, 157.92000);
CreateDynamicObject(987, 196.98000, 2115.96997, 16.65000,   0.00000, 0.00000, 181.92000);
CreateDynamicObject(987, 185.06000, 2115.57007, 16.65000,   0.00000, 0.00000, 181.92000);
CreateDynamicObject(987, 173.12000, 2115.20996, 16.65000,   0.00000, 0.00000, 221.92000);
CreateDynamicObject(987, 164.24001, 2107.22998, 16.65000,   0.00000, 0.00000, 221.92000);
CreateDynamicObject(987, 155.34000, 2099.29004, 16.65000,   0.00000, 0.00000, 241.92000);
CreateDynamicObject(987, 149.72000, 2088.77002, 16.65000,   0.00000, 0.00000, 241.91000);
CreateDynamicObject(987, 144.09000, 2078.26001, 16.65000,   0.00000, 0.00000, 271.91000);
CreateDynamicObject(987, 144.48000, 2066.35010, 16.65000,   0.00000, 0.00000, 307.91000);
CreateDynamicObject(987, 151.82001, 2056.90991, 16.65000,   0.00000, 0.00000, 307.91000);
CreateDynamicObject(987, 159.19000, 2047.50000, 16.65000,   0.00000, 0.00000, 307.91000);
CreateDynamicObject(987, 166.53000, 2038.06995, 16.65000,   0.00000, 0.00000, 307.91000);
CreateDynamicObject(987, 173.87000, 2028.64001, 16.65000,   0.00000, 0.00000, 307.91000);
CreateDynamicObject(987, 181.25000, 2019.18994, 16.65000,   0.00000, 0.00000, 287.91000);
CreateDynamicObject(987, 184.89999, 2007.79004, 16.65000,   0.00000, 0.00000, 269.91000);
CreateDynamicObject(987, 184.88000, 1995.83997, 16.65000,   0.00000, 0.00000, 267.91000);
CreateDynamicObject(987, 184.45000, 1983.88000, 16.65000,   0.00000, 0.00000, 267.89999);
CreateDynamicObject(987, 184.00999, 1971.93005, 16.65000,   0.00000, 0.00000, 247.89999);
CreateDynamicObject(987, 179.50999, 1960.84998, 16.65000,   0.00000, 0.00000, 227.89999);
CreateDynamicObject(987, 171.50000, 1951.97998, 16.65000,   0.00000, 0.00000, 207.89999);
CreateDynamicObject(987, 160.91000, 1946.35999, 16.65000,   0.00000, 0.00000, 197.89999);
CreateDynamicObject(3475, 146.62000, 1941.60999, 19.79000,   0.00000, 0.00000, 288.00000);

//*********************SAEM exterior*********************
CreateDynamicObject(3626, 2740.43994, -2447.39990, 14.04000,   0.00000, 0.00000, 89.57000);
CreateDynamicObject(3626, 2746.34009, -2441.31006, 14.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1537, 2744.95996, -2442.96997, 12.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1537, 2742.18994, -2448.66992, 12.81000,   0.00000, 0.00000, 90.18000);
CreateDynamicObject(1537, 2747.83008, -2451.84009, 12.83000,   0.00000, 0.00000, 181.55000);
CreateDynamicObject(3749, 2338.48438, -2354.23096, 18.24123,   0.00000, 0.00000, 44.00000);
CreateDynamicObject(3749, 2274.45410, -2663.34277, 18.26919,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3749, 2459.12500, -2256.07739, 29.92091,   0.00000, 0.00000, 45.99475);
CreateDynamicObject(980, 2273.59570, -2663.29053, 15.29697,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(980, 2338.10571, -2353.88281, 15.15620,   0.00000, 0.00000, 44.00000);
CreateDynamicObject(10771, 2697.39941, -2298.39941, -0.80000,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(10770, 2700.69995, -2305.80005, 32.30000,   0.00000, 0.00000, 0.50000);
CreateDynamicObject(11146, 2688.39990, -2297.89990, 6.00000,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(3885, 2729.30005, -2305.39990, 14.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3885, 2700.60010, -2304.80005, 24.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11237, 2703.50000, -2305.60010, 32.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3884, 2729.50000, -2305.50000, 14.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3884, 2700.60010, -2304.50000, 24.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 2754.00000, -2305.80005, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16644, 2752.50000, -2331.30005, 12.50000,   0.00000, 0.00000, 89.25000);
CreateDynamicObject(16644, 2752.69995, -2313.89990, 11.30000,   0.00000, 8.75000, 89.74744);
CreateDynamicObject(3934, 2780.69995, -2304.80005, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.60010, -2398.39990, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.60010, -2392.39990, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.50000, -2386.39990, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.50000, -2380.50000, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.80005, -2412.69995, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.80005, -2418.69995, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.69995, -2491.00000, 16.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.69995, -2496.89990, 16.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.60010, -2511.39990, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3550, 2720.60010, -2517.39990, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3109, 2749.29980, -2451.89941, 13.90000,   0.00000, 0.00000, 91.99951);
CreateDynamicObject(11489, 2708.39990, -2391.50000, 12.80000,   0.00000, 0.00000, 324.00000);
CreateDynamicObject(1215, 2751.60010, -2330.30005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2754.19995, -2330.30005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2751.80005, -2310.80005, 11.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2754.30005, -2310.80005, 11.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2776.39990, -2308.60010, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2784.60010, -2301.19995, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2784.60010, -2308.50000, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2776.60010, -2301.39990, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2757.89990, -2302.30005, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2757.80005, -2309.50000, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2749.89990, -2309.50000, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2750.00000, -2302.39990, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 2621.60010, -2298.80005, 11.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3526, 2622.00000, -2304.80005, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3526, 2621.89990, -2292.30005, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8613, 2604.10010, -2293.89990, 7.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1477, 2608.10010, -2298.39990, 2.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3877, 2720.19995, -2507.80005, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 2720.19995, -2500.19995, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 2720.19995, -2409.19995, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 2720.19995, -2401.60010, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2750.69995, -2451.69995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2742.00000, -2451.69995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2736.50000, -2439.80005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2747.19995, -2474.19995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 2747.00000, -2485.80005, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(974, 2706.89990, -2300.19995, 13.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(974, 2714.19995, -2301.60010, 4.20000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(974, 2709.80005, -2298.30005, 6.70000,   0.00000, 0.00000, 359.99500);
CreateDynamicObject(994, 2754.19995, -2323.89990, 12.60000,   0.00000, 0.00000, 269.75000);
CreateDynamicObject(994, 2751.69995, -2323.80005, 12.60000,   0.00000, 0.00000, 269.24731);
CreateDynamicObject(994, 2754.30005, -2311.00000, 11.00000,   0.00000, 351.00000, 270.49194);
CreateDynamicObject(994, 2751.80005, -2311.10010, 11.10000,   0.00000, 350.99670, 270.48889);
CreateDynamicObject(8038, 2716.60059, -2404.89941, 23.40000,   0.00000, 0.00000, 44.99500);
CreateDynamicObject(3093, 2742.00000, -2450.19995, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3093, 2742.00000, -2437.60010, 14.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 2741.30005, -2421.39990, 44.30000,   0.00000, 0.00000, 315.00000);
CreateDynamicObject(1649, 2744.39990, -2424.50000, 44.30000,   0.00000, 0.00000, 314.99500);
CreateDynamicObject(1649, 2741.30005, -2421.39990, 47.60000,   0.00000, 0.00000, 315.49500);
CreateDynamicObject(1649, 2744.39990, -2424.50000, 47.60000,   0.00000, 0.00000, 314.99500);
CreateDynamicObject(16501, 2741.89990, -2425.00000, 49.20000,   0.00000, 90.00000, 45.25000);
CreateDynamicObject(16501, 2738.89990, -2428.10010, 49.20000,   0.00000, 90.00000, 45.24700);
CreateDynamicObject(16501, 2738.50000, -2428.50000, 49.20000,   0.00000, 90.00000, 45.24700);
CreateDynamicObject(16501, 2737.10010, -2427.10010, 49.20000,   0.00000, 90.00000, 45.24700);
CreateDynamicObject(16501, 2740.50000, -2423.60010, 49.20000,   0.00000, 90.00000, 45.24700);
CreateDynamicObject(16501, 2740.00000, -2424.10010, 49.20000,   0.00000, 90.00000, 45.49700);
CreateDynamicObject(1649, 2741.19995, -2430.60010, 47.60000,   0.00000, 0.00000, 224.73900);
CreateDynamicObject(1649, 2734.89990, -2424.39990, 47.60000,   0.00000, 0.00000, 43.24200);
CreateDynamicObject(1649, 2738.10010, -2421.30005, 47.60000,   0.00000, 0.00000, 43.49200);
CreateDynamicObject(1649, 2734.89990, -2424.39990, 44.30000,   0.00000, 0.00000, 45.24200);
CreateDynamicObject(1649, 2744.29980, -2427.50000, 47.60000,   0.00000, 0.00000, 224.98900);
CreateDynamicObject(1649, 2744.30005, -2427.50000, 44.30000,   0.00000, 0.00000, 224.98900);
CreateDynamicObject(1649, 2741.20020, -2430.59961, 44.30000,   0.00000, 0.00000, 224.23900);
CreateDynamicObject(1649, 2738.10010, -2421.30005, 44.30000,   0.00000, 0.00000, 42.98900);
CreateDynamicObject(1649, 2738.10010, -2430.69995, 47.60000,   0.00000, 0.00000, 135.73100);
CreateDynamicObject(1649, 2738.10010, -2430.69995, 44.30000,   0.00000, 0.00000, 135.23100);
CreateDynamicObject(1649, 2735.00000, -2427.60010, 44.30000,   0.00000, 0.00000, 134.23599);
CreateDynamicObject(1649, 2735.00000, -2427.60010, 47.60000,   0.00000, 0.00000, 132.73599);
CreateDynamicObject(1649, 2734.89990, -2427.60010, 47.60000,   0.00000, 0.00000, 312.73099);
CreateDynamicObject(1649, 2738.10059, -2430.70020, 47.60000,   0.00000, 0.00000, 315.73099);
CreateDynamicObject(1649, 2735.00000, -2427.59961, 44.30000,   0.00000, 0.00000, 314.23099);
CreateDynamicObject(1649, 2738.10059, -2430.70020, 44.30000,   0.00000, 0.00000, 315.23099);
CreateDynamicObject(1649, 2741.20020, -2430.59961, 47.60000,   0.00000, 0.00000, 44.73600);
CreateDynamicObject(1649, 2744.29980, -2427.50000, 47.60000,   0.00000, 0.00000, 44.98900);
CreateDynamicObject(1649, 2744.29980, -2427.50000, 44.30000,   0.00000, 0.00000, 44.98900);
CreateDynamicObject(1649, 2741.20020, -2430.59961, 44.30000,   0.00000, 0.00000, 44.23600);
CreateDynamicObject(1649, 2744.40039, -2424.50000, 47.60000,   0.00000, 0.00000, 134.99500);
CreateDynamicObject(1649, 2741.29980, -2421.39941, 47.60000,   0.00000, 0.00000, 135.49400);
CreateDynamicObject(1649, 2741.29980, -2421.39941, 44.30000,   0.00000, 0.00000, 134.99500);
CreateDynamicObject(1649, 2744.40039, -2424.50000, 44.30000,   0.00000, 0.00000, 134.99500);
CreateDynamicObject(1649, 2734.90039, -2424.39941, 47.60000,   0.00000, 0.00000, 223.23700);
CreateDynamicObject(1649, 2734.90039, -2424.39941, 44.30000,   0.00000, 0.00000, 225.23599);
CreateDynamicObject(1649, 2738.10059, -2421.29980, 44.30000,   0.00000, 0.00000, 223.48399);
CreateDynamicObject(1649, 2738.10059, -2421.29980, 47.60000,   0.00000, 0.00000, 223.48900);
CreateDynamicObject(16501, 2739.19995, -2421.89990, 14.80000,   90.00000, 0.00000, 267.00000);
CreateDynamicObject(16501, 2739.19995, -2421.89990, 20.80000,   90.00000, 0.00000, 266.99500);
CreateDynamicObject(16501, 2739.19995, -2421.89990, 27.10000,   90.00000, 0.00000, 266.99500);
CreateDynamicObject(16501, 2739.19995, -2421.89990, 31.00000,   90.00000, 0.00000, 266.99500);
CreateDynamicObject(16501, 2743.60010, -2426.10010, 16.00000,   90.00000, 0.00000, 182.74500);
CreateDynamicObject(16501, 2743.60010, -2426.10010, 23.00000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2743.60010, -2426.10010, 28.80000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2743.60010, -2426.10010, 32.00000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2739.30005, -2430.19995, 15.60000,   90.00000, 0.00000, 91.99100);
CreateDynamicObject(16501, 2739.30005, -2430.19995, 22.40000,   90.00000, 0.00000, 91.98900);
CreateDynamicObject(16501, 2739.30005, -2430.19995, 28.60000,   90.00000, 0.00000, 91.98900);
CreateDynamicObject(16501, 2739.30005, -2430.19995, 31.60000,   90.00000, 0.00000, 91.98900);
CreateDynamicObject(16501, 2735.60010, -2426.60010, 16.00000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2735.60010, -2426.60010, 22.80000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2735.60010, -2426.60010, 28.80000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(16501, 2735.60010, -2426.60010, 33.00000,   90.00000, 0.00000, 182.24100);
CreateDynamicObject(2954, 2743.60010, -2425.50000, 12.60000,   0.00000, 0.00000, 1.75000);
CreateDynamicObject(3386, 2739.60010, -2431.19995, 42.80000,   0.00000, 0.00000, 47.50000);
CreateDynamicObject(3386, 2738.60010, -2430.30005, 42.80000,   0.00000, 0.00000, 48.00000);
CreateDynamicObject(3386, 2737.89990, -2429.50000, 42.80000,   0.00000, 0.00000, 224.00000);
CreateDynamicObject(3389, 2734.80005, -2425.89990, 42.80000,   0.00000, 0.00000, 31.00000);
CreateDynamicObject(3390, 2736.39990, -2427.60010, 42.80000,   0.00000, 0.00000, 224.00000);
CreateDynamicObject(3391, 2736.80005, -2423.69995, 42.80000,   0.00000, 0.00000, 136.00000);
CreateDynamicObject(3396, 2740.50000, -2421.89990, 42.80000,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(3385, 2742.19995, -2423.10010, 43.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16782, 2744.19995, -2427.30005, 44.80000,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(16782, 2741.89990, -2429.50000, 44.80000,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(3877, 2745.00000, -2425.89990, 50.90000,   0.00000, 0.00000, 314.25000);
CreateDynamicObject(3877, 2739.39990, -2431.69995, 50.90000,   0.00000, 0.00000, 315.50000);
CreateDynamicObject(3877, 2739.50000, -2420.50000, 50.90000,   0.00000, 0.00000, 314.24701);
CreateDynamicObject(3877, 2733.80005, -2426.19995, 50.90000,   0.00000, 0.00000, 314.24701);
CreateDynamicObject(1682, 2741.00000, -2424.50000, 55.70000,   0.00000, 0.00000, 315.50000);
CreateDynamicObject(1663, 2737.00000, -2427.00000, 43.20000,   0.00000, 0.00000, 290.00000);
CreateDynamicObject(1663, 2737.10010, -2424.60010, 43.20000,   0.00000, 0.00000, 183.99500);
CreateDynamicObject(1663, 2739.30005, -2422.30005, 43.20000,   0.00000, 0.00000, 79.49400);
CreateDynamicObject(3396, 2743.60010, -2424.89990, 42.80000,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(1663, 2742.50000, -2425.30005, 43.20000,   0.00000, 0.00000, 79.49200);

//*********************SAEM interior1*********************
CreateDynamicObject(16662, 431.07251, 2295.58618, 8904.12695,   0.00000, 0.00000, 64.25500);
CreateDynamicObject(16782, 429.41916, 2295.08765, 8905.13574,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 439.69135, 2298.13721, 8902.92285,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 438.25098, 2298.09448, 8902.92285,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 435.94043, 2295.25708, 8902.92285,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 438.25098, 2292.34375, 8902.92285,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 439.75098, 2292.34375, 8902.92285,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1714, 441.90039, 2294.66455, 8902.92285,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 441.90039, 2295.88379, 8902.92285,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2928, 448.66022, 2296.34546, 8905.11328,   0.00000, 0.00000, 284.56995);
CreateDynamicObject(2928, 448.70410, 2293.74731, 8905.13867,   0.00000, 0.00000, 256.33801);
CreateDynamicObject(16656, 323.33789, 2349.18555, 8907.41797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2929, 311.09714, 2345.27686, 8906.06152,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, 314.78580, 2359.58301, 8904.41797,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(14782, 333.39362, 2354.51611, 8905.43359,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14782, 333.39355, 2344.51563, 8905.43359,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(11631, 323.16818, 2348.00073, 8905.67090,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2063, 320.52637, 2347.62793, 8905.32715,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2063, 317.98242, 2347.62793, 8905.32715,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2063, 315.44214, 2347.62793, 8905.32715,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2063, 312.90381, 2347.62793, 8905.32715,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(964, 312.18411, 2352.98901, 8904.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(964, 312.45776, 2354.40039, 8904.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(964, 312.18359, 2355.83179, 8904.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(964, 312.43359, 2357.38110, 8904.42480,   0.00000, 0.00000, 99.92499);
CreateDynamicObject(2612, 324.55103, 2340.80957, 8906.29688,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2611, 331.74023, 2340.81836, 8906.31445,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2614, 328.25525, 2357.53418, 8908.07520,   12.25000, 0.25000, 1.25000);
CreateDynamicObject(925, 320.99564, 2358.16089, 8905.47949,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(931, 321.01129, 2355.60913, 8905.47949,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2358, 312.25879, 2350.14063, 8904.54102,   0.00000, 0.00000, 97.94000);
CreateDynamicObject(2358, 311.75879, 2350.90210, 8904.54102,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2358, 311.75879, 2351.73926, 8904.54102,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2985, 311.95950, 2359.00903, 8904.41797,   0.00000, 0.00000, 304.41998);
CreateDynamicObject(2985, 313.45898, 2359.00879, 8904.41797,   0.00000, 0.00000, 340.14999);
CreateDynamicObject(3794, 315.27972, 2356.30176, 8905.01758,   0.00000, 0.00000, 258.09009);
CreateDynamicObject(3794, 317.55319, 2355.90356, 8905.01758,   0.00000, 0.00000, 271.98499);
CreateDynamicObject(2971, 317.58398, 2350.74316, 8904.41797,   0.00000, 0.00000, 59.55002);
CreateDynamicObject(1714, 324.25931, 2348.30933, 8904.42480,   0.00000, 0.00000, 280.59998);
CreateDynamicObject(1431, 322.96432, 2342.16528, 8904.95898,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14782, 328.14355, 2357.38647, 8905.43359,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2358, 311.81372, 2349.09277, 8904.54102,   0.00000, 0.00000, 79.00000);
CreateDynamicObject(1584, 329.27994, 2340.46069, 8904.74805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 327.66278, 2340.46021, 8904.94141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1585, 328.45837, 2340.41626, 8905.14746,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1330, 322.95447, 2356.10889, 8904.89453,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 322.75034, 2355.04395, 8904.41797,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1738, 323.70987, 2357.44580, 8905.02344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16782, 333.36020, 2349.37866, 8907.83691,   0.00000, 12.00000, 180.00000);
CreateDynamicObject(2606, 333.72656, 2352.78223, 8908.05762,   29.99817, 0.00000, 270.00000);
CreateDynamicObject(2606, 333.72656, 2355.78223, 8908.05762,   29.99817, 0.00000, 270.00000);
CreateDynamicObject(2606, 333.72656, 2345.99268, 8908.05762,   29.99817, 0.00000, 270.00000);
CreateDynamicObject(2606, 333.72656, 2343.07739, 8908.05762,   29.99817, 0.00000, 270.00000);
CreateDynamicObject(964, 314.68359, 2353.48828, 8904.42480,   0.00000, 0.00000, 54.26999);
CreateDynamicObject(1217, 316.38776, 2352.38525, 8904.83887,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1217, 316.88770, 2353.09521, 8904.83887,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(918, 320.94043, 2348.87646, 8904.78906,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(918, 321.41455, 2349.57324, 8904.78906,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2358, 312.50879, 2351.39063, 8904.54102,   0.00000, 0.00000, 147.56262);
CreateDynamicObject(2973, 314.67163, 2349.98975, 8904.41797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3013, 314.89899, 2353.52539, 8905.53809,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2852, 317.89606, 2352.42358, 8904.41797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14666, 317.74313, 2350.72070, 8904.47949,   0.00000, 90.00000, 258.76498);
CreateDynamicObject(2690, 333.67639, 2350.83716, 8904.78418,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 333.30936, 2349.85449, 8904.42480,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 333.30859, 2348.87695, 8904.42480,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2332, 332.20908, 2357.98145, 8906.00293,   0.00000, 0.00000, 0.00000);

//*********************SAEM barco SF*********************
CreateDynamicObject(3399, -1286.89001, 472.39001, 10.45000,   0.00000, 0.00000, 88.61000);
CreateDynamicObject(3399, -1286.66003, 481.70001, 14.95000,   0.00000, 0.00000, 88.20000);
CreateDynamicObject(3399, -1287.02002, 467.32999, 8.29000,   0.00000, 0.00000, 88.61000);
CreateDynamicObject(3399, -1452.73999, 493.13000, 15.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3399, -1458.22998, 493.10999, 12.75000,   0.00000, 0.00000, 359.59000);
CreateDynamicObject(3399, -1461.10999, 493.10001, 11.15000,   0.00000, 0.00000, 357.09000);
CreateDynamicObject(2176, -1369.53003, 499.87000, 12.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13187, -1290.40002, 500.47000, 11.36000,   0.00000, 0.00000, 93.03000);
CreateDynamicObject(13187, -1294.93005, 500.25000, 11.36000,   0.00000, 0.00000, 93.03000);
CreateDynamicObject(13187, -1297.88000, 495.09000, 11.36000,   0.00000, 0.00000, 3.73000);
CreateDynamicObject(1491, -1298.27002, 500.01001, 10.19000,   0.00000, 0.00000, 275.07999);
CreateDynamicObject(2299, -1288.84998, 496.98999, 10.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, -1292.43005, 496.82001, 10.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, -1295.44995, 496.66000, 10.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, -1296.27002, 496.87000, 10.19000,   0.00000, 0.00000, 180.42000);
CreateDynamicObject(2299, -1293.40002, 496.76999, 10.19000,   0.00000, 0.00000, 180.42000);
CreateDynamicObject(2299, -1290.62000, 496.85001, 10.19000,   0.00000, 0.00000, 180.42000);
CreateDynamicObject(2299, -1287.77002, 496.95001, 10.19000,   0.00000, 0.00000, 180.42000);
CreateDynamicObject(2167, -1287.27002, 496.98999, 10.29000,   0.00000, 0.00000, 272.62000);
CreateDynamicObject(2167, -1290.10999, 500.45001, 10.23000,   0.00000, 0.00000, 1.99000);
CreateDynamicObject(2167, -1293.48999, 500.25000, 10.23000,   0.00000, 0.00000, 1.99000);
CreateDynamicObject(2167, -1289.68994, 493.17999, 10.23000,   0.00000, 0.00000, 182.08000);
CreateDynamicObject(2167, -1292.54004, 493.06000, 10.23000,   0.00000, 0.00000, 182.08000);
CreateDynamicObject(2167, -1295.26001, 493.17001, 10.23000,   0.00000, 0.00000, 182.08000);
CreateDynamicObject(14582, -1292.92004, 507.29001, 13.95000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18102, -1289.95996, 502.67999, 14.77000,   0.00000, 0.00000, 285.34000);
CreateDynamicObject(18102, -1297.72998, 501.82001, 14.77000,   0.00000, 0.00000, 285.34000);
CreateDynamicObject(1709, -1294.16003, 512.73999, 10.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1709, -1298.56995, 505.57999, 10.19000,   0.00000, 0.00000, 87.63000);
CreateDynamicObject(1709, -1290.31006, 502.07999, 10.19000,   0.00000, 0.00000, 184.95000);

//*********************SAEM Hospital*********************
CreateDynamicObject(14668, 1241.97754, 316.33203, -12.74219,   0.00000, 0.00000, 155.50049);
CreateDynamicObject(16500, 1250.81274, 320.83963, -10.74798,   0.00000, 0.00000, 155.54028);
CreateDynamicObject(16500, 1239.35352, 326.01270, -10.74798,   0.00000, 0.00000, 335.35217);
CreateDynamicObject(2948, 1247.15527, 325.59375, -12.74219,   0.00000, 0.00000, 244.99512);
CreateDynamicObject(2948, 1245.40308, 326.37210, -12.74219,   0.00000, 0.00000, 66.34619);
CreateDynamicObject(2948, 1247.12720, 325.60193, -12.74219,   0.00000, 0.00000, 66.09619);
CreateDynamicObject(2948, 1245.40234, 326.37207, -12.74219,   0.00000, 0.00000, 245.70691);
CreateDynamicObject(16500, 1252.00989, 322.11307, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1239.74902, 327.75781, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1235.33691, 329.73535, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1240.55054, 322.84387, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1247.58594, 319.62402, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1256.47546, 320.10950, -10.74798,   0.00000, 0.00000, 65.97290);
CreateDynamicObject(16500, 1248.91370, 316.69904, -10.77297,   0.00000, 0.00000, 334.99854);
CreateDynamicObject(1523, 1247.88477, 314.44531, -12.74219,   0.00000, 0.00000, 244.41835);
CreateDynamicObject(16500, 1246.14551, 310.84180, -10.77297,   0.00000, 0.00000, 334.98962);
CreateDynamicObject(16500, 1252.14880, 317.80109, -10.77297,   0.00000, 0.00000, 245.26428);
CreateDynamicObject(1523, 1254.36462, 316.69269, -12.74219,   0.00000, 0.00000, 336.14319);
CreateDynamicObject(1649, 1248.17285, 314.98782, -8.57648,   0.00000, 0.00000, 244.40540);
CreateDynamicObject(1649, 1248.17285, 314.98730, -8.60148,   0.00000, 0.00000, 64.36163);
CreateDynamicObject(1649, 1246.27283, 311.03754, -8.55148,   0.00000, 0.00000, 64.36163);
CreateDynamicObject(1649, 1246.30090, 311.09235, -8.55148,   0.00000, 0.00000, 244.40186);
CreateDynamicObject(1649, 1254.16479, 316.79169, -8.57645,   0.00000, 0.00000, 335.97522);
CreateDynamicObject(1649, 1254.16406, 316.79102, -8.57645,   0.00000, 0.00000, 155.72510);
CreateDynamicObject(16500, 1247.32373, 307.67590, -10.77297,   0.00000, 0.00000, 245.75934);
CreateDynamicObject(16500, 1251.80969, 305.65091, -10.77297,   0.00000, 0.00000, 245.75940);
CreateDynamicObject(16500, 1243.76367, 311.42090, -10.77297,   0.00000, 0.00000, 245.75867);
CreateDynamicObject(1523, 1241.49548, 312.37070, -12.74219,   0.00000, 0.00000, 244.42029);
CreateDynamicObject(1523, 1240.27075, 309.60211, -12.74219,   0.00000, 0.00000, 65.72797);
CreateDynamicObject(16500, 1247.50244, 307.82385, -10.77297,   0.00000, 0.00000, 65.71851);
CreateDynamicObject(16500, 1252.05347, 305.75854, -10.77297,   0.00000, 0.00000, 65.71472);
CreateDynamicObject(1649, 1240.60669, 310.42484, -8.60148,   0.00000, 0.00000, 64.60791);
CreateDynamicObject(1649, 1240.60645, 310.42480, -8.60148,   0.00000, 0.00000, 244.06482);
CreateDynamicObject(16500, 1239.35999, 326.08981, -10.74798,   0.00000, 0.00000, 155.89246);
CreateDynamicObject(16500, 1239.72461, 327.66138, -10.74798,   0.00000, 0.00000, 245.43292);
CreateDynamicObject(16500, 1235.31458, 329.69034, -10.74798,   0.00000, 0.00000, 245.43292);
CreateDynamicObject(1533, 1234.31519, 309.46381, -12.74219,   0.00000, 0.00000, 155.50513);
CreateDynamicObject(1533, 1232.99585, 310.07184, -12.74219,   0.00000, 0.00000, 155.50049);
CreateDynamicObject(16500, 1238.01563, 310.55383, -10.77297,   0.00000, 0.00000, 245.75867);
CreateDynamicObject(16500, 1234.83643, 309.34338, -10.77297,   0.00000, 0.00000, 335.48840);
CreateDynamicObject(1649, 1238.71875, 306.44983, -8.60148,   0.00000, 0.00000, 64.60510);
CreateDynamicObject(1649, 1238.67871, 306.48254, -8.60148,   0.00000, 0.00000, 244.06128);
CreateDynamicObject(16500, 1238.48389, 305.86618, -12.24794,   0.00000, 0.00000, 335.48401);
CreateDynamicObject(1523, 1239.58984, 308.04517, -12.74219,   0.00000, 0.00000, 65.72571);
CreateDynamicObject(16500, 1231.15173, 310.99179, -10.77297,   0.00000, 0.00000, 156.02393);
CreateDynamicObject(16500, 1233.19141, 315.54788, -10.77297,   0.00000, 0.00000, 156.02234);
CreateDynamicObject(1523, 1234.16479, 317.82318, -12.74219,   0.00000, 0.00000, 64.95856);
CreateDynamicObject(1523, 1235.37109, 320.58069, -12.74219,   0.00000, 0.00000, 245.49683);
CreateDynamicObject(16500, 1236.36914, 322.84473, -10.77297,   0.00000, 0.00000, 156.02234);
CreateDynamicObject(1649, 1234.76709, 319.18820, -8.59538,   0.00000, 0.00000, 65.00464);
CreateDynamicObject(1649, 1236.58801, 323.16397, -8.54538,   0.00000, 0.00000, 65.98560);
CreateDynamicObject(1649, 1232.92041, 315.24493, -8.54538,   0.00000, 0.00000, 65.00464);
CreateDynamicObject(1649, 1234.76660, 319.18750, -8.59538,   0.00000, 0.00000, 244.96059);
CreateDynamicObject(1649, 1232.97607, 315.24399, -8.54538,   0.00000, 0.00000, 246.19165);
CreateDynamicObject(1649, 1236.59753, 323.12589, -8.59538,   0.00000, 0.00000, 245.20667);
CreateDynamicObject(3395, 1232.95813, 325.62491, -12.74219,   0.00000, 0.00000, 156.00500);
CreateDynamicObject(3383, 1229.17004, 312.88651, -12.74219,   0.00000, 0.00000, 335.68018);
CreateDynamicObject(3383, 1235.95825, 327.98694, -12.74219,   0.00000, 0.00000, 155.96655);
CreateDynamicObject(1997, 1236.24475, 309.35019, -12.74219,   0.00000, 0.00000, 65.77496);
CreateDynamicObject(1997, 1236.72546, 310.39508, -12.74219,   0.00000, 0.00000, 65.76965);
CreateDynamicObject(3383, 1229.52942, 317.27881, -12.74219,   0.00000, 0.00000, 245.69653);
CreateDynamicObject(2008, 1241.20190, 324.26700, -12.74219,   0.00000, 0.00000, 336.69519);
CreateDynamicObject(1738, 1240.81738, 326.84961, -12.08756,   0.00000, 0.00000, 335.69275);
CreateDynamicObject(2146, 1234.80371, 324.82031, -12.25664,   0.00000, 0.00000, 336.17615);
CreateDynamicObject(1997, 1232.04016, 316.25040, -12.74219,   0.00000, 0.00000, 175.09460);
CreateDynamicObject(1997, 1248.82654, 304.07025, -12.74219,   0.00000, 0.00000, 155.49963);
CreateDynamicObject(1997, 1246.90649, 304.92480, -12.74219,   0.00000, 0.00000, 155.49500);
CreateDynamicObject(1997, 1244.87305, 305.83728, -12.74219,   0.00000, 0.00000, 155.49500);
CreateDynamicObject(1997, 1244.81934, 309.47733, -12.74219,   0.00000, 0.00000, 335.24963);
CreateDynamicObject(2162, 1253.01160, 310.06793, -11.24219,   0.00000, 0.00000, 244.41833);
CreateDynamicObject(2008, 1251.26917, 309.88666, -12.74219,   0.00000, 0.00000, 66.50244);
CreateDynamicObject(1726, 1248.90039, 319.74414, -12.74219,   0.00000, 0.00000, 156.54968);
CreateDynamicObject(2596, 1249.45508, 323.78613, -10.29656,   0.00000, 0.00000, 338.39539);
CreateDynamicObject(1715, 1241.55798, 322.76785, -12.74219,   0.00000, 0.00000, 156.70996);
CreateDynamicObject(1720, 1250.06714, 310.47797, -12.74219,   0.00000, 0.00000, 65.82001);
CreateDynamicObject(2007, 1239.17920, 324.16730, -12.74219,   0.00000, 0.00000, 65.43457);
CreateDynamicObject(2167, 1251.28076, 321.43665, -12.74219,   0.00000, 0.00000, 64.69995);
CreateDynamicObject(2167, 1250.51172, 319.78027, -12.74219,   0.00000, 0.00000, 64.69299);
CreateDynamicObject(2690, 1239.27393, 327.61548, -11.28875,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1246.33704, 320.47070, -12.74219,   0.00000, 0.00000, 155.67529);
CreateDynamicObject(1714, 1252.76184, 310.21146, -12.74219,   0.00000, 0.00000, 246.90088);
CreateDynamicObject(1720, 1250.44446, 311.32257, -12.74219,   0.00000, 0.00000, 65.81909);
CreateDynamicObject(2146, 1251.83618, 317.28320, -12.25664,   0.00000, 0.00000, 245.00635);
CreateDynamicObject(2167, 1245.82532, 309.92209, -12.74219,   0.00000, 0.00000, 64.69299);
CreateDynamicObject(2007, 1251.34546, 307.54480, -12.74219,   0.00000, 0.00000, 246.36035);
CreateDynamicObject(2000, 1250.98633, 306.63806, -12.74219,   0.00000, 0.00000, 246.11035);
CreateDynamicObject(1727, 1236.46252, 321.43970, -12.74219,   0.00000, 0.00000, 65.72992);
CreateDynamicObject(1726, 1246.81396, 319.24847, -12.74219,   0.00000, 0.00000, 335.78394);
CreateDynamicObject(1726, 1243.85376, 312.12213, -12.74219,   0.00000, 0.00000, 156.32092);
CreateDynamicObject(2855, 1246.18347, 317.07831, -12.66718,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 1246.80884, 316.68179, -12.21718,   0.00000, 0.00000, 322.97522);
CreateDynamicObject(2855, 1248.94165, 321.79312, -12.21718,   0.00000, 0.00000, 359.75000);
CreateDynamicObject(1738, 1246.50134, 312.30136, -12.08756,   0.00000, 0.00000, 244.38344);
CreateDynamicObject(1738, 1253.85608, 312.57608, -12.08756,   0.00000, 0.00000, 244.37988);
CreateDynamicObject(2596, 1247.68323, 315.02133, -10.29656,   0.00000, 0.00000, 230.45618);
CreateDynamicObject(2596, 1242.10974, 321.77347, -10.29656,   0.00000, 0.00000, 359.31458);
CreateDynamicObject(2315, 1247.90137, 322.11005, -12.74219,   0.00000, 0.00000, 335.71021);
CreateDynamicObject(2315, 1246.10486, 317.15662, -12.74219,   0.00000, 0.00000, 335.70923);
CreateDynamicObject(2380, 1254.35303, 320.86847, -11.49442,   0.00000, 0.00000, 335.16516);
CreateDynamicObject(2816, 1246.20117, 317.14130, -12.24656,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2852, 1247.99146, 322.01169, -12.24656,   0.00000, 0.00000, 0.00000);
//*********************Hospital exterior*********************
CreateDynamicObject(9093, 2012.30652, -1408.04871, 17.75516,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3928, 2069.04150, -1413.26270, 47.42237,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 2069.06567, -1430.47778, 47.42237,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4639, 2048.40576, -1405.72925, 49.03010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(4639, 2044.73303, -1413.10498, 17.84940,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1319, 2054.51685, -1417.67395, 47.93916,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2054.45386, -1424.53931, 47.93916,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2079.92554, -1425.42944, 47.93916,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 2079.63452, -1418.54797, 47.93916,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 2012.56726, -1408.07605, 15.98190,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 2012.07349, -1408.06189, 15.98190,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19968, 2017.21838, -1408.59253, 15.93696,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2095.67554, -1450.71204, 22.62430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 2009.32202, -1357.84705, 21.86615,   0.00000, 0.00000, -180.00000);
//*********************Hospital interior*********************
CreateDynamicObject(18030, 1174.79004, -1343.57422, 2424.41333,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14466, 1214.54846, -1360.71301, 2432.20532,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(7191, 1191.82813, -1351.01074, 2421.62085,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(14782, 1187.80005, -1353.69995, 2423.30005,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1523, 1189.00000, -1350.00000, 2422.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4724, 1158.58862, -1353.60535, 2423.75122,   0.00000, 0.00000, 0.25000);
CreateDynamicObject(2001, 1159.30005, -1348.59998, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(932, 1185.46716, -1355.87146, 2422.04590,   0.00000, 0.00000, 272.50000);
CreateDynamicObject(932, 1183.69995, -1356.00000, 2422.00000,   0.00000, 0.00000, 272.49939);
CreateDynamicObject(932, 1183.69995, -1353.90002, 2422.00000,   0.00000, 0.00000, 272.49939);
CreateDynamicObject(932, 1185.40002, -1353.80005, 2422.00000,   0.00000, 0.00000, 272.49939);
CreateDynamicObject(1557, 1168.15161, -1357.04126, 2422.04614,   0.00000, 0.00000, 359.50000);
CreateDynamicObject(1557, 1171.19995, -1357.00000, 2422.04614,   0.00000, 0.00000, 182.24463);
CreateDynamicObject(2596, 1156.79395, -1348.47595, 2425.34521,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2596, 1163.46863, -1354.67188, 2425.30835,   0.00000, 0.00000, 270.25003);
CreateDynamicObject(2190, 1170.09998, -1347.80005, 2422.89990,   0.00000, 0.25000, 182.75000);
CreateDynamicObject(1663, 1169.69995, -1346.19995, 2422.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7930, 1189.56934, -1345.94604, 2423.54419,   90.00000, 180.00549, 269.98352);
CreateDynamicObject(3962, 1156.31921, -1357.05176, 2424.26025,   0.00000, 0.00000, 268.50000);
CreateDynamicObject(1726, 1154.69995, -1348.80005, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1153.59998, -1353.59998, 2422.00000,   0.00000, 0.00000, 90.50000);
CreateDynamicObject(1726, 1157.31653, -1355.79578, 2422.04614,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1727, 1157.59998, -1348.80005, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2596, 1153.19995, -1355.09998, 2425.80005,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(1727, 1163.30005, -1354.19995, 2422.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 1157.67419, -1339.11780, 2424.02075,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 1157.67017, -1338.37537, 2424.02075,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1209, 1153.30005, -1350.30005, 2422.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1209, 1153.30005, -1343.50000, 2422.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1167.70007, -1313.43201, 2427.98071,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(7191, 1191.17395, -1335.54907, 2424.02075,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1167.69922, -1313.43164, 2424.02075,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2603, 1154.30847, -1331.02600, 2422.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1157.90002, -1330.90002, 2422.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 1161.50000, -1330.80005, 2422.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2596, 1156.29089, -1337.96643, 2424.77637,   0.00000, 0.00000, 179.25000);
CreateDynamicObject(2596, 1160.69995, -1337.90002, 2424.80005,   0.00000, 0.00000, 179.24744);
CreateDynamicObject(3383, 1175.95190, -1330.56775, 2422.04614,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3383, 1183.39758, -1330.39929, 2422.04614,   0.00000, 0.00000, 179.74731);
CreateDynamicObject(3388, 1172.56311, -1329.85693, 2422.04614,   0.00000, 0.00000, 90.25000);
CreateDynamicObject(3388, 1180.31531, -1329.85449, 2422.04614,   0.00000, 0.00000, 90.24719);
CreateDynamicObject(3394, 1184.66553, -1334.90222, 2422.04614,   0.00000, 0.00000, 269.75000);
CreateDynamicObject(3394, 1174.50000, -1334.80005, 2422.00000,   0.00000, 0.00000, 269.74731);
CreateDynamicObject(2894, 1169.00000, -1347.59998, 2422.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2257, 1158.19995, -1348.19995, 2424.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2256, 1153.00000, -1352.69995, 2424.69995,   0.00000, 0.00000, 89.50000);
CreateDynamicObject(2208, 1168.40002, -1347.80005, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2208, 1167.09998, -1344.69995, 2422.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2208, 1172.40002, -1344.80005, 2422.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2161, 1172.59998, -1346.80005, 2422.39990,   0.00000, 0.00000, 269.99756);
CreateDynamicObject(2161, 1172.59998, -1345.40002, 2422.39990,   0.00000, 0.00000, 269.99756);
CreateDynamicObject(2126, 1156.59998, -1353.00000, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1154.19995, -1355.09998, 2422.00000,   0.00000, 0.00000, 136.00000);
CreateDynamicObject(2001, 1163.40002, -1353.09998, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 1167.40002, -1355.80005, 2422.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 1180.19995, -1348.09998, 2422.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2286, 1186.50000, -1352.80005, 2425.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2257, 1169.00000, -1339.30005, 2424.39990,   0.00000, 0.00000, 0.00000);

//LSRTV exterior
CreateDynamicObject(8569, 1769.96423, -1712.29590, 9.71970,   0.00000, 0.00000, -3.72000);
CreateDynamicObject(8569, 1789.85596, -1712.38940, 9.71970,   0.00000, 0.00000, -3.72000);
CreateDynamicObject(5727, 1787.49719, -1717.78479, 17.49460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1765.53076, -1713.74536, 19.53580,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, 1773.21826, -1719.79028, 12.51149,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1772.64600, -1719.70996, 17.95640,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1771.00623, -1719.79541, 13.35300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19452, 1774.31226, -1719.70605, 16.77170,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, 1775.58838, -1714.99451, 19.65060,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1774.17224, -1711.48254, 12.50910,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1784.64844, -1711.47668, 12.50910,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1791.77625, -1710.26331, 12.50910,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1793.96179, -1710.24536, 12.50910,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, 1772.89941, -1714.98389, 18.46250,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, 1783.56116, -1711.69568, 18.46250,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, 1770.33093, -1714.88611, 13.19005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19375, 1777.77295, -1714.84595, 13.21934,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19375, 1770.33337, -1711.98633, 13.29105,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19375, 1782.68298, -1711.36853, 13.21930,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1792.26221, -1711.36719, 13.21930,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1794.41370, -1711.43823, 13.21930,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1793.97437, -1711.70813, 18.46250,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, 1793.57715, -1710.02100, 18.46250,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(638, 1776.16296, -1719.11450, 13.23810,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, 1771.79565, -1719.17847, 13.23810,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3934, 1765.57605, -1713.85034, 19.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2267, 1777.55896, -1715.59424, 16.36237,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2257, 1770.44788, -1715.12500, 15.22041,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2345, 1772.08948, -1719.93555, 14.78300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2345, 1775.85901, -1719.88416, 14.78500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3802, 1771.11682, -1720.46741, 15.02770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3802, 1777.25122, -1720.44238, 15.02770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1223, 1777.69531, -1720.01318, 12.34263,   0.00000, 0.00000, 184.62816);
CreateDynamicObject(1223, 1770.54407, -1720.59729, 12.34263,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1753, 1777.34241, -1715.97656, 12.59700,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1753, 1770.94421, -1716.61426, 12.59700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19386, 1787.72351, -1708.79333, 14.35000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19448, 1787.71863, -1712.00769, 16.82960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19448, 1787.72400, -1714.62720, 14.29540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 1787.72058, -1709.53723, 12.57810,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1827, 1774.04846, -1715.84509, 12.59592,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3388, 1777.19836, -1710.55505, 12.59372,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3387, 1777.18396, -1711.55042, 12.59370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2259, 1777.19067, -1717.18335, 14.36017,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2011, 1770.85522, -1713.58191, 12.71149,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2010, 1770.95923, -1707.85339, 12.69463,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1769.75842, -1707.43799, 20.24414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1769.83716, -1719.78979, 20.24414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1761.75549, -1719.86121, 20.24414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1761.75769, -1707.36255, 20.24414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2700, 1770.70947, -1711.12610, 14.98522,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3031, 1771.08789, -1710.50208, 14.22661,   0.00000, 0.00000, -45.23999);
CreateDynamicObject(10009, 1776.07739, -1706.77979, 16.98140,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19375, 1773.04370, -1711.70374, 18.46250,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1773.18848, -1714.74573, 12.50910,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, 1776.93628, -1719.79541, 13.33800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1776.95239, -1719.70203, 17.95642,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, 1776.85071, -1715.06116, 17.00040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1779.07068, -1719.72778, 20.27110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1596, 1787.33972, -1715.40442, 23.59612,   0.00000, 0.00000, 47.10000);
CreateDynamicObject(4574, 1785.17139, -1713.36670, 26.69901,   0.00000, 0.00000, 0.14166);
CreateDynamicObject(987, 1811.31543, -1721.90869, 14.43165,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1811.29919, -1709.95459, 14.43165,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1811.29297, -1698.56787, 14.43165,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1811.30579, -1686.52344, 14.43170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1799.38049, -1686.55139, 14.43170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1787.44666, -1686.53564, 14.43170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1775.50635, -1686.40601, 14.43170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1761.49158, -1694.98682, 12.55985,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1761.48633, -1686.35571, 12.55985,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1772.78894, -1686.41577, 14.43170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1232, 1760.10181, -1721.63281, 15.06064,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1798.85657, -1721.99524, 15.06064,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11547, 1792.24561, -1691.32825, 15.35885,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(640, 1782.63733, -1710.76843, 13.31630,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2257, 1781.86414, -1711.24951, 15.93150,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11729, 1793.13330, -1710.98010, 12.59490,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11729, 1792.32776, -1711.00256, 12.59490,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11729, 1791.47949, -1711.01306, 12.59490,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11730, 1793.91455, -1710.98181, 12.59490,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(367, 1793.25012, -1710.86023, 14.72050,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(367, 1793.95313, -1710.88196, 14.72050,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(367, 1792.48975, -1710.93823, 14.72050,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1798.28857, -1711.14978, 16.38668,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1798.28857, -1711.14978, 14.60090,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1792.72156, -1706.37891, 16.34890,   0.00000, 0.00000, 98.94000);
CreateDynamicObject(3851, 1792.72156, -1706.37891, 14.62190,   0.00000, 0.00000, 98.94000);
CreateDynamicObject(3851, 1781.51770, -1707.24194, 16.34149,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1781.51770, -1707.24194, 14.62190,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1776.74463, -1719.74683, 9.43226,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1771.22546, -1719.67834, 9.43226,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(1826, 1788.60425, -1710.36218, 12.59616,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(367, 1789.91724, -1710.47070, 13.44550,   0.00000, 0.00000, 109.14000);
CreateDynamicObject(19623, 1789.06238, -1710.45203, 13.44860,   -90.00000, 0.00000, 68.82000);
CreateDynamicObject(2258, 1796.06628, -1711.26123, 14.72285,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1635, 1765.41382, -1721.43762, 17.12869,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1536, 1770.42920, -1712.98926, 12.59430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1779.72473, -1707.23071, 12.37789,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1779.72473, -1707.23071, 16.34390,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3530, 1798.85083, -1720.65417, 18.08809,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19859, 1777.67590, -1714.58459, 13.85712,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3530, 1810.10645, -1721.42627, 16.71884,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3530, 1808.53357, -1721.39722, 16.71884,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1809.72009, -1694.85522, 12.51940,   0.00000, 0.00000, -130.08000);
CreateDynamicObject(1670, 1774.20068, -1715.62109, 13.02182,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1774.14441, -1716.11218, 13.02180,   0.00000, 0.00000, -149.00000);

//*********************LSTV Estudio*********************
CreateDynamicObject(14391, 249.88736, 304.25995, 999.09528,   0.00000, 0.00000, 179.94287);
CreateDynamicObject(14393, 250.75075, 303.27985, 1000.36871,   0.00000, 0.00000, 181.63391);
CreateDynamicObject(14392, 250.80521, 303.21341, 999.33160,   0.00000, 0.00000, 180.97522);
CreateDynamicObject(14820, 249.26253, 305.72672, 999.05853,   10.54898, 0.00000, 269.77844);
CreateDynamicObject(14820, 249.25497, 302.45178, 999.07855,   10.54688, 0.00000, 269.77478);
CreateDynamicObject(10154, 251.23743, 298.33960, 998.53217,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10154, 241.88075, 302.64771, 998.53217,   0.00000, 0.00000, 181.31555);
CreateDynamicObject(1498, 242.02910, 301.88348, 998.11432,   0.00000, 0.00000, 90.33484);

//*********************LSTV interior*********************
CreateDynamicObject(18009, -2783.80762, 265.19434, 25.95000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, -2777.49463, 255.60976, 21.69230,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2779.34961, 255.59961, 22.42905,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, -2775.31860, 263.55762, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2775.29980, 258.07910, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2775.31836, 260.81934, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2779.00000, 258.07910, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2779.00000, 260.81934, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2776.60010, 263.55762, 27.14944,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2781.53027, 255.44922, 24.77199,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(1649, -2784.42310, 255.44743, 24.77199,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(1649, -2788.80469, 255.44922, 24.77199,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(2395, -2787.00000, 255.50000, 24.20000,   219.99573, 0.00000, 0.00000);
CreateDynamicObject(2395, -2790.73926, 255.45891, 24.12500,   219.99023, 0.00000, 0.00000);
CreateDynamicObject(1753, -2786.32129, 257.02637, 23.10625,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2257, -2791.27075, 255.29616, 23.14108,   0.00000, 0.00000, 85.35278);
CreateDynamicObject(2257, -2783.81055, 255.56700, 24.14108,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(638, -2776.61133, 257.75812, 23.80328,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -2776.46802, 256.07404, 24.13141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8614, -2789.51514, 274.09128, 24.93209,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2795.45020, 271.02148, 27.99995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2795.47754, 272.91568, 27.98051,   0.00000, 0.00000, 89.32434);
CreateDynamicObject(1649, -2793.22266, 275.10254, 28.00351,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2788.91113, 275.10254, 28.00554,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2784.57642, 275.10272, 27.99838,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2780.23877, 275.05286, 27.98666,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2778.85059, 275.10254, 28.00351,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2776.75488, 272.91394, 28.01044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2776.72852, 271.15540, 28.01044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2793.45020, 270.61426, 29.65832,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2789.02368, 270.58008, 29.67854,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2784.69995, 270.60999, 29.65832,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2780.44580, 270.59027, 29.68332,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2778.87988, 270.60938, 29.67169,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2778.88965, 273.47949, 29.67322,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2783.29980, 273.47949, 29.67322,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2787.69922, 273.47949, 29.67322,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2792.09961, 273.47949, 29.67322,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2793.45020, 273.47949, 29.64822,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3260, -2786.39990, 271.20001, 26.11000,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3260, -2788.45996, 271.19434, 26.11000,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3260, -2790.45020, 271.20215, 26.11000,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3260, -2792.45020, 271.19635, 26.09063,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3260, -2794.47559, 271.21094, 26.09063,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2785.48633, 271.92197, 26.70025,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2787.20801, 270.21201, 26.70025,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3850, -2790.64355, 270.23438, 26.70025,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3850, -2794.05957, 270.24707, 26.68089,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3260, -2794.24902, 274.24707, 26.09063,   270.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2793.22876, 274.93048, 26.68089,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2791.51660, 273.20117, 26.68089,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14413, -2786.58594, 271.06641, 19.99981,   0.00000, 0.00000, 268.68713);
CreateDynamicObject(2591, -2783.57739, 273.36444, 25.40970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2591, -2783.57715, 271.29297, 27.95000,   90.00000, 0.00000, 179.99451);
CreateDynamicObject(1649, -2783.59961, 272.92969, 28.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1523, -2783.57397, 268.99850, 22.70781,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1523, -2783.64014, 271.62433, 22.70781,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2783.57227, 271.14746, 26.83990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2783.57227, 269.88086, 26.86490,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2783.57007, 273.00000, 27.90251,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14391, -2787.09961, 263.25000, 23.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1754, -2785.23218, 258.03381, 23.10625,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1754, -2789.31445, 258.17688, 23.10625,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2126, -2787.83789, 258.27457, 23.10625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1886, -2786.01929, 260.56952, 23.93541,   0.00000, 180.00000, 340.15015);
CreateDynamicObject(1886, -2788.79980, 260.57813, 23.93541,   0.00000, 179.99451, 23.81287);
CreateDynamicObject(3388, -2777.85254, 267.09570, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3388, -2777.86230, 266.13281, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3386, -2777.87207, 265.15756, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3387, -2777.85938, 264.15820, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3389, -2777.86035, 263.15759, 22.70999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2700, -2779.46973, 267.42441, 25.08098,   0.00000, 0.00000, 248.12073);
CreateDynamicObject(2606, -2787.32007, 262.55762, 26.43313,   30.00000, 0.00000, 180.00000);
CreateDynamicObject(2723, -2787.03174, 270.44427, 33.23594,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2723, -2788.25952, 265.09369, 23.07592,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2723, -2786.27954, 264.96747, 23.07592,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2207, -2775.46680, 261.09473, 23.10625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1671, -2774.53613, 262.42810, 23.56647,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3031, -2772.59473, 256.96619, 24.58501,   0.00000, 0.00000, 119.52893);
CreateDynamicObject(2258, -2774.17334, 263.30997, 24.79893,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2259, -2794.33545, 257.19308, 24.78294,   0.00000, 0.00000, 89.35278);
CreateDynamicObject(2257, -2794.77148, 260.29077, 24.66716,   0.00000, 0.00000, 91.30737);
CreateDynamicObject(2176, -2794.25244, 265.10431, 24.45002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2208, -2793.81445, 274.47754, 26.18433,   0.00000, 0.00000, 270.68713);
CreateDynamicObject(1541, -2794.32910, 272.95020, 27.20000,   0.00000, 0.00000, 89.58582);
CreateDynamicObject(1520, -2793.96606, 274.47635, 27.04962,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1509, -2793.77124, 274.45761, 27.24707,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, -2794.06909, 274.29105, 27.04962,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, -2793.80737, 274.24078, 27.04962,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1664, -2793.60059, 274.05011, 27.21632,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11631, -2777.53906, 271.91895, 23.95372,   0.00000, 0.00000, 268.68713);
CreateDynamicObject(2207, -2779.81836, 272.80273, 22.70781,   0.00000, 0.00000, 270.67566);
CreateDynamicObject(1671, -2778.21802, 271.90012, 23.16803,   0.00000, 0.00000, 276.63062);
CreateDynamicObject(1742, -2776.83203, 273.99768, 22.70781,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16155, -2775.60010, 264.00000, 25.84077,   0.00000, 0.00000, 105.20453);
CreateDynamicObject(1444, -2776.57910, 263.10162, 23.91094,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2067, -2783.15332, 274.41580, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2067, -2782.58154, 274.40363, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2067, -2782.03882, 274.39713, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2128, -2781.24487, 274.36517, 22.70781,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2648, -2780.06421, 274.95605, 25.74817,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2229, -2783.59595, 265.77005, 26.20781,   0.00000, 90.00000, 267.41443);
CreateDynamicObject(2232, -2786.57471, 270.30276, 25.29372,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2232, -2790.69678, 268.95605, 28.39709,   0.00000, 90.00000, 180.00000);
CreateDynamicObject(2232, -2786.62231, 268.95605, 28.39931,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(2232, -2778.21777, 261.55762, 25.58376,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1651, -2777.10547, 257.66013, 22.97226,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2783.19043, 275.05539, 28.00351,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, -2760.12500, 254.51563, 22.21034,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2780.34058, 263.55911, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2777.36084, 266.28531, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2773.78760, 266.29706, 27.14416,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -2772.07446, 258.87180, 23.10625,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2772.09668, 266.29037, 23.11329,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2771.85840, 259.89844, 25.85622,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2772.09546, 262.57822, 25.83122,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2772.07422, 258.87109, 25.83122,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2772.09375, 262.55939, 23.10625,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2771.40039, 260.96143, 25.85621,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -2772.11157, 266.29355, 25.83121,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2793.47217, 255.42857, 24.77199,   179.99451, 0.00000, 0.00000);
CreateDynamicObject(1649, -2779.67261, 256.80280, 24.77199,   179.99451, 0.00000, 90.00000);
CreateDynamicObject(2395, -2772.49878, 255.68475, 23.10625,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2395, -2772.49707, 255.53455, 23.10625,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, -2772.50171, 255.70929, 25.83122,   0.00000, 0.00000, 180.24451);
CreateDynamicObject(2395, -2776.23901, 255.68073, 23.10625,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, -2776.23828, 255.68066, 25.83122,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, -2776.23828, 255.68066, 20.38127,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, -2776.38672, 255.66113, 23.55626,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2395, -2790.71582, 255.50215, 24.20000,   219.99573, 0.00000, 0.00000);
CreateDynamicObject(2395, -2790.78735, 256.11990, 24.12500,   359.25430, 180.00000, 90.00000);
CreateDynamicObject(2802, -2793.18579, 270.31812, 23.03807,   0.00000, 0.00000, 48.00000);
CreateDynamicObject(2802, -2787.01563, 273.54883, 26.48892,   0.00000, 0.00000, 47.99377);
CreateDynamicObject(2802, -2790.48730, 271.34961, 26.48460,   0.00000, 0.00000, 281.99707);
CreateDynamicObject(2802, -2787.24829, 271.41556, 26.48460,   0.00000, 0.00000, 61.99927);
CreateDynamicObject(3260, -2796.22559, 274.22659, 26.09063,   270.00000, 0.00000, 0.00000);
//*********************Gobierno exterior*********************
CreateDynamicObject(8674, 1386.46387, -1703.98828, 15.15056,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1386.46191, -1703.98828, 12.24968,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(5066, 1388.90405, -1679.49854, 14.12778,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(5066, 1388.90332, -1679.49805, 15.88138,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(971, 1389.12402, -1679.52185, 12.98000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1251, 1363.30005, -1662.69995, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3881, 1393.69922, -1654.89941, 14.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1232, 1358.59998, -1631.69995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 1389.80005, -1654.59998, 7.40000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(2774, 1390.09998, -1644.09998, 7.40000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(3660, 1405.89941, -1653.89941, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8843, 1409.19995, -1648.69995, 12.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1391.29980, -1627.39941, 13.25000,   90.00000, 180.00549, 269.97803);
CreateDynamicObject(3934, 1386.87488, -1638.10144, 37.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 1393.30005, -1629.40002, 13.30000,   90.00000, 179.99451, 0.00000);
CreateDynamicObject(3851, 1389.30005, -1629.40002, 24.50000,   90.00000, 179.99451, 359.99451);
CreateDynamicObject(3851, 1393.30005, -1629.40002, 24.50000,   90.00000, 180.00549, 359.98901);
CreateDynamicObject(3851, 1393.30005, -1629.40002, 35.80000,   90.00000, 179.99451, 359.99448);
CreateDynamicObject(3851, 1391.30005, -1627.40002, 24.50000,   90.00000, 180.00549, 269.97803);
CreateDynamicObject(3851, 1391.30005, -1627.40002, 35.80000,   90.00000, 179.99451, 269.98901);
CreateDynamicObject(3851, 1389.30005, -1629.40002, 35.80000,   90.00000, 180.00549, 359.98352);
CreateDynamicObject(1232, 1415.59961, -1653.00000, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 1352.19995, -1618.80005, 3.90000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(4100, 1386.59961, -1679.59961, 15.30000,   0.00000, 0.00000, 317.99927);
CreateDynamicObject(3578, 1384.50000, -1679.50000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1359.40002, -1684.30005, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1359.19995, -1618.80005, 12.60000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(996, 1355.90002, -1618.90002, 14.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1354.90002, -1684.30005, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1363.89941, -1618.89941, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1354.69922, -1618.79980, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1364.00000, -1684.30005, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1359.19995, -1653.30005, 15.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, 1359.19995, -1641.30005, 15.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1251, 1363.40002, -1658.30005, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.30005, -1654.00000, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.00000, -1649.59998, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.40002, -1640.80005, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.19922, -1645.19922, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.30005, -1636.50000, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 1363.30005, -1632.09998, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1232, 1358.40002, -1663.09998, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 1352.30005, -1684.09998, 4.90000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(996, 1356.09961, -1684.19922, 14.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1374.40002, -1598.50000, 12.60000,   0.00000, 0.00000, 339.99451);
CreateDynamicObject(4100, 1376.27063, -1599.10229, 14.90000,   0.00000, 0.00000, 299.99817);
CreateDynamicObject(975, 1352.69995, -1682.00000, 12.60000,   0.00000, 270.00000, 89.99982);
CreateDynamicObject(2774, 1352.19922, -1623.50000, 3.90000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(2774, 1352.40002, -1676.90002, 4.70000,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(975, 1352.19922, -1621.00000, 12.40000,   0.00000, 270.00000, 89.99451);
CreateDynamicObject(975, 1352.69995, -1678.80005, 12.60000,   0.00000, 270.00000, 89.99451);
CreateDynamicObject(2922, 1388.80005, -1631.40002, 14.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2922, 1393.59961, -1632.29980, 38.40000,   0.00000, 0.00000, 89.99597);
CreateDynamicObject(4100, 1375.77356, -1679.40356, 15.30000,   0.00000, 0.00000, 317.99927);
CreateDynamicObject(4100, 1375.77344, -1679.40332, 12.52501,   0.00000, 0.00000, 317.99927);

//*********************Gobierno interior*********************
CreateDynamicObject(8434, 394.69922, -97.59961, -89.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8434, 399.00000, -69.19922, -89.70000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(8434, 394.60001, -8.90000, -89.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(10615, 392.00000, -21.39941, -105.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10615, 393.29980, 8.50000, -105.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8434, 378.69922, -27.00000, -89.70000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(8434, 334.69922, -97.59961, -89.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8434, 340.29980, -54.00000, -89.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8434, 372.09961, -9.89941, -89.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 335.79980, -39.50000, -95.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 383.79980, -39.59961, -94.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 375.00000, -39.59961, -90.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 375.00000, -39.60000, -86.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 335.20001, -45.90000, -94.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 357.69922, -39.50000, -93.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 357.70001, -39.50000, -95.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 355.20001, -39.60000, -91.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 355.20001, -39.60000, -91.40000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(8434, 379.69922, -62.89941, -70.20000,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(8434, 369.79999, -86.50000, -70.20000,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(8434, 359.60001, -53.90000, -74.10000,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1319, 384.59961, -71.00000, -89.00000,   58.24951, 0.00000, 0.00000);
CreateDynamicObject(1319, 384.60001, -71.80000, -88.50000,   58.24951, 0.00000, 0.00000);
CreateDynamicObject(7191, 383.60001, -56.80000, -94.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14397, 360.89999, -41.40000, -95.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 361.20001, -42.10000, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 361.20001, -46.50000, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 361.19922, -50.89941, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14397, 360.89941, -41.39941, -92.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 361.19922, -50.89941, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 361.19922, -46.50000, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 361.19922, -42.09961, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 361.20001, -56.40000, -93.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 361.20001, -56.40000, -95.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, 354.70001, -31.60000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1557, 354.70001, -28.60000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1557, 354.70001, -28.70000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1557, 354.70001, -25.70000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1557, 354.70001, -31.50000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1557, 354.70001, -34.50000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 337.20001, -66.00000, -94.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 337.10001, -83.00000, -94.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 359.29980, -67.79980, -92.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 359.29999, -67.80000, -95.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 359.70001, -71.60000, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 359.70001, -76.00000, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 359.70001, -80.40000, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 359.69922, -80.39941, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 359.69922, -76.00000, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 359.69922, -71.59961, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 358.70001, -46.60000, -94.33000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 355.89941, -25.69922, -94.36000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 356.00000, -30.10000, -94.36153,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9525, 385.69922, -70.59961, -88.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(4003, 385.29980, -70.39941, -84.80000,   324.73938, 0.00000, 90.00000);
CreateDynamicObject(2614, 384.39941, -70.59961, -89.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18070, 374.69922, -70.69922, -94.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18070, 379.29980, -77.59961, -94.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18070, 379.19922, -63.79980, -94.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18092, 365.39941, -58.50000, -94.41000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18092, 367.09961, -60.39941, -94.40000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1649, 364.89999, -58.70000, -93.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 367.10001, -60.90000, -91.60000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 364.89941, -58.69922, -93.60000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 367.09961, -60.89941, -91.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14397, 364.60001, -45.40000, -92.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 368.79999, -45.40000, -91.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 364.79999, -45.40000, -91.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2811, 361.39999, -39.00000, -94.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 357.79980, -38.79980, -94.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2185, 356.29999, -80.50000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2185, 356.39999, -74.70000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2309, 358.00000, -73.30000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2309, 358.00000, -74.40000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2309, 357.89999, -79.00000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2309, 357.89999, -80.10000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 355.00000, -73.80000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 355.79999, -79.60000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1726, 359.09961, -69.89941, -95.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 359.10001, -80.40000, -95.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 359.10001, -75.60000, -95.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16154, 361.79999, -51.70000, -95.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16154, 361.79999, -46.90000, -95.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16154, 361.79999, -42.30000, -95.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14455, 354.79999, -67.40000, -93.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14455, 354.79999, -77.10000, -93.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(9362, 355.79999, -43.50000, -94.13000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 357.70001, -42.00000, -94.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, 357.69922, -42.00000, -94.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2608, 356.50000, -66.30000, -94.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2606, 356.20001, -39.90000, -92.00000,   20.00000, 0.00000, 0.00000);
CreateDynamicObject(2190, 365.70001, -60.60000, -93.90000,   0.00000, 0.00000, 146.00000);
CreateDynamicObject(2190, 373.09961, -72.29980, -93.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2190, 377.69922, -79.19922, -93.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2190, 377.59961, -65.39941, -93.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 367.60001, -58.80000, -94.90000,   0.00000, 0.00000, 8.00000);
CreateDynamicObject(1714, 374.39999, -71.80000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 374.39999, -69.80000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 379.00000, -64.90000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 379.00000, -63.10000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 379.20001, -78.80000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 379.20001, -76.90000, -94.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2773, 355.79980, -34.69922, -94.33000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2614, 364.20001, -55.20000, -93.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2614, 354.79999, -74.50000, -92.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1361, 384.00000, -57.50000, -94.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 383.79999, -82.50000, -94.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2257, 367.39999, -83.20000, -90.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2258, 374.10001, -83.20000, -90.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2260, 379.50000, -82.70000, -90.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2261, 362.60001, -24.80000, -93.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2262, 363.79999, -28.90000, -91.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2263, 363.79999, -32.50000, -92.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2264, 363.79999, -36.30000, -91.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2266, 356.60001, -66.60000, -93.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2267, 367.29999, -57.10000, -91.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2288, 355.20001, -36.00000, -92.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8434, 350.39999, -56.40000, -83.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3962, 384.60001, -61.10000, -89.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3962, 384.60001, -79.90000, -89.40000,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(2644, 364.39999, -81.40000, -86.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 364.39999, -58.60000, -89.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14397, 364.39999, -75.60000, -89.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2644, 364.39999, -74.70000, -86.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2644, 364.39999, -68.30000, -86.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2644, 364.39999, -62.50000, -86.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(2644, 364.39999, -57.60000, -86.50000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 354.60001, -38.10000, -94.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 355.79999, -37.50000, -94.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 355.20001, -51.50000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 355.20001, -62.50000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 355.20001, -56.50000, -94.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2257, 362.89941, -39.79980, -91.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2258, 356.69922, -24.29980, -90.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2260, 359.89941, -24.79980, -92.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18368, 348.39999, -17.10000, -102.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18368, 365.70001, -49.80000, -101.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2894, 357.00000, -39.50000, -93.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14456, 354.88181, -24.49166, -91.40000,   270.25024, 180.00000, 180.00000);
CreateDynamicObject(1491, 361.23529, -53.08310, -94.80080,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, 361.23550, -56.10950, -94.80080,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, 359.66635, -66.39641, -94.80210,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, 359.69131, -69.40290, -94.80210,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, 357.67130, -44.13820, -94.80080,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, 360.98880, -39.54169, -94.80080,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(1491, 358.00851, -39.55836, -94.80080,   0.00000, 0.00000, 0.00000);

//*********************Hitman interior/exterior*********************
CreateDynamicObject(2284, 2351.80005, -646.79999, 128.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2026, 2351.39990, -651.70001, 130.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1766, 2350.60010, -646.79999, 127.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1744, 2354.50000, -651.59998, 127.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1814, 2351.00000, -652.20001, 127.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1814, 2351.00000, -653.09998, 127.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1815, 2350.89990, -652.20001, 129.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2063, 2355.19995, -646.40002, 128.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2063, 2355.19995, -646.40002, 128.89999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(342, 2354.00000, -646.40002, 127.50000,   0.00000, 0.00000, 29.00000);
CreateDynamicObject(342, 2354.19995, -646.40002, 127.50000,   0.00000, 0.00000, 82.75000);
CreateDynamicObject(347, 2354.19995, -646.29999, 128.10001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 2355.00000, -646.29999, 128.10001,   0.00000, 0.00000, 166.00000);
CreateDynamicObject(351, 2355.39990, -646.29999, 128.00000,   1.92200, 16.00900, 359.44901);
CreateDynamicObject(357, 2355.00000, -646.29999, 128.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 2354.19995, -646.29999, 128.89999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 2356.10010, -646.29999, 128.89999,   0.00000, 0.00000, 192.25000);
CreateDynamicObject(367, 2354.39990, -646.50000, 127.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(367, 2354.80005, -646.50000, 127.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(367, 2355.19995, -646.50000, 127.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(371, 2356.80005, -646.29999, 127.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(371, 2357.30005, -646.29999, 127.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(371, 2357.30005, -646.29999, 128.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(371, 2356.80005, -646.29999, 128.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(373, 2354.69995, -646.70001, 129.60001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(373, 2355.00000, -646.29999, 129.60001,   0.00000, 0.00000, 228.00000);
CreateDynamicObject(373, 2355.69995, -646.20001, 129.70000,   335.90100, 297.59299, 220.00000);
CreateDynamicObject(3017, 2351.50000, -652.59998, 127.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2894, 2351.89990, -652.29999, 127.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3111, 2353.60010, -651.90002, 129.00000,   90.00000, 273.00000, 357.25000);
CreateDynamicObject(1704, 2349.89990, -648.79999, 127.10000,   0.00000, 0.00000, 89.50000);
CreateDynamicObject(1744, 2354.50000, -653.50000, 127.10000,   0.00000, 0.00000, 270.00000);

//*********************Sistema judicial exterior*********************
CreateDynamicObject(3294, 1512.53003, -1564.30005, 15.41000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1698, 1476.87000, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1475.55005, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1471.00000, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1472.04004, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1476.87000, -1565.98999, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1475.53003, -1566.00000, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1472.07996, -1566.06995, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1471.00000, -1566.07996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1474.28003, -1566.01001, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1473.15002, -1566.06995, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1474.27002, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1473.00000, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1476.87000, -1569.15002, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1473.13000, -1569.23999, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1475.52002, -1569.26001, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1474.31995, -1569.19995, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1472.23999, -1569.27002, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1471.00000, -1569.34998, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8673, 1527.81006, -1563.60999, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8673, 1535.06995, -1563.56995, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3660, 1536.35999, -1564.18994, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3660, 1469.57996, -1564.18994, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3294, 1531.43005, -1564.25000, 15.41000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1698, 1534.37000, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1533.19995, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1532.39001, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1529.85999, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1528.50000, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1531.15002, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1531.09998, -1565.95996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1529.81995, -1565.95996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1528.51001, -1565.95996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1528.51001, -1569.19995, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1529.88000, -1569.26001, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1531.16003, -1569.22998, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1534.38000, -1569.22998, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1533.20996, -1569.26001, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1532.41003, -1569.18994, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1532.34998, -1565.95996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1533.14001, -1565.98999, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1534.35999, -1565.98999, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3294, 1473.94995, -1564.37000, 15.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1698, 1509.60999, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1509.60999, -1569.32996, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1509.60999, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1510.79004, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1510.89001, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1510.82996, -1569.38000, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1512.87000, -1569.21997, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1511.55005, -1569.29004, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1512.22998, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1512.93994, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1514.16003, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1515.46997, -1566.05005, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1515.46997, -1569.33997, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1514.16003, -1569.22998, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1514.14001, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1512.05005, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1512.84998, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1698, 1515.46997, -1572.41003, 12.45000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8673, 1508.93005, -1563.56006, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8673, 1516.15002, -1563.57996, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3660, 1527.08997, -1564.20996, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3660, 1517.43005, -1564.18994, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8132, 1454.01001, -1570.68994, 15.11000,   0.00000, 0.00000, -60.00000);
CreateDynamicObject(8131, 1550.31006, -1571.69995, 23.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8131, 1442.57996, -1579.31006, 23.19000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8673, 1470.31995, -1563.58997, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8673, 1477.56006, -1563.55005, 12.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3660, 1508.19995, -1564.18994, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3660, 1478.78003, -1563.68005, 15.09000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2792, 1474.40002, -1565.30005, 17.58000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2793, 1513.07996, -1565.31995, 17.65000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2795, 1532.18005, -1565.35999, 17.59000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1497.78003, -1565.82996, 14.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1488.57996, -1565.90002, 14.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1497.78003, -1568.00000, 14.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1488.57996, -1568.16003, 14.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8658, 1540.70996, -1567.19995, 13.54000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8658, 1465.06006, -1567.18994, 13.48000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8042, 1457.38000, -1500.81995, 18.23000,   0.00000, 0.00000, 180.10001);
CreateDynamicObject(4100, 1460.06006, -1559.67004, 37.68000,   0.00000, 0.00000, 87.49000);
CreateDynamicObject(11489, 1501.54004, -1562.21997, 36.07000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1468.39001, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1479.42004, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1470.21997, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1477.67004, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1537.01001, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1506.98999, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1508.82996, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1516.23999, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1518.03003, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1525.91003, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1527.71997, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1535.14001, -1574.14001, 13.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4100, 1549.52002, -1547.34998, 37.78000,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(4100, 1498.57996, -1565.43005, 37.68000,   0.00000, 0.00000, 140.00000);
CreateDynamicObject(4100, 1549.56726, -1530.77893, 37.68000,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(4100, 1549.52002, -1544.50000, 37.68000,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(3526, 1463.91003, -1554.23999, 336.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1456.27002, -1563.79004, 39.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1539.81995, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1476.33997, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1470.81006, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1465.70996, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1482.39001, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1484.95996, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1490.45996, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1495.84998, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1501.48999, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1503.91003, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1509.55005, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1515.09998, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1520.67004, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1523.16003, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1528.60999, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1534.23999, -1511.17004, 12.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8042, 1549.30005, -1498.76001, 18.21000,   0.00000, 0.00000, 8.17000);
CreateDynamicObject(19430, 1494.17004, -1565.80005, 18.08000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19430, 1492.18994, -1565.80005, 18.08000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19430, 1492.18994, -1565.80005, 19.10000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19430, 1494.17004, -1565.80005, 19.10000,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(9833, 1538.77002, -1580.65002, 15.89000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1466.85999, -1580.87000, 15.89000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1494.46997, -1565.94995, 18.82000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1491.68994, -1566.05005, 18.82000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1460.56006, -1495.21997, 15.28000,   0.00000, 0.00000, 246.94000);
CreateDynamicObject(980, 1547.09998, -1483.01001, 15.41000,   0.00000, 0.00000, 121.01000);
CreateDynamicObject(980, 1547.75000, -1504.93005, 15.41000,   0.00000, 0.00000, 82.08000);
CreateDynamicObject(980, 1549.35999, -1493.64001, 15.41000,   0.00000, 0.00000, 82.08000);
CreateDynamicObject(18758, 1499.76001, -1488.14001, 37.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18755, 1499.82996, -1487.97998, 38.02000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18755, 1499.82996, -1487.97998, 14.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 38.67000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 34.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 27.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 30.95000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 30.95000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 34.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 38.67000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 27.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1503.68994, -1484.54004, 19.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1496.06006, -1484.54004, 19.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 1497.58997, -1483.33997, 23.01000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1497.58997, -1483.41003, 19.06000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1497.57996, -1483.28003, 26.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18005, -1483.43005, 38.67000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18005, -1483.43005, 34.77000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18005, -1483.43005, 30.81000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18994, -1483.43005, 14.55000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18005, -1483.43005, 23.01000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18005, -1483.43005, 26.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.03003, -1490.18005, 33.83000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.03003, -1490.18005, 26.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.03003, -1490.18005, 23.01000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.03003, -1490.18005, 19.06000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.18994, -1483.43005, 19.06000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3851, 1498.03003, -1490.18005, 30.81000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1503.66003, -1485.38000, 11.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1503.73999, -1508.80005, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1503.73999, -1494.77002, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1503.73999, -1504.19995, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1495.98999, -1494.77002, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1495.98999, -1503.31006, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1495.98999, -1508.80005, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4100, 1488.68115, -1513.16992, 37.68000,   0.00000, 0.00000, 140.00000);
CreateDynamicObject(19373, 1502.01001, -1491.55005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.67004, -1491.55005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.18994, -1491.55005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1492.72998, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1492.72998, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1492.72998, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1499.16003, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1499.16003, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1499.16003, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1495.95996, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1495.95996, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1495.95996, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1512.01001, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1512.01001, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1512.01001, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1508.80005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1508.80005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1505.56995, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1508.80005, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1505.56995, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.32996, -1502.38000, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1497.82996, -1502.38000, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1502.38000, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1502.06006, -1505.56995, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18758, 1499.76001, -1488.14001, 13.94000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, 1499.96997, -1486.23999, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1497.65002, -1487.39001, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1502.08997, -1486.18994, 39.52000,   0.00000, 90.00000, 359.79999);
CreateDynamicObject(19454, 1502.08997, -1508.81006, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1497.65002, -1508.81006, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1499.96997, -1508.81006, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1502.08997, -1499.62000, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1499.96997, -1499.42004, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1497.65002, -1499.51001, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1502.08997, -1490.00000, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1499.96997, -1489.82996, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1497.65002, -1490.06006, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1536, 1492.43005, -1564.23999, 12.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19373, 1497.85095, -1515.21826, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.45325, -1515.21362, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, 1501.89685, -1515.18762, 36.00000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19446, 1495.96240, -1510.41980, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, 1503.75952, -1510.41931, 37.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, 1497.65125, -1511.09644, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.22070, -1511.06909, 39.52000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1502.07690, -1511.14490, 39.52000,   0.00000, 90.00000, 0.00000);

//*********************Sistema judicial corte*********************
CreateDynamicObject(14602, 1445.12305, -1466.22461, 1619.72888,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13007, 1424.11536, -1469.67017, 1613.13501,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14602, 1436.94141, -1446.60449, 1619.70386,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(13007, 1442.67285, -1467.30566, 1613.13501,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(13007, 1425.78711, -1454.39551, 1613.16003,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(13007, 1415.73071, -1469.82593, 1613.38477,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13007, 1415.70117, -1471.94922, 1613.60999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13007, 1415.67578, -1471.95117, 1613.78516,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13007, 1426.91504, -1451.69824, 1613.18506,   0.00000, 0.00000, 269.98901);
CreateDynamicObject(7191, 1426.17090, -1460.91602, 1614.98120,   90.00000, 180.00549, 269.98901);
CreateDynamicObject(7191, 1420.71826, -1460.90308, 1617.33203,   90.00000, 180.00549, 269.98352);
CreateDynamicObject(1491, 1422.68262, -1460.94043, 1615.31897,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1426.19434, -1460.89551, 1617.33203,   90.00000, 179.99451, 89.99451);
CreateDynamicObject(7191, 1423.91797, -1460.91309, 1639.95593,   270.00000, 180.00150, 269.99051);
CreateDynamicObject(7191, 1422.24219, -1460.89453, 1639.95593,   270.00000, 180.00041, 89.98941);
CreateDynamicObject(7191, 1420.77148, -1460.88770, 1617.33203,   90.00000, 179.99451, 89.98904);
CreateDynamicObject(7191, 1425.17212, -1459.41980, 1614.40540,   90.00000, 180.00549, 269.97803);
CreateDynamicObject(7191, 1425.22168, -1459.39355, 1614.40540,   90.00000, 180.00549, 89.97806);
CreateDynamicObject(7191, 1426.21777, -1457.37695, 1614.40540,   90.00000, 179.99451, 359.98901);
CreateDynamicObject(7191, 1426.19275, -1457.37671, 1614.40540,   90.00000, 180.00549, 179.97803);
CreateDynamicObject(7191, 1428.00708, -1460.93286, 1594.13135,   90.00000, 180.00549, 269.98904);
CreateDynamicObject(7191, 1428.04126, -1460.88477, 1594.13184,   90.00000, 179.99451, 89.99451);
CreateDynamicObject(7191, 1431.62500, -1460.93652, 1614.98120,   90.00000, 179.99451, 270.00000);
CreateDynamicObject(7191, 1431.65051, -1460.90173, 1614.98120,   90.00000, 179.99451, 90.00000);
CreateDynamicObject(7191, 1427.76770, -1460.93250, 1639.95593,   270.00000, 179.99957, 269.98853);
CreateDynamicObject(7191, 1425.09180, -1460.92285, 1639.95593,   270.00000, 180.00549, 269.98901);
CreateDynamicObject(7191, 1427.70935, -1460.90393, 1639.98096,   270.00000, 180.00146, 89.99048);
CreateDynamicObject(7191, 1421.37231, -1459.40967, 1640.08105,   270.00000, 180.00000, 89.98904);
CreateDynamicObject(7191, 1421.24524, -1459.42188, 1640.08105,   270.00000, 180.00000, 269.98901);
CreateDynamicObject(2395, 1427.57727, -1461.01624, 1615.43835,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1428.77197, -1460.98218, 1616.99805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1428.77295, -1460.95679, 1616.99805,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1491, 1433.55371, -1460.87793, 1615.31897,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1433.54883, -1457.42188, 1614.40540,   90.00000, 180.00549, 359.96704);
CreateDynamicObject(7191, 1433.52600, -1457.41162, 1614.40540,   90.00000, 179.99451, 179.97803);
CreateDynamicObject(7191, 1433.55469, -1459.03320, 1639.95593,   270.00000, 179.99854, 359.98749);
CreateDynamicObject(7191, 1433.50488, -1459.02869, 1639.95593,   270.00000, 179.99854, 179.98749);
CreateDynamicObject(13007, 1430.89624, -1451.16162, 1613.13501,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(13007, 1442.71130, -1451.15564, 1613.10999,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(1536, 1434.91211, -1457.15625, 1615.26208,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1567, 1439.94287, -1460.51575, 1615.05701,   0.00000, 0.00000, 241.25000);
CreateDynamicObject(1567, 1437.46667, -1460.50452, 1615.05701,   0.00000, 0.00000, 359.99634);
CreateDynamicObject(7191, 1437.59399, -1458.56079, 1595.63037,   90.00000, 180.00549, 359.96704);
CreateDynamicObject(7191, 1437.56897, -1458.55725, 1595.63037,   90.00000, 180.00549, 179.96704);
CreateDynamicObject(7191, 1428.00708, -1460.93286, 1594.13135,   90.00000, 180.00549, 269.98904);
CreateDynamicObject(7191, 1440.09668, -1462.12891, 1614.40540,   90.00000, 179.99451, 359.97803);
CreateDynamicObject(7191, 1440.05444, -1462.11694, 1614.40540,   90.00000, 179.99451, 179.97803);
CreateDynamicObject(1502, 1440.07227, -1464.02307, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, 1440.12402, -1467.02539, 1615.30725,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1440.08057, -1465.22888, 1639.95593,   270.00000, 179.99854, 359.98749);
CreateDynamicObject(7191, 1440.05420, -1465.25269, 1639.95593,   270.00000, 179.99963, 179.98853);
CreateDynamicObject(7191, 1440.07971, -1468.97168, 1614.40540,   90.00000, 180.00549, 359.96704);
CreateDynamicObject(7191, 1440.04785, -1468.96777, 1614.40540,   90.00000, 180.00549, 179.96155);
CreateDynamicObject(7191, 1446.07324, -1462.01367, 1617.20972,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1446.07324, -1462.01367, 1621.16016,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 1446.01917, -1467.06445, 1615.30725,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1569, 1446.01245, -1464.06348, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2773, 1442.25391, -1465.49609, 1615.79944,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1441.32178, -1467.81226, 1615.79944,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 1441.33777, -1463.36621, 1615.79944,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1462.24707, -1460.47363, 1619.60864,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2368, 1445.37598, -1460.23242, 1615.25281,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2368, 1442.54871, -1460.23706, 1615.25281,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(18070, 1448.59961, -1458.05469, 1615.83203,   0.00000, 0.00000, 180.74707);
CreateDynamicObject(1722, 1444.69824, -1469.56714, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 1443.91174, -1469.55603, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 1443.17664, -1469.53918, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 1442.41821, -1469.55005, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 1440.54565, -1469.22400, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2596, 1425.73315, -1469.52271, 1617.94922,   0.00000, 0.00000, 140.00000);
CreateDynamicObject(2818, 1445.74609, -1466.06970, 1615.30725,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2257, 1443.23132, -1469.57825, 1618.01953,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 1441.66760, -1469.52759, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 1445.51465, -1469.05835, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1744, 1446.15173, -1461.89343, 1616.04700,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2199, 1443.10876, -1457.24109, 1615.30725,   0.00000, 0.00000, 359.00000);
CreateDynamicObject(2606, 1437.97351, -1458.84363, 1617.18494,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(1808, 1445.79260, -1467.55640, 1615.28223,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(949, 1440.43604, -1462.16455, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2186, 1440.80798, -1457.64502, 1615.36926,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, 1445.55896, -1458.12756, 1615.53247,   0.00000, 0.00000, 268.75000);
CreateDynamicObject(1806, 1443.88110, -1458.51367, 1615.28223,   0.00000, 0.00000, 240.00000);
CreateDynamicObject(2185, 1439.78687, -1457.65906, 1615.30725,   0.00000, 0.00000, 181.75000);
CreateDynamicObject(1806, 1439.02209, -1459.00073, 1615.28223,   0.00000, 0.00000, 359.99634);
CreateDynamicObject(2614, 1440.22583, -1465.52930, 1618.80811,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2368, 1448.16870, -1460.22107, 1615.25281,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2196, 1445.63635, -1458.89331, 1616.34473,   0.00000, 0.00000, 232.75000);
CreateDynamicObject(16780, 1443.32202, -1465.18616, 1619.91553,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1426.70813, -1458.94580, 1615.35730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 1429.31323, -1457.65771, 1615.35730,   0.00000, 0.00000, 0.25000);
CreateDynamicObject(949, 1432.56274, -1457.59741, 1615.91846,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1430.92700, -1460.60571, 1615.28223,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2231, 1428.65393, -1461.05164, 1617.85754,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2738, 1424.19128, -1457.57397, 1615.96021,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2828, 1445.64246, -1459.48425, 1616.37195,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(2855, 1441.02124, -1469.25647, 1615.30725,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(2853, 1439.36035, -1457.65076, 1616.11438,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1800, 1425.36523, -1460.54333, 1615.35730,   0.00000, 0.00000, 359.00000);
CreateDynamicObject(2518, 1422.46594, -1457.68591, 1615.35730,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2911, 1422.09924, -1460.65503, 1615.33228,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2204, 1424.98950, -1465.07861, 1615.11572,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2204, 1424.97595, -1462.96094, 1614.51514,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2204, 1424.97742, -1467.25244, 1614.54016,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2204, 1426.99805, -1462.94104, 1614.36499,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2204, 1429.94788, -1462.92981, 1614.36499,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2204, 1424.55945, -1464.92712, 1614.49011,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2204, 1424.55579, -1467.05664, 1615.09070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2204, 1424.56604, -1469.22217, 1614.51514,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2204, 1430.87292, -1462.70874, 1614.36499,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(2204, 1430.83228, -1467.37219, 1614.36499,   0.00000, 0.00000, 269.98901);
CreateDynamicObject(2204, 1430.41040, -1469.33618, 1614.33997,   0.00000, 0.00000, 89.98901);
CreateDynamicObject(2204, 1430.45691, -1464.67261, 1614.33997,   0.00000, 0.00000, 89.98901);
CreateDynamicObject(1491, 1430.67725, -1462.52905, 1613.64282,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2205, 1428.21912, -1464.94714, 1615.30725,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2205, 1428.13416, -1468.92212, 1615.30725,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1714, 1423.29028, -1466.25146, 1615.95740,   0.00000, 0.00000, 91.75000);
CreateDynamicObject(1663, 1423.46851, -1463.66125, 1616.01721,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1715, 1429.84375, -1463.82239, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1715, 1429.89294, -1465.00793, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1715, 1429.72021, -1467.62610, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1715, 1429.74158, -1468.67639, 1615.30725,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1715, 1427.78308, -1461.31299, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1715, 1426.88013, -1461.28308, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1715, 1425.97437, -1461.28003, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1715, 1424.97278, -1461.20837, 1615.30725,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1437.28918, -1457.08789, 1617.05957,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1437.28906, -1457.08789, 1621.01196,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2748, 1432.50220, -1467.55811, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1432.51489, -1469.10645, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1432.49231, -1464.30420, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1432.48682, -1463.75098, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1434.92334, -1463.74829, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1434.91699, -1464.39526, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1434.89917, -1467.54175, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1434.90393, -1469.09204, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1437.19592, -1463.73389, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1437.19299, -1464.35852, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1437.29419, -1467.49597, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2748, 1437.30017, -1469.02490, 1615.88000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(949, 1439.60010, -1469.12036, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 1439.63208, -1462.39185, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1439.78796, -1467.36414, 1615.28223,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(955, 1437.03577, -1457.86987, 1615.68262,   0.00000, 0.00000, 267.00000);
CreateDynamicObject(956, 1437.04626, -1459.65295, 1615.73267,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(949, 1434.11865, -1457.76929, 1615.94348,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2204, 1433.39771, -1462.92847, 1614.36499,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2204, 1436.32739, -1462.92249, 1614.36499,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2204, 1437.38452, -1462.91064, 1614.33997,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2204, 1435.41455, -1462.48755, 1614.31494,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(2204, 1432.50635, -1462.50256, 1614.31494,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2204, 1431.35962, -1462.52722, 1614.31494,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(2614, 1425.14001, -1466.21912, 1616.09546,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3027, 1446.88953, -1462.62329, 1612.58472,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2352, 1424.75464, -1465.66577, 1616.91504,   358.00101, 89.93695, 269.99884);
CreateDynamicObject(2894, 1424.79468, -1466.47815, 1616.90564,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2254, 1429.80286, -1457.20203, 1617.94128,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(976, 1414.48633, -1459.48755, 1612.17200,   0.00000, 0.00000, 0.00000);

//*********************Sistema judicial interior*********************
CreateDynamicObject(14858, 2182.95996, 1303.83887, 7703.20313,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14856, 2136.38281, 1303.83301, 7699.94238,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2184, 2137.48364, 1302.44226, 7698.05469,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2606, 2137.33105, 1303.53516, 7698.95605,   339.99939, 0.00000, 270.00000);
CreateDynamicObject(2356, 2135.92944, 1303.53198, 7698.05469,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2605, 2134.93164, 1299.84766, 7698.45313,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2356, 2134.73828, 1300.80957, 7698.05469,   0.00000, 0.00000, 203.99963);
CreateDynamicObject(2611, 2134.85522, 1299.44751, 7699.56250,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2616, 2136.06250, 1307.31982, 7699.41748,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2616, 2133.79736, 1303.69055, 7699.39600,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1536, 2166.15430, 1294.91516, 7698.05469,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1536, 2166.11475, 1297.93518, 7698.05469,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2765, 2165.64844, 1295.57874, 7696.93408,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2886, 2166.10889, 1288.69531, 7699.41553,   0.00000, 0.00000, 89.50000);
CreateDynamicObject(2963, 2170.23633, 1305.09375, 7699.20264,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2184, 2150.10303, 1301.71558, 7698.05469,   0.00000, 0.00000, 72.00000);
CreateDynamicObject(2184, 2152.84961, 1307.32715, 7698.05469,   0.00000, 0.00000, 287.74292);
CreateDynamicObject(2184, 2153.46680, 1302.81836, 7698.05469,   0.00000, 0.00000, 252.49658);
CreateDynamicObject(3657, 2161.14746, 1307.75623, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2161.13818, 1300.44653, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2161.14233, 1304.10864, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2159.19263, 1304.14075, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2159.19385, 1300.47839, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2159.19287, 1307.78540, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2157.28418, 1304.11011, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2157.30273, 1300.48547, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3657, 2157.27441, 1307.75195, 7698.57275,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2614, 2147.71997, 1304.12817, 7700.35986,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2184, 2150.75781, 1304.45898, 7698.05469,   0.00000, 0.00000, 109.24802);
CreateDynamicObject(1714, 2148.80054, 1304.08435, 7698.05469,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2886, 2137.78662, 1299.37781, 7699.28369,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2886, 2137.80908, 1307.41931, 7699.28955,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2886, 2136.08740, 1316.28687, 7699.32764,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2886, 2136.01270, 1291.35742, 7699.35449,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1536, 2146.97949, 1279.44922, 7698.05469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 2149.98535, 1279.49414, 7698.05469,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1671, 2154.71436, 1300.89673, 7698.51514,   0.00000, 0.00000, 268.99475);
CreateDynamicObject(1671, 2154.93091, 1301.75024, 7698.51514,   0.00000, 0.00000, 243.91736);
CreateDynamicObject(1671, 2154.72998, 1307.24194, 7698.51514,   0.00000, 0.00000, 268.98926);
CreateDynamicObject(1671, 2154.91284, 1306.36829, 7698.51514,   0.00000, 0.00000, 296.09619);
CreateDynamicObject(2605, 2134.18896, 1305.84082, 7698.45313,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 2135.15967, 1306.14807, 7698.05469,   0.00000, 0.00000, 127.99963);
CreateDynamicObject(1536, 2152.21875, 1279.45776, 7698.05469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 2155.23730, 1279.48999, 7698.05469,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1536, 2157.43970, 1279.45032, 7698.05469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 2160.46460, 1279.48999, 7698.05469,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(970, 2155.61597, 1297.64294, 7698.60596,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2155.62109, 1301.79993, 7698.60596,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2155.62183, 1305.95935, 7698.60596,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 2155.62524, 1310.10156, 7698.60596,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, 2148.77148, 1311.07031, 7698.75195,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(638, 2148.82471, 1296.67236, 7698.75195,   0.00000, 0.00000, 226.50000);
CreateDynamicObject(1360, 2160.54419, 1311.05701, 7698.83203,   0.00000, 0.00000, 232.00000);
CreateDynamicObject(1360, 2160.28271, 1296.88574, 7698.83301,   0.00000, 0.00000, 314.00000);
CreateDynamicObject(1536, 2150.24683, 1316.41272, 7698.06250,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1536, 2147.24390, 1316.37048, 7698.06250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 2158.14160, 1316.42773, 7698.06250,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1536, 2155.18335, 1316.38416, 7698.06250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 2162.18750, 1316.42310, 7698.06250,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1536, 2159.18628, 1316.39319, 7698.06250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 2167.04077, 1315.22595, 7698.06250,   0.00000, 0.00000, 134.00000);
CreateDynamicObject(1569, 2164.95679, 1317.38098, 7698.05664,   0.00000, 0.00000, 314.00000);
CreateDynamicObject(4724, 2173.39648, 1316.80029, 7700.08936,   0.00000, 0.00000, 224.00000);
CreateDynamicObject(4724, 2171.07910, 1319.17773, 7700.06299,   0.00000, 0.00000, 223.99475);
CreateDynamicObject(4724, 2168.77783, 1321.54065, 7700.04199,   0.00000, 0.00000, 223.99475);
CreateDynamicObject(4724, 2167.89819, 1322.43970, 7700.04785,   0.00000, 0.00000, 223.99475);
CreateDynamicObject(1535, 2166.10327, 1287.90820, 7698.05469,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1535, 2166.13721, 1284.88123, 7698.05469,   0.00000, 0.00000, 90.00000);

//*********************Ballas interior*********************
CreateDynamicObject(14718, 2063.80005, -1584.40002, -14.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2946, 2066.00000, -1589.30005, -14.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1767, 2068.50000, -1582.50000, -14.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1767, 2070.50000, -1583.59998, -14.40000,   0.00000, 0.00000, 270.75000);
CreateDynamicObject(1767, 2070.50000, -1587.30005, -14.40000,   0.00000, 0.00000, 272.74658);
CreateDynamicObject(1767, 2067.60010, -1584.59998, -14.40000,   0.00000, 0.00000, 89.74658);
CreateDynamicObject(2576, 2074.30005, -1584.59998, -14.40000,   0.00000, 0.00000, 359.25000);
CreateDynamicObject(14720, 2060.30005, -1583.50000, -14.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2083, 2068.50000, -1583.69995, -14.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1701, 2074.30005, -1588.19995, -14.40000,   0.00000, 0.00000, 273.25000);
CreateDynamicObject(1717, 2072.00000, -1588.30005, -14.40000,   0.00000, 0.00000, 16.00000);
CreateDynamicObject(1719, 2072.19995, -1588.40002, -14.30000,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(2100, 2073.00000, -1584.09998, -14.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2332, 2076.60010, -1584.50000, -12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1421, 2061.60010, -1586.00000, -13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1421, 2060.80005, -1587.40002, -13.60000,   0.00000, 0.00000, 270.00000);

//*********************Rusos exterior*********************
CreateDynamicObject(8210, 716.70227, -1183.50598, 18.92342,   0.00000, 3.00000, 239.60339);
CreateDynamicObject(987, 736.04730, -1149.08704, 20.36570,   0.00000, 2.00000, 242.06715);
CreateDynamicObject(987, 739.14447, -1143.27014, 20.36570,   0.00000, 1.00000, 242.06720);
CreateDynamicObject(987, 751.04590, -1142.58655, 21.12189,   0.00000, 1.00000, 183.30901);
CreateDynamicObject(987, 762.75128, -1142.73840, 21.10390,   0.00000, 0.00000, 179.97580);
CreateDynamicObject(987, 774.71808, -1142.76697, 21.25780,   0.00000, 0.00000, 179.60330);
CreateDynamicObject(987, 783.80743, -1143.03662, 21.25780,   0.00000, 0.00000, 179.60330);
CreateDynamicObject(987, 702.90680, -1207.88391, 14.60645,   0.00000, 7.00000, 147.03860);
CreateDynamicObject(987, 671.27441, -1214.47571, 17.00409,   0.00000, 5.00000, 214.78940);
CreateDynamicObject(987, 671.27441, -1214.47571, 15.58600,   0.00000, 0.00000, 214.78940);
CreateDynamicObject(987, 702.60620, -1207.61682, 17.04681,   0.00000, 7.00000, 147.03860);

//*********************Rusos interior*********************
CreateDynamicObject(4604, -111.40000, 80.10000, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8565, -84.70000, 90.40000, 4010.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(8565, -26.00000, 101.00000, 4010.00000,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(8565, -83.00000, 59.30000, 4010.00000,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(8565, -42.75000, 48.00000, 4010.00000,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(4604, -93.70000, 143.89999, 4006.11011,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14407, -30.50000, 81.50000, 4009.00000,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(14407, -30.65000, 77.55000, 4009.00000,   0.00000, 0.00000, 87.99000);
CreateDynamicObject(14407, -30.80000, 73.59000, 4009.00000,   0.00000, 0.00000, 87.98000);
CreateDynamicObject(14407, -30.95000, 69.70000, 4009.00000,   0.00000, 0.00000, 87.98000);
CreateDynamicObject(14407, -63.00000, 54.00000, 4002.64990,   0.00000, 0.00000, 179.98000);
CreateDynamicObject(4604, 4.70000, 83.70000, 4012.20996,   0.00000, 0.00000, 87.99000);
CreateDynamicObject(8565, -7.80000, 100.20000, 4015.80005,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -27.60000, 82.00000, 4024.00000,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(2774, -28.05000, 68.70000, 4024.00000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(8565, -37.70000, 47.99000, 4015.80005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(8565, 7.50000, 33.40000, 4015.80005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(8565, 29.00000, 64.80000, 4015.80005,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(8565, -16.70000, 14.30000, 4015.80005,   0.00000, 0.00000, 269.98001);
CreateDynamicObject(8565, -104.40000, 124.90000, 4010.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(8565, -26.00000, 135.89999, 4010.00000,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(5156, -64.70000, 51.00000, 3949.39990,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(5156, -61.07000, 51.00000, 4009.00000,   0.00000, 89.99000, 180.00000);
CreateDynamicObject(5156, -58.00000, 30.20000, 3999.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, -65.20000, 34.60000, 4011.00000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(5156, -61.10000, 17.50000, 3999.69995,   0.00000, 89.99000, 179.99001);
CreateDynamicObject(5156, -82.70000, 34.00000, 3999.69995,   0.00000, 89.99000, 271.98999);
CreateDynamicObject(5156, -66.30000, 18.30000, 3999.60010,   0.00000, 89.99000, 93.99000);
CreateDynamicObject(5156, -82.60000, 25.10000, 3999.69995,   0.00000, 89.99000, 3.99000);
CreateDynamicObject(4206, -63.90000, 126.30000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8565, -64.80000, 159.00000, 4010.00000,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(2774, -63.90000, 107.20000, 4018.00000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(2774, -46.80000, 107.20000, 4018.00000,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -57.60000, 107.20000, 4018.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2774, -53.00000, 107.20000, 4018.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2774, -57.20000, 107.25000, 4009.39990,   0.00000, 90.00000, 359.97000);
CreateDynamicObject(1491, -56.80000, 107.00000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -53.79000, 107.03000, 4006.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -64.63000, 107.00000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -60.90000, 107.00000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -51.70000, 107.00000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -48.00000, 107.00000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -62.60000, 107.00000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -58.90000, 107.00000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -55.20000, 107.00000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -51.50000, 107.00000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -47.80000, 107.00000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -62.60000, 107.00000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -58.90000, 107.00000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -55.20000, 107.00000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -51.50000, 107.00000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -47.80000, 107.00000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -58.60000, 107.50000, 4006.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2395, -62.30000, 107.50000, 4006.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -49.00000, 107.50000, 4006.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -45.30000, 107.50000, 4006.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -47.80000, 107.50000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -51.50000, 107.50000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -55.20000, 107.50000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -58.90000, 107.50000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -62.50000, 107.50000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -47.90000, 107.50000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -51.60000, 107.50000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -55.30000, 107.50000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -59.00000, 107.50000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -62.70000, 107.50000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(906, -56.00000, 117.40000, 4006.00000,   0.00000, 0.00000, 32.00000);
CreateDynamicObject(906, -51.60000, 121.00000, 4006.10010,   0.00000, 0.00000, 61.99000);
CreateDynamicObject(880, -50.50000, 126.30000, 4006.00000,   0.00000, 0.00000, 102.00000);
CreateDynamicObject(906, -57.20000, 116.00000, 4006.00000,   0.00000, 0.00000, 209.99001);
CreateDynamicObject(906, -62.20000, 114.70000, 4006.00000,   0.00000, 0.00000, 187.98000);
CreateDynamicObject(906, -67.40000, 115.20000, 4006.00000,   0.00000, 0.00000, 159.98000);
CreateDynamicObject(906, -74.10000, 119.60000, 4006.00000,   0.00000, 0.00000, 311.97000);
CreateDynamicObject(906, -75.00000, 122.20000, 4006.10010,   0.00000, 0.00000, 117.96000);
CreateDynamicObject(906, -76.20000, 126.90000, 4006.10010,   0.00000, 0.00000, 91.95000);
CreateDynamicObject(906, -74.00000, 134.30000, 4006.00000,   0.00000, 0.00000, 229.94000);
CreateDynamicObject(906, -51.60000, 132.00000, 4006.00000,   0.00000, 0.00000, 125.94000);
CreateDynamicObject(906, -70.00000, 137.20000, 4006.00000,   0.00000, 0.00000, 189.94000);
CreateDynamicObject(906, -65.10000, 138.80000, 4006.00000,   0.00000, 0.00000, 189.92999);
CreateDynamicObject(906, -60.00000, 138.00000, 4006.00000,   0.00000, 0.00000, 157.92999);
CreateDynamicObject(906, -55.50000, 135.20000, 4006.00000,   0.00000, 0.00000, 137.92000);
CreateDynamicObject(2415, -69.30000, 130.50000, 4004.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2415, -60.40000, 130.50000, 4004.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2415, -70.70000, 123.20000, 4004.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2415, -61.50000, 123.50000, 4004.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2415, -65.80000, 119.10000, 4004.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -75.40000, 119.20000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -77.60000, 126.40000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -69.00000, 139.60001, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -74.30000, 136.10001, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -56.60000, 139.39999, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -51.90000, 136.30000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -47.10000, 125.20000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(634, -49.60000, 118.90000, 4006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1255, -73.70000, 113.20000, 4006.69995,   0.00000, 0.00000, 56.00000);
CreateDynamicObject(1255, -77.60000, 116.60000, 4006.69995,   0.00000, 0.00000, 44.00000);
CreateDynamicObject(1255, -79.40000, 120.30000, 4006.69995,   0.00000, 0.00000, 29.99000);
CreateDynamicObject(1255, -76.40000, 138.10001, 4006.69995,   0.00000, 0.00000, 329.98999);
CreateDynamicObject(1255, -78.70000, 135.00000, 4006.69995,   0.00000, 0.00000, 335.98999);
CreateDynamicObject(1255, -79.90000, 131.20000, 4006.69995,   0.00000, 0.00000, 349.98001);
CreateDynamicObject(1255, -53.90000, 113.70000, 4006.69995,   0.00000, 0.00000, 128.00000);
CreateDynamicObject(1255, -50.10000, 116.90000, 4006.69995,   0.00000, 0.00000, 141.99001);
CreateDynamicObject(1255, -48.00000, 121.10000, 4006.69995,   0.00000, 0.00000, 157.99001);
CreateDynamicObject(1255, -47.90000, 130.50000, 4006.69995,   0.00000, 0.00000, 185.98000);
CreateDynamicObject(1255, -48.80000, 134.30000, 4006.69995,   0.00000, 0.00000, 213.98000);
CreateDynamicObject(1255, -51.50000, 137.89999, 4006.69995,   0.00000, 0.00000, 227.97000);
CreateDynamicObject(16151, -83.40000, 114.60000, 4006.39990,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1541, -82.87000, 116.10000, 4007.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1667, -82.70000, 111.10000, 4007.12012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -82.30000, 111.70000, 4007.12012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1668, -82.70000, 111.50000, 4007.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1666, -82.20000, 113.00000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1666, -82.20000, 114.30000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, -82.20000, 114.10000, 4007.10010,   0.00000, 0.00000, 356.00000);
CreateDynamicObject(1544, -82.30000, 113.00000, 4007.00000,   0.00000, 0.00000, 86.00000);
CreateDynamicObject(1544, -82.30000, 113.10000, 4007.00000,   0.00000, 0.00000, 85.99000);
CreateDynamicObject(1544, -82.30000, 114.30000, 4007.00000,   0.00000, 0.00000, 85.99000);
CreateDynamicObject(1215, -84.20000, 108.80000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -76.60000, 119.50000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -51.30000, 118.20000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -60.60000, 112.90000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -55.20000, 115.30000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -71.90000, 115.00000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -75.90000, 135.70000, 4006.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -77.50000, 131.10001, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -69.80000, 139.50000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -56.80000, 139.20000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -52.90000, 136.30000, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -49.70000, 130.89999, 4006.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, -83.00000, 137.10001, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, -47.90000, 110.30000, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, -52.50000, 110.30000, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, -47.60000, 138.60001, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2964, -48.90000, 97.20000, 4006.08008,   0.00000, 0.00000, 271.98999);
CreateDynamicObject(2774, -61.10000, 67.12000, 4018.00000,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(2774, -64.80000, 67.12000, 4018.00000,   0.00000, 0.00000, 359.98001);
CreateDynamicObject(2774, -63.20000, 67.08000, 4009.39990,   0.00000, 89.99000, 359.98001);
CreateDynamicObject(2395, -62.10000, 67.40000, 4010.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -62.20000, 67.40000, 4012.89990,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2774, -45.18000, 81.90000, 4018.00000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(2774, -45.18000, 68.80000, 4018.00000,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -45.10000, 75.00000, 4009.39990,   0.00000, 89.99000, 269.98001);
CreateDynamicObject(2395, -45.30000, 80.70000, 4010.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 77.00000, 4010.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 73.30000, 4010.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 69.70000, 4010.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 80.60000, 4012.89990,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 77.10000, 4012.89990,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 73.40000, 4012.89990,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -45.30000, 69.90000, 4012.89990,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2774, -45.18000, 75.10000, 4018.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2395, -64.40000, 66.30000, 4010.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -63.70000, 66.30000, 4012.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -44.90000, 70.10000, 4010.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -44.90000, 73.80000, 4010.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 77.50000, 4010.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 81.10000, 4010.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 70.10000, 4012.89990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 73.80000, 4012.89990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 77.50000, 4012.89990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 81.10000, 4012.89990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(3409, -80.00000, 19.10000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -79.70000, 23.80000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -79.80000, 28.30000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -79.80000, 32.90000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -75.50000, 19.30000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -75.20000, 24.00000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -75.30000, 28.40000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3409, -75.50000, 32.90000, 3999.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -73.00000, 32.40000, 4000.14990,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(3850, -72.75000, 28.90000, 4000.14990,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(3850, -72.40000, 19.90000, 4000.14990,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(3850, -72.40000, 23.40000, 4000.14990,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(941, -63.60000, 21.00000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -65.90000, 21.00000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -68.20000, 21.00000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -70.50000, 21.00000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -63.70000, 24.20000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -66.00000, 24.20000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -68.30000, 24.20000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, -70.60000, 24.20000, 4000.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(944, -71.30000, 33.40000, 4000.50000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(944, -68.40000, 33.60000, 4000.50000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(944, -71.20000, 31.90000, 4000.50000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(944, -68.40000, 32.10000, 4000.50000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(944, -70.10000, 32.60000, 4001.94995,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(17969, -61.20000, 31.10000, 4001.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(17969, -61.20000, 22.80000, 4001.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2901, -63.30000, 21.10000, 4000.80005,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(2901, -65.20000, 21.10000, 4000.80005,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(2901, -67.00000, 21.10000, 4000.80005,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2901, -68.70000, 21.10000, 4000.80005,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2901, -70.40000, 21.10000, 4000.80005,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2891, -62.80000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -62.80000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -63.40000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -63.40000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -64.00000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -64.00000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -64.60000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -64.60000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -65.10000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -65.10000, 23.90000, 4000.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -65.60000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -65.60000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -66.10000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -66.10000, 23.90000, 4000.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -66.60000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -66.60000, 23.90000, 4000.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1279, -67.40000, 24.30000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1279, -68.90000, 24.10000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1279, -70.40000, 24.00000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -71.10000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -70.30000, 24.50000, 4000.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -69.70000, 24.50000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2891, -68.20000, 24.40000, 4000.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, -7.00000, 53.90000, 4024.00000,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -7.00000, 81.00000, 4024.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2774, -7.00000, 70.80000, 4024.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2774, -7.00000, 60.60000, 4024.00000,   0.00000, 0.00000, 357.97000);
CreateDynamicObject(2774, -6.90000, 69.40000, 4015.50000,   0.00000, 89.99000, 269.98001);
CreateDynamicObject(2774, -6.90000, 54.70000, 4015.50000,   0.00000, 89.99000, 269.98001);
CreateDynamicObject(2395, -7.40000, 79.90000, 4012.19995,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1491, -7.45000, 76.70000, 4012.19995,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1491, -7.45000, 73.70000, 4012.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -7.60000, 73.30000, 4012.19995,   0.00000, 0.00000, 267.98001);
CreateDynamicObject(1649, -7.10000, 67.90000, 4013.80005,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1649, -7.25000, 63.50000, 4013.80005,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1649, -7.30000, 57.70000, 4013.80005,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1649, -7.45000, 53.30000, 4013.80005,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(2395, -7.30000, 79.70000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 76.00000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 72.30000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 68.60000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 64.90000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 61.50000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.30000, 57.80000, 4016.30005,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(1649, -64.60000, 59.80000, 4031.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5156, -7.70000, 55.00000, 4012.30005,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2357, 4.90000, 61.60000, 4012.60010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2357, 4.90000, 65.80000, 4012.60010,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2357, 4.90000, 70.00000, 4012.60010,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2357, -2.30000, 70.10000, 4012.60010,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2357, 3.40000, 72.80000, 4012.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, -0.80000, 72.80000, 4012.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, -2.30000, 65.90000, 4012.60010,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2357, -2.30000, 61.80000, 4012.60010,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2395, -7.40000, 70.50000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -7.30000, 77.10000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 77.10000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 73.40000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 69.70000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 66.00000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 62.30000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 58.60000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -6.60000, 54.90000, 4016.30005,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(1714, 1.40000, 74.60000, 4012.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 6.60000, 72.30000, 4012.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 6.60000, 70.80000, 4012.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 6.60000, 69.40000, 4012.19995,   0.00000, 0.00000, 266.00000);
CreateDynamicObject(1714, 6.60000, 68.10000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.60000, 66.70000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.60000, 65.30000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.60000, 63.90000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.50000, 62.50000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.50000, 61.20000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, 6.40000, 59.80000, 4012.19995,   0.00000, 0.00000, 265.98999);
CreateDynamicObject(1714, -3.80000, 59.80000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 61.10000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 62.40000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.70000, 63.70000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 65.00000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 66.40000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 67.90000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.90000, 69.30000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 70.50000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.80000, 71.90000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1714, -3.90000, 72.90000, 4012.19995,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(1667, 1.70000, 73.30000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 72.30000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 71.00000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 69.70000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 68.20000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 66.90000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 65.60000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 64.00000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 62.70000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 61.40000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, 5.40000, 60.00000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 59.90000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 61.10000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.70000, 62.20000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 63.40000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 64.60000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 66.00000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 67.40000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.80000, 69.20000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.70000, 70.40000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.70000, 71.60000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1667, -2.70000, 72.70000, 4013.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1510, 1.10000, 73.30000, 4013.05005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3044, 1.00000, 73.40000, 4013.10010,   0.00000, 0.00000, 28.00000);
CreateDynamicObject(1846, 1.30000, 54.38000, 4015.00000,   90.00000, 90.00000, 270.00000);
CreateDynamicObject(2229, 2.70000, 53.00000, 4014.30005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2229, -0.70000, 53.00000, 4014.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2491, 4.00000, 57.90000, 4011.60010,   0.00000, 0.00000, 22.00000);
CreateDynamicObject(1952, 3.90000, 57.40000, 4013.60010,   90.00000, 90.00000, 224.00000);
CreateDynamicObject(2227, 1.60000, 70.80000, 4012.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14565, 2.20000, 82.60000, 4014.10010,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(1726, 10.20000, 77.60000, 4012.19995,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1726, 10.20000, 72.30000, 4012.19995,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1726, 10.10000, 66.10000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(1726, 10.20000, 58.90000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2774, -11.70000, 52.60000, 4024.00000,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -18.60000, 52.60000, 4024.00000,   0.00000, 0.00000, 357.98001);
CreateDynamicObject(2774, -13.30000, 52.50000, 4015.50000,   0.00000, 90.00000, 179.98000);
CreateDynamicObject(1491, -13.80000, 53.00000, 4012.14990,   0.00000, 0.00000, 177.99001);
CreateDynamicObject(1491, -16.80000, 53.00000, 4012.14990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -17.20000, 53.10000, 4012.16992,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -10.60000, 53.10000, 4012.17993,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -12.90000, 52.90000, 4016.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -16.60000, 52.90000, 4016.30005,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -13.00000, 52.90000, 4019.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -16.40000, 52.90000, 4019.00000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2395, -13.34000, 52.87000, 4012.17993,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -20.00000, 52.90000, 4012.17993,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -17.40000, 52.70000, 4016.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -13.70000, 52.70000, 4016.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -17.50000, 52.70000, 4019.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -13.80000, 52.70000, 4019.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1481, -11.10000, 50.00000, 4012.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1481, -11.10000, 48.40000, 4012.89990,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2131, -11.30000, 46.40000, 4012.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2131, -11.30000, 44.40000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2131, -11.30000, 42.40000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2132, -18.90000, 50.30000, 4012.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2132, -18.90000, 48.30000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2339, -18.90000, 47.30000, 4012.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2339, -18.90000, 46.30000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2339, -18.90000, 43.40000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2339, -18.90000, 42.40000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2339, -18.90000, 41.40000, 4012.19995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2415, -11.50000, 39.20000, 4012.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2415, -11.50000, 37.00000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2415, -11.50000, 34.80000, 4012.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2417, -14.30000, 34.70000, 4012.19995,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2417, -16.30000, 34.70000, 4012.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2417, -18.50000, 34.70000, 4012.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2426, -19.10000, 41.50000, 4013.29004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2453, -19.10000, 42.30000, 4013.55005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2453, -19.10000, 42.90000, 4013.55005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2453, -19.10000, 43.50000, 4013.55005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -14.30000, 34.70000, 4011.62012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -16.30000, 34.70000, 4011.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -18.50000, 34.80000, 4011.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1409, -17.30000, 52.50000, 4012.33008,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1370, -13.30000, 34.60000, 4012.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1370, -15.30000, 34.70000, 4012.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1370, -17.40000, 34.70000, 4012.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(936, -18.70000, 39.20000, 4012.69995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(936, -18.70000, 37.40000, 4012.69995,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2804, -18.80000, 37.00000, 4013.28003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2804, -18.40000, 37.10000, 4013.28003,   0.00000, 0.00000, 48.00000);
CreateDynamicObject(2804, -18.80000, 39.60000, 4013.28003,   0.00000, 0.00000, 48.00000);
CreateDynamicObject(2806, -18.70000, 38.00000, 4013.37012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2806, -18.50000, 38.80000, 4013.37012,   0.00000, 0.00000, 70.00000);
CreateDynamicObject(2812, -19.00000, 48.20000, 4013.26001,   0.00000, 0.00000, 78.00000);
CreateDynamicObject(2820, -19.10000, 50.10000, 4013.26001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2830, -19.00000, 50.60000, 4013.26001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2822, -18.90000, 46.40000, 4013.26001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2822, -18.90000, 47.10000, 4013.26001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, -64.75000, 84.40000, 4006.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1557, -64.75000, 87.40000, 4006.10010,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3471, -57.50000, 105.40000, 4007.19995,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(3471, -53.10000, 105.40000, 4007.19995,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(3660, -64.40000, 97.20000, 4007.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(630, -62.10000, 106.40000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -59.50000, 106.40000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -51.10000, 106.20000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -48.60000, 106.20000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, -64.10000, 71.10000, 4006.08008,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(1726, -64.00000, 80.10000, 4006.08008,   0.00000, 0.00000, 91.99000);
CreateDynamicObject(630, -64.20000, 76.60000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, -47.90000, 68.50000, 4006.08008,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1726, -53.70000, 68.50000, 4006.08008,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(1726, -58.20000, 68.50000, 4006.08008,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(630, -56.90000, 68.30000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -51.70000, 68.20000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -64.40000, 108.40000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2964, -49.00000, 92.30000, 4006.08008,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(2964, -49.00000, 88.00000, 4006.08008,   0.00000, 0.00000, 267.98999);
CreateDynamicObject(1432, -82.60000, 124.20000, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, -82.90000, 130.60001, 4006.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -52.80000, 98.90000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -47.70000, 100.60000, 4006.60010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -51.10000, 100.60000, 4006.60010,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(3850, -52.80000, 95.50000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -52.80000, 92.10000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -52.80000, 88.70000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -52.80000, 85.30000, 4006.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -51.10000, 83.60000, 4006.60010,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(1726, -52.20000, 86.80000, 4006.10010,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(1726, -52.20000, 91.50000, 4006.10010,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(1726, -52.20000, 96.40000, 4006.10010,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(1726, -24.30000, 81.80000, 4012.19995,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(1726, -17.60000, 81.70000, 4012.19995,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(1726, -11.40000, 81.40000, 4012.19995,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(1726, -24.70000, 68.50000, 4012.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(1726, -20.10000, 68.60000, 4012.19995,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(1726, -18.90000, 56.80000, 4012.19995,   0.00000, 0.00000, 87.99000);
CreateDynamicObject(1726, -18.80000, 64.00000, 4012.19995,   0.00000, 0.00000, 87.98000);
CreateDynamicObject(630, -38.90000, 68.40000, 4006.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -41.30000, 68.40000, 4007.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -43.80000, 68.40000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -38.90000, 82.30000, 4006.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -41.30000, 82.30000, 4007.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -43.80000, 82.30000, 4007.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -23.30000, 68.30000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -25.60000, 82.10000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -19.80000, 81.90000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -13.40000, 81.70000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -8.20000, 81.60000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, -19.00000, 61.30000, 4013.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5156, -67.80000, 95.50000, 4013.60010,   0.00000, 180.00000, 90.00000);
CreateDynamicObject(5156, -62.20000, 87.20000, 4013.60010,   0.00000, 179.99001, 89.99000);
CreateDynamicObject(5156, -28.10000, 78.00000, 4017.00000,   0.00000, 179.99001, 89.99000);
CreateDynamicObject(5156, 2.40000, 66.30000, 4017.00000,   0.00000, 179.99001, 89.99000);
CreateDynamicObject(2395, -44.90000, 69.70000, 4015.50000,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 73.40000, 4015.50000,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 77.10000, 4015.39990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.90000, 80.80000, 4015.39990,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(2395, -44.10000, 82.70000, 4014.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -40.40000, 82.70000, 4015.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -36.70000, 82.70000, 4015.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -33.00000, 82.70000, 4015.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -29.30000, 82.70000, 4015.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18647, -62.90000, 66.10000, 4009.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(335, -18.50000, 39.00000, 4013.69995,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(353, -67.78400, 32.41570, 4001.15210,   90.00000, 0.00000, -77.40000);
CreateDynamicObject(353, -67.19657, 32.57361, 4001.15210,   90.00000, 0.00000, -77.40000);
CreateDynamicObject(353, -68.03035, 33.49686, 4001.15210,   90.00000, 0.00000, -77.40000);
CreateDynamicObject(353, -67.55457, 33.56348, 4001.15210,   90.00000, 0.00000, -77.40000);
CreateDynamicObject(353, -67.18327, 34.08207, 4001.15210,   90.00000, 0.00000, -77.40000);
CreateDynamicObject(356, -71.46332, 31.46082, 4001.13330,   90.00000, 0.00000, -179.94003);
CreateDynamicObject(356, -71.96594, 33.12317, 4001.13330,   90.00000, 0.00000, -225.53999);
CreateDynamicObject(356, -71.95299, 32.24305, 4001.13330,   90.00000, 0.00000, -225.84000);
CreateDynamicObject(2043, -70.53259, 31.36402, 4001.12793,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, -69.87494, 31.65987, 4001.12793,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, -69.06106, 31.52725, 4001.12793,   0.00000, 0.00000, 90.00000);

//*********************Santana interior*********************
CreateDynamicObject(14476, 1113.00000, 244.88000, 9000.65039,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1710, 1116.81006, 249.25000, 9000.73047,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1712, 1110.93994, 249.73000, 9000.66016,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1820, 1109.96997, 246.56000, 9000.66992,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1750, 1109.95996, 247.17000, 9001.17969,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(2344, 1110.82996, 246.97000, 9001.19043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2232, 1112.18005, 239.64000, 9001.30957,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2100, 1110.07996, 239.69000, 9000.73047,   0.00000, 0.00000, 140.00000);
CreateDynamicObject(2232, 1109.85999, 241.92999, 9001.30957,   0.00000, 0.00000, 99.99000);
CreateDynamicObject(16779, 1112.28003, 247.42999, 9004.19043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 1116.94995, 250.02000, 9000.99023,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(644, 1116.89001, 244.89999, 9000.94043,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(644, 1109.98999, 249.91000, 9000.87988,   0.00000, 0.00000, 290.00000);
CreateDynamicObject(2234, 1112.18994, 246.66000, 9000.66016,   0.00000, 0.00000, 320.00000);
CreateDynamicObject(1520, 1112.78003, 246.74001, 9001.21973,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 1113.22998, 246.57001, 9001.37012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2840, 1113.29004, 247.19000, 9000.66016,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1501, 1109.29004, 244.98000, 9000.66992,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2673, 1111.33997, 241.20000, 9000.74023,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3044, 1110.96997, 241.49001, 9000.70020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2452, 1116.82996, 241.07001, 9000.66016,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1520, 1116.92004, 241.11000, 9001.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 1116.79004, 240.78999, 9001.75000,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1520, 1116.79004, 240.32001, 9001.75000,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1520, 1116.79004, 240.32001, 9001.29004,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1512, 1116.68005, 241.06000, 9001.42969,   0.00000, 0.00000, 70.00000);
CreateDynamicObject(1512, 1116.81995, 240.57001, 9001.42969,   0.00000, 0.00000, 20.00000);
CreateDynamicObject(1512, 1116.68005, 240.72000, 9001.01953,   0.00000, 0.00000, 70.00000);
CreateDynamicObject(1543, 1116.70996, 241.20000, 9002.20996,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 1116.57996, 240.95000, 9002.20996,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(1543, 1116.85999, 240.47000, 9002.20996,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(1543, 1116.85999, 240.47000, 9001.70020,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(1543, 1116.78003, 240.47000, 9000.83984,   0.00000, 0.00000, 50.00000);
CreateDynamicObject(1544, 1116.68005, 240.63000, 9002.20020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1116.83997, 240.89000, 9002.20020,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(1544, 1116.60999, 240.88000, 9001.20996,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(2121, 1112.93994, 240.52000, 9000.99023,   7.84000, 88.38000, 140.11000);
CreateDynamicObject(1725, 1112.21997, 241.92000, 9004.25977,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1738, 1113.78003, 238.47000, 9004.91016,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2103, 1112.67004, 243.85001, 9004.25977,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2844, 1109.92004, 242.91000, 9004.25977,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2845, 1110.91003, 240.36000, 9004.25977,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1111.43005, 243.05000, 9004.40039,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2069, 1115.18005, 243.67999, 9004.30957,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1766, 1110.14001, 238.97000, 9004.25977,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1791, 1110.03003, 240.75000, 9004.75977,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(1567, 1110.56995, 235.14999, 9004.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2281, 1109.46997, 236.72000, 9006.04980,   0.00000, 10.00000, 90.00000);
CreateDynamicObject(1487, 1110.34998, 242.30000, 9004.45996,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1109.76001, 237.46001, 9004.25977,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3586, 1114.84998, 229.37000, 8997.30957,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1498, 1114.18994, 252.47000, 9000.71973,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1113.31006, 248.60001, 9000.69043,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1113.31006, 239.59000, 9000.69043,   0.01000, 180.00000, 180.00000);
CreateDynamicObject(3095, 1116.80005, 234.53999, 8999.04004,   179.99001, 90.00000, 0.00000);
CreateDynamicObject(3095, 1120.50000, 238.58000, 8999.04004,   179.99001, 90.00000, 90.00000);
CreateDynamicObject(3095, 1109.35999, 238.59000, 8999.04004,   179.99001, 90.00000, 90.00000);
CreateDynamicObject(3095, 1112.95996, 234.24001, 8999.04004,   179.99001, 90.00000, 180.00000);
CreateDynamicObject(8565, 1094.68994, 213.33000, 8998.55957,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8565, 1136.76001, 214.75999, 8998.55957,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8565, 1133.84998, 153.53999, 8998.55957,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(8565, 1093.31995, 188.72000, 8998.55957,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(8565, 1132.15002, 149.55000, 8998.55957,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(8565, 1138.56995, 216.45000, 8998.55957,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8565, 1187.87000, 203.62000, 8998.55957,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8565, 1170.90002, 240.64000, 8998.55957,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8565, 1160.85999, 175.10001, 8998.55957,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3984, 1116.52002, 178.27000, 9003.70020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8565, 1102.06995, 138.03999, 8998.55957,   0.00000, 0.00000, 179.98000);
CreateDynamicObject(8565, 1071.25000, 153.19000, 8998.55957,   0.00000, 0.00000, 89.98000);
CreateDynamicObject(3984, 1178.06995, 201.62000, 9003.08984,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3984, 1109.45996, 232.67000, 9003.62988,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3984, 1180.08997, 201.69000, 9003.41992,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3984, 1179.27002, 168.13000, 9003.73047,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1131.93005, 177.91000, 8994.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3850, 1131.92004, 181.42999, 8994.50000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1131.93005, 184.95000, 8994.50000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1131.92004, 191.98000, 8994.50000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1131.91003, 188.48000, 8994.50000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1131.90002, 195.53000, 8994.50000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3515, 1126.19995, 184.60001, 8993.42969,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1126.17004, 185.62000, 8993.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1126.20996, 183.57001, 8993.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3997, 1127.07996, 179.00999, 9003.24023,   179.99001, 0.00000, 179.99001);
CreateDynamicObject(17513, 1173.83997, 213.84000, 8985.91992,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(947, 1157.67004, 212.17999, 8996.09961,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16101, 1159.00000, 231.92999, 8996.84961,   89.75000, 180.00000, 178.00000);
CreateDynamicObject(1985, 1158.64001, 221.07001, 8996.84961,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16101, 1168.50000, 231.78000, 8996.84961,   89.75000, 179.99001, 177.99001);
CreateDynamicObject(1985, 1168.14001, 220.86000, 8996.84961,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1170.28003, 220.34000, 9000.25000,   179.99001, 0.00000, 0.00000);
CreateDynamicObject(3858, 1161.16003, 215.95000, 9003.03027,   0.00000, 0.00000, 225.00000);
CreateDynamicObject(12839, 1169.05005, 213.09000, 8997.45996,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3858, 1161.16003, 215.95000, 9003.03027,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(3858, 1161.16003, 215.95000, 9003.03027,   0.00000, 0.00000, 44.99000);
CreateDynamicObject(16101, 1163.71997, 231.73000, 8996.84961,   89.75000, 179.99001, 177.99001);
CreateDynamicObject(1985, 1163.35999, 220.89999, 8996.84961,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3858, 1175.75000, 215.97000, 9005.45020,   0.00000, 0.00000, 224.99001);
CreateDynamicObject(3858, 1175.75000, 215.97000, 9005.45020,   0.00000, 0.00000, 224.99001);
CreateDynamicObject(3858, 1175.75000, 215.97000, 9005.45020,   0.00000, 0.00000, 44.98000);
CreateDynamicObject(2627, 1158.93005, 217.28000, 9000.25000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2627, 1160.38000, 217.30000, 9000.25000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2627, 1161.78003, 217.31000, 9000.25000,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2630, 1163.83997, 217.16000, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2630, 1165.48999, 217.14999, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 1157.59998, 217.38000, 9000.45020,   0.00000, 0.00000, 30.00000);
CreateDynamicObject(644, 1168.93005, 218.09000, 9000.45020,   0.00000, 0.00000, 170.00000);
CreateDynamicObject(2628, 1158.95996, 221.25999, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2628, 1165.56006, 221.14000, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2629, 1162.20996, 221.31000, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2913, 1161.77002, 221.80000, 9001.13965,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(2915, 1162.43994, 220.34000, 9000.37012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1168.10999, 222.11000, 9000.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1157.10999, 219.75000, 9000.25000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8565, 1159.15002, 173.34000, 8998.55957,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2114, 1159.55005, 209.64000, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1157.82996, 217.21001, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1163.03003, 213.23000, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1167.48999, 216.99001, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1167.65002, 216.00000, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1166.39001, 209.31000, 8994.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2114, 1168.69995, 210.99001, 8996.04004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3920, 1163.25000, 222.45000, 8998.70996,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3660, 1170.12000, 194.06000, 8995.54004,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3660, 1169.15002, 193.32001, 8995.54004,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(1726, 1167.22998, 202.39999, 8993.95020,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 1167.25000, 200.02000, 8993.95020,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 1167.25000, 197.62000, 8993.95020,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 1134.43005, 181.75999, 8992.95996,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(16151, 1090.53003, 161.67000, 8993.33008,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18102, 1093.22998, 170.09000, 8998.45020,   42.00000, 0.00000, 180.00000);
CreateDynamicObject(18102, 1103.15002, 154.52000, 8998.45020,   42.00000, 0.00000, 359.98999);
CreateDynamicObject(16101, 1099.89001, 159.96001, 8993.87012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1099.87000, 158.10001, 8994.40039,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3850, 1099.91003, 167.00000, 8994.40039,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(16101, 1099.93005, 165.16000, 8993.87012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7314, 1087.16003, 162.47000, 9000.37988,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1723, 1096.12000, 168.06000, 8993.54004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1093.19995, 168.08000, 8993.54004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1090.21997, 168.10001, 8993.54004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 1099.18005, 167.97000, 8993.88965,   0.00000, 0.00000, 250.00000);
CreateDynamicObject(1723, 1099.13000, 167.05000, 8993.50977,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1723, 1099.15002, 158.92999, 8993.50977,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(644, 1100.96997, 168.24001, 8994.15039,   0.00000, 0.00000, 290.00000);
CreateDynamicObject(1517, 1091.32996, 163.28999, 8994.13965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 1091.47998, 162.24001, 8994.12988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1091.51001, 161.11000, 8993.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 1091.31006, 161.02000, 8993.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1091.50000, 159.83000, 8993.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1541, 1091.04004, 161.67999, 8994.12988,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2780, 1092.22998, 158.72000, 9006.48047,   88.00000, 180.00000, 270.00000);
CreateDynamicObject(2780, 1097.06006, 165.12000, 9005.73047,   87.99000, 179.99001, 270.00000);
CreateDynamicObject(2435, 1107.83997, 158.48000, 8994.20996,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11426, 1107.20996, 155.38000, 8991.29004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1656, 1109.88000, 157.02000, 8994.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1109.88000, 157.02000, 8994.21973,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1109.88000, 157.02000, 8994.45020,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1110.28003, 157.03000, 8994.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1110.28003, 157.03000, 8994.20020,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1110.68005, 157.03000, 8994.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1656, 1109.06995, 157.00999, 8994.33008,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2435, 1106.93994, 158.48000, 8994.20996,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2434, 1106.03003, 158.48000, 8994.20996,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2434, 1108.97998, 158.31000, 8994.20996,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(14820, 1107.37000, 158.48000, 8995.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1958, 1108.69995, 158.38000, 8995.32031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1958, 1106.07996, 158.34000, 8995.32031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2179, 1113.19995, 157.05000, 8995.57031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2179, 1100.42004, 157.00000, 8995.57031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3920, 1113.98999, 162.67999, 8996.08008,   0.00000, 0.00000, 89.99000);
CreateDynamicObject(3920, 1106.91003, 156.27000, 8996.08008,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(2179, 1113.19995, 157.05000, 8999.78027,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2179, 1113.19995, 157.05000, 9004.08008,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2179, 1100.42004, 157.00000, 8999.90039,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2179, 1100.42004, 157.00000, 9004.17969,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 1099.02002, 159.84000, 8993.88965,   0.00000, 0.00000, 120.00000);
CreateDynamicObject(644, 1111.02002, 168.31000, 8994.15039,   0.00000, 0.00000, 230.00000);
CreateDynamicObject(1723, 1101.94995, 168.03999, 8993.82031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1105.00000, 168.06000, 8993.82031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1108.06995, 168.06000, 8993.82031,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2745, 1114.56995, 167.88000, 8997.71973,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16732, 1113.78003, 170.33000, 8995.16992,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16732, 1113.78003, 170.33000, 8995.26953,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2463, 1117.56006, 170.83000, 8994.00977,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2463, 1117.59998, 169.48000, 8994.00977,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2035, 1117.37000, 170.59000, 8994.82031,   0.00000, 0.00000, 280.00000);
CreateDynamicObject(2035, 1117.10999, 169.71001, 8994.82031,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2035, 1117.10999, 169.71001, 8995.15039,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2035, 1117.10999, 169.71001, 8995.53027,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2035, 1117.10999, 169.71001, 8995.88965,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2036, 1117.37000, 170.50999, 8995.51953,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2036, 1117.37000, 170.50999, 8995.87988,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2036, 1117.37000, 170.50999, 8995.16992,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1672, 1117.41003, 171.08000, 8994.54980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, 1117.31006, 170.94000, 8994.54980,   0.00000, 0.00000, 70.00000);
CreateDynamicObject(1672, 1117.43005, 170.81000, 8994.54980,   0.00000, 0.00000, 150.00000);
CreateDynamicObject(1672, 1117.39001, 170.58000, 8994.54980,   0.00000, 0.00000, 150.00000);
CreateDynamicObject(1672, 1117.45996, 170.41000, 8994.54980,   0.00000, 0.00000, 150.00000);
CreateDynamicObject(1654, 1117.42004, 170.06000, 8994.53027,   0.00000, 90.00000, 278.00000);
CreateDynamicObject(1654, 1117.18005, 169.67999, 8994.53027,   0.00000, 90.00000, 208.00000);
CreateDynamicObject(3265, 1115.84998, 171.27000, 8993.88965,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(644, 1140.06006, 172.53000, 8994.45020,   0.00000, 0.00000, 119.99000);
CreateDynamicObject(644, 1130.93994, 195.71001, 8994.25000,   0.00000, 0.00000, 219.99001);
CreateDynamicObject(644, 1112.26001, 192.73000, 8994.25000,   0.00000, 0.00000, 309.98999);
CreateDynamicObject(1649, 1111.68005, 185.50000, 8998.92969,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1726, 1122.17004, 185.12000, 8993.92969,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(2104, 1111.68994, 183.75999, 8993.88965,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2225, 1111.70996, 185.71001, 8993.88965,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2227, 1111.56006, 185.82001, 8994.45020,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.43994, 188.07001, 8997.71973,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, 1161.28003, 220.34000, 9000.25000,   179.99001, 0.00000, 0.00000);
CreateDynamicObject(3095, 1118.39001, 174.46001, 8998.28027,   179.99001, 0.00000, 0.00000);
CreateDynamicObject(3095, 1127.39001, 174.46001, 8998.28027,   179.99001, 0.00000, 0.00000);
CreateDynamicObject(3095, 1136.39001, 174.46001, 8998.28027,   179.99001, 0.00000, 0.00000);
CreateDynamicObject(3498, 1113.95996, 178.78999, 8998.44043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3498, 1131.55005, 178.61000, 8998.45020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7096, 1128.14001, 184.67000, 8996.28027,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1111.63000, 185.50000, 8998.92969,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.43994, 188.07001, 8998.87988,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.43994, 188.07001, 9000.08008,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.48999, 182.92000, 8997.71973,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.48999, 182.92000, 8998.87988,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2232, 1111.48999, 182.92000, 9000.08008,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2104, 1111.73999, 187.86000, 8993.88965,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1726, 1122.16003, 187.64999, 8993.92969,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(1726, 1121.89001, 182.31000, 8993.92969,   0.00000, 0.00000, 219.99001);
CreateDynamicObject(1726, 1120.31006, 189.67000, 8993.92969,   0.00000, 0.00000, 319.98999);
CreateDynamicObject(3498, 1140.63000, 178.94000, 9006.41992,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3498, 1113.95996, 178.78999, 9007.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3858, 1121.55005, 178.74001, 9001.19043,   0.00000, 0.00000, 44.50000);
CreateDynamicObject(3858, 1138.97998, 178.75999, 9001.19043,   0.00000, 0.00000, 44.49000);
CreateDynamicObject(3858, 1138.88000, 178.75999, 9001.19043,   0.00000, 0.00000, 224.49001);
CreateDynamicObject(3858, 1121.55005, 178.74001, 9001.19043,   0.00000, 0.00000, 224.49001);
CreateDynamicObject(3498, 1140.63000, 178.94000, 8997.40039,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3498, 1129.06995, 178.63000, 8998.45020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3858, 1114.01001, 171.25000, 9001.19043,   0.00000, 0.00000, 134.99001);
CreateDynamicObject(3858, 1114.01001, 171.25000, 9001.19043,   0.00000, 0.00000, 314.98999);
CreateDynamicObject(2118, 1118.70996, 185.85001, 8993.65039,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2853, 1118.56006, 185.05000, 8994.45020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2358, 1116.64001, 173.24001, 8998.40039,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(1431, 1114.98999, 177.13000, 8998.83008,   0.00000, 0.00000, 70.00000);
CreateDynamicObject(1431, 1115.03003, 173.50000, 8998.83008,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(1431, 1115.93994, 175.08000, 8998.83008,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(2358, 1117.08997, 174.34000, 8998.40039,   0.00000, 0.00000, 100.00000);
CreateDynamicObject(2358, 1116.94995, 175.38000, 8998.40039,   0.00000, 0.00000, 60.00000);
CreateDynamicObject(2358, 1116.28003, 177.00000, 8998.40039,   0.00000, 0.00000, 80.00000);
CreateDynamicObject(2358, 1116.25000, 176.96001, 8998.63965,   0.00000, 0.00000, 59.99000);
CreateDynamicObject(1517, 1116.06006, 174.77000, 8999.58008,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1517, 1116.32996, 176.72000, 8998.71973,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1512, 1117.00000, 174.33000, 8998.71973,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 1115.01001, 173.84000, 8999.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 1115.12000, 173.30000, 8999.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1116.63000, 173.27000, 8998.51953,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1115.80005, 175.42999, 8999.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1115.20996, 177.45000, 8999.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 1114.94995, 176.85001, 8999.37988,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3499, 1129.06006, 173.07001, 8998.55957,   89.50000, 180.00000, 0.00000);
CreateDynamicObject(3499, 1129.06006, 173.07001, 9003.09961,   89.49000, 179.99001, 0.00000);
CreateDynamicObject(3499, 1129.06006, 173.07001, 9002.29004,   89.49000, 179.99001, 0.00000);
CreateDynamicObject(2985, 1129.90002, 173.72000, 8998.28027,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2985, 1129.89001, 176.49001, 8998.28027,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3498, 1129.06995, 178.63000, 9007.36035,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1140.09998, 177.50000, 8998.28027,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(1726, 1140.15002, 175.10001, 8998.28027,   0.00000, 0.00000, 269.98999);
CreateDynamicObject(644, 1140.21997, 172.34000, 8998.53027,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(644, 1140.19995, 178.09000, 8998.53027,   0.00000, 0.00000, 160.00000);
CreateDynamicObject(2051, 1140.69995, 176.46001, 9000.90039,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2051, 1140.77002, 174.20000, 9000.90039,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1726, 1132.40002, 185.47000, 8992.95996,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(2236, 1132.88000, 183.03000, 8992.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1134.40002, 189.28999, 8992.95996,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2236, 1132.79004, 190.33000, 8992.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1132.50000, 192.64000, 8992.95996,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(644, 1133.06995, 195.75000, 8993.25977,   0.00000, 0.00000, 279.98999);
CreateDynamicObject(1726, 1140.41003, 181.75000, 8992.95996,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2236, 1138.80005, 183.02000, 8992.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1138.37000, 185.56000, 8992.95996,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(1726, 1140.46997, 189.22000, 8992.95996,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(2236, 1138.98999, 190.31000, 8992.94043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1138.32996, 192.63000, 8992.95996,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(3920, 1120.19995, 171.71001, 8996.08008,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(3920, 1132.81006, 171.67000, 8996.08008,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(3920, 1145.27002, 171.64000, 8996.08008,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(3660, 1123.75000, 172.33000, 8995.57031,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(3660, 1143.35999, 172.33000, 8995.57031,   0.00000, 0.00000, 179.99001);
CreateDynamicObject(644, 1115.18005, 173.09000, 8994.45020,   0.00000, 0.00000, 119.99000);
CreateDynamicObject(1726, 1127.42004, 195.80000, 8993.95020,   0.00000, 0.00000, 359.98999);
CreateDynamicObject(1726, 1124.26001, 195.75999, 8993.95020,   0.00000, 0.00000, 359.98001);
CreateDynamicObject(1726, 1121.26001, 195.74001, 8993.95020,   0.00000, 0.00000, 359.98001);
CreateDynamicObject(1726, 1118.01001, 195.72000, 8993.95020,   0.00000, 0.00000, 359.98001);
CreateDynamicObject(644, 1117.29004, 195.73000, 8994.25000,   0.00000, 0.00000, 239.99001);

//*********************Mappeo Estacionamiento*********************
CreateDynamicObject(3660, 1651.84070, -1809.02930, 14.21204,   0.00000, 0.00000, 211.50011);
CreateDynamicObject(3660, 1608.98474, -1818.51038, 14.15271,   0.00000, 0.00000, 331.25000);
CreateDynamicObject(3660, 1610.99304, -1802.42163, 14.15271,   0.00000, 0.00000, 331.24878);
CreateDynamicObject(3660, 1651.72034, -1826.88635, 14.21204,   0.00000, 0.00000, 205.99780);
CreateDynamicObject(1215, 1626.25647, -1862.23181, 13.11629,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1616.52698, -1862.23828, 13.10340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1643.98962, -1814.97168, 12.52885,   0.00000, 0.00000, 320.00000);
CreateDynamicObject(1223, 1648.57080, -1811.92896, 12.52885,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1652.66541, -1809.50916, 12.52885,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1656.76013, -1807.08923, 12.52885,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1617.84863, -1822.37830, 12.52491,   0.00000, 0.00000, 111.99878);
CreateDynamicObject(1223, 1647.18042, -1810.21570, 12.52885,   0.00000, 0.00000, 115.99365);
CreateDynamicObject(1223, 1651.21741, -1807.69983, 12.52885,   0.00000, 0.00000, 115.99365);
CreateDynamicObject(1223, 1655.25452, -1805.18420, 12.52885,   0.00000, 0.00000, 115.99365);
CreateDynamicObject(1223, 1657.54895, -1825.03162, 12.54872,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1643.47656, -1831.85254, 12.54437,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1648.35913, -1829.50745, 12.54504,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1652.84290, -1827.24548, 12.54351,   0.00000, 0.00000, 319.99878);
CreateDynamicObject(1223, 1642.92383, -1812.85156, 12.52885,   0.00000, 0.00000, 115.99365);
CreateDynamicObject(1223, 1647.26074, -1827.51746, 12.54304,   0.00000, 0.00000, 111.99359);
CreateDynamicObject(1223, 1651.63391, -1825.36707, 12.54138,   0.00000, 0.00000, 111.98911);
CreateDynamicObject(1223, 1656.37012, -1822.83179, 12.54699,   0.00000, 0.00000, 111.98911);
CreateDynamicObject(1223, 1642.35742, -1829.74707, 12.54228,   0.00000, 0.00000, 111.99463);
CreateDynamicObject(1223, 1613.03247, -1819.80249, 12.49535,   0.00000, 0.00000, 111.99463);
CreateDynamicObject(1223, 1604.29773, -1814.99304, 12.44916,   0.00000, 0.00000, 111.99463);
CreateDynamicObject(1223, 1608.82422, -1817.41602, 12.47305,   0.00000, 0.00000, 111.99463);
CreateDynamicObject(1223, 1612.08801, -1821.83606, 12.49223,   0.00000, 0.00000, 227.99878);
CreateDynamicObject(1223, 1618.83899, -1808.40894, 12.51681,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1607.88843, -1819.53870, 12.47003,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1603.28992, -1817.03809, 12.44574,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1619.87476, -1806.23584, 12.51494,   0.00000, 0.00000, 109.99463);
CreateDynamicObject(1223, 1615.15491, -1803.68652, 12.48730,   0.00000, 0.00000, 109.98962);
CreateDynamicObject(1223, 1610.61780, -1801.35986, 12.45400,   0.00000, 0.00000, 109.98962);
CreateDynamicObject(1223, 1605.97656, -1798.78882, 12.41976,   0.00000, 0.00000, 109.98962);
CreateDynamicObject(1223, 1616.61914, -1824.43262, 12.59035,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1618.83887, -1808.40820, 12.51681,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1614.15479, -1805.75635, 12.48248,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1223, 1610.02905, -1803.56677, 12.45214,   0.00000, 0.00000, 227.99377);
CreateDynamicObject(1215, 1618.99573, -1788.09790, 13.05656,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1616.11914, -1788.08105, 13.08065,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1617.50049, -1788.09094, 13.07430,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1621.94324, -1788.08557, 13.07788,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1620.55103, -1788.08386, 13.07902,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(973, 1678.26819, -1794.21265, 13.58782,   0.00000, 0.00000, 262.00000);
CreateDynamicObject(973, 1579.55005, -1751.09668, 13.38710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(973, 1579.56567, -1758.06116, 13.37717,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(973, 1580.54932, -1770.97644, 13.06556,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(1237, 1616.30798, -1780.79700, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 1621.45801, -1780.23633, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 1618.84180, -1780.52051, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8168, 1629.94922, -1846.45569, 14.48678,   0.00000, 0.00000, 196.00000);
CreateDynamicObject(973, 1617.70227, -1857.71729, 13.38935,   0.00000, 0.00000, 254.00000);
CreateDynamicObject(973, 1626.20996, -1857.13379, 13.38935,   0.00000, 0.00000, 89.99841);
CreateDynamicObject(1597, 1647.85645, -1872.14111, 14.90557,   0.00000, 0.00000, -88.50000);
CreateDynamicObject(1597, 1600.10364, -1872.15479, 14.90557,   0.00000, 0.00000, -89.75999);
CreateDynamicObject(8406, 1619.98596, -1862.43396, 18.01008,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1423, 1620.31055, -1788.88171, 13.17424,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1423, 1617.19861, -1788.93433, 13.17424,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1251, 1622.74207, -1862.25781, 12.54357,   0.00000, 0.00000, -90.06001);
CreateDynamicObject(1251, 1619.79150, -1862.23987, 12.54357,   0.00000, 0.00000, -90.06001);
CreateDynamicObject(8843, 1622.39014, -1851.43115, 12.66546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8843, 1638.23047, -1875.09656, 12.66546,   0.00000, 0.00000, -89.64001);
CreateDynamicObject(8843, 1600.73108, -1869.59534, 12.66546,   0.00000, 0.00000, -271.49985);
CreateDynamicObject(1361, 1611.10864, -1863.30884, 13.34004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1634.00916, -1863.07800, 13.34004,   0.00000, 0.00000, 0.00000);
//Ciber Exterior e Interior Los Santos
CreateDynamicObject(3095, 961.00000, -1433.80005, 15.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 960.59998, -1429.69995, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 960.59961, -1429.69922, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 954.79999, -1429.69922, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 954.79999, -1429.69922, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 960.59961, -1429.69922, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 960.90002, -1429.59998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 964.00000, -1429.59998, 13.00000,   0.00000, 0.00000, 120.00000);
CreateDynamicObject(9131, 964.40002, -1429.69922, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 964.40002, -1429.69922, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3858, 953.40002, -1429.80005, 12.60000,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(9131, 956.29999, -1427.30005, 12.50000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(9131, 956.29980, -1427.00000, 12.30000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(984, 963.79999, -1427.40002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(984, 948.70001, -1427.39941, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8647, 946.00000, -1429.69995, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 957.00000, -1437.90002, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 964.33002, -1446.93005, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 964.39941, -1437.89941, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 957.00000, -1437.89941, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 952.00000, -1433.80005, 15.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 960.20001, -1442.80005, 15.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 951.20001, -1442.80005, 15.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5020, 963.00000, -1437.94995, 13.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3858, 955.09998, -1447.19995, 12.60000,   0.00000, 0.00000, 45.99976);
CreateDynamicObject(9131, 954.79980, -1437.90002, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 954.79980, -1437.90002, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 960.19922, -1442.79980, 15.37000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 964.33002, -1446.93005, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 964.39941, -1437.89941, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5020, 954.40002, -1447.19995, 13.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3858, 964.70001, -1439.59998, 12.60000,   0.00000, 0.00000, 133.99976);
CreateDynamicObject(8947, 957.34003, -1439.59998, 10.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 962.40002, -1447.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 962.03003, -1446.92969, 14.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, 962.03003, -1446.92969, 12.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3858, 964.00000, -1437.90002, 12.60000,   0.00000, 0.00000, 45.99976);
CreateDynamicObject(2609, 964.50000, -1437.30005, 13.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2606, 964.70001, -1435.69995, 15.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2200, 963.50000, -1437.89001, 13.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2161, 964.70001, -1436.19995, 13.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16780, 960.09998, -1433.90002, 15.88000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1892, 962.59998, -1446.30005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2009, 961.79999, -1435.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2356, 962.79999, -1436.00000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1705, 955.40002, -1431.40002, 13.00000,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1705, 955.29980, -1434.00000, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1705, 956.79999, -1430.59998, 13.00000,   0.00000, 0.00000, 359.99573);
CreateDynamicObject(2635, 955.20001, -1432.30005, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2162, 954.50000, -1436.80005, 13.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2631, 962.09998, -1433.80005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2813, 955.29999, -1432.30005, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2828, 961.50000, -1435.69995, 13.90000,   0.00000, 0.00000, 230.00000);
CreateDynamicObject(16377, 955.20001, -1444.80005, 14.00000,   0.00000, 0.00000, 300.00000);
CreateDynamicObject(1671, 961.59998, -1433.40002, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1671, 963.19922, -1433.50000, 13.50000,   0.00000, 0.00000, 339.99939);
CreateDynamicObject(2621, 961.09998, -1434.59998, 13.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2185, 958.40002, -1443.40002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2185, 958.40002, -1439.69995, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2185, 960.79999, -1439.69995, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2185, 960.90002, -1443.40002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2185, 963.29999, -1439.90002, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2356, 962.09998, -1444.59998, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 962.09998, -1443.69995, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 961.79999, -1440.19995, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 962.20001, -1441.19995, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 964.29999, -1441.40002, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 964.40002, -1440.09998, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 959.40002, -1444.80005, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 959.59998, -1443.80005, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 959.40002, -1440.00000, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 959.59998, -1440.90002, 13.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, 958.79999, -1427.00000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(638, 953.90002, -1427.09998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(948, 964.29999, -1429.00000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2010, 960.00000, -1437.50000, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 954.70001, -1435.30005, 13.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 954.90002, -1446.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2241, 964.20001, -1438.59998, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2737, 954.70001, -1442.40002, 14.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 961.40002, -1426.50000, 12.50000,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1251, 962.29999, -1422.80005, 12.50000,   0.00000, 0.00000, 39.99573);
CreateDynamicObject(1251, 962.59998, -1418.69995, 12.50000,   0.00000, 0.00000, 39.99573);
CreateDynamicObject(640, 956.70001, -1451.50000, 13.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(640, 962.00000, -1451.50000, 13.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3810, 954.50000, -1448.69995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(15038, 955.00000, -1447.69995, 13.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 955.29999, -1449.50000, 13.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1280, 958.00000, -1450.80005, 13.50000,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(9131, 965.00000, -1449.59998, 12.30000,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(9131, 964.66998, -1449.59998, 12.60000,   0.00000, 90.00000, 270.00000);
CreateDynamicObject(949, 965.09998, -1451.00000, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 964.90002, -1448.09998, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1690, 953.79999, -1439.30005, 16.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1697, 951.50000, -1429.80005, 17.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18075, 959.50000, -1440.50000, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 953.70001, -1424.50000, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 953.70001, -1420.00000, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 953.79999, -1416.00000, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 954.50000, -1452.09998, 15.20000,   0.00000, 0.00000, 0.00000);

//*******************Bomberos Los santos interior*******************
CreateDynamicObject(19446, -1686.90381, -2047.37549, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1674.08691, -2047.37549, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1669.25024, -2052.12354, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1678.80066, -2052.15527, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1669.25024, -2061.75903, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1696.55322, -2047.37549, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1670.83081, -2066.54297, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1678.74475, -2061.76758, 17.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1669.75452, -2071.33667, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1669.23450, -2080.87646, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1673.82996, -2072.90723, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1678.57092, -2080.76904, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19446, -1674.10095, -2082.69336, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1691.79297, -2052.14478, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1701.33740, -2052.13721, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1683.69495, -2056.86230, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1704.88745, -2052.14600, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1694.41333, -2052.14600, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -1680.48328, -2047.36890, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1683.90979, -2052.14600, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -1690.11255, -2056.86230, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1694.41333, -2061.75562, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1683.90979, -2061.75562, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1673.58984, -2052.14600, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1673.58984, -2061.75488, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -1677.23499, -2066.53076, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1673.62866, -2071.37744, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1683.90979, -2071.36816, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1694.41333, -2071.36816, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -1693.48413, -2056.86230, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1699.88647, -2056.87231, 17.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -1696.65552, -2056.92041, 19.64000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, -1699.96130, -2056.91724, 19.64000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19446, -1701.33081, -2061.73950, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -1704.88745, -2061.75562, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1704.88745, -2071.36816, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3440, -1685.50305, -2062.98779, 19.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3440, -1685.50305, -2066.13086, 19.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -1685.68311, -2064.43359, 19.64000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19446, -1690.07153, -2066.23022, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1690.07153, -2063.07227, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3440, -1694.76501, -2062.96777, 19.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3440, -1694.73560, -2066.37012, 19.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -1678.74280, -2064.91797, 19.56000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1649, -1678.74280, -2061.59131, 19.64000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1649, -1678.74976, 19.64000, 19.56000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, -1674.04468, -2080.99292, 18.16000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -1673.99548, -2074.45752, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19384, -1673.99548, -2077.65552, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19384, -1673.99548, -2080.85718, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19446, -1669.27515, -2076.06226, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1669.20898, -2079.25220, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1669.26123, -2082.46899, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1706.26355, -2070.96851, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1683.29968, -2075.75562, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19384, -1678.57092, -2074.35791, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19446, -1692.91614, -2075.75562, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1536, -1681.27002, -2047.40649, 18.24456,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2011, -1679.34790, -2047.92334, 18.24193,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2011, -1681.75427, -2047.90491, 18.24193,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1671, -1690.49805, -2049.79883, 18.68000,   0.00000, 0.00000, 122.04002);
CreateDynamicObject(1671, -1690.40869, -2052.88721, 18.68000,   0.00000, 0.00000, -304.85989);
CreateDynamicObject(1671, -1681.33606, -2055.62134, 18.68000,   0.00000, 0.00000, 194.69997);
CreateDynamicObject(1671, -1684.89819, -2055.58691, 18.68000,   0.00000, 0.00000, 194.69997);
CreateDynamicObject(948, -1691.23267, -2056.30078, 18.24560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, -1689.14185, -2049.22656, 18.24560,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2165, -1689.14185, -2052.38794, 18.24560,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2165, -1685.62000, -2054.45337, 18.24560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, -1682.09937, -2054.45337, 18.24560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, -1683.23059, -2054.33643, 18.72440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, -1686.67419, -2054.48218, 18.72440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, -1689.11755, -2051.30298, 18.72440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, -1688.98254, -2048.18018, 18.72440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2608, -1683.14551, -2056.57373, 19.91900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2608, -1685.02112, -2056.48071, 20.39900,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2186, -1688.35059, -2056.34155, 18.24454,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, -1691.64160, -2051.37427, 20.29070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2272, -1686.46375, -2047.96338, 20.22470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2276, -1684.70081, -2047.95813, 19.65770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2278, -1679.42065, -2051.32983, 20.00000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2281, -1679.38464, -2053.68433, 19.41710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1703, -1686.56116, -2048.20728, 18.24528,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1703, -1679.48669, -2051.32642, 18.24530,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19427, -1688.26550, -2063.83911, 19.96000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1688.28442, -2065.44580, 19.96000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1687.39758, -2065.40137, 18.82000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19427, -1687.39758, -2063.79834, 18.82000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19427, -1685.69727, -2065.25293, 17.16000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1685.69727, -2063.71143, 17.16000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1613, -1688.53967, -2064.65552, 20.35250,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(19331, -1687.11829, -2065.51733, 19.00820,   0.00000, 270.00000, -90.00000);
CreateDynamicObject(19331, -1686.42993, -2064.60889, 19.00820,   0.00000, 270.00000, -90.00000);
CreateDynamicObject(19331, -1687.00098, -2063.69287, 19.00820,   0.00000, 270.00000, -90.00000);
CreateDynamicObject(2809, -1687.66064, -2064.51538, 18.06870,   0.00000, 0.00000, 91.14000);
CreateDynamicObject(1649, -1678.74976, -2058.26245, 19.64000,   0.00000, 90.00000, -90.00000);
CreateDynamicObject(1649, -1678.74280, -2061.59131, 19.64000,   0.00000, 90.00000, -90.00000);
CreateDynamicObject(1649, -1678.74280, -2064.91797, 19.64000,   0.00000, 90.00000, -90.00000);
CreateDynamicObject(1649, -1696.65552, -2056.90039, 19.64000,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(1649, -1699.94165, -2056.89380, 19.64000,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(948, -1700.33313, -2056.00806, 18.24560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2205, -1694.08899, -2050.45581, 18.24800,   0.00000, 0.00000, -179.58000);
CreateDynamicObject(1671, -1695.00476, -2049.33472, 18.68630,   0.00000, 0.00000, 17.70000);
CreateDynamicObject(2205, -1697.80615, -2050.47900, 18.24800,   0.00000, 0.00000, -179.58000);
CreateDynamicObject(1671, -1698.63013, -2049.23462, 18.68630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, -1700.45679, -2054.78540, 18.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1827, -1698.41968, -2054.46191, 18.24739,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2608, -1696.62854, -2047.52148, 20.13175,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2186, -1700.76196, -2049.40527, 18.24454,   0.00000, 0.00000, 88.73997);
CreateDynamicObject(1235, -1692.43518, -2047.98877, 18.72440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18870, -1693.83655, -2050.51733, 19.18354,   0.00000, 0.00000, -175.56001);
CreateDynamicObject(18870, -1697.56750, -2050.52075, 19.18354,   0.00000, 0.00000, -175.56001);
CreateDynamicObject(2251, -1695.75952, -2050.72241, 19.78370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2250, -1699.33569, -2050.68115, 19.65000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2190, -1698.49963, -2050.63623, 19.18260,   0.00000, 0.00000, -188.76006);
CreateDynamicObject(2190, -1694.88904, -2050.63989, 19.18260,   0.00000, 0.00000, -188.76006);
CreateDynamicObject(1703, -1697.19995, -2056.25073, 18.24440,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2284, -1700.76160, -2051.61279, 19.84700,   0.00000, 0.00000, 89.64000);
CreateDynamicObject(2283, -1701.22351, -2054.43628, 20.14000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1704.88745, -2052.14600, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1694.41333, -2052.14600, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1683.90979, -2052.14600, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2631, -1673.82874, -2052.10645, 18.24070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2631, -1673.81653, -2054.04590, 18.24074,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2632, -1673.77454, -2058.43555, 18.24290,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2632, -1673.77124, -2060.37720, 18.24290,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2628, -1672.43445, -2048.56958, 18.23981,   0.00000, 0.00000, 0.96000);
CreateDynamicObject(2628, -1673.80225, -2049.24707, 18.23981,   0.00000, 0.00000, 0.96000);
CreateDynamicObject(2628, -1675.39978, -2048.49438, 18.23981,   0.00000, 0.00000, 0.96000);
CreateDynamicObject(2630, -1677.58716, -2056.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2630, -1670.57727, -2056.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2629, -1670.56067, -2065.07275, 18.24595,   0.00000, 0.00000, 180.35992);
CreateDynamicObject(2629, -1673.01050, -2064.49756, 18.24595,   0.00000, 0.00000, 180.35992);
CreateDynamicObject(2629, -1675.08984, -2065.05298, 18.24595,   0.00000, 0.00000, 180.35992);
CreateDynamicObject(2630, -1677.58716, -2059.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2630, -1677.58716, -2053.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2630, -1670.57727, -2059.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2630, -1670.57727, -2053.29370, 18.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -1673.58984, -2052.14600, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1673.58984, -2061.75488, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1491, -1674.01221, -2076.90796, 18.24400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, -1674.01855, -2073.71118, 18.24400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, -1673.99255, -2080.10303, 18.24400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, -1701.28259, -2067.39502, 18.22400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1491, -1678.02466, -2066.53540, 18.22400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -1690.89612, -2056.86401, 18.22400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -1694.26685, -2056.87280, 18.22400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -1683.90979, -2061.75562, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1674.04468, -2080.99292, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1673.58984, -2071.36816, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1683.90979, -2071.36816, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1694.41333, -2061.75562, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1704.88745, -2061.75562, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1694.41333, -2071.36816, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -1704.88745, -2071.36816, 21.84000,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19427, -1694.52112, -2063.92847, 19.96000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1694.52112, -2065.53516, 19.96000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2147, -1693.97131, -2066.85132, 18.12520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2170, -1693.17175, -2066.83325, 18.16530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2170, -1692.51050, -2066.82642, 18.16530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2335, -1691.66980, -2066.89844, 18.24660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2334, -1690.68127, -2066.89844, 18.24660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2336, -1689.68555, -2066.89844, 18.24700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2334, -1687.67944, -2066.89844, 18.24660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2335, -1686.68909, -2066.89844, 18.24660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2011, -1685.81860, -2066.81812, 18.24676,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2297, -1689.63403, -2075.41016, 18.24547,   0.00000, 0.00000, 133.68007);
CreateDynamicObject(19384, -1701.33081, -2068.14307, 20.00000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19446, -1701.33081, -2074.51782, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1710.00378, -2061.73950, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1710.00378, -2071.36914, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1707.96838, -2065.48267, 17.22000,   0.00000, 0.00000, 211.98007);
CreateDynamicObject(14411, -1709.27966, -2067.39404, 15.76000,   0.00000, 0.00000, 27.66000);
CreateDynamicObject(1491, -1678.58167, -2073.60742, 18.22400,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19379, -1707.99524, -2059.39331, 18.88000,   0.00000, 90.00000, 23.28000);
CreateDynamicObject(19446, -1706.05945, -2061.23608, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19427, -1706.46960, -2064.05640, 17.22000,   0.00000, 0.00000, 114.06010);
CreateDynamicObject(19427, -1705.03320, -2063.42383, 17.22000,   0.00000, 0.00000, 113.58009);
CreateDynamicObject(19427, -1703.58704, -2062.79785, 17.22000,   0.00000, 0.00000, 113.28010);
CreateDynamicObject(19427, -1702.11670, -2062.12134, 17.22000,   0.00000, 0.00000, 114.78011);
CreateDynamicObject(19427, -1707.67078, -2064.59912, 17.22000,   0.00000, 0.00000, 114.78010);
CreateDynamicObject(3077, -1707.81152, -2062.19116, 18.68650,   0.00000, 0.00000, 14.58000);
CreateDynamicObject(1811, -1706.60669, -2065.64795, 18.66610,   0.00000, 0.00000, -57.84000);
CreateDynamicObject(1811, -1705.53516, -2065.07275, 18.66610,   0.00000, 0.00000, -65.34001);
CreateDynamicObject(1811, -1704.52039, -2064.51636, 18.66610,   0.00000, 0.00000, -60.48001);
CreateDynamicObject(1811, -1703.50574, -2063.89697, 18.66610,   0.00000, 0.00000, -60.48001);
CreateDynamicObject(1811, -1702.53210, -2065.18164, 18.66610,   0.00000, 0.00000, -23.34000);
CreateDynamicObject(1811, -1703.55994, -2066.06445, 18.66610,   0.00000, 0.00000, -46.56001);
CreateDynamicObject(1811, -1704.83606, -2066.72363, 18.66610,   0.00000, 0.00000, -57.96000);
CreateDynamicObject(1811, -1706.29456, -2067.00244, 18.66610,   0.00000, 0.00000, -71.88002);
CreateDynamicObject(1811, -1702.33704, -2069.75146, 18.66610,   0.00000, 0.00000, -92.16000);
CreateDynamicObject(1811, -1703.49854, -2069.79688, 18.66610,   0.00000, 0.00000, -79.92001);
CreateDynamicObject(1811, -1704.66772, -2069.83252, 18.66610,   0.00000, 0.00000, -82.86004);
CreateDynamicObject(1811, -1705.96130, -2069.88062, 18.66610,   0.00000, 0.00000, -90.60003);
CreateDynamicObject(1811, -1707.45959, -2069.80957, 18.66610,   0.00000, 0.00000, -90.60003);
CreateDynamicObject(1811, -1708.74719, -2069.50879, 18.66610,   0.00000, 0.00000, -101.82005);
CreateDynamicObject(19446, -1702.51782, -2075.75562, 20.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, -1691.62769, -2062.34570, 18.24440,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(1703, -1686.86926, -2062.32764, 18.24440,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2011, -1690.32141, -2062.48071, 18.02190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2256, -1690.41846, -2062.82153, 20.59580,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1775, -1673.86157, -2067.78540, 19.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1775, -1673.86169, -2071.73364, 19.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2614, -1673.57861, -2069.74634, 20.52590,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2282, -1695.08276, -2064.54688, 20.10980,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19427, -1673.43359, -2072.18286, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2029, -1687.90613, -2071.18530, 18.24615,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2029, -1692.74365, -2071.11182, 18.24615,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16377, -1704.30994, -2061.87158, 19.78550,   0.00000, 0.00000, -182.16000);
CreateDynamicObject(2254, -1689.84302, -2066.36426, 20.62510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1673.43359, -2067.37256, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1673.43359, -2068.97388, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -1673.43359, -2070.57300, 20.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, -1671.86401, -2073.50122, 18.24768,   0.00000, 0.00000, 0.06005);
CreateDynamicObject(2528, -1671.90881, -2076.68994, 18.24768,   0.00000, 0.00000, -0.24001);
CreateDynamicObject(2517, -1670.59338, -2076.34448, 18.24676,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2517, -1670.19629, -2079.51147, 18.24676,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, -1671.83374, -2079.88940, 18.24768,   0.00000, 0.00000, -0.24001);
CreateDynamicObject(2517, -1670.30969, -2082.71924, 18.24676,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2523, -1671.87878, -2078.70703, 18.24790,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2523, -1671.91187, -2081.90015, 18.24790,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2523, -1671.68542, -2075.51074, 18.24790,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2124, -1691.87659, -2072.08130, 19.00000,   0.00000, 0.00000, -85.02000);
CreateDynamicObject(2124, -1692.59851, -2069.87866, 19.00000,   0.00000, 0.00000, -248.40004);
CreateDynamicObject(2124, -1691.58752, -2070.04395, 19.00000,   0.00000, 0.00000, -311.75995);
CreateDynamicObject(2124, -1686.85498, -2070.20410, 19.00000,   0.00000, 0.00000, -311.75995);
CreateDynamicObject(2124, -1687.92993, -2070.03906, 19.00000,   0.00000, 0.00000, -271.62000);
CreateDynamicObject(2124, -1686.88062, -2072.37573, 19.00000,   0.00000, 0.00000, -437.03976);
CreateDynamicObject(2124, -1687.93201, -2072.09082, 19.00000,   0.00000, 0.00000, -492.23999);
CreateDynamicObject(14782, -1695.61365, -2075.16528, 19.16000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14782, -1685.31763, -2075.16528, 19.16000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19330, -1692.85376, -2075.38354, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1694.39514, -2075.31177, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1695.15930, -2075.30688, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1684.77332, -2075.24512, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1685.48364, -2075.25732, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1687.03650, -2075.22339, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1688.08142, -2075.30737, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19330, -1683.26697, -2075.45166, 20.29600,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1684.05591, -2075.30737, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1682.47546, -2075.42603, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1693.57947, -2075.42969, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1695.89612, -2075.38745, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1698.72974, -2075.52515, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19331, -1697.64136, -2075.55078, 20.27410,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(14455, -1701.09741, -2060.06665, 19.62380,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2010, -1700.86523, -2066.77930, 18.24434,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2010, -1700.85193, -2057.76440, 18.24434,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1703, -1700.53601, -2073.31079, 18.20540,   0.00000, 0.00000, 90.06000);
CreateDynamicObject(2276, -1700.75330, -2073.68848, 19.72830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2281, -1700.76074, -2070.85376, 20.24270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2204, -1691.97461, -2051.86304, 18.24620,   0.00000, 0.00000, -89.10000);
CreateDynamicObject(2200, -1691.90662, -2054.80811, 18.24620,   0.00000, 0.00000, -90.00000);
//*******************Bomberos Los Santos Exterior*******************
CreateDynamicObject(11008, 1808.85059, -1401.57886, 19.26390,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1820.64929, -1384.77441, 13.67124,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1820.67639, -1393.23096, 12.55410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1820.57947, -1401.74927, 12.55410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1820.85486, -1410.04053, 12.55410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1836.48413, -1450.44592, 12.54910,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1223, 1799.44153, -1446.18103, 12.54910,   0.00000, 0.00000, 73.43999);
CreateDynamicObject(1557, 1802.50684, -1419.21741, 12.41924,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(792, 1819.48706, -1421.72998, 15.90376,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(17007, 1814.89954, -1425.53735, 11.48047,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1820.06885, -1415.56165, 12.95123,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1820.11987, -1413.30457, 12.95123,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1825.08435, -1418.24426, 13.17287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1831.77563, -1418.24512, 13.17287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1806.39124, -1411.24719, 28.39387,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1801.78296, -1415.45386, 28.80428,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1802.11487, -1407.45154, 28.80428,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1810.57410, -1407.50500, 28.80428,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1810.43298, -1415.23010, 28.80428,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5299, 1828.66223, -1425.28845, 4.22042,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1836.78357, -1417.41431, 12.54898,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(713, 1822.84216, -1442.11682, 12.53657,   0.00000, 0.00000, 0.00000);
}

//Fín de la gamemode, 60.000+ líneas.
